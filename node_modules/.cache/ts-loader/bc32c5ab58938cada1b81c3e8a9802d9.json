{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-3!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/role/edit.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/role/edit.service.ts","mtime":1591147717370},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { UserService } from '@/services/user.service';\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { map, tap } from 'rxjs/operators';\nimport { GetInitInfoPut } from '@/api/v1/staff/role';\nimport { RoleService } from \"../role.service\";\nimport { MessageService } from '@/services/message.service';\nimport { cloneDeep } from 'lodash-es';\nimport { forkJoin } from 'rxjs';\n\nvar EditService = /*#__PURE__*/function () {\n  function EditService(roleService, msg, userService) {\n    _classCallCheck(this, EditService);\n\n    this.roleService = roleService;\n    this.msg = msg;\n    this.userService = userService;\n    this.loading$ = new State({});\n    this.info$ = new State({});\n    this.departmentInfo$ = new State({});\n    this.shopList$ = new State({});\n    this.brandList$ = new State({});\n    this.dataGrant$ = this.userService.getOptions$('data_grant.data_grant').pipe(map(function (list) {\n      var arr = cloneDeep(list);\n      var index2Value = arr[2];\n      arr[2] = arr[3];\n      arr[3] = index2Value;\n      return arr;\n    }));\n  }\n\n  _createClass(EditService, [{\n    key: \"update\",\n    value: function update(params) {\n      var _this = this;\n\n      return this.roleService.update(params).pipe(tap(function (res) {\n        _this.msg.success({\n          content: '更新成功'\n        });\n      }));\n    }\n  }, {\n    key: \"gitInitInfo\",\n    value: function gitInitInfo(query) {\n      var _this2 = this;\n\n      return this.roleService.getInitInfo(query).pipe(tap(function (res) {\n        _this2.brandList$.commit(function () {\n          return res.brand_list;\n        });\n\n        _this2.shopList$.commit(function () {\n          return res.shop_list;\n        });\n      }));\n    }\n    /**\n     * 获取所有角色详情\n     */\n\n  }, {\n    key: \"getInfo\",\n    value: function getInfo(query) {\n      var _this3 = this;\n\n      return this.roleService.getInfo(query).pipe(tap(function (res) {\n        _this3.info$.commit(function () {\n          return res.role;\n        });\n\n        _this3.departmentInfo$.commit(function () {\n          var departmentInfo = '';\n\n          if (res.role.data_grant === 3) {\n            res.role.departments.forEach(function (element) {\n              if (departmentInfo) {\n                departmentInfo = departmentInfo + ',' + element.department_name;\n              } else {\n                departmentInfo += element.department_name;\n              }\n            });\n          }\n\n          return departmentInfo;\n        });\n      }));\n    }\n  }, {\n    key: \"getInit\",\n    value: function getInit(query) {\n      return forkJoin(this.getInfo(query), this.gitInitInfo(query));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      var roleId = to.query.roleId;\n      return this.getInit({\n        role_id: roleId\n      });\n    }\n  }]);\n\n  return EditService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof GetInitInfoPut !== \"undefined\" && GetInitInfoPut) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], EditService.prototype, \"getInfo\", null);\n\nEditService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof RoleService !== \"undefined\" && RoleService) === \"function\" ? _b : Object, typeof (_c = typeof MessageService !== \"undefined\" && MessageService) === \"function\" ? _c : Object, typeof (_d = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _d : Object])], EditService);\nexport { EditService };",null]}