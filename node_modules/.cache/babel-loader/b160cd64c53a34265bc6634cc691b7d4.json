{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/date-slider/date-slider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/date-slider/date-slider.vue","mtime":1600926382170},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SliderButton from \"./button\";\nexport default {\n  name: 'StDateSlider',\n  bem: {\n    StDateSlider: 'st-date-slider'\n  },\n  components: {\n    SliderButton: SliderButton\n  },\n  props: {\n    value: {\n      type: [Number, Array],\n      default: 0\n    },\n    tipFormatter: Function,\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 24\n    },\n    step: {\n      type: Number,\n      default: 60\n    },\n    disable: {\n      type: Boolean,\n      default: false\n    },\n    rangeData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      dragging: false,\n      firstValue: null,\n      secondValue: null,\n      oldValue: null\n    };\n  },\n  computed: {\n    precision: function precision() {\n      var precisions = [this.min, this.max, this.step].map(function (item) {\n        var decimal = ('' + item).split('.')[1];\n        return decimal ? decimal.length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    },\n    minValue: function minValue() {\n      return Math.min(this.firstValue, this.secondValue);\n    },\n    maxValue: function maxValue() {\n      return Math.max(this.firstValue, this.secondValue);\n    },\n    range: function range() {\n      return Array.isArray(this.rangeData) && this.rangeData.length;\n    },\n    rangeFirst: function rangeFirst() {\n      return this.rangeData[0];\n    },\n    rangeSecond: function rangeSecond() {\n      return this.rangeData[1];\n    },\n    sliderBarSize: function sliderBarSize() {\n      return \"\".concat(100 * (this.maxValue - this.minValue) / (this.max - this.min), \"%\");\n    },\n    sliderBarStart: function sliderBarStart() {\n      return \"\".concat(100 * (this.minValue - this.min) / (this.max - this.min), \"%\");\n    },\n    sliderBarStyle: function sliderBarStyle() {\n      return {\n        left: this.sliderBarStart,\n        width: this.sliderBarSize\n      };\n    },\n    rangeBarSize: function rangeBarSize() {\n      return \"\".concat(100 * (this.rangeSecond - this.rangeFirst) / (this.max - this.min), \"%\");\n    },\n    rangeBarStart: function rangeBarStart() {\n      return \"\".concat(100 * this.rangeFirst / (this.max - this.min), \"%\");\n    },\n    rangeBarStyle: function rangeBarStyle() {\n      return {\n        left: this.rangeBarStart,\n        width: this.rangeBarSize\n      };\n    }\n  },\n  watch: {\n    value: function value(val, oldVal) {\n      // console.log('value is updating', this.dragging, val, oldVal)\n      if (this.dragging || Array.isArray(val) && Array.isArray(oldVal) && val.every(function (item, index) {\n        return item === oldVal[index];\n      })) {\n        return;\n      }\n\n      this.setValues();\n    },\n    dragging: function dragging(val) {\n      if (!val) {\n        console.log('dragging');\n        this.setValues();\n      }\n    },\n    firstValue: function firstValue(val) {\n      this.$emit('input', [this.minValue, this.maxValue]);\n    },\n    secondValue: function secondValue() {\n      this.$emit('input', [this.minValue, this.maxValue]);\n    },\n    min: function min() {\n      // consol.log('min change')\n      this.setValues();\n    },\n    max: function max() {\n      // consol.log('max change')\n      this.setValues();\n    },\n    rangeFirst: function rangeFirst() {\n      // consol.log('rangeFirst change')\n      if (this.range) this.setValues();\n    },\n    rangeSecond: function rangeSecond() {\n      // consol.log('rangeSecond change')\n      if (this.range) this.setValues();\n    }\n  },\n  mounted: function mounted() {\n    // 确定首尾值\n    if (Array.isArray(this.value) && !this.range) {\n      this.firstValue = Math.max(this.min, this.value[0]);\n      this.secondValue = Math.min(this.max, this.value[1]);\n    } else {\n      this.firstValue = Math.max(this.rangeFirst, this.value[0]);\n      this.secondValue = Math.min(this.rangeSecond, this.value[1]);\n    }\n\n    this.oldValue = [this.firstValue, this.secondValue];\n    window.addEventListener('resize', this.resetSize);\n  },\n  methods: {\n    valueChanged: function valueChanged() {\n      var _this = this;\n\n      return ![this.minValue, this.maxValue].every(function (item, index) {\n        return item === _this.oldValue[index];\n      });\n    },\n    setValues: function setValues() {\n      if (this.min > this.max) {\n        return;\n      }\n\n      var val = this.value;\n      if (!Array.isArray(val)) return false;\n      var min = this.range ? this.rangeFirst : this.min;\n      var max = this.range ? this.rangeSecond : this.max;\n\n      if (val[1] < min) {\n        this.$emit('input', [min, min]);\n      } else if (val[0] > max) {\n        this.$emit('input', [max, max]);\n      } else if (val[0] < min) {\n        this.$emit('input', [min, val[1]]);\n      } else if (val[1] > max) {\n        this.$emit('input', [val[0], max]);\n      } else {\n        this.firstValue = val[0];\n        this.secondValue = val[1];\n\n        if (this.valueChanged()) {\n          this.oldValue = val.slice();\n        }\n      }\n    },\n    setPosition: function setPosition(percent) {\n      var min = this.range ? this.rangeFirst : this.min;\n      var targetValue = min + percent * (this.max - this.min) / 100;\n      var button;\n\n      if (Math.abs(this.minValue - targetValue) < Math.abs(this.maxValue - targetValue)) {\n        button = this.firstValue < this.secondValue ? 'firstButton' : 'secondButton';\n      } else {\n        button = this.firstValue > this.secondValue ? 'firstButton' : 'secondButton';\n      }\n\n      this.$refs[button].setPosition(percent);\n    },\n    onSliderClick: function onSliderClick(event) {\n      // console.log(this.dragging)\n      if (this.disable || this.dragging) return;\n      this.resetSize();\n      console.log(this.$refs.slider);\n      var sliderOffsetLeft = this.$refs.slider.getBoundingClientRect().left;\n      this.setPosition((event.clientX - sliderOffsetLeft) / this.sliderSize * 100);\n      this.emitChange();\n    },\n    resetSize: function resetSize() {\n      if (this.$refs.slider) {\n        this.sliderSize = this.$refs.slider['clientWidth'];\n      }\n    },\n    emitChange: function emitChange() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$emit('input', [_this2.minValue, _this2.maxValue]);\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.resetSize);\n  }\n};",{"version":3,"sources":["date-slider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAgBA,OAAA,YAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,GAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GAFA;AAKA,EAAA,UAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,YAAA,EAAA,QALA;AAMA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KANA;AAUA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAVA;AAcA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAdA;AAkBA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAlBA;AAsBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAtBA,GANA;AAiCA,EAAA,IAjCA,kBAiCA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,IAFA;AAGA,MAAA,WAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAxCA;AAyCA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,UAAA,GAAA,CAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,CAAA,KAAA,IAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,eAAA,OAAA,GAAA,OAAA,CAAA,MAAA,GAAA,CAAA;AACA,OAHA,CAAA;AAIA,aAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,EAAA,UAAA,CAAA;AACA,KAPA;AAQA,IAAA,QARA,sBAQA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,KAAA,UAAA,EAAA,KAAA,WAAA,CAAA;AACA,KAVA;AAWA,IAAA,QAXA,sBAWA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,KAAA,UAAA,EAAA,KAAA,WAAA,CAAA;AACA,KAbA;AAcA,IAAA,KAdA,mBAcA;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,KAAA,SAAA,KAAA,KAAA,SAAA,CAAA,MAAA;AACA,KAhBA;AAiBA,IAAA,UAjBA,wBAiBA;AACA,aAAA,KAAA,SAAA,CAAA,CAAA,CAAA;AACA,KAnBA;AAoBA,IAAA,WApBA,yBAoBA;AACA,aAAA,KAAA,SAAA,CAAA,CAAA,CAAA;AACA,KAtBA;AAuBA,IAAA,aAvBA,2BAuBA;AACA,uBAAA,OAAA,KAAA,QAAA,GAAA,KAAA,QAAA,CAAA,IACA,KAAA,GAAA,GAAA,KAAA,GADA,CAAA;AAEA,KA1BA;AA2BA,IAAA,cA3BA,4BA2BA;AACA,uBAAA,OAAA,KAAA,QAAA,GAAA,KAAA,GAAA,CAAA,IAAA,KAAA,GAAA,GAAA,KAAA,GAAA,CAAA;AACA,KA7BA;AA8BA,IAAA,cA9BA,4BA8BA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,KAAA,cADA;AAEA,QAAA,KAAA,EAAA,KAAA;AAFA,OAAA;AAIA,KAnCA;AAoCA,IAAA,YApCA,0BAoCA;AACA,uBAAA,OAAA,KAAA,WAAA,GAAA,KAAA,UAAA,CAAA,IACA,KAAA,GAAA,GAAA,KAAA,GADA,CAAA;AAEA,KAvCA;AAwCA,IAAA,aAxCA,2BAwCA;AACA,uBAAA,MAAA,KAAA,UAAA,IAAA,KAAA,GAAA,GAAA,KAAA,GAAA,CAAA;AACA,KA1CA;AA2CA,IAAA,aA3CA,2BA2CA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,KAAA,aADA;AAEA,QAAA,KAAA,EAAA,KAAA;AAFA,OAAA;AAIA;AAhDA,GAzCA;AA2FA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,GADA,EACA,MADA,EACA;AACA;AACA,UACA,KAAA,QAAA,IACA,KAAA,CAAA,OAAA,CAAA,GAAA,KACA,KAAA,CAAA,OAAA,CAAA,MAAA,CADA,IAEA,GAAA,CAAA,KAAA,CAAA,UAAA,IAAA,EAAA,KAAA;AAAA,eAAA,IAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AAAA,OAAA,CAJA,EAKA;AACA;AACA;;AACA,WAAA,SAAA;AACA,KAZA;AAaA,IAAA,QAbA,oBAaA,GAbA,EAaA;AACA,UAAA,CAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA,aAAA,SAAA;AACA;AACA,KAlBA;AAmBA,IAAA,UAnBA,sBAmBA,GAnBA,EAmBA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA,KAAA,QAAA,EAAA,KAAA,QAAA,CAAA;AACA,KArBA;AAsBA,IAAA,WAtBA,yBAsBA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA,KAAA,QAAA,EAAA,KAAA,QAAA,CAAA;AACA,KAxBA;AAyBA,IAAA,GAzBA,iBAyBA;AACA;AACA,WAAA,SAAA;AACA,KA5BA;AA6BA,IAAA,GA7BA,iBA6BA;AACA;AACA,WAAA,SAAA;AACA,KAhCA;AAiCA,IAAA,UAjCA,wBAiCA;AACA;AACA,UAAA,KAAA,KAAA,EAAA,KAAA,SAAA;AACA,KApCA;AAqCA,IAAA,WArCA,yBAqCA;AACA;AACA,UAAA,KAAA,KAAA,EAAA,KAAA,SAAA;AACA;AAxCA,GA3FA;AAqIA,EAAA,OArIA,qBAqIA;AACA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,KAAA,KAAA,KAAA,CAAA,KAAA,KAAA,EAAA;AACA,WAAA,UAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,WAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,KAHA,MAGA;AACA,WAAA,UAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,UAAA,EAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,WAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,WAAA,EAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA;;AACA,SAAA,QAAA,GAAA,CAAA,KAAA,UAAA,EAAA,KAAA,WAAA,CAAA;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,SAAA;AACA,GAhJA;AAiJA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,aAAA,CAAA,CAAA,KAAA,QAAA,EAAA,KAAA,QAAA,EAAA,KAAA,CACA,UAAA,IAAA,EAAA,KAAA;AAAA,eAAA,IAAA,KAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA;AAAA,OADA,CAAA;AAGA,KALA;AAMA,IAAA,SANA,uBAMA;AACA,UAAA,KAAA,GAAA,GAAA,KAAA,GAAA,EAAA;AACA;AACA;;AACA,UAAA,GAAA,GAAA,KAAA,KAAA;AACA,UAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA,OAAA,KAAA;AACA,UAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,UAAA,GAAA,KAAA,GAAA;AACA,UAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,WAAA,GAAA,KAAA,GAAA;;AAEA,UAAA,GAAA,CAAA,CAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,CAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,CAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,CAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AACA,aAAA,WAAA,GAAA,GAAA,CAAA,CAAA,CAAA;;AACA,YAAA,KAAA,YAAA,EAAA,EAAA;AACA,eAAA,QAAA,GAAA,GAAA,CAAA,KAAA,EAAA;AACA;AACA;AACA,KA9BA;AA+BA,IAAA,WA/BA,uBA+BA,OA/BA,EA+BA;AACA,UAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,UAAA,GAAA,KAAA,GAAA;AACA,UAAA,WAAA,GAAA,GAAA,GAAA,OAAA,IAAA,KAAA,GAAA,GAAA,KAAA,GAAA,CAAA,GAAA,GAAA;AACA,UAAA,MAAA;;AACA,UACA,IAAA,CAAA,GAAA,CAAA,KAAA,QAAA,GAAA,WAAA,IACA,IAAA,CAAA,GAAA,CAAA,KAAA,QAAA,GAAA,WAAA,CAFA,EAGA;AACA,QAAA,MAAA,GACA,KAAA,UAAA,GAAA,KAAA,WAAA,GAAA,aAAA,GAAA,cADA;AAEA,OANA,MAMA;AACA,QAAA,MAAA,GACA,KAAA,UAAA,GAAA,KAAA,WAAA,GAAA,aAAA,GAAA,cADA;AAEA;;AACA,WAAA,KAAA,CAAA,MAAA,EAAA,WAAA,CAAA,OAAA;AACA,KA9CA;AA+CA,IAAA,aA/CA,yBA+CA,KA/CA,EA+CA;AACA;AACA,UAAA,KAAA,OAAA,IAAA,KAAA,QAAA,EAAA;AACA,WAAA,SAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA,CAAA,MAAA;AACA,UAAA,gBAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,qBAAA,GAAA,IAAA;AACA,WAAA,WAAA,CACA,CAAA,KAAA,CAAA,OAAA,GAAA,gBAAA,IAAA,KAAA,UAAA,GAAA,GADA;AAGA,WAAA,UAAA;AACA,KAzDA;AA0DA,IAAA,SA1DA,uBA0DA;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,EAAA;AACA,aAAA,UAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AACA;AACA,KA9DA;AA+DA,IAAA,UA/DA,wBA+DA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,CAAA,MAAA,CAAA,QAAA,EAAA,MAAA,CAAA,QAAA,CAAA;AACA,OAFA;AAGA;AAnEA,GAjJA;AAsNA,EAAA,aAtNA,2BAsNA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,SAAA;AACA;AAxNA,CAAA","sourcesContent":["<template>\n  <div :class=\"StDateSlider()\">\n    <div :class=\"StDateSlider('way')\" ref=\"slider\" @click=\"onSliderClick\">\n      <div :class=\"StDateSlider('bar')\" :style=\"sliderBarStyle\"></div>\n      <div\n        :class=\"StDateSlider('range')\"\n        :style=\"rangeBarStyle\"\n        v-if=\"range\"\n      ></div>\n      <slider-button ref=\"firstButton\" v-model=\"firstValue\"></slider-button>\n      <slider-button ref=\"secondButton\" v-model=\"secondValue\"></slider-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SliderButton from './button'\nexport default {\n  name: 'StDateSlider',\n  bem: {\n    StDateSlider: 'st-date-slider'\n  },\n  components: { SliderButton },\n  props: {\n    value: {\n      type: [Number, Array],\n      default: 0\n    },\n    tipFormatter: Function,\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 24\n    },\n    step: {\n      type: Number,\n      default: 60\n    },\n    disable: {\n      type: Boolean,\n      default: false\n    },\n    rangeData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      dragging: false,\n      firstValue: null,\n      secondValue: null,\n      oldValue: null\n    }\n  },\n  computed: {\n    precision() {\n      let precisions = [this.min, this.max, this.step].map(item => {\n        let decimal = ('' + item).split('.')[1]\n        return decimal ? decimal.length : 0\n      })\n      return Math.max.apply(null, precisions)\n    },\n    minValue() {\n      return Math.min(this.firstValue, this.secondValue)\n    },\n    maxValue() {\n      return Math.max(this.firstValue, this.secondValue)\n    },\n    range() {\n      return Array.isArray(this.rangeData) && this.rangeData.length\n    },\n    rangeFirst() {\n      return this.rangeData[0]\n    },\n    rangeSecond() {\n      return this.rangeData[1]\n    },\n    sliderBarSize() {\n      return `${(100 * (this.maxValue - this.minValue)) /\n        (this.max - this.min)}%`\n    },\n    sliderBarStart() {\n      return `${(100 * (this.minValue - this.min)) / (this.max - this.min)}%`\n    },\n    sliderBarStyle() {\n      return {\n        left: this.sliderBarStart,\n        width: this.sliderBarSize\n      }\n    },\n    rangeBarSize() {\n      return `${(100 * (this.rangeSecond - this.rangeFirst)) /\n        (this.max - this.min)}%`\n    },\n    rangeBarStart() {\n      return `${(100 * this.rangeFirst) / (this.max - this.min)}%`\n    },\n    rangeBarStyle() {\n      return {\n        left: this.rangeBarStart,\n        width: this.rangeBarSize\n      }\n    }\n  },\n  watch: {\n    value(val, oldVal) {\n      // console.log('value is updating', this.dragging, val, oldVal)\n      if (\n        this.dragging ||\n        (Array.isArray(val) &&\n          Array.isArray(oldVal) &&\n          val.every((item, index) => item === oldVal[index]))\n      ) {\n        return\n      }\n      this.setValues()\n    },\n    dragging(val) {\n      if (!val) {\n        console.log('dragging')\n        this.setValues()\n      }\n    },\n    firstValue(val) {\n      this.$emit('input', [this.minValue, this.maxValue])\n    },\n    secondValue() {\n      this.$emit('input', [this.minValue, this.maxValue])\n    },\n    min() {\n      // consol.log('min change')\n      this.setValues()\n    },\n    max() {\n      // consol.log('max change')\n      this.setValues()\n    },\n    rangeFirst() {\n      // consol.log('rangeFirst change')\n      if (this.range) this.setValues()\n    },\n    rangeSecond() {\n      // consol.log('rangeSecond change')\n      if (this.range) this.setValues()\n    }\n  },\n  mounted() {\n    // 确定首尾值\n    if (Array.isArray(this.value) && !this.range) {\n      this.firstValue = Math.max(this.min, this.value[0])\n      this.secondValue = Math.min(this.max, this.value[1])\n    } else {\n      this.firstValue = Math.max(this.rangeFirst, this.value[0])\n      this.secondValue = Math.min(this.rangeSecond, this.value[1])\n    }\n    this.oldValue = [this.firstValue, this.secondValue]\n    window.addEventListener('resize', this.resetSize)\n  },\n  methods: {\n    valueChanged() {\n      return ![this.minValue, this.maxValue].every(\n        (item, index) => item === this.oldValue[index]\n      )\n    },\n    setValues() {\n      if (this.min > this.max) {\n        return\n      }\n      const val = this.value\n      if (!Array.isArray(val)) return false\n      let min = this.range ? this.rangeFirst : this.min\n      let max = this.range ? this.rangeSecond : this.max\n\n      if (val[1] < min) {\n        this.$emit('input', [min, min])\n      } else if (val[0] > max) {\n        this.$emit('input', [max, max])\n      } else if (val[0] < min) {\n        this.$emit('input', [min, val[1]])\n      } else if (val[1] > max) {\n        this.$emit('input', [val[0], max])\n      } else {\n        this.firstValue = val[0]\n        this.secondValue = val[1]\n        if (this.valueChanged()) {\n          this.oldValue = val.slice()\n        }\n      }\n    },\n    setPosition(percent) {\n      let min = this.range ? this.rangeFirst : this.min\n      const targetValue = min + (percent * (this.max - this.min)) / 100\n      let button\n      if (\n        Math.abs(this.minValue - targetValue) <\n        Math.abs(this.maxValue - targetValue)\n      ) {\n        button =\n          this.firstValue < this.secondValue ? 'firstButton' : 'secondButton'\n      } else {\n        button =\n          this.firstValue > this.secondValue ? 'firstButton' : 'secondButton'\n      }\n      this.$refs[button].setPosition(percent)\n    },\n    onSliderClick(event) {\n      // console.log(this.dragging)\n      if (this.disable || this.dragging) return\n      this.resetSize()\n      console.log(this.$refs.slider)\n      const sliderOffsetLeft = this.$refs.slider.getBoundingClientRect().left\n      this.setPosition(\n        ((event.clientX - sliderOffsetLeft) / this.sliderSize) * 100\n      )\n      this.emitChange()\n    },\n    resetSize() {\n      if (this.$refs.slider) {\n        this.sliderSize = this.$refs.slider['clientWidth']\n      }\n    },\n    emitChange() {\n      this.$nextTick(() => {\n        this.$emit('input', [this.minValue, this.maxValue])\n      })\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resetSize)\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/date-slider"}]}