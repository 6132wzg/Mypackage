{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/editor/editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/editor/editor.vue","mtime":1600926382183},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport { AppConfig } from '@/constants/config'\nimport { ImportService } from '@/services/import.service.ts'\nimport EditorImage from './editor-image'\nimport Vue from 'vue'\n\nconst editorEvents = [\n  'activate',\n  'addUndo',\n  'beforeAddUndo',\n  'beforeExecCommand',\n  'beforeGetContent',\n  'beforeRenderUI',\n  'beforeSetContent',\n  'beforePaste',\n  'blur',\n  'change',\n  'clearUndos',\n  'click',\n  'contextMenu',\n  'copy',\n  'cut',\n  'dblclick',\n  'deactivate',\n  'dirty',\n  'drag',\n  'dragDrop',\n  'dragEnd',\n  'dragGesture',\n  'dragOver',\n  'drop',\n  'execCommand',\n  'focus',\n  'focusIn',\n  'focusOut',\n  'getContent',\n  'hide',\n  'init',\n  'keyDown',\n  'keyPress',\n  'keyUp',\n  'loadContent',\n  'mouseDown',\n  'mouseEnter',\n  'mouseLeave',\n  'mouseMove',\n  'mouseOut',\n  'mouseOver',\n  'mouseUp',\n  'nodeChange',\n  'objectResizeStart',\n  'objectResized',\n  'objectSelected',\n  'paste',\n  'postProcess',\n  'postRender',\n  'preProcess',\n  'progressState',\n  'redo',\n  'remove',\n  'reset',\n  'saveContent',\n  'selectionChange',\n  'setAttrib',\n  'setContent',\n  'show',\n  'submit',\n  'undo',\n  'visualAid'\n]\n\nexport default {\n  name: 'StEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  serviceInject() {\n    return {\n      appConfig: AppConfig,\n      importService: ImportService\n    }\n  },\n  computed: {\n    editorId() {\n      return 'st-editor-' + this._uid\n    }\n  },\n  methods: {\n    onChangeGetFile({ image, editor }) {\n      editor.insertContent(`<img src=\"${image.url}\">`)\n      this.$emit('ready', editor)\n    }\n  },\n  mounted() {\n    this.importService\n      .load(['tinymce/5.0.3/tinymce.min.js'])\n      .then(() =>\n        this.importService.load(['tinymce/5.0.3/themes/silver/theme.min.js'])\n      )\n      .then(() => {\n        const ctx = this\n        window.tinyMCE.remove()\n        window.tinyMCE.init({\n          selector: '.' + this.editorId,\n          language: 'zh_CN',\n          // 右键菜单\n          contextmenu: ['paste'],\n          // 隐藏右下角技术支持\n          branding: false,\n          // 隐藏底栏的元素路径\n          elementpath: false,\n          menubar: false,\n          body_class: 'st-editor',\n          plugins: ['link', 'image'],\n          min_height: 153,\n          toolbar:\n            'undo redo | styleselect bold italic forecolor backcolor | bullist numlist | alignleft aligncenter alignright',\n          language_url: this.appConfig.BASE_URL + 'tinymce/5.0.3/zh_CN.js',\n          // 图片上传\n          images_upload_handler: function(blobInfo, success, failure) {\n            let formData = new FormData()\n            formData.append('img', blobInfo.blob())\n            ctx.$modalRouter.push({\n              name: 'face-recognition'\n            })\n          },\n          setup(editor) {\n            editor.on('change keyup undo redo', value => {\n              const currentContent = editor.getContent()\n              ctx.$emit('input', currentContent)\n              ctx.$emit('change', currentContent)\n            })\n          },\n          init_instance_callback(editor) {\n            const editorToolbarEl = document.querySelector('.tox-toolbar')\n            let ele = document.createElement('div')\n            ele.id = 'editorImageUpload'\n            editorToolbarEl.appendChild(ele)\n            new Vue({\n              components: {\n                EditorImage\n              },\n              render: h => (\n                <editor-image editor={editor} onChange={ctx.onChangeGetFile} />\n              )\n            }).$mount('#editorImageUpload')\n            editor.setContent(ctx.value)\n            ctx.$emit('ready', editor)\n          }\n        })\n      })\n  }\n}\n",{"version":3,"sources":["editor.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editor.vue","sourceRoot":"src/views/biz-components/st/editor","sourcesContent":["<template>\n  <textarea :class=\"editorId\"></textarea>\n</template>\n\n<script>\nimport { AppConfig } from '@/constants/config'\nimport { ImportService } from '@/services/import.service.ts'\nimport EditorImage from './editor-image'\nimport Vue from 'vue'\n\nconst editorEvents = [\n  'activate',\n  'addUndo',\n  'beforeAddUndo',\n  'beforeExecCommand',\n  'beforeGetContent',\n  'beforeRenderUI',\n  'beforeSetContent',\n  'beforePaste',\n  'blur',\n  'change',\n  'clearUndos',\n  'click',\n  'contextMenu',\n  'copy',\n  'cut',\n  'dblclick',\n  'deactivate',\n  'dirty',\n  'drag',\n  'dragDrop',\n  'dragEnd',\n  'dragGesture',\n  'dragOver',\n  'drop',\n  'execCommand',\n  'focus',\n  'focusIn',\n  'focusOut',\n  'getContent',\n  'hide',\n  'init',\n  'keyDown',\n  'keyPress',\n  'keyUp',\n  'loadContent',\n  'mouseDown',\n  'mouseEnter',\n  'mouseLeave',\n  'mouseMove',\n  'mouseOut',\n  'mouseOver',\n  'mouseUp',\n  'nodeChange',\n  'objectResizeStart',\n  'objectResized',\n  'objectSelected',\n  'paste',\n  'postProcess',\n  'postRender',\n  'preProcess',\n  'progressState',\n  'redo',\n  'remove',\n  'reset',\n  'saveContent',\n  'selectionChange',\n  'setAttrib',\n  'setContent',\n  'show',\n  'submit',\n  'undo',\n  'visualAid'\n]\n\nexport default {\n  name: 'StEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  serviceInject() {\n    return {\n      appConfig: AppConfig,\n      importService: ImportService\n    }\n  },\n  computed: {\n    editorId() {\n      return 'st-editor-' + this._uid\n    }\n  },\n  methods: {\n    onChangeGetFile({ image, editor }) {\n      editor.insertContent(`<img src=\"${image.url}\">`)\n      this.$emit('ready', editor)\n    }\n  },\n  mounted() {\n    this.importService\n      .load(['tinymce/5.0.3/tinymce.min.js'])\n      .then(() =>\n        this.importService.load(['tinymce/5.0.3/themes/silver/theme.min.js'])\n      )\n      .then(() => {\n        const ctx = this\n        window.tinyMCE.remove()\n        window.tinyMCE.init({\n          selector: '.' + this.editorId,\n          language: 'zh_CN',\n          // 右键菜单\n          contextmenu: ['paste'],\n          // 隐藏右下角技术支持\n          branding: false,\n          // 隐藏底栏的元素路径\n          elementpath: false,\n          menubar: false,\n          body_class: 'st-editor',\n          plugins: ['link', 'image'],\n          min_height: 153,\n          toolbar:\n            'undo redo | styleselect bold italic forecolor backcolor | bullist numlist | alignleft aligncenter alignright',\n          language_url: this.appConfig.BASE_URL + 'tinymce/5.0.3/zh_CN.js',\n          // 图片上传\n          images_upload_handler: function(blobInfo, success, failure) {\n            let formData = new FormData()\n            formData.append('img', blobInfo.blob())\n            ctx.$modalRouter.push({\n              name: 'face-recognition'\n            })\n          },\n          setup(editor) {\n            editor.on('change keyup undo redo', value => {\n              const currentContent = editor.getContent()\n              ctx.$emit('input', currentContent)\n              ctx.$emit('change', currentContent)\n            })\n          },\n          init_instance_callback(editor) {\n            const editorToolbarEl = document.querySelector('.tox-toolbar')\n            let ele = document.createElement('div')\n            ele.id = 'editorImageUpload'\n            editorToolbarEl.appendChild(ele)\n            new Vue({\n              components: {\n                EditorImage\n              },\n              render: h => (\n                <editor-image editor={editor} onChange={ctx.onChangeGetFile} />\n              )\n            }).$mount('#editorImageUpload')\n            editor.setContent(ctx.value)\n            ctx.$emit('ready', editor)\n          }\n        })\n      })\n  }\n}\n</script>\n"]}]}