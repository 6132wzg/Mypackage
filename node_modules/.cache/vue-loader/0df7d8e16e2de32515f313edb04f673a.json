{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/entrance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/entrance.vue","mtime":1598250255730},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport infoEdit from '@/views/biz-components/info-edit/info-edit'\nimport faceUpload from '@/views/biz-components/face-upload/face-upload'\nimport ShopAddLable from '@/views/biz-modals/shop/add-lable'\nimport { MessageService } from '@/services/message.service'\n\nimport { EntranceService } from './entrance.service'\nimport { cloneDeep, get, debounce } from 'lodash-es'\nexport default {\n  name: 'modal-shop-reception-entrance',\n  props: {\n    member_id: {\n      type: [String, Number]\n    }\n  },\n  components: { faceUpload, infoEdit },\n  modals: { ShopAddLable },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      entranceService: EntranceService\n    }\n  },\n  rxState() {\n    return {\n      cabinetList: this.entranceService.cabinetList$,\n      loading: this.entranceService.loading$,\n      page: this.entranceService.page$,\n      sellerList: this.entranceService.sellerList$,\n      coachList: this.entranceService.coachList$,\n      entranceOptionList: this.entranceService.entranceOptionList$,\n      parent_types: this.entranceService.parent_types$,\n      auth: this.entranceService.auth$\n    }\n  },\n  data() {\n    return {\n      show: false,\n      isAnyEdit: false, // 是否处于编辑状态\n      memberInfo: {}, // 会员详细信息\n      photoList: [],\n      list: [],\n      cabinets: [],\n      tags: [],\n      proof: '',\n      temporary_cabinet: '', // 临时租赁柜\n      seller: '',\n      coach: '',\n      entranceOptionType: {\n        '1': 'reception-period-card',\n        '2': 'reception-number-card',\n        '3': 'reception-visit-appointment',\n        '4': 'reception-personal-course',\n        '5': 'reception-personal-team-course',\n        '6': 'reception-team-course',\n        '7': 'reception-small-course',\n        '8': 'reception-site-appointment'\n      },\n      isCheckinCourse: 1\n    }\n  },\n  computed: {\n    // 是否已入场\n    isEntry() {\n      return (\n        this.memberInfo.entry_status &&\n        +this.memberInfo.entry_status.value === 1\n      )\n    },\n    canEntry() {\n      return (\n        ((this.proof && this.proof !== -1) || this.proof === 0) &&\n        this.auth.checkin\n      )\n    },\n    memberIsBirthday() {\n      return get(this.memberInfo, 'is_birthday', false)\n    },\n    memberType() {\n      return get(this.memberInfo, 'member_type', {})\n    },\n    memberProof() {\n      return get(this.memberInfo, 'proof', {})\n    },\n    temporaryCabinet() {\n      let temporary_cabinet = get(this.memberInfo, 'temporary_cabinet', [])\n      let cabinet = temporary_cabinet.length ? temporary_cabinet[0] : {}\n      // 临时\n      return cabinet\n    },\n    leasingCabinets() {\n      // 长期\n      return get(this.memberInfo, 'leasing_cabinet', [])\n    },\n    leasingCabinetText() {\n      if (!this.leasingCabinets.length) return '暂无'\n      return this.leasingCabinets.reduce((str, cur) => {\n        let prefix = str ? ' / ' : ''\n        str += prefix + cur.name\n        return str\n      }, '')\n    },\n    coachName() {\n      return get(this.memberInfo.coach, 'name', '')\n    },\n    sellerName() {\n      return get(this.memberInfo.seller, 'name', '')\n    },\n    cardNum() {\n      return get(this.memberInfo, 'card_num', '')\n    },\n    rfid() {\n      return get(this.memberInfo, 'rfid', '')\n    }\n  },\n  created() {\n    this.entranceService.init().subscribe()\n  },\n  mounted() {\n    // 获取会员详情\n    this.init()\n    document.addEventListener('keydown', this.onInputKeyPress)\n  },\n  destroyed() {\n    document.removeEventListener('keydown', this.onInputKeyPress)\n  },\n  methods: {\n    handleProofChange(e) {\n      this.proof = e.target.value\n    },\n    cabinetSearch: debounce(function(keyword) {\n      this.entranceService\n        .getCabinetList(this.member_id, {\n          keyword\n        })\n        .subscribe()\n    }, 400),\n    onInputKeyPress(e) {\n      let keyCode = e.keyCode\n      if (this.isAnyEdit) {\n        return false\n      }\n      if (keyCode === 13) {\n        if (this.isEntry) {\n          if (this.auth.checkout) this.onLeaveConfirm()\n        } else {\n          if (this.canEntry) this.onEntry()\n        }\n      }\n    },\n    init() {\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.proof = get(res.info.proof, 'proof_type', -1)\n        this.temporary_cabinet = get(this.temporaryCabinet, 'id', -1)\n\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n        this.isCheckinCourse = res.info.is_checkin_course\n\n        // 获取会员入场凭证列表\n        if (!this.isEntry) {\n          this.entranceService\n            .getEntranceOptionList(this.member_id)\n            .subscribe(res => {\n              let proofs = this.entranceOptionList.filter(\n                option => option.is_able\n              )\n              if (proofs.length === 1 && proofs[0]['id'] === 0) {\n                this.proof = -1\n              } else {\n                this.proof = proofs.length\n                  ? proofs[0]['id']\n                  : this.entranceOptionList[0]['id']\n              }\n            })\n        }\n        // 获取会员储物柜列表\n        this.entranceService.getCabinetList(this.member_id).subscribe()\n      })\n    },\n    // 删除标签\n    handleRemoveTag(tag) {\n      this.entranceService\n        .getMemberLabelDelete({ user_id: this.member_id, tag_id: tag.id })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 获取会员详情\n    handleGetMemberInfo() {\n      console.log('handleGetMemberInfo')\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.proof = get(res.info.proof, 'proof_type', -1)\n        this.temporary_cabinet = get(this.temporaryCabinet, 'id', -1)\n        this.isCheckinCourse = res.info.isCheckinCourse\n\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n\n        if (!this.isEntry && (!this.proof || this.proof === -1)) {\n          let proofs = this.entranceOptionList.filter(option => option.is_able)\n          this.proof = proofs.length\n            ? proofs[0]['id']\n            : this.entranceOptionList[0]['id']\n        }\n      })\n    },\n    // 头像变更\n    handlePhotoChange(list) {\n      this.entranceService\n        .editFace(this.member_id, {\n          image_face: list[0]\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 物理卡号变更\n    handleRfidChange(rfid) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num:\n            typeof this.memberInfo.card_num === 'string'\n              ? this.memberInfo.card_num.trim()\n              : this.memberInfo.card_num,\n          rfid: typeof rfid === 'string' ? rfid.trim() : rfid // 物理ID\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 实体卡号变更\n    handleCardNumChange(card_num) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num: typeof card_num === 'string' ? card_num.trim() : card_num,\n          rfid:\n            typeof this.memberInfo.rfid === 'string'\n              ? this.memberInfo.rfid.trim()\n              : this.memberInfo.rfid // 实体卡号\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 销售变更\n    handleEditSeller(seller_id) {\n      this.entranceService\n        .editSeller({\n          member_id: +this.member_id,\n          seller_id: seller_id === -1 ? 0 : seller_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 教练变更\n    handleEditCoach(coach_id) {\n      this.entranceService\n        .editCoach({\n          member_id: +this.member_id,\n          coach_id: coach_id === -1 ? 0 : coach_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 备注变更\n    handleRemarkChange(remark) {\n      this.entranceService\n        .updateMemberEdit(+this.member_id, {\n          remark\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 修改编辑状态\n    handleChangeEditStatus(val) {\n      this.isAnyEdit = val\n    },\n    // 入场会员修改储物柜\n    handleEditCabinet(cabinet_id) {\n      this.entranceService\n        .editEntranceCabinet({\n          member_id: +this.member_id,\n          cabinet_id: cabinet_id === -1 ? 0 : +cabinet_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 入场\n    onEntry() {\n      let cabinet_id =\n        this.temporary_cabinet === -1 ? undefined : +this.temporary_cabinet\n      let proof_type =\n        this.entranceOptionList.length > 0 &&\n        this.entranceOptionList.filter(i => i.id === this.proof)[0].proof_type\n      let proof_value = +this.proof\n      let seller_id = this.seller === -1 ? undefined : +this.seller\n      let coach_id = this.coach === -1 ? undefined : +this.coach\n      let member_id = +this.member_id\n      let is_checkin_course = this.isCheckinCourse\n      this.entranceService\n        .setEntrance({\n          member_id,\n          cabinet_id,\n          proof_type,\n          proof_value,\n          seller_id,\n          coach_id,\n          is_checkin_course\n        })\n        .subscribe(res => {\n          this.show = false\n          this.messageService.success({ content: '入场成功' })\n          this.$emit('done')\n        })\n    },\n    // 离场之前的确认\n    onLeaveConfirm() {\n      console.log('entranceService', this.entranceService)\n      this.entranceService.getCabinetInfo(this.member_id).subscribe(res => {\n        if (res.info.is_smart) {\n          this.$error({\n            title: `当前会员有储物柜「${res.info.cabinet_area_name}」「${res.info.serial_num}」尚未归还，请先归还！`,\n            okText: '知道了'\n          })\n        } else {\n          this.onLeave()\n        }\n      })\n    },\n    // 离场\n    onLeave() {\n      this.entranceService.setEntranceLeave(this.member_id).subscribe(res => {\n        this.show = false\n        this.messageService.success({ content: '离场成功' })\n        this.$emit('done')\n      })\n    },\n    handleClose() {\n      this.show = false\n      this.$emit('done')\n    }\n  }\n}\n",{"version":3,"sources":["entrance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"entrance.vue","sourceRoot":"src/views/biz-modals/shop/reception","sourcesContent":["<template>\n  <st-modal\n    title=\"会员入场\"\n    v-model=\"show\"\n    width=\"744px\"\n    wrapClassName=\"modal-shop-reception-entrance\"\n    @cancel=\"handleClose\"\n  >\n    <div class=\"member\">\n      <!-- 会员信息 -->\n      <div class=\"member-info\">\n        <div class=\"member-info-base\">\n          <!-- 头像 -->\n          <div class=\"member-info-base__avatar\">\n            <face-upload\n              width=\"146px\"\n              height=\"146px\"\n              placeholder=\"上传人脸\"\n              @change=\"handlePhotoChange\"\n              :list=\"photoList\"\n              :faceEditAuth=\"auth.editFace\"\n              :actionAuth=\"auth.delFace\"\n            >\n              <div\n                class=\"avatar-tip\"\n                v-if=\"memberType.name\"\n                slot=\"actionContent\"\n              >\n                {{ memberType.name }}\n              </div>\n            </face-upload>\n            <div class=\"avatar-tag\" v-if=\"memberIsBirthday\">\n              <img src=\"~@/assets/img/icon_face_birthday.png\" alt=\"\" />\n            </div>\n          </div>\n          <!-- 基本信息 -->\n          <div class=\"member-info-base__info\">\n            <!-- 姓名,手机号  -->\n            <div class=\"info-bar mg-b8\">\n              <div class=\"name\">\n                {{ memberInfo.member_name }}\n              </div>\n              <div class=\"sex\">\n                <st-icon\n                  :type=\"memberInfo.sex === 1 ? 'female' : 'male'\"\n                  :style=\"\n                    memberInfo.sex === 1 ? 'color:#FF5E41' : 'color:#3F66F6'\n                  \"\n                />\n              </div>\n\n              <div class=\"phone\">\n                {{ memberInfo.mobile }}\n              </div>\n            </div>\n            <!-- 标签 -->\n            <div class=\"info-bar mg-b4\">\n              <div class=\"tag\">\n                <div v-for=\"tag in tags\" :key=\"tag.id\">\n                  <a-tooltip :key=\"tag.id\" :title=\"tag.name\">\n                    <a-tag\n                      class=\"tag-item\"\n                      :key=\"tag.name\"\n                      :closable=\"auth.editMember\"\n                      @close=\"handleRemoveTag(tag)\"\n                    >\n                      {{ tag.name }}\n                    </a-tag>\n                  </a-tooltip>\n                </div>\n                <a\n                  v-modal-link=\"{\n                    name: 'shop-add-lable',\n                    props: {\n                      memberIds: [member_id]\n                    },\n                    on: { success: handleGetMemberInfo }\n                  }\"\n                >\n                  <a-tag style=\"background: #fff; borderStyle: dashed;\">\n                    <a-icon type=\"plus\" style=\"margin-right: 8px;\" />\n                    标签\n                  </a-tag>\n                </a>\n              </div>\n            </div>\n            <div class=\"info-bar\">\n              <!-- 卡号 -->\n              <info-edit\n                label=\"实体卡号：\"\n                :value=\"memberInfo.card_num\"\n                :canEdit=\"auth.editCardNum\"\n                :invisibleEdit=\"isAnyEdit\"\n                @confirm=\"handleCardNumChange\"\n                @changeEditStatus=\"handleChangeEditStatus\"\n              >\n                <st-overflow-text\n                  max-width=\"170px\"\n                  :value=\"cardNum\"\n                ></st-overflow-text>\n              </info-edit>\n              <!-- 物理卡号 -->\n              <info-edit\n                label=\"物理ID：\"\n                :value=\"memberInfo.rfid\"\n                :canEdit=\"auth.editCardNum\"\n                :invisibleEdit=\"isAnyEdit\"\n                @confirm=\"handleRfidChange\"\n                @changeEditStatus=\"handleChangeEditStatus\"\n              >\n                <st-overflow-text\n                  max-width=\"170px\"\n                  :value=\"rfid\"\n                ></st-overflow-text>\n              </info-edit>\n            </div>\n            <div class=\"info-bar\">\n              <!-- 跟进销售 -->\n              <info-edit\n                type=\"select\"\n                label=\"跟进销售：\"\n                :invisibleEdit=\"isAnyEdit\"\n                :canEdit=\"auth.bindSalesman\"\n                :value=\"seller\"\n                :options=\"sellerList\"\n                @confirm=\"handleEditSeller\"\n                @changeEditStatus=\"handleChangeEditStatus\"\n              >\n                <st-overflow-text\n                  max-width=\"170px\"\n                  :value=\"sellerName\"\n                ></st-overflow-text>\n              </info-edit>\n              <!-- 跟进教练 -->\n              <info-edit\n                type=\"select\"\n                :label=\"`跟进${$c('coach')}：`\"\n                :invisibleEdit=\"isAnyEdit\"\n                :canEdit=\"auth.bindCoach\"\n                :value=\"coach\"\n                :options=\"coachList\"\n                @confirm=\"handleEditCoach\"\n                @changeEditStatus=\"handleChangeEditStatus\"\n              >\n                <st-overflow-text\n                  max-width=\"170px\"\n                  :value=\"coachName\"\n                ></st-overflow-text>\n              </info-edit>\n            </div>\n          </div>\n        </div>\n        <div class=\"member-info-detail\">\n          <!-- 备注 -->\n          <div class=\"member-info-detail__remark\">\n            <info-edit\n              label=\"备注：\"\n              labelWidth=\"42\"\n              type=\"textarea\"\n              :canEdit=\"auth.editMember\"\n              :value=\"memberInfo.remark\"\n              :invisibleEdit=\"isAnyEdit\"\n              @confirm=\"handleRemarkChange\"\n              @changeEditStatus=\"handleChangeEditStatus\"\n              class=\"remark\"\n            >\n              {{ memberInfo.remark }}\n            </info-edit>\n          </div>\n        </div>\n      </div>\n      <!-- 入场凭证 -->\n      <div class=\"member-entrance\">\n        <div class=\"member-entrance-title\">\n          <div class=\"tip\">入场凭证</div>\n          <div v-if=\"!isEntry\">\n            <st-checkbox v-model=\"isCheckinCourse\">\n              凭课入场后直接签到课程\n            </st-checkbox>\n          </div>\n          <div v-else class=\"info\">\n            <div class=\"label\">入场时间：</div>\n            <div class=\"content\">{{ memberInfo.entry_time }}</div>\n          </div>\n        </div>\n        <!-- 入场 -->\n        <div class=\"member-entrance-tickets\" v-if=\"!isEntry\">\n          <div\n            class=\"member-entrance-ticket\"\n            v-for=\"entranceOption in entranceOptionList\"\n            :key=\"entranceOption.id\"\n          >\n            <a-radio\n              :value=\"entranceOption.id\"\n              :checked=\"entranceOption.id === proof\"\n              :disabled=\"!entranceOption.is_able\"\n              @change=\"handleProofChange\"\n            ></a-radio>\n            <div\n              class=\"ticket-info\"\n              :class=\"{ disabled: !entranceOption.is_able }\"\n            >\n              <div class=\"ticket-info__top\">\n                <div class=\"tag\">\n                  <st-tag\n                    :type=\"entranceOptionType[entranceOption.proof_type]\"\n                  ></st-tag>\n                </div>\n                <div class=\"name\">{{ entranceOption.proof_name }}</div>\n                <div class=\"reason\">{{ entranceOption.reason }}</div>\n                <div v-if=\"entranceOption.reason_hover.length\">\n                  <a-tooltip>\n                    <template slot=\"title\">\n                      <div\n                        v-for=\"(reson, index) in entranceOption.reason_hover\"\n                        :key=\"index\"\n                      >\n                        {{ reson }}\n                      </div>\n                    </template>\n                    <span class=\"st-help-tooltip-img tip\">\n                      <img\n                        height=\"14\"\n                        width=\"14\"\n                        src=\"~@/assets/img/tooltip-help.png\"\n                      />\n                    </span>\n                  </a-tooltip>\n                </div>\n              </div>\n              <div\n                class=\"ticket-info__bottom\"\n                v-if=\"\n                  entranceOption.proof_info && entranceOption.proof_info.length\n                \"\n              >\n                <div\n                  class=\"info\"\n                  v-for=\"(info, index) in entranceOption.proof_info\"\n                  :key=\"index\"\n                >\n                  <span class=\"label\">{{ info.key }}：</span>\n                  <span class=\"content\">{{ info.value }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- <a-radio-group v-model=\"proof\" class=\"wrapper\">\n\n          </a-radio-group> -->\n        </div>\n        <!-- 离场 -->\n        <div class=\"member-entrance-ticket\" v-else>\n          <div class=\"ticket-info\">\n            <div class=\"ticket-info__top\">\n              <div class=\"tag\">\n                <st-tag\n                  :type=\"entranceOptionType[memberProof.proof_type]\"\n                ></st-tag>\n              </div>\n              <div class=\"name\">{{ memberProof.proof_name }}</div>\n            </div>\n            <div\n              class=\"ticket-info__bottom\"\n              v-if=\"memberProof.proof_info.length\"\n            >\n              <div\n                class=\"info\"\n                v-for=\"(info, index) in memberProof.proof_info\"\n                :key=\"index\"\n              >\n                <span class=\"label\">{{ info.key }}：</span>\n                <span class=\"content\">{{ info.value }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <template slot=\"footer\">\n      <div class=\"member-footer\">\n        <div class=\"left\">\n          <div class=\"info\">\n            <div class=\"label\">租柜：</div>\n            <div class=\"content\">\n              <st-overflow-text\n                max-width=\"170px\"\n                :value=\"leasingCabinetText\"\n              ></st-overflow-text>\n            </div>\n          </div>\n          <div class=\"info\">\n            <div class=\"label\">临时柜：</div>\n            <div class=\"content\" v-if=\"!isEntry\">\n              <a-select\n                v-model=\"temporary_cabinet\"\n                placeholder=\"请选择\"\n                showSearch\n                :filterOption=\"false\"\n                @search=\"cabinetSearch\"\n                style=\"width: 156px\"\n                ref=\"cabinet\"\n              >\n                <a-select-option\n                  v-for=\"(item, index) in cabinetList\"\n                  :key=\"index\"\n                  :value=\"item.id\"\n                >\n                  {{ item.name }}\n                </a-select-option>\n              </a-select>\n            </div>\n            <div class=\"content\" v-else>\n              {{ temporaryCabinet.name || '暂无' }}\n            </div>\n          </div>\n        </div>\n        <div class=\"button\">\n          <st-button\n            class=\"entryButton\"\n            type=\"primary\"\n            v-if=\"!isEntry\"\n            :disabled=\"!canEntry\"\n            :loading=\"loading.setEntrance\"\n            @click=\"onEntry\"\n          >\n            入场\n            <img src=\"~@/assets/img/icon_enter@2x.png\" alt=\"\" />\n          </st-button>\n          <st-button\n            class=\"leaveButton\"\n            v-else\n            :disabled=\"!auth.checkout\"\n            @click=\"onLeaveConfirm\"\n          >\n            离场\n            <img src=\"~@/assets/img/icon_enter@2x.png\" alt=\"\" />\n          </st-button>\n        </div>\n      </div>\n    </template>\n  </st-modal>\n</template>\n<script>\nimport infoEdit from '@/views/biz-components/info-edit/info-edit'\nimport faceUpload from '@/views/biz-components/face-upload/face-upload'\nimport ShopAddLable from '@/views/biz-modals/shop/add-lable'\nimport { MessageService } from '@/services/message.service'\n\nimport { EntranceService } from './entrance.service'\nimport { cloneDeep, get, debounce } from 'lodash-es'\nexport default {\n  name: 'modal-shop-reception-entrance',\n  props: {\n    member_id: {\n      type: [String, Number]\n    }\n  },\n  components: { faceUpload, infoEdit },\n  modals: { ShopAddLable },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      entranceService: EntranceService\n    }\n  },\n  rxState() {\n    return {\n      cabinetList: this.entranceService.cabinetList$,\n      loading: this.entranceService.loading$,\n      page: this.entranceService.page$,\n      sellerList: this.entranceService.sellerList$,\n      coachList: this.entranceService.coachList$,\n      entranceOptionList: this.entranceService.entranceOptionList$,\n      parent_types: this.entranceService.parent_types$,\n      auth: this.entranceService.auth$\n    }\n  },\n  data() {\n    return {\n      show: false,\n      isAnyEdit: false, // 是否处于编辑状态\n      memberInfo: {}, // 会员详细信息\n      photoList: [],\n      list: [],\n      cabinets: [],\n      tags: [],\n      proof: '',\n      temporary_cabinet: '', // 临时租赁柜\n      seller: '',\n      coach: '',\n      entranceOptionType: {\n        '1': 'reception-period-card',\n        '2': 'reception-number-card',\n        '3': 'reception-visit-appointment',\n        '4': 'reception-personal-course',\n        '5': 'reception-personal-team-course',\n        '6': 'reception-team-course',\n        '7': 'reception-small-course',\n        '8': 'reception-site-appointment'\n      },\n      isCheckinCourse: 1\n    }\n  },\n  computed: {\n    // 是否已入场\n    isEntry() {\n      return (\n        this.memberInfo.entry_status &&\n        +this.memberInfo.entry_status.value === 1\n      )\n    },\n    canEntry() {\n      return (\n        ((this.proof && this.proof !== -1) || this.proof === 0) &&\n        this.auth.checkin\n      )\n    },\n    memberIsBirthday() {\n      return get(this.memberInfo, 'is_birthday', false)\n    },\n    memberType() {\n      return get(this.memberInfo, 'member_type', {})\n    },\n    memberProof() {\n      return get(this.memberInfo, 'proof', {})\n    },\n    temporaryCabinet() {\n      let temporary_cabinet = get(this.memberInfo, 'temporary_cabinet', [])\n      let cabinet = temporary_cabinet.length ? temporary_cabinet[0] : {}\n      // 临时\n      return cabinet\n    },\n    leasingCabinets() {\n      // 长期\n      return get(this.memberInfo, 'leasing_cabinet', [])\n    },\n    leasingCabinetText() {\n      if (!this.leasingCabinets.length) return '暂无'\n      return this.leasingCabinets.reduce((str, cur) => {\n        let prefix = str ? ' / ' : ''\n        str += prefix + cur.name\n        return str\n      }, '')\n    },\n    coachName() {\n      return get(this.memberInfo.coach, 'name', '')\n    },\n    sellerName() {\n      return get(this.memberInfo.seller, 'name', '')\n    },\n    cardNum() {\n      return get(this.memberInfo, 'card_num', '')\n    },\n    rfid() {\n      return get(this.memberInfo, 'rfid', '')\n    }\n  },\n  created() {\n    this.entranceService.init().subscribe()\n  },\n  mounted() {\n    // 获取会员详情\n    this.init()\n    document.addEventListener('keydown', this.onInputKeyPress)\n  },\n  destroyed() {\n    document.removeEventListener('keydown', this.onInputKeyPress)\n  },\n  methods: {\n    handleProofChange(e) {\n      this.proof = e.target.value\n    },\n    cabinetSearch: debounce(function(keyword) {\n      this.entranceService\n        .getCabinetList(this.member_id, {\n          keyword\n        })\n        .subscribe()\n    }, 400),\n    onInputKeyPress(e) {\n      let keyCode = e.keyCode\n      if (this.isAnyEdit) {\n        return false\n      }\n      if (keyCode === 13) {\n        if (this.isEntry) {\n          if (this.auth.checkout) this.onLeaveConfirm()\n        } else {\n          if (this.canEntry) this.onEntry()\n        }\n      }\n    },\n    init() {\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.proof = get(res.info.proof, 'proof_type', -1)\n        this.temporary_cabinet = get(this.temporaryCabinet, 'id', -1)\n\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n        this.isCheckinCourse = res.info.is_checkin_course\n\n        // 获取会员入场凭证列表\n        if (!this.isEntry) {\n          this.entranceService\n            .getEntranceOptionList(this.member_id)\n            .subscribe(res => {\n              let proofs = this.entranceOptionList.filter(\n                option => option.is_able\n              )\n              if (proofs.length === 1 && proofs[0]['id'] === 0) {\n                this.proof = -1\n              } else {\n                this.proof = proofs.length\n                  ? proofs[0]['id']\n                  : this.entranceOptionList[0]['id']\n              }\n            })\n        }\n        // 获取会员储物柜列表\n        this.entranceService.getCabinetList(this.member_id).subscribe()\n      })\n    },\n    // 删除标签\n    handleRemoveTag(tag) {\n      this.entranceService\n        .getMemberLabelDelete({ user_id: this.member_id, tag_id: tag.id })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 获取会员详情\n    handleGetMemberInfo() {\n      console.log('handleGetMemberInfo')\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.proof = get(res.info.proof, 'proof_type', -1)\n        this.temporary_cabinet = get(this.temporaryCabinet, 'id', -1)\n        this.isCheckinCourse = res.info.isCheckinCourse\n\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n\n        if (!this.isEntry && (!this.proof || this.proof === -1)) {\n          let proofs = this.entranceOptionList.filter(option => option.is_able)\n          this.proof = proofs.length\n            ? proofs[0]['id']\n            : this.entranceOptionList[0]['id']\n        }\n      })\n    },\n    // 头像变更\n    handlePhotoChange(list) {\n      this.entranceService\n        .editFace(this.member_id, {\n          image_face: list[0]\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 物理卡号变更\n    handleRfidChange(rfid) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num:\n            typeof this.memberInfo.card_num === 'string'\n              ? this.memberInfo.card_num.trim()\n              : this.memberInfo.card_num,\n          rfid: typeof rfid === 'string' ? rfid.trim() : rfid // 物理ID\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 实体卡号变更\n    handleCardNumChange(card_num) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num: typeof card_num === 'string' ? card_num.trim() : card_num,\n          rfid:\n            typeof this.memberInfo.rfid === 'string'\n              ? this.memberInfo.rfid.trim()\n              : this.memberInfo.rfid // 实体卡号\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 销售变更\n    handleEditSeller(seller_id) {\n      this.entranceService\n        .editSeller({\n          member_id: +this.member_id,\n          seller_id: seller_id === -1 ? 0 : seller_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 教练变更\n    handleEditCoach(coach_id) {\n      this.entranceService\n        .editCoach({\n          member_id: +this.member_id,\n          coach_id: coach_id === -1 ? 0 : coach_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 备注变更\n    handleRemarkChange(remark) {\n      this.entranceService\n        .updateMemberEdit(+this.member_id, {\n          remark\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 修改编辑状态\n    handleChangeEditStatus(val) {\n      this.isAnyEdit = val\n    },\n    // 入场会员修改储物柜\n    handleEditCabinet(cabinet_id) {\n      this.entranceService\n        .editEntranceCabinet({\n          member_id: +this.member_id,\n          cabinet_id: cabinet_id === -1 ? 0 : +cabinet_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 入场\n    onEntry() {\n      let cabinet_id =\n        this.temporary_cabinet === -1 ? undefined : +this.temporary_cabinet\n      let proof_type =\n        this.entranceOptionList.length > 0 &&\n        this.entranceOptionList.filter(i => i.id === this.proof)[0].proof_type\n      let proof_value = +this.proof\n      let seller_id = this.seller === -1 ? undefined : +this.seller\n      let coach_id = this.coach === -1 ? undefined : +this.coach\n      let member_id = +this.member_id\n      let is_checkin_course = this.isCheckinCourse\n      this.entranceService\n        .setEntrance({\n          member_id,\n          cabinet_id,\n          proof_type,\n          proof_value,\n          seller_id,\n          coach_id,\n          is_checkin_course\n        })\n        .subscribe(res => {\n          this.show = false\n          this.messageService.success({ content: '入场成功' })\n          this.$emit('done')\n        })\n    },\n    // 离场之前的确认\n    onLeaveConfirm() {\n      console.log('entranceService', this.entranceService)\n      this.entranceService.getCabinetInfo(this.member_id).subscribe(res => {\n        if (res.info.is_smart) {\n          this.$error({\n            title: `当前会员有储物柜「${res.info.cabinet_area_name}」「${res.info.serial_num}」尚未归还，请先归还！`,\n            okText: '知道了'\n          })\n        } else {\n          this.onLeave()\n        }\n      })\n    },\n    // 离场\n    onLeave() {\n      this.entranceService.setEntranceLeave(this.member_id).subscribe(res => {\n        this.show = false\n        this.messageService.success({ content: '离场成功' })\n        this.$emit('done')\n      })\n    },\n    handleClose() {\n      this.show = false\n      this.$emit('done')\n    }\n  }\n}\n</script>\n"]}]}