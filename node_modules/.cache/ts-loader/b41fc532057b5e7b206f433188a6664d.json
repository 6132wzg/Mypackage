{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/schedule/personal/service#/schedule.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/schedule/personal/service#/schedule.service.ts","mtime":1600926556403},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { PersonalScheduleListQuery, AddScheduleInBatchInput } from '@/api/v1/schedule/personal/schedule';\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { PersonalScheduleApi } from '@/api/v1/schedule/personal/schedule';\nimport { MessageService } from '@/services/message.service';\nimport moment from 'moment';\n\nvar PersonalScheduleScheduleService = /*#__PURE__*/function () {\n  function PersonalScheduleScheduleService(scheduleApi, msg) {\n    _classCallCheck(this, PersonalScheduleScheduleService);\n\n    this.scheduleApi = scheduleApi;\n    this.msg = msg;\n    this.scheduleTeamCourseList$ = new State([]);\n    this.scheduleTable$ = new State([]);\n    this.refresh$ = new State(0);\n    this.loading$ = new State({});\n  }\n\n  _createClass(PersonalScheduleScheduleService, [{\n    key: \"SET_SCHEDULE_TEAM_COURSE_LIST\",\n    value: function SET_SCHEDULE_TEAM_COURSE_LIST() {\n      var resList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _list = resList.map(function (item) {\n        var end_date = '';\n\n        if (moment(\"\".concat(item.start_date, \" \").concat(item.start_time)).valueOf() >= moment(\"\".concat(item.start_date, \" \").concat(item.end_time)).valueOf()) {\n          item.plusOne = '+1';\n          end_date = moment(moment(\"\".concat(item.start_date, \" \").concat(item.start_time)).valueOf() + 24 * 60 * 60 * 1000).format('YYYY-MM-DD').valueOf();\n        } else {\n          end_date = item.start_date;\n        }\n\n        return {\n          // add new event data\n          title: item.course_name,\n          groupId: JSON.stringify(item),\n          id: item.id,\n          start: \"\".concat(item.start_date, \" \").concat(item.start_time),\n          end: \"\".concat(end_date, \" \").concat(item.end_time)\n        };\n      });\n\n      this.scheduleTeamCourseList$.commit(function () {\n        return _list;\n      });\n    }\n    /**\n     *\n     * @param params\n     * 获取团体课排期列表\n     */\n\n  }, {\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      return this.scheduleApi.getList(query).pipe(tap(function (res) {\n        _this.SET_SCHEDULE_TEAM_COURSE_LIST(res.list);\n      }));\n    }\n    /**\n     *\n     * @param params\n     * 获取团体课排期表格\n     */\n\n  }, {\n    key: \"getTable\",\n    value: function getTable(query) {\n      var _this2 = this;\n\n      return this.scheduleApi.getTable(query).pipe(tap(function (res) {\n        _this2.scheduleTable$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n    /**\n     *\n     * @param params\n     * 新增团体课排期\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(params) {\n      var _this3 = this;\n\n      return this.scheduleApi.add(params).pipe(tap(function (res) {\n        _this3.msg.success({\n          content: '新增成功'\n        });\n      }));\n    }\n  }, {\n    key: \"addScheduleInBatch\",\n    value: function addScheduleInBatch(params) {\n      var _this4 = this;\n\n      return this.scheduleApi.addScheduleInBatch(params).pipe(switchMap(function (state) {\n        return _this4.getList({});\n      }), tap(function (res) {\n        _this4.msg.success({\n          content: '批量新增成功'\n        });\n      }));\n    }\n    /**\n     *\n     * @param params\n     * 编辑课程排期\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(params) {\n      var _this5 = this;\n\n      return this.scheduleApi.update(params).pipe(tap(function (res) {\n        _this5.msg.success({\n          content: '编辑成功'\n        });\n      }));\n    }\n  }, {\n    key: \"delInBatch\",\n    value: function delInBatch(ids) {\n      var _this6 = this;\n\n      return this.scheduleApi.delInBatch({\n        schedule_ids: ids\n      }).pipe(tap(function (res) {\n        _this6.msg.success({\n          content: '删除成功'\n        });\n      }));\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(id, params) {\n      var _this7 = this;\n\n      return this.scheduleApi.copy(id, params).pipe(tap(function (res) {\n        _this7.msg.success({\n          content: '复制成功'\n        });\n      }));\n    }\n    /**\n     *\n     * @param params\n     * 编辑课程排期回显\n     */\n\n  }, {\n    key: \"getUpdateInfo\",\n    value: function getUpdateInfo(id) {\n      return this.scheduleApi.getUpdateInfo(id);\n    }\n  }]);\n\n  return PersonalScheduleScheduleService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof PersonalScheduleListQuery !== \"undefined\" && PersonalScheduleListQuery) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], PersonalScheduleScheduleService.prototype, \"getList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_b = typeof AddScheduleInBatchInput !== \"undefined\" && AddScheduleInBatchInput) === \"function\" ? _b : Object]), __metadata(\"design:returntype\", void 0)], PersonalScheduleScheduleService.prototype, \"addScheduleInBatch\", null);\n\nPersonalScheduleScheduleService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_c = typeof PersonalScheduleApi !== \"undefined\" && PersonalScheduleApi) === \"function\" ? _c : Object, typeof (_d = typeof MessageService !== \"undefined\" && MessageService) === \"function\" ? _d : Object])], PersonalScheduleScheduleService);\nexport { PersonalScheduleScheduleService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/schedule/personal/service#/schedule.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PersonalScheduleListQuery,\n  UpdateScheduleInput,\n  AddScheduleInBatchInput,\n  AddScheduleInput,\n  CopyInput\n} from '@/api/v1/schedule/personal/schedule'\nimport { Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap, switchMap } from 'rxjs/operators'\nimport { PersonalScheduleApi } from '@/api/v1/schedule/personal/schedule'\nimport { MessageService } from '@/services/message.service'\nimport moment from 'moment'\n\n@Injectable()\nexport class PersonalScheduleScheduleService {\n  scheduleTeamCourseList$ = new State([])\n  scheduleTable$ = new State([])\n  refresh$ = new State(0)\n  loading$ = new State({})\n\n  constructor(\n    private scheduleApi: PersonalScheduleApi,\n    private msg: MessageService\n  ) {}\n  SET_SCHEDULE_TEAM_COURSE_LIST(resList: any[] = []) {\n    const _list = resList.map((item: any) => {\n      let end_date = ''\n      if (\n        moment(`${item.start_date} ${item.start_time}`).valueOf() >=\n        moment(`${item.start_date} ${item.end_time}`).valueOf()\n      ) {\n        item.plusOne = '+1'\n        end_date = moment(\n          moment(`${item.start_date} ${item.start_time}`).valueOf() +\n            24 * 60 * 60 * 1000\n        )\n          .format('YYYY-MM-DD')\n          .valueOf()\n      } else {\n        end_date = item.start_date\n      }\n      return {\n        // add new event data\n        title: item.course_name,\n        groupId: JSON.stringify(item),\n        id: item.id,\n        start: `${item.start_date} ${item.start_time}`,\n        end: `${end_date} ${item.end_time}`\n      }\n    })\n\n    this.scheduleTeamCourseList$.commit(() => _list)\n  }\n  /**\n   *\n   * @param params\n   * 获取团体课排期列表\n   */\n  @Effect()\n  getList(query: PersonalScheduleListQuery) {\n    return this.scheduleApi.getList(query).pipe(\n      tap(res => {\n        this.SET_SCHEDULE_TEAM_COURSE_LIST(res.list)\n      })\n    )\n  }\n  /**\n   *\n   * @param params\n   * 获取团体课排期表格\n   */\n  getTable(query: PersonalScheduleListQuery) {\n    return this.scheduleApi.getTable(query).pipe(\n      tap(res => {\n        this.scheduleTable$.commit(() => res.list)\n      })\n    )\n  }\n  /**\n   *\n   * @param params\n   * 新增团体课排期\n   */\n  add(params: AddScheduleInput) {\n    return this.scheduleApi.add(params).pipe(\n      tap(res => {\n        this.msg.success({ content: '新增成功' })\n      })\n    )\n  }\n  @Effect()\n  addScheduleInBatch(params: AddScheduleInBatchInput) {\n    return this.scheduleApi.addScheduleInBatch(params).pipe(\n      switchMap(state => {\n        return this.getList({})\n      }),\n      tap(res => {\n        this.msg.success({ content: '批量新增成功' })\n      })\n    )\n  }\n  /**\n   *\n   * @param params\n   * 编辑课程排期\n   */\n  update(params: UpdateScheduleInput) {\n    return this.scheduleApi.update(params).pipe(\n      tap(res => {\n        this.msg.success({ content: '编辑成功' })\n      })\n    )\n  }\n  delInBatch(ids: any) {\n    return this.scheduleApi.delInBatch({ schedule_ids: ids }).pipe(\n      tap(res => {\n        this.msg.success({ content: '删除成功' })\n      })\n    )\n  }\n  copy(id: string, params: any) {\n    return this.scheduleApi.copy(id, params).pipe(\n      tap(res => {\n        this.msg.success({ content: '复制成功' })\n      })\n    )\n  }\n  /**\n   *\n   * @param params\n   * 编辑课程排期回显\n   */\n  getUpdateInfo(id: string) {\n    return this.scheduleApi.getUpdateInfo(id)\n  }\n}\n"],"sourceRoot":""}]}