{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/node_modules/v-viewer/src/component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/v-viewer/src/component.vue","mtime":1591062561063},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport Viewer from 'viewerjs'\n\nexport default {\n  props: {\n    images: {\n      type: Array\n    },\n    rebuild: {\n      type: Boolean,\n      default: false\n    },\n    trigger: {},\n    options: {\n      type: Object\n    }\n  },\n\n  data () {\n    return {\n    }\n  },\n\n  computed: {\n  },\n\n  methods: {\n    onChange () {\n      if (this.rebuild) {\n        this.rebuildViewer()\n      } else {\n        this.updateViewer()\n      }\n    },\n    rebuildViewer () {\n      this.destroyViewer()\n      this.createViewer()\n    },\n    updateViewer () {\n      if (this.$viewer) {\n        this.$viewer.update()\n        this.$emit('inited', this.$viewer)\n      } else {\n        this.createViewer()\n      }\n    },\n    destroyViewer () {\n      this.$viewer && this.$viewer.destroy()\n    },\n    createViewer () {\n      this.$viewer = new Viewer(this.$el, this.options)\n      this.$emit('inited', this.$viewer)\n    }\n  },\n\n  watch: {\n    images () {\n      this.$nextTick(() => {\n        this.onChange()\n      })\n    },\n    trigger: {\n      handler () {\n        this.$nextTick(() => {\n          this.onChange()\n        })\n      },\n      deep: true\n    },\n    options: {\n      handler () {\n        this.$nextTick(() => {\n          this.rebuildViewer()\n        })\n      },\n      deep: true\n    }\n  },\n\n  mounted () {\n    this.createViewer()\n  },\n\n  destroyed () {\n    this.destroyViewer()\n  }\n}\n",null]}