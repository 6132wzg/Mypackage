{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/store/choose-sku.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/store/choose-sku.vue","mtime":1591147717256},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'modalStoreChooseSku',\n  props: {\n    productData: {\n      type: Object\n    }\n  },\n  data() {\n    return {\n      show: false,\n      productInfo: {\n        product_id: '', // 商品id\n        product_name: '商品名', // 商品名称\n        rule_name: '', // 规格信息\n        unit_price: 0, // 单价\n        stock_amount: 0, // 库存\n        nums: 1,\n        sku_id: '' // 规格id\n      }, // 规格选择完的商品信息\n      specItemId: [] // 规格值id\n    }\n  },\n  bem: {\n    basic: 'modals-choose-sku',\n    info: 'good-message'\n  },\n  methods: {\n    onSubmit() {\n      this.$emit('success', this.productInfo)\n      this.show = false\n    },\n    // 对后台返回的数据转换\n    changeData() {\n      this.productData.all_spec.forEach(element => {\n        let items = cloneDeep(element.spec_item_arr)\n        element.spec_item_arr = []\n        items.forEach(val => {\n          element.spec_item_arr.push({\n            value: val.spec_item_id,\n            label: val.spec_item_name\n          })\n        })\n        element.itemVal = items[0].spec_item_id\n        this.specItemId.push(element.itemVal)\n      })\n      this.productData.all_spec = cloneDeep(this.productData.all_spec)\n      this.outPutProductInfo()\n    },\n    // 输出选择规格后对应的信息\n    outPutProductInfo() {\n      for (let i = 0; i < this.productData.product_sku.length; i++) {\n        let values = this.productData.product_sku[i]\n        let skuId1 = ''\n        let skuInfo = ''\n        values.spec_arr.forEach(val => {\n          skuId1 = skuId1 + val.spec_item_id\n          skuInfo = skuInfo + val.spec_item_name + ' '\n        })\n        let skuId2 = this.specItemId.join('')\n        if (skuId1 === skuId2) {\n          this.productInfo.stock_amount = values.stock_amount || 0\n          this.productInfo.rule_name = skuInfo\n          this.productInfo.unit_price = values.selling_price\n          this.productInfo.sku_id = values.sku_id\n          return\n        }\n      }\n    },\n    // 规格改变后获取对应数据\n    changeSku() {\n      this.specItemId = []\n      this.productData.all_spec.forEach(item => {\n        this.specItemId.push(item.itemVal)\n      })\n      this.outPutProductInfo()\n    }\n  },\n  created() {\n    this.productInfo.product_name = this.productData.product_name\n    this.changeData()\n  }\n}\n",{"version":3,"sources":["choose-sku.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"choose-sku.vue","sourceRoot":"src/views/biz-modals/store","sourcesContent":["<template>\n  <st-modal title=\"规格选择\" @ok=\"onSubmit\" v-model=\"show\" width=\"540px\">\n    <div :class=\"basic()\">\n      <div :class=\"info()\">\n        <img :src=\"productData.product_images[0].image_url\" alt=\"\" />\n        <div :class=\"info('content')\">\n          <span :class=\"info('price')\" class=\"font-number\">\n            &yen;{{ productInfo.unit_price }}\n          </span>\n          <span :class=\"info('amount')\">\n            库存{{ productInfo.stock_amount }}件\n          </span>\n          <span :class=\"info('rule')\">已选：{{ productInfo.rule_name }}</span>\n        </div>\n      </div>\n      <div\n        :class=\"basic('good-item')\"\n        v-for=\"(item, index) in this.productData.all_spec\"\n        :key=\"index\"\n      >\n        <span :class=\"basic('label')\">{{ item.spec_name }}</span>\n        <a-radio-group\n          :options=\"item.spec_item_arr\"\n          v-model=\"item.itemVal\"\n          @change=\"changeSku\"\n        />\n      </div>\n    </div>\n  </st-modal>\n</template>\n<script>\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'modalStoreChooseSku',\n  props: {\n    productData: {\n      type: Object\n    }\n  },\n  data() {\n    return {\n      show: false,\n      productInfo: {\n        product_id: '', // 商品id\n        product_name: '商品名', // 商品名称\n        rule_name: '', // 规格信息\n        unit_price: 0, // 单价\n        stock_amount: 0, // 库存\n        nums: 1,\n        sku_id: '' // 规格id\n      }, // 规格选择完的商品信息\n      specItemId: [] // 规格值id\n    }\n  },\n  bem: {\n    basic: 'modals-choose-sku',\n    info: 'good-message'\n  },\n  methods: {\n    onSubmit() {\n      this.$emit('success', this.productInfo)\n      this.show = false\n    },\n    // 对后台返回的数据转换\n    changeData() {\n      this.productData.all_spec.forEach(element => {\n        let items = cloneDeep(element.spec_item_arr)\n        element.spec_item_arr = []\n        items.forEach(val => {\n          element.spec_item_arr.push({\n            value: val.spec_item_id,\n            label: val.spec_item_name\n          })\n        })\n        element.itemVal = items[0].spec_item_id\n        this.specItemId.push(element.itemVal)\n      })\n      this.productData.all_spec = cloneDeep(this.productData.all_spec)\n      this.outPutProductInfo()\n    },\n    // 输出选择规格后对应的信息\n    outPutProductInfo() {\n      for (let i = 0; i < this.productData.product_sku.length; i++) {\n        let values = this.productData.product_sku[i]\n        let skuId1 = ''\n        let skuInfo = ''\n        values.spec_arr.forEach(val => {\n          skuId1 = skuId1 + val.spec_item_id\n          skuInfo = skuInfo + val.spec_item_name + ' '\n        })\n        let skuId2 = this.specItemId.join('')\n        if (skuId1 === skuId2) {\n          this.productInfo.stock_amount = values.stock_amount || 0\n          this.productInfo.rule_name = skuInfo\n          this.productInfo.unit_price = values.selling_price\n          this.productInfo.sku_id = values.sku_id\n          return\n        }\n      }\n    },\n    // 规格改变后获取对应数据\n    changeSku() {\n      this.specItemId = []\n      this.productData.all_spec.forEach(item => {\n        this.specItemId.push(item.itemVal)\n      })\n      this.outPutProductInfo()\n    }\n  },\n  created() {\n    this.productInfo.product_name = this.productData.product_name\n    this.changeData()\n  }\n}\n</script>\n"]}]}