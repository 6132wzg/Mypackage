{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/set-time.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/set-time.vue","mtime":1591147717234},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { SetTimeService } from \"./set-time.service\";\nimport { cloneDeep } from 'lodash-es';\nimport { ruleOptions } from \"./set-time.config\";\nexport default {\n  name: 'ModalSoldCardSettime',\n  bem: {\n    settime: 'modal-sold-card-settime'\n  },\n  serviceProviders: function serviceProviders() {\n    return [SetTimeService];\n  },\n  serviceInject: function serviceInject() {\n    return {\n      setTimeService: SetTimeService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      info: this.setTimeService.info$,\n      loading: this.setTimeService.loading$\n    };\n  },\n  props: ['id'],\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false,\n      endTime: '-',\n      description: ''\n    };\n  },\n  filters: {\n    timeFormatFilter: function timeFormatFilter(data) {\n      return data ? moment(data).format('YYYY-MM-DD HH:mm') : '-';\n    }\n  },\n  computed: {\n    isFamilyCard: function isFamilyCard() {\n      return this.info.card_number_type === 2;\n    }\n  },\n  methods: {\n    disabledEndDate: function disabledEndDate(endValue) {\n      return endValue.valueOf() < this.info.server_time * 1000 || endValue.valueOf() > moment(this.info.end_time).valueOf();\n    },\n    disabledStartDate: function disabledStartDate(startValue) {\n      return startValue.valueOf() < this.info.server_time * 1000;\n    },\n    onStartTimeChange: function onStartTimeChange(data) {\n      var start = cloneDeep(data);\n      this.endTime = start.add(this.info.time_limit_init, 's').format('YYYY-MM-DD HH:mm');\n    },\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.form.validate().then(function (values) {\n        var data = values.end_time || values.start_time;\n\n        _this.setTimeService.setTime({\n          time: data.format('YYYY-MM-DD HH:mm'),\n          description: _this.description\n        }, _this.id).subscribe(function (res) {\n          _this.show = false;\n\n          _this.$emit('success');\n        });\n      });\n    }\n  },\n  created: function created() {\n    this.setTimeService.getInfo(this.id).subscribe();\n  }\n};",null]}