{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/cabinet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/cabinet.vue","mtime":1596792848077},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MessageService } from '@/services/message.service';\nimport { CabinetService } from \"./cabinet.service\";\nimport { CabinetListService } from \"./components#/cabinet-list.service\";\nimport { CabinetAreaService as AreaService } from \"../setting/components#/area.service\";\nimport CabinetList from \"./components#/cabinet-list\";\nimport Draggable from 'vuedraggable';\nimport { CABINET, CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet';\nimport { find } from 'lodash-es';\nexport default {\n  bem: {\n    b: 'page-setting-cabinet'\n  },\n  modals: {},\n  serviceInject: function serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: CabinetService,\n      cabinetListService: CabinetListService,\n      areaService: AreaService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list: this.areaService.list$,\n      cabinetList: this.cabinetListService.list$,\n      auth: this.cabinetService.auth$,\n      loading: this.cabinetService.loading$\n    };\n  },\n  data: function data() {\n    return {\n      CABINET: CABINET,\n      CABINET_BUSINESS_TYPE: CABINET_BUSINESS_TYPE,\n      isActive: '',\n      editId: 0,\n      isShowAddAreaBtn: false,\n      checked: [],\n      isOperationInBatch: false\n    };\n  },\n  components: {\n    CabinetList: CabinetList,\n    Draggable: Draggable\n  },\n  computed: {\n    type: function type() {\n      return this.$searchQuery.type || 'temporary';\n    },\n    defaultActiveKey: function defaultActiveKey() {\n      return +this.$searchQuery.id || 0;\n    },\n    currentArea: function currentArea() {\n      var list = this.list;\n      var id = this.$searchQuery.id;\n      var currentArea = {};\n      list.forEach(function (item) {\n        if (item.id === +id) {\n          currentArea = item;\n        }\n      });\n      return currentArea;\n    },\n    areaName: function areaName() {\n      return this.currentArea.area_name;\n    },\n    cabinetType: function cabinetType() {\n      return this.$searchQuery.type === 'long-term';\n    }\n  },\n  created: function created() {\n    this.initQueryId();\n  },\n  methods: {\n    initQueryId: function initQueryId() {\n      var list = this.list;\n      var id = list[0] && list[0].id || 0;\n      this.$router.replace({\n        query: _objectSpread({}, this.$searchQuery, {\n          id: id\n        })\n      });\n    },\n    onAreaListChange: function onAreaListChange(type) {\n      var _this = this;\n\n      this.editId = 0;\n      this.isShowAddAreaBtn = false;\n\n      if (type === 'cancel') {\n        return;\n      }\n\n      this.areaService.getList().subscribe(function () {\n        if (_this.list.length <= 1) {\n          _this.initQueryId();\n        }\n      });\n    },\n    onAreaChange: function onAreaChange(id) {\n      this.$router.push({\n        query: _objectSpread({}, this.$searchQuery, {\n          id: id\n        })\n      });\n    },\n    onAreaSortChange: function onAreaSortChange(e) {\n      this.cabinetService.sort(this.list).subscribe();\n    },\n    onCabinetTabChange: function onCabinetTabChange(key) {\n      this.$router.push({\n        query: _objectSpread({}, this.$searchQuery, {\n          type: key\n        })\n      });\n      this.checked = [];\n      this.isOperationInBatch = false;\n    },\n    onCabinetListChange: function onCabinetListChange() {\n      this.$router.push({\n        query: this.$searchQuery\n      });\n      this.onAreaListChange();\n    },\n    onCabinetSelectChange: function onCabinetSelectChange(checked) {\n      this.checked = checked;\n    },\n    changeOperationMode: function changeOperationMode() {\n      this.isOperationInBatch = !this.isOperationInBatch;\n    },\n    clearCabinet: function clearCabinet() {\n      var _this2 = this;\n\n      if (this.checked.length <= 0) {\n        this.messageService.error({\n          content: '请选择储物柜'\n        });\n        return;\n      }\n\n      if (this.getSmartOfflineNum().length > 0) {\n        this.messageService.error({\n          content: '已离线的储物柜无法清柜，请重新选择'\n        });\n        return;\n      }\n\n      this.$confirm({\n        title: \"\\u5F53\\u524D\\u9009\\u4E2D\\u67DC\\u5B50\\u4E2D\\u5171\\u6709\".concat(this.getUsingCabinetNum(), \"\\u4E2A\\u67DC\\u5B50\\u5728\\u4F7F\\u7528\\u4E2D\\uFF0C\\u8BF7\\u95EE\\u786E\\u8BA4\\u8FDB\\u884C\\u6E05\\u67DC\\u64CD\\u4F5C\\uFF1F\"),\n        onOk: function onOk() {\n          _this2.cabinetService.clearCabinet({\n            cabinet_ids: _this2.checked\n          }).subscribe(function (res) {\n            _this2.messageService.success({\n              content: '批量清柜成功!'\n            });\n\n            _this2.changeOperationMode();\n\n            _this2.$router.reload();\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    getSmartOfflineNum: function getSmartOfflineNum() {\n      var _this3 = this;\n\n      var checkedCabinets = this.checked.map(function (id) {\n        return find(_this3.cabinetList, {\n          id: id\n        });\n      });\n      var checkedOfflineCabinets = checkedCabinets.filter(function (item) {\n        return item.is_smart && !item.is_online;\n      });\n      return checkedOfflineCabinets.length;\n    },\n    getUsingCabinetNum: function getUsingCabinetNum() {\n      var _this4 = this;\n\n      var checkedCabinets = this.checked.map(function (id) {\n        return find(_this4.cabinetList, {\n          id: id\n        });\n      });\n      var checkedUsingCabinets = checkedCabinets.filter(function (item) {\n        return item.cabinet_business_type === _this4.CABINET_BUSINESS_TYPE.USING;\n      });\n      return checkedUsingCabinets.length;\n    }\n  }\n};",null]}