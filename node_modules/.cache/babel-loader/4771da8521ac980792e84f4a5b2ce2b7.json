{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/utils/walk-tree.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/utils/walk-tree.js","mtime":1591147717094},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n\n/**\n * 深度遍历树结构\n */\nexport var walkTree = function walkTree(tree, fn) {\n  var walk = function walk(nodes) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (Array.isArray(nodes)) {\n      nodes.forEach(function (node) {\n        var hasChildren = node.children && node.children.length;\n        var needContinue = fn(node, {\n          depth: depth,\n          isLeaf: !hasChildren,\n          isTop: depth === 0\n        });\n\n        if (needContinue === false) {\n          return;\n        }\n\n        if (hasChildren) {\n          walk(node.children, depth + 1);\n        }\n      });\n    }\n  };\n\n  walk(tree);\n};",null]}