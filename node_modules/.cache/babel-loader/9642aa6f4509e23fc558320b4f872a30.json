{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/image-cropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/image-cropper.vue","mtime":1591147717181},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Cropper from 'cropperjs';\nimport { AppConfig } from '@/constants/config';\nvar cropper;\nexport default {\n  name: 'StModalCropper',\n  serviceInject: function serviceInject() {\n    return {\n      appConfig: AppConfig\n    };\n  },\n  data: function data() {\n    return {\n      show: false,\n      filename: ''\n    };\n  },\n  props: {\n    title: {\n      type: String,\n      default: '图片裁剪'\n    },\n    file: {\n      type: null,\n      required: true\n    },\n    cropper: {\n      type: Object,\n      default: function _default() {\n        return {\n          aspectRatio: 16 / 9\n        };\n      }\n    }\n  },\n  computed: {\n    _title: function _title() {\n      return this.title;\n    },\n    _imageUrl: function _imageUrl() {\n      return URL.createObjectURL(this.file);\n    },\n    _cropperOptions: function _cropperOptions() {\n      return Object.assign(this.appConfig.CROPPER_DEFAULT_CONFIG, this.cropper);\n    }\n  },\n  watch: {\n    image: {\n      deep: true,\n      handler: function handler(newVal, oldVal) {\n        console.log(newVal);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var imageEl = document.getElementById('modal_cropper_image');\n      cropper = new Cropper(imageEl, this._cropperOptions);\n    },\n    handleCancel: function handleCancel() {\n      this.$emit('cancel');\n    },\n    handleOk: function handleOk() {\n      var _this = this;\n\n      cropper.getCroppedCanvas().toBlob(function (blob) {\n        _this.show = false;\n\n        _this.$emit('ok', {\n          file: blob\n        });\n      });\n    }\n  }\n};",null]}