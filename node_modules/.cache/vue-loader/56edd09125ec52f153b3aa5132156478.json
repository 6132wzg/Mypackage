{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/info-edit#/info-edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/info-edit#/info-edit.vue","mtime":1600926556045},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: '',\n\n  bem: {},\n\n  components: {},\n\n  props: {\n    value: {\n      type: [String, Number],\n      default: ''\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    label: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    labelWidth: {\n      type: String,\n      default: '70'\n    },\n    type: {\n      type: String,\n      default: 'input'\n    },\n    invisibleEdit: {\n      type: Boolean,\n      default: false\n    },\n    canEdit: {\n      type: Boolean,\n      deafult: true\n    },\n    placeholder: {\n      type: String,\n      deafult: '请输入'\n    },\n    editBgColor: {\n      type: String,\n      default: '#fff'\n    }\n  },\n\n  data() {\n    return {\n      isEdit: false,\n      sValue: ''\n    }\n  },\n\n  watch: {\n    isEdit(v) {\n      console.log('v', v)\n      this.$emit('changeEditStatus', v)\n    },\n    value: {\n      handler(v) {\n        console.log('v', v)\n        this.sValue = v\n      },\n      immediate: true\n    }\n  },\n\n  async: {},\n\n  mounted() {},\n\n  methods: {\n    handleOpenEdit() {\n      if (\n        this.canEdit &&\n        ((!this.isEdit && !this.invisibleEdit) || this.isEdit)\n      ) {\n        this.isEdit = true\n        this.sValue = this.value\n        console.log('value', this.value)\n      }\n    },\n    handleCancel() {\n      this.isEdit = false\n      this.sValue = ''\n      console.log('handleCancel')\n    },\n    handleConfirm(value) {\n      this.isEdit = false\n      this.$emit('confirm', this.sValue)\n      this.sValue = ''\n    }\n  }\n}\n",{"version":3,"sources":["info-edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"info-edit.vue","sourceRoot":"src/views/components/info-edit#","sourcesContent":["<template>\n  <div\n    class=\"info-edit\"\n    :class=\"{ isEdit: isEdit }\"\n    @click.stop=\"handleOpenEdit\"\n  >\n    <div class=\"info-edit__wrapper\">\n      <div class=\"info-edit__label\" :style=\"'min-width:' + labelWidth + 'px'\">\n        {{ label }}\n      </div>\n      <div class=\"info-edit__content\" v-if=\"!isEdit\">\n        <slot />\n      </div>\n      <div class=\"info-edit__content\" v-else>\n        <template v-if=\"type === 'input'\">\n          <a-input\n            :placeholder=\"placeholder\"\n            maxlength=\"30\"\n            v-model=\"sValue\"\n            slot=\"edit\"\n            style=\"width: 140px\"\n          ></a-input>\n        </template>\n        <template v-else-if=\"type === 'textarea'\">\n          <a-textarea\n            v-model=\"sValue\"\n            :maxLength=\"200\"\n            :autosize=\"{ minRows: 1, maxRows: 3 }\"\n            slot=\"edit\"\n            style=\"minWidth: 400px\"\n            :placeholder=\"placeholder\"\n          ></a-textarea>\n        </template>\n        <template v-else-if=\"type === 'select'\">\n          <a-select\n            v-model=\"sValue\"\n            :placeholder=\"placeholder\"\n            slot=\"edit\"\n            style=\"width: 140px\"\n          >\n            <a-select-option :value=\"-1\">无</a-select-option>\n            <a-select-option\n              v-for=\"item in options\"\n              :value=\"item.id\"\n              :key=\"item.id\"\n            >\n              {{ item.name }}\n            </a-select-option>\n          </a-select>\n        </template>\n        <div class=\"info-edit__buttons\">\n          <st-button\n            class=\"info-edit__button\"\n            type=\"link\"\n            @click.stop=\"handleConfirm\"\n          >\n            确定\n          </st-button>\n          <st-button\n            class=\"info-edit__button\"\n            type=\"link\"\n            @click.stop=\"handleCancel\"\n          >\n            取消\n          </st-button>\n        </div>\n      </div>\n    </div>\n    <!-- 非编辑状态,且全局没有处于编辑状态 -->\n    <div\n      class=\"info-edit__icon\"\n      v-if=\"canEdit && ((!isEdit && !invisibleEdit) || isEdit)\"\n    >\n      <st-icon type=\"edit\"></st-icon>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: '',\n\n  bem: {},\n\n  components: {},\n\n  props: {\n    value: {\n      type: [String, Number],\n      default: ''\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    label: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    labelWidth: {\n      type: String,\n      default: '70'\n    },\n    type: {\n      type: String,\n      default: 'input'\n    },\n    invisibleEdit: {\n      type: Boolean,\n      default: false\n    },\n    canEdit: {\n      type: Boolean,\n      deafult: true\n    },\n    placeholder: {\n      type: String,\n      deafult: '请输入'\n    },\n    editBgColor: {\n      type: String,\n      default: '#fff'\n    }\n  },\n\n  data() {\n    return {\n      isEdit: false,\n      sValue: ''\n    }\n  },\n\n  watch: {\n    isEdit(v) {\n      console.log('v', v)\n      this.$emit('changeEditStatus', v)\n    },\n    value: {\n      handler(v) {\n        console.log('v', v)\n        this.sValue = v\n      },\n      immediate: true\n    }\n  },\n\n  async: {},\n\n  mounted() {},\n\n  methods: {\n    handleOpenEdit() {\n      if (\n        this.canEdit &&\n        ((!this.isEdit && !this.invisibleEdit) || this.isEdit)\n      ) {\n        this.isEdit = true\n        this.sValue = this.value\n        console.log('value', this.value)\n      }\n    },\n    handleCancel() {\n      this.isEdit = false\n      this.sValue = ''\n      console.log('handleCancel')\n    },\n    handleConfirm(value) {\n      this.isEdit = false\n      this.$emit('confirm', this.sValue)\n      this.sValue = ''\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}