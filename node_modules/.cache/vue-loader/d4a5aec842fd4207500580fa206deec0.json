{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/modals/test/sg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/modals/test/sg.vue","mtime":1591147717285},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserService } from '@/services/user.service'\nimport { SgService } from './sg.service'\n\nexport default {\n  serviceProviders() {\n    return [SgService]\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators({\n      name: {\n        rules: [{ required: true, message: '必填' }]\n      }\n    })\n    return {\n      form,\n      decorators,\n      show: false\n    }\n  },\n  serviceInject() {\n    return {\n      sgService: SgService\n    }\n  },\n  rxState() {\n    return {\n      a: this.sgService.a$\n    }\n  },\n  mounted() {\n    this.form.setFieldsValue({\n      name: '333'\n    })\n  },\n  methods: {\n    onClick() {\n      this.$emit('click')\n    },\n    onOk() {\n      this.$emit('ok')\n      this.show = false\n    }\n  }\n}\n",{"version":3,"sources":["sg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sg.vue","sourceRoot":"src/views/modals/test","sourcesContent":["<template>\n  <st-modal title=\"modal-sg\" v-model=\"show\" @ok=\"onOk\">\n    this is test modal\n    {{ a }}\n\n    <st-form :form=\"form\">\n      <st-form-item>\n        <a-input v-decorator=\"decorators.name\" placeholder=\"name\"></a-input>\n      </st-form-item>\n    </st-form>\n  </st-modal>\n</template>\n\n<script>\nimport { UserService } from '@/services/user.service'\nimport { SgService } from './sg.service'\n\nexport default {\n  serviceProviders() {\n    return [SgService]\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators({\n      name: {\n        rules: [{ required: true, message: '必填' }]\n      }\n    })\n    return {\n      form,\n      decorators,\n      show: false\n    }\n  },\n  serviceInject() {\n    return {\n      sgService: SgService\n    }\n  },\n  rxState() {\n    return {\n      a: this.sgService.a$\n    }\n  },\n  mounted() {\n    this.form.setFieldsValue({\n      name: '333'\n    })\n  },\n  methods: {\n    onClick() {\n      this.$emit('click')\n    },\n    onOk() {\n      this.$emit('ok')\n      this.show = false\n    }\n  }\n}\n</script>\n"]}]}