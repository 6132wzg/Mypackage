{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/protocol.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/protocol.vue","mtime":1591147717348},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ProtocolService } from './protocol.service'\nimport { MessageService } from '@/services/message.service'\nimport { UserService } from '@/services/user.service'\nimport { ruleOptions } from './protocol.config'\nexport default {\n  bem: {\n    protocol: 'member-protocol'\n  },\n  serviceInject() {\n    return {\n      protocolService: ProtocolService,\n      messageService: MessageService,\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      protocolInfo: this.protocolService.protocolInfo$,\n      loading: this.protocolService.loading$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      isEdit: false,\n      protocolStatus: {\n        1: '开启',\n        2: '关闭'\n      }\n    }\n  },\n  mounted() {\n    if (this.isInit) {\n      this.onEdit()\n    }\n  },\n  computed: {\n    isInit() {\n      return !Object.keys(this.protocolInfo).length\n    }\n  },\n  methods: {\n    onEdit() {\n      this.isEdit = true\n      setTimeout(() => {\n        this.form.setFieldsValue({\n          protocol_status: this.protocolInfo.protocol_status,\n          title: this.protocolInfo.title,\n          content: this.protocolInfo.content\n        })\n      })\n    },\n    onSave() {\n      this.form.validate().then(values => {\n        this.protocolService.update(values).subscribe(() => {\n          this.messageService.success({\n            content: '编辑成功'\n          })\n          this.$router.reload()\n          this.isEdit = false\n        })\n      })\n    },\n    onCancel() {\n      this.isEdit = false\n    }\n  }\n}\n",{"version":3,"sources":["protocol.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"protocol.vue","sourceRoot":"src/views/pages/brand/setting/general","sourcesContent":["<template>\n  <st-panel :class=\"protocol()\">\n    <a-row class=\"mg-b16\">\n      <a-col :span=\"12\">\n        <st-t2>会员在线协议</st-t2>\n      </a-col>\n      <a-col v-if=\"!isEdit\" :span=\"12\" class=\"ta-r\">\n        <st-info-action icon=\"edit\" text=\"编辑\" @click=\"onEdit\" />\n      </a-col>\n    </a-row>\n    <st-form :form=\"form\">\n      <st-form-item label=\"在线协议\" :required=\"isEdit\">\n        <a-radio-group v-decorator=\"decorators.protocol_status\" v-if=\"isEdit\">\n          <a-radio :value=\"1\">开启</a-radio>\n          <a-radio :value=\"2\">关闭</a-radio>\n        </a-radio-group>\n        <span v-else>{{ protocolStatus[protocolInfo.protocol_status] }}</span>\n      </st-form-item>\n      <st-form-item label=\"协议标题\" :required=\"isEdit\">\n        <a-input\n          v-if=\"isEdit\"\n          v-decorator=\"decorators.title\"\n          placeholder=\"请输入协议标题，最多显示10个字符\"\n        />\n        <span v-else>{{ protocolInfo.title }}</span>\n      </st-form-item>\n      <st-form-item label=\"协议正文\" :required=\"isEdit\">\n        <st-textarea\n          v-if=\"isEdit\"\n          :autosize=\"{ minRows: 10, maxRows: 20 }\"\n          v-decorator=\"decorators.content\"\n          placeholder=\"请输入协议内容\"\n          maxlength=\"20000\"\n        />\n        <st-container\n          v-else\n          type=\"2\"\n          :class=\"protocol('text-style')\"\n          v-html=\"protocolInfo.content\"\n        ></st-container>\n      </st-form-item>\n    </st-form>\n    <div class=\"mg-t24 ta-c\" v-if=\"isEdit\">\n      <st-button type=\"primary\" @click=\"onSave\" :loading=\"loading.update\">\n        确定\n      </st-button>\n      <st-button class=\"mg-l8\" @click=\"onCancel\" v-if=\"!isInit\">取消</st-button>\n    </div>\n  </st-panel>\n</template>\n<script>\nimport { ProtocolService } from './protocol.service'\nimport { MessageService } from '@/services/message.service'\nimport { UserService } from '@/services/user.service'\nimport { ruleOptions } from './protocol.config'\nexport default {\n  bem: {\n    protocol: 'member-protocol'\n  },\n  serviceInject() {\n    return {\n      protocolService: ProtocolService,\n      messageService: MessageService,\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      protocolInfo: this.protocolService.protocolInfo$,\n      loading: this.protocolService.loading$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      isEdit: false,\n      protocolStatus: {\n        1: '开启',\n        2: '关闭'\n      }\n    }\n  },\n  mounted() {\n    if (this.isInit) {\n      this.onEdit()\n    }\n  },\n  computed: {\n    isInit() {\n      return !Object.keys(this.protocolInfo).length\n    }\n  },\n  methods: {\n    onEdit() {\n      this.isEdit = true\n      setTimeout(() => {\n        this.form.setFieldsValue({\n          protocol_status: this.protocolInfo.protocol_status,\n          title: this.protocolInfo.title,\n          content: this.protocolInfo.content\n        })\n      })\n    },\n    onSave() {\n      this.form.validate().then(values => {\n        this.protocolService.update(values).subscribe(() => {\n          this.messageService.success({\n            content: '编辑成功'\n          })\n          this.$router.reload()\n          this.isEdit = false\n        })\n      })\n    },\n    onCancel() {\n      this.isEdit = false\n    }\n  }\n}\n</script>\n"]}]}