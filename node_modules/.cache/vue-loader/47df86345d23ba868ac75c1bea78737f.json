{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/personal/edit-reserve.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/personal/edit-reserve.vue","mtime":1597396799938},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { PersonalScheduleCommonService as CommonService } from '@/views/pages/shop/product/course/schedule/personal/service#/common.service'\nimport { difference, cloneDeep } from 'lodash-es'\nimport { PersonalScheduleReserveService as ReserveService } from '@/views/pages/shop/product/course/schedule/personal/service#/reserve.service'\nimport { ruleOptions } from './add-reserve.config'\nexport default {\n  name: 'EditReserve',\n  serviceInject() {\n    return {\n      commonService: CommonService,\n      reserveService: ReserveService\n    }\n  },\n  rxState() {\n    const cs = this.commonService\n    return {\n      courseCoachOptions: cs.courseCoachOptions$ || [],\n      consumeOptions: cs.consumeOptions$ || [],\n      memberOptions: cs.memberOptions$ || [],\n      courseOptions: cs.courseOptions$ || [],\n      dateOptions: cs.dateOptions$ || [],\n      timeOptions: cs.timeOptions$ || []\n    }\n  },\n  props: {\n    info: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      value: '',\n      fetching: false,\n      reserveDate: ''\n    }\n  },\n  mounted() {\n    this.reserveService.getUpdateInfo(this.info.id).subscribe(res => {\n      this.commonService\n        .getCourseCoachList(res.info.course.id)\n        .subscribe(() => {\n          this.form.setFieldsValue({\n            coach_id: res.info.coach.id\n          })\n        })\n    })\n  },\n  methods: {\n    save() {\n      this.form.validate().then(values => {\n        this.reserveService\n          .update({ id: this.info.id, coach_id: values.coach_id })\n          .subscribe(res => {\n            this.show = false\n            this.$router.push({ query: this.$searchQuery })\n          })\n      })\n    }\n  }\n}\n",{"version":3,"sources":["edit-reserve.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-reserve.vue","sourceRoot":"src/views/biz-modals/schedule/personal","sourcesContent":["<template>\n  <st-modal title=\"修改预约\" @ok=\"save\" v-model=\"show\">\n    <st-form :form=\"form\">\n      <st-form-item label=\"会员名称\" required>\n        <a-input v-model=\"info.member_name\" disabled></a-input>\n      </st-form-item>\n      <st-form-item label=\"消费方式\" required>\n        <a-input v-model=\"info.consume_name\" disabled></a-input>\n      </st-form-item>\n      <st-form-item label=\"课程\" required>\n        <a-input v-model=\"info.course_name\" disabled></a-input>\n      </st-form-item>\n      <st-form-item :label=\"`上课${$c('coach')}`\" required>\n        <!-- TODO: 需要新增初始值-->\n        <a-select\n          v-decorator=\"decorators.coach_id\"\n          :placeholder=\"`请选择上课${$c('coach')}`\"\n        >\n          <a-select-option\n            v-for=\"courseCoach in courseCoachOptions\"\n            :key=\"courseCoach.id\"\n            :value=\"courseCoach.id\"\n          >\n            {{ courseCoach.name }}\n          </a-select-option>\n        </a-select>\n      </st-form-item>\n      <st-form-item label=\"预约日期\" required>\n        <a-input v-model=\"info.start_date\" disabled></a-input>\n      </st-form-item>\n      <st-form-item label=\"预约时间\" required>\n        <a-input v-model=\"info.start_time\" disabled></a-input>\n      </st-form-item>\n    </st-form>\n  </st-modal>\n</template>\n\n<script>\nimport { PersonalScheduleCommonService as CommonService } from '@/views/pages/shop/product/course/schedule/personal/service#/common.service'\nimport { difference, cloneDeep } from 'lodash-es'\nimport { PersonalScheduleReserveService as ReserveService } from '@/views/pages/shop/product/course/schedule/personal/service#/reserve.service'\nimport { ruleOptions } from './add-reserve.config'\nexport default {\n  name: 'EditReserve',\n  serviceInject() {\n    return {\n      commonService: CommonService,\n      reserveService: ReserveService\n    }\n  },\n  rxState() {\n    const cs = this.commonService\n    return {\n      courseCoachOptions: cs.courseCoachOptions$ || [],\n      consumeOptions: cs.consumeOptions$ || [],\n      memberOptions: cs.memberOptions$ || [],\n      courseOptions: cs.courseOptions$ || [],\n      dateOptions: cs.dateOptions$ || [],\n      timeOptions: cs.timeOptions$ || []\n    }\n  },\n  props: {\n    info: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      value: '',\n      fetching: false,\n      reserveDate: ''\n    }\n  },\n  mounted() {\n    this.reserveService.getUpdateInfo(this.info.id).subscribe(res => {\n      this.commonService\n        .getCourseCoachList(res.info.course.id)\n        .subscribe(() => {\n          this.form.setFieldsValue({\n            coach_id: res.info.coach.id\n          })\n        })\n    })\n  },\n  methods: {\n    save() {\n      this.form.validate().then(values => {\n        this.reserveService\n          .update({ id: this.info.id, coach_id: values.coach_id })\n          .subscribe(res => {\n            this.show = false\n            this.$router.push({ query: this.$searchQuery })\n          })\n      })\n    }\n  }\n}\n</script>\n"]}]}