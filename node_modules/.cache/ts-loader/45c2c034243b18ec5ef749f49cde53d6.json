{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/data.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/data.service.ts","mtime":1591147717316},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { GroupBuyApi, GroupData } from '@/api/v1/marketing/group-buy';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\nimport { UserService } from '@/services/user.service';\n\nvar DataService = /*#__PURE__*/function () {\n  function DataService(groupBuyApi, userService) {\n    _classCallCheck(this, DataService);\n\n    this.groupBuyApi = groupBuyApi;\n    this.userService = userService;\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.loading$ = new State({});\n    this.collect$ = new State([]);\n    this.info$ = new State({});\n    this.groupStatusEnums$ = this.userService.getOptions$('group_buy.group_status', {\n      addAll: true\n    });\n  }\n\n  _createClass(DataService, [{\n    key: \"getData\",\n    value: function getData(params) {\n      var _this = this;\n\n      return this.groupBuyApi.getData(params).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n\n        _this.collect$.commit(function () {\n          return res.collect;\n        });\n\n        _this.loading$.commit(function () {\n          return res.loading;\n        });\n      }));\n    }\n  }, {\n    key: \"getDatatop\",\n    value: function getDatatop(id) {\n      var _this2 = this;\n\n      return this.groupBuyApi.getGroupBuyDataTop(id).pipe(tap(function (res) {\n        _this2.info$.commit(function () {\n          return res;\n        });\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init(params) {\n      return forkJoin(this.getData(params), this.getDatatop(params.id));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return this.init(to.meta.query);\n    }\n  }]);\n\n  return DataService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof GroupData !== \"undefined\" && GroupData) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], DataService.prototype, \"getData\", null);\n\nDataService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof GroupBuyApi !== \"undefined\" && GroupBuyApi) === \"function\" ? _b : Object, typeof (_c = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _c : Object])], DataService);\nexport { DataService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/data.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,WAAT,EAAsB,SAAtB,QAAuC,8BAAvC;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,WAAT,QAA4B,yBAA5B;;AAGA,IAAa,WAAb;AASE,uBACU,WADV,EAEU,WAFV,EAEkC;AAAA;;AADxB,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAA,WAAA;AAVV,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,iBAAA,GAAoB,KAAK,WAAL,CAAiB,WAAjB,CAA6B,wBAA7B,EAAuD;AACzE,MAAA,MAAM,EAAE;AADiE,KAAvD,CAApB;AAMI;;AAZN;AAAA;AAAA,4BAcU,MAdV,EAc2B;AAAA;;AACvB,aAAO,KAAK,WAAL,CAAiB,OAAjB,CAAyB,MAAzB,EAAiC,IAAjC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,QAAL,CAAc,MAAd,CAAqB;AAAA,iBAAM,GAAG,CAAC,OAAV;AAAA,SAArB;;AACA,QAAA,KAAI,CAAC,QAAL,CAAc,MAAd,CAAqB;AAAA,iBAAM,GAAG,CAAC,OAAV;AAAA,SAArB;AACD,OALE,CADE,CAAP;AAQD;AAvBH;AAAA;AAAA,+BAwBa,EAxBb,EAwBuB;AAAA;;AACnB,aAAO,KAAK,WAAL,CAAiB,kBAAjB,CAAoC,EAApC,EAAwC,IAAxC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAN;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AA9BH;AAAA;AAAA,yBA+BO,MA/BP,EA+BkB;AACd,aAAO,QAAQ,CAAC,KAAK,OAAL,CAAa,MAAb,CAAD,EAAuB,KAAK,UAAL,CAAgB,MAAM,CAAC,EAAvB,CAAvB,CAAf;AACD;AAjCH;AAAA;AAAA,+BAkCa,EAlCb,EAkC+B,IAlC/B,EAkCiD;AAC7C,aAAO,KAAK,IAAL,CAAU,EAAE,CAAC,IAAH,CAAQ,KAAlB,CAAP;AACD;AApCH;;AAAA;AAAA,GAAA;;AAcE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAgB,S,KAAS,W,IAAT,S,MAAS,U,GAAA,E,GAAA,M,EAAzB,E,uCAAA,CAAA,E,qBAAA,E,SAAA,EASC,IATD,CAAA;;AAdW,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDAUC,W,KAAW,W,IAAX,W,MAAW,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACX,WADW,KACA,WADA,IACX,WADW,MACA,UADA,GACA,EADA,GACA,M,EAXZ,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { GroupBuyApi, GroupData } from '@/api/v1/marketing/group-buy'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { forkJoin } from 'rxjs'\nimport { UserService } from '@/services/user.service'\n\n@Injectable()\nexport class DataService implements Controller {\n  list$ = new State([])\n  page$ = new State({})\n  loading$ = new State({})\n  collect$ = new State([])\n  info$ = new State({})\n  groupStatusEnums$ = this.userService.getOptions$('group_buy.group_status', {\n    addAll: true\n  })\n  constructor(\n    private groupBuyApi: GroupBuyApi,\n    private userService: UserService\n  ) {}\n  @Effect()\n  getData(params: GroupData) {\n    return this.groupBuyApi.getData(params).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n        this.collect$.commit(() => res.collect)\n        this.loading$.commit(() => res.loading)\n      })\n    )\n  }\n  getDatatop(id: number) {\n    return this.groupBuyApi.getGroupBuyDataTop(id).pipe(\n      tap((res: any) => {\n        this.info$.commit(() => res)\n      })\n    )\n  }\n  init(params: any) {\n    return forkJoin(this.getData(params), this.getDatatop(params.id))\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return this.init(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}