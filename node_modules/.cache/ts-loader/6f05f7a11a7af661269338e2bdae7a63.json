{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/filters/resource.filters.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/filters/resource.filters.ts","mtime":1591147717078},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import { AppConfig } from '@/constants/config';\nimport { isSupportWebp } from '@/utils/support.ts';\nimport container from '@/container';\nvar appConfig = container.get(AppConfig);\n/**\n * 图片资源过滤器\n */\n\nexport var imgFilter = function imgFilter(key, opts) {\n  if (!key) {\n    if (!opts) {\n      key = appConfig.PLACEHOLDER_IMG.PICTURE;\n    } else {\n      switch (opts.type) {\n        case 'avatar':\n          key = appConfig.PLACEHOLDER_IMG.AVATAR;\n          break;\n\n        case 'course':\n          key = appConfig.PLACEHOLDER_IMG.PICTURE;\n          break;\n\n        default:\n          key = appConfig.PLACEHOLDER_IMG.PICTURE;\n          break;\n      }\n    }\n  }\n\n  if (/x-oss-process/.test(key) || /blob/.test(key)) {\n    return key;\n  }\n\n  if (!/^https?/.test(key)) {\n    key = appConfig.HOST_IMAGE + '/' + key;\n  }\n\n  var configs = {\n    interlace: 1,\n    m: 'fill'\n  };\n  var processConfigStr = '';\n\n  if (opts && opts.m) {\n    configs.m = opts.m;\n  }\n\n  if (opts && opts.w) {\n    configs.w = opts.w;\n  }\n\n  if (opts && opts.h) {\n    configs.h = opts.h;\n  }\n\n  if (!opts) {\n    return key;\n  }\n\n  for (var i in configs) {\n    processConfigStr += \",\".concat(i, \"_\").concat(configs[i]);\n  }\n\n  var ossUrl = \"\".concat(key, \"?x-oss-process=image/resize\").concat(processConfigStr).concat(isSupportWebp() ? '/quality,q_99/format,webp' : '');\n  return ossUrl;\n};",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/filters/resource.filters.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,oBAA1B;AACA,SAAS,aAAT,QAA8B,oBAA9B;AAEA,OAAO,SAAP,MAAsB,aAAtB;AAEA,IAAM,SAAS,GAAG,SAAS,CAAC,GAAV,CAAc,SAAd,CAAlB;AAoBA;;;;AAGA,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,GAAD,EAAc,IAAd,EAAiD;AACxE,MAAI,CAAC,GAAL,EAAU;AACR,QAAI,CAAC,IAAL,EAAW;AACT,MAAA,GAAG,GAAG,SAAS,CAAC,eAAV,CAA0B,OAAhC;AACD,KAFD,MAEO;AACL,cAAQ,IAAI,CAAC,IAAb;AACE,aAAK,QAAL;AACE,UAAA,GAAG,GAAG,SAAS,CAAC,eAAV,CAA0B,MAAhC;AACA;;AACF,aAAK,QAAL;AACE,UAAA,GAAG,GAAG,SAAS,CAAC,eAAV,CAA0B,OAAhC;AACA;;AACF;AACE,UAAA,GAAG,GAAG,SAAS,CAAC,eAAV,CAA0B,OAAhC;AACA;AATJ;AAWD;AACF;;AAED,MAAI,gBAAgB,IAAhB,CAAqB,GAArB,KAA6B,OAAO,IAAP,CAAY,GAAZ,CAAjC,EAAmD;AACjD,WAAO,GAAP;AACD;;AACD,MAAI,CAAC,UAAU,IAAV,CAAe,GAAf,CAAL,EAA0B;AACxB,IAAA,GAAG,GAAG,SAAS,CAAC,UAAV,GAAuB,GAAvB,GAA6B,GAAnC;AACD;;AACD,MAAM,OAAO,GAAqB;AAChC,IAAA,SAAS,EAAE,CADqB;AAEhC,IAAA,CAAC,EAAE;AAF6B,GAAlC;AAIA,MAAI,gBAAgB,GAAG,EAAvB;;AACA,MAAI,IAAI,IAAI,IAAI,CAAC,CAAjB,EAAoB;AAClB,IAAA,OAAO,CAAC,CAAR,GAAY,IAAI,CAAC,CAAjB;AACD;;AACD,MAAI,IAAI,IAAI,IAAI,CAAC,CAAjB,EAAoB;AAClB,IAAA,OAAO,CAAC,CAAR,GAAY,IAAI,CAAC,CAAjB;AACD;;AACD,MAAI,IAAI,IAAI,IAAI,CAAC,CAAjB,EAAoB;AAClB,IAAA,OAAO,CAAC,CAAR,GAAY,IAAI,CAAC,CAAjB;AACD;;AACD,MAAI,CAAC,IAAL,EAAW;AACT,WAAO,GAAP;AACD;;AACD,OAAK,IAAI,CAAT,IAAc,OAAd,EAAuB;AACrB,IAAA,gBAAgB,eAAQ,CAAR,cAAa,OAAO,CAAC,CAAD,CAApB,CAAhB;AACD;;AACD,MAAM,MAAM,aAAM,GAAN,wCAAuC,gBAAvC,SACV,aAAa,KAAK,2BAAL,GAAmC,EADtC,CAAZ;AAGA,SAAO,MAAP;AACD,CAjDM","sourcesContent":["import { AppConfig } from '@/constants/config'\nimport { isSupportWebp } from '@/utils/support.ts'\nimport defaultPlaceholderImage from '@/assets/img/placeholder.png'\nimport container from '@/container'\n\nconst appConfig = container.get(AppConfig)\n/**\n * 资源类过滤器集合\n * 阿里云oss文档 https://help.aliyun.com/document_detail/44688.html?spm=a2c4g.11186623.6.1285.56ac4663mXIBaR\n */\n\ninterface ImgFilterOptions {\n  w?: string | number\n  h?: string | number\n  /**\n   * 裁切模式 lfit|mfit|fill|pad|fixed\n   */\n  m?: string\n  /**\n   *  图片类型 会决定默认占位图\n   */\n  type?: 'course' | 'avatar'\n  [propName: string]: any\n}\n\n/**\n * 图片资源过滤器\n */\nexport const imgFilter = (key: string, opts?: ImgFilterOptions): string => {\n  if (!key) {\n    if (!opts) {\n      key = appConfig.PLACEHOLDER_IMG.PICTURE\n    } else {\n      switch (opts.type) {\n        case 'avatar':\n          key = appConfig.PLACEHOLDER_IMG.AVATAR\n          break\n        case 'course':\n          key = appConfig.PLACEHOLDER_IMG.PICTURE\n          break\n        default:\n          key = appConfig.PLACEHOLDER_IMG.PICTURE\n          break\n      }\n    }\n  }\n\n  if (/x-oss-process/.test(key) || /blob/.test(key)) {\n    return key\n  }\n  if (!/^https?/.test(key)) {\n    key = appConfig.HOST_IMAGE + '/' + key\n  }\n  const configs: ImgFilterOptions = {\n    interlace: 1,\n    m: 'fill'\n  }\n  let processConfigStr = ''\n  if (opts && opts.m) {\n    configs.m = opts.m\n  }\n  if (opts && opts.w) {\n    configs.w = opts.w\n  }\n  if (opts && opts.h) {\n    configs.h = opts.h\n  }\n  if (!opts) {\n    return key\n  }\n  for (let i in configs) {\n    processConfigStr += `,${i}_${configs[i]}`\n  }\n  const ossUrl = `${key}?x-oss-process=image/resize${processConfigStr}${\n    isSupportWebp() ? '/quality,q_99/format,webp' : ''\n  }`\n  return ossUrl\n}\n"],"sourceRoot":""}]}