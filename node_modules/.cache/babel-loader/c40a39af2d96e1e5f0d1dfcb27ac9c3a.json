{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-simple-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-simple-line.vue","mtime":1600926555725},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport chartMixin from \"./mixin\";\nimport { Chart } from '@antv/g2';\nimport { View } from 'st-data-set';\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [\n        { name: '1', value: 102  },\n        { name: '2', value: 12  },\n        { name: '3', value: 50  },\n        { name: '4', value: 30  },\n        { name: '5', value: 7  },\n        { name: '6', value: 6  },\n        { name: '7', value: 10  }\n      ]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    unit: {\n      type: String,\n      default: '元'\n    },\n    color: {\n      type: String,\n      default: '#3F67F5'\n    },\n    height: {\n      type: Number,\n      default: 68\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +row.value;\n          return row;\n        }\n      });\n      console.log(this.data);\n    },\n    initChart: function initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg',\n        padding: 'auto'\n      });\n      var maxValue = this.dv.max('value');\n      this.chart.source(this.dv, {\n        value: {\n          min: 0,\n          max: maxValue * 1.1\n        }\n      });\n      this.chart.axis('value', false);\n      this.chart.axis('name', {\n        nice: true,\n        label: false,\n        grid: {\n          lineStyle: {\n            stroke: '#EBEFF4',\n            lineWidth: 1\n          }\n        },\n        line: {\n          lineWidth: 0\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.scale('name', {\n        range: [0, 1]\n      });\n      this.chart.tooltip({\n        showTitle: false,\n        useHtml: true,\n        itemTpl: \"<li class='tooltip-item' data-index={index} style='background-color:\".concat(this.color, \";'>\") + \"<span class='g2-tooltip-value'>{value}\".concat(this.unit, \"</span>\") + \"</li>\"\n      });\n      this.chart.line().shape('smooth').color(this.color).position('name*value');\n      this.chart.line().shape('smooth').color(this.color).style({\n        shadowColor: this.color,\n        shadowBlur: 20,\n        shadowOffsetY: 4,\n        opacity: 0.5\n      }).position('name*value');\n      this.chart.render();\n    }\n  }\n};",{"version":3,"sources":["brand-simple-line.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"stat-brand-simple-line\"></div>\n</template>\n\n<script>\nimport chartMixin from './mixin'\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [\n        { name: '1', value: 102  },\n        { name: '2', value: 12  },\n        { name: '3', value: 50  },\n        { name: '4', value: 30  },\n        { name: '5', value: 7  },\n        { name: '6', value: 6  },\n        { name: '7', value: 10  }\n      ]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    unit: {\n      type: String,\n      default: '元'\n    },\n    color: {\n      type: String,\n      default: '#3F67F5'\n    },\n    height: {\n      type: Number,\n      default: 68\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n      console.log(this.data)\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg',\n        padding: 'auto'\n      })\n      const maxValue = this.dv.max('value')\n      this.chart.source(this.dv, {\n        value: {\n          min: 0,\n          max: maxValue * 1.1\n        }\n      })\n      this.chart.axis('value', false)\n      this.chart.axis('name', {\n        nice: true,\n        label: false,\n        grid: {\n          lineStyle: {\n            stroke: '#EBEFF4',\n            lineWidth: 1\n          }\n        },\n        line: {\n          lineWidth: 0\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.scale('name', {\n        range: [0, 1]\n      })\n      this.chart.tooltip({\n        showTitle: false,\n        useHtml: true,\n        itemTpl:\n          `<li class='tooltip-item' data-index={index} style='background-color:${this.color};'>` +\n          `<span class='g2-tooltip-value'>{value}${this.unit}</span>` +\n          `</li>`\n      })\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .color(this.color)\n        .position('name*value')\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .color(this.color)\n        .style({\n          shadowColor: this.color,\n          shadowBlur: 20,\n          shadowOffsetY: 4,\n          opacity: 0.5\n        })\n        .position('name*value')\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}