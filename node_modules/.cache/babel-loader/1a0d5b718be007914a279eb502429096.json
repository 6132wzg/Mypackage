{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-user-ring.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-user-ring.vue","mtime":1594718339898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport { Chart } from '@antv/g2';\nimport { View } from 'st-data-set';\nimport chartMixin from \"./mixin\";\nimport { decimalFilter } from \"./filters\";\nimport { isEmpty } from 'lodash-es';\nexport default {\n  mixins: [chartMixin],\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 200\n    },\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#5C57FE', '#6332D1', '#009DFF', '#00D0F0', '#FFE679', '#aFa679'];\n      }\n    },\n    unit: {\n      type: String,\n      default: '人'\n    }\n  },\n  computed: {\n    dataSource: function dataSource() {\n      if (this.data.length === 0) return this.data;\n      var isEmpty = this.data.map(function (item) {\n        return item.value;\n      }).reduce(function (value, total) {\n        return value + total;\n      });\n      var emptyItem = {\n        name: 'empty',\n        value: 1\n      };\n      return !isEmpty ? [].concat(_toConsumableArray(this.data), [emptyItem]) : this.data;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.dataSource);\n      this.dv.transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +row.value;\n          return row;\n        }\n      }) // 计算百分比\n      .transform({\n        type: 'percent',\n        field: 'value',\n        dimension: 'name',\n        as: 'percent'\n      });\n    },\n    initChart: function initChart() {\n      var _this = this;\n\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: ['auto', 140, 'auto', 'auto'],\n        height: this.height\n      });\n      this.chart.source(this.dv, {\n        value: {\n          formatter: function formatter(v) {\n            return v + _this.unit;\n          }\n        }\n      });\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      });\n      this.chart.legend({\n        position: 'right-center',\n        useHtml: true,\n        clickable: false,\n        itemTpl: function itemTpl(name, color, checked, index) {\n          var row = _this.dv.findRow({\n            name: name\n          });\n\n          var percent = parseInt(row.percent * 100);\n          return \"<li class=\\\"g2-legend-list-item item-{index} {checked}\\\" data-color=\\\"{originColor}\\\" data-value=\\\"{originValue}\\\">\" + \"<i class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></i>\" + \"<span class=\\\"g2-legend-text\\\">\".concat(name, \"</span>\") + \"<div class='legend-right'>\" + \"<span class='legend-divider'>|</span>\" + \"<span class='legend-percent'>\".concat(percent, \"%</span>\") + \"</div>\" + \"</li>\";\n        },\n        onHover: function onHover(ev) {\n          // 总计为 0 是执行hover\n          var $s = _this.$el.querySelector.bind(_this.$el);\n\n          var name = ev.item.value;\n\n          var row = _this.dv.findRow({\n            name: name\n          });\n\n          var shapes = ev.shapes;\n          var geom = ev.geom;\n          var legend = ev.currentTarget; // 选中对应单元\n\n          row.value && geom.setShapesActived(shapes);\n          $s('.guide-value').textContent = row.value;\n          $s('.guide-name').textContent = row.name;\n        }\n      });\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: function html() {\n          var initRow = _this.data[0];\n          return \"<div class='guide'>\" + \"<div class='guide-title'><span class='guide-value'>\".concat(initRow.value, \"</span><span class='guide-unit'>\\u4EBA</span></div>\") + \"<div class='guide-name'>\".concat(initRow.name, \"</div>\") + \"</div>\";\n        }\n      });\n      this.chart.tooltip({\n        showTitle: false\n      });\n      var interval = this.chart.intervalStack().style({\n        fillOpacity: 1,\n        cursor: 'pointer'\n      }).position('value').color('name', [].concat(_toConsumableArray(this.colors), ['#e9edf2'])).select(false).active({\n        style: {\n          fillOpacity: 1,\n          lineWidth: 8\n        }\n      });\n      this.chart.render();\n      var shapes = interval.getShapes(); // 默认显示第一个 当有empty时第一个为零 不需要\n\n      if (origin.name === 'empty') {\n        var firstShape = shapes[0];\n        interval.setShapesActived(firstShape);\n      }\n\n      var $s = this.$el.querySelector.bind(this.$el);\n      this.chart.on('interval:mouseenter', function (e) {\n        var shape = e.shape;\n        var origin = e.data._origin;\n\n        if (origin.name === 'empty') {\n          _this.intervalStack.clearActivedShapes(shape);\n\n          return;\n        }\n\n        $s('.guide-value').textContent = origin.value;\n        $s('.guide-name').textContent = origin.name;\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      // 注销图形所有事件\n      this.chart.off();\n    }\n  }\n};",null]}