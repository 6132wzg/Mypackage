{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/app/venue/setting/edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/app/venue/setting/edit.vue","mtime":1591147717380},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from 'lodash-es'\nimport moment from 'moment'\nimport { EditService } from './edit.service'\nimport { ruleOptions } from './add.config'\nimport { MessageService } from '@/services/message.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { CAN_RESERVE, TIME_LIMIT_TYPE, CYCLIC_TYPE } from '@/constants/venue'\nimport { ManageService } from '../manage.service'\nexport default {\n  name: 'AddRole',\n  bem: {\n    b: 'page-shop-app-venue-setting-edit'\n  },\n  serviceInject() {\n    return {\n      editService: EditService,\n      messageService: MessageService,\n      pattern: PatternService,\n      manageService: ManageService\n    }\n  },\n  rxState() {\n    return {\n      sites: this.editService.sites$,\n      info: this.editService.info$,\n      harfEnums: this.editService.harfEnums$,\n      oneEnums: this.editService.oneEnums$,\n      timeEnums: this.editService.timeEnums$,\n      cyclicEnums: this.editService.cyclicEnums$,\n      priorityEnums: this.editService.priorityEnums$,\n      weeks: this.editService.weeks$,\n      reserveEnums: this.editService.reserveEnums$,\n      perTime: this.manageService.perTime$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      timeLimit: 1,\n      start_time: null,\n      end_time: null,\n      endOpen: false,\n      cyclicType: 1,\n      canReserve: true,\n      pertimeEnums: {\n        1: this.harfEnums,\n        2: this.oneEnums\n      }\n    }\n  },\n  mounted() {\n    let info = this.info\n    this.timeLimit = info.time_limit_type\n    this.cyclicType = info.cyclic_type\n    this.canReserve = info.can_reserve === CAN_RESERVE.YES ? true : false\n    this.$nextTick(() => {\n      info.time_limit_start = moment(info.time_limit_start * 1000)\n      info.time_limit_end = moment(info.time_limit_end * 1000)\n      this.form.setFieldsValue({\n        time_limit_type: info.time_limit_type,\n        cyclic_type: info.cyclic_type,\n        can_reserve: info.can_reserve,\n        price: info.price,\n        weight: info.weight,\n        open_time_start: info.open_time_start,\n        open_time_end: info.open_time_end\n      })\n      if (info.time_limit_type === TIME_LIMIT_TYPE.APPOINTED) {\n        this.form.setFieldsValue({\n          time_limit_start: info.time_limit_start,\n          time_limit_end: info.time_limit_end\n        })\n      }\n      if (info.cyclic_type === CYCLIC_TYPE.CUSTOM) {\n        this.form.setFieldsValue({\n          week_day: info.week_day\n        })\n      }\n    })\n  },\n  methods: {\n    onChange(e) {\n      this.canReserve = e.target.value === CAN_RESERVE.YES ? true : false\n    },\n    timeLimitChange(e) {\n      this.timeLimit = e.target.value\n    },\n    onCancel() {\n      this.$router.go(-1)\n    },\n    onClickSubmit(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        const data = {\n          settings_id: this.$searchQuery.settings_id,\n          site_id: this.sites[0].id,\n          ...values\n        }\n        this.editService.edit(data).subscribe(() => {\n          this.messageService.success({ content: '编辑成功' })\n          this.$router.push({ name: 'shop-app-venue-manage' })\n        })\n      })\n    },\n    disabledStartDate(startValue) {\n      const endValue = this.end_time\n      if (!endValue) {\n        // 结束时间未选择\n        return (\n          startValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      let start =\n        endValue.valueOf() >\n        moment()\n          .add(30, 'y')\n          .valueOf()\n          ? moment(endValue)\n              .subtract(30, 'y')\n              .valueOf()\n          : moment()\n              .startOf('day')\n              .valueOf()\n      return (\n        startValue.valueOf() < start ||\n        startValue.valueOf() > moment(endValue).valueOf()\n      )\n    },\n    disabledEndDate(endValue) {\n      const startValue = this.start_time\n      if (!startValue) {\n        // 开始时间未选择\n        return (\n          endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      return (\n        endValue.valueOf() >=\n          moment(startValue)\n            .add(30, 'y')\n            .valueOf() ||\n        endValue.valueOf() < moment(startValue).valueOf() ||\n        endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n      )\n    },\n    handleStartOpenChange(open) {\n      if (!open) {\n        this.endOpen = true\n      }\n    },\n    start_time_change(data) {\n      this.start_time = cloneDeep(data)\n    },\n    handleEndOpenChange(open) {\n      this.endOpen = open\n    },\n    end_time_change(data) {\n      this.end_time = cloneDeep(data)\n    },\n    cyclicTypeChange(e) {\n      this.cyclicType = e.target.value\n    }\n  }\n}\n",{"version":3,"sources":["edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"edit.vue","sourceRoot":"src/views/pages/shop/app/venue/setting","sourcesContent":["<template>\n  <st-panel :class=\"b()\" app>\n    <st-form :form=\"form\" :class=\"b('form')\" labelWidth=\"120px\">\n      <a-row :gutter=\"8\">\n        <a-col :lg=\"14\">\n          <st-form-item label=\"场地\">\n            <span :class=\"b('name')\">\n              {{ sites.map(item => item.site_name).join('、') }}\n            </span>\n          </st-form-item>\n          <st-form-item label=\"日期\" required>\n            <a-radio-group v-decorator=\"decorators.time_limit_type\">\n              <a-radio\n                v-for=\"item in timeEnums\"\n                :key=\"item.value\"\n                :value=\"item.value\"\n                @change=\"timeLimitChange\"\n              >\n                {{ item.label }}\n              </a-radio>\n            </a-radio-group>\n          </st-form-item>\n          <st-form-item\n            v-if=\"timeLimit === 2\"\n            :labelFix=\"true\"\n            labelWidth=\"120px\"\n          >\n            <div class=\"page-a-form\">\n              <a-date-picker\n                :disabledDate=\"disabledStartDate\"\n                v-decorator=\"decorators.time_limit_start\"\n                format=\"YYYY-MM-DD\"\n                placeholder=\"开始时间\"\n                :showToday=\"false\"\n                @openChange=\"handleStartOpenChange\"\n                @change=\"start_time_change\"\n              />\n            </div>\n            &nbsp;~&nbsp;\n            <div class=\"page-a-form\">\n              <a-date-picker\n                :disabledDate=\"disabledEndDate\"\n                v-decorator=\"decorators.time_limit_end\"\n                format=\"YYYY-MM-DD\"\n                placeholder=\"结束时间\"\n                :showToday=\"false\"\n                :open=\"endOpen\"\n                @openChange=\"handleEndOpenChange\"\n                @change=\"end_time_change\"\n              />\n            </div>\n          </st-form-item>\n          <st-form-item label=\"循环设置\" required>\n            <a-radio-group\n              v-decorator=\"decorators.cyclic_type\"\n              @change=\"cyclicTypeChange\"\n            >\n              <a-radio\n                v-for=\"item in cyclicEnums\"\n                :key=\"item.value\"\n                :value=\"item.value\"\n              >\n                {{ item.label }}\n              </a-radio>\n            </a-radio-group>\n          </st-form-item>\n        </a-col>\n        <a-col :lg=\"24\">\n          <st-form-item\n            v-if=\"cyclicType === 2\"\n            :labelFix=\"true\"\n            labelWidth=\"120px\"\n          >\n            <a-checkbox-group v-decorator=\"decorators.week_day\">\n              <a-checkbox\n                v-for=\"item in weeks\"\n                :key=\"item.value\"\n                :value=\"item.value\"\n                class=\"mg-r32\"\n              >\n                {{ item.label }}\n              </a-checkbox>\n            </a-checkbox-group>\n          </st-form-item>\n        </a-col>\n        <a-col :lg=\"14\">\n          <st-form-item :class=\"b('time')\" label=\"可预约时间\" required>\n            <st-form-item :class=\"b('inline-item')\">\n              <a-select\n                v-decorator=\"decorators.open_time_start\"\n                placeholder=\"开始时间\"\n                class=\"page-content-card-input\"\n              >\n                <a-select-option\n                  v-for=\"(item, index) in pertimeEnums[perTime]\"\n                  :key=\"index\"\n                  :value=\"item.value\"\n                >\n                  {{ item.label }}\n                </a-select-option>\n              </a-select>\n            </st-form-item>\n            &nbsp;~&nbsp;\n            <st-form-item :class=\"b('inline-item')\">\n              <a-select\n                v-decorator=\"decorators.open_time_end\"\n                placeholder=\"结束时间\"\n                class=\"page-content-card-input\"\n              >\n                <a-select-option\n                  v-for=\"(item, index) in pertimeEnums[perTime]\"\n                  :key=\"index\"\n                  :value=\"item.value\"\n                >\n                  {{ item.label }}\n                </a-select-option>\n              </a-select>\n            </st-form-item>\n          </st-form-item>\n          <st-form-item label=\"预约状态\" required>\n            <a-radio-group\n              v-decorator=\"decorators.can_reserve\"\n              @change=\"onChange\"\n            >\n              <a-radio\n                v-for=\"item in reserveEnums\"\n                :key=\"item.value\"\n                :value=\"item.value\"\n              >\n                {{ item.label }}\n              </a-radio>\n            </a-radio-group>\n          </st-form-item>\n          <st-form-item v-if=\"canReserve\" label=\"预约价格\" required>\n            <st-input-number\n              v-decorator=\"decorators.price\"\n              :float=\"true\"\n              placeholder=\"请输入价格\"\n            >\n              <template slot=\"addonAfter\">\n                元\n              </template>\n            </st-input-number>\n          </st-form-item>\n          <st-form-item label=\"优先级\" required>\n            <a-radio-group v-decorator=\"decorators.weight\">\n              <a-radio\n                v-for=\"item in priorityEnums\"\n                :key=\"item.value\"\n                :value=\"item.value\"\n              >\n                {{ item.label }}\n              </a-radio>\n            </a-radio-group>\n          </st-form-item>\n        </a-col>\n      </a-row>\n    </st-form>\n    <div :class=\"b('btn')\">\n      <st-button type=\"primary\" @click=\"onClickSubmit\" class=\"mg-r16\">\n        保存\n      </st-button>\n      <st-button @click=\"onCancel\">取消</st-button>\n    </div>\n  </st-panel>\n</template>\n\n<script>\nimport { cloneDeep } from 'lodash-es'\nimport moment from 'moment'\nimport { EditService } from './edit.service'\nimport { ruleOptions } from './add.config'\nimport { MessageService } from '@/services/message.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { CAN_RESERVE, TIME_LIMIT_TYPE, CYCLIC_TYPE } from '@/constants/venue'\nimport { ManageService } from '../manage.service'\nexport default {\n  name: 'AddRole',\n  bem: {\n    b: 'page-shop-app-venue-setting-edit'\n  },\n  serviceInject() {\n    return {\n      editService: EditService,\n      messageService: MessageService,\n      pattern: PatternService,\n      manageService: ManageService\n    }\n  },\n  rxState() {\n    return {\n      sites: this.editService.sites$,\n      info: this.editService.info$,\n      harfEnums: this.editService.harfEnums$,\n      oneEnums: this.editService.oneEnums$,\n      timeEnums: this.editService.timeEnums$,\n      cyclicEnums: this.editService.cyclicEnums$,\n      priorityEnums: this.editService.priorityEnums$,\n      weeks: this.editService.weeks$,\n      reserveEnums: this.editService.reserveEnums$,\n      perTime: this.manageService.perTime$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      timeLimit: 1,\n      start_time: null,\n      end_time: null,\n      endOpen: false,\n      cyclicType: 1,\n      canReserve: true,\n      pertimeEnums: {\n        1: this.harfEnums,\n        2: this.oneEnums\n      }\n    }\n  },\n  mounted() {\n    let info = this.info\n    this.timeLimit = info.time_limit_type\n    this.cyclicType = info.cyclic_type\n    this.canReserve = info.can_reserve === CAN_RESERVE.YES ? true : false\n    this.$nextTick(() => {\n      info.time_limit_start = moment(info.time_limit_start * 1000)\n      info.time_limit_end = moment(info.time_limit_end * 1000)\n      this.form.setFieldsValue({\n        time_limit_type: info.time_limit_type,\n        cyclic_type: info.cyclic_type,\n        can_reserve: info.can_reserve,\n        price: info.price,\n        weight: info.weight,\n        open_time_start: info.open_time_start,\n        open_time_end: info.open_time_end\n      })\n      if (info.time_limit_type === TIME_LIMIT_TYPE.APPOINTED) {\n        this.form.setFieldsValue({\n          time_limit_start: info.time_limit_start,\n          time_limit_end: info.time_limit_end\n        })\n      }\n      if (info.cyclic_type === CYCLIC_TYPE.CUSTOM) {\n        this.form.setFieldsValue({\n          week_day: info.week_day\n        })\n      }\n    })\n  },\n  methods: {\n    onChange(e) {\n      this.canReserve = e.target.value === CAN_RESERVE.YES ? true : false\n    },\n    timeLimitChange(e) {\n      this.timeLimit = e.target.value\n    },\n    onCancel() {\n      this.$router.go(-1)\n    },\n    onClickSubmit(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        const data = {\n          settings_id: this.$searchQuery.settings_id,\n          site_id: this.sites[0].id,\n          ...values\n        }\n        this.editService.edit(data).subscribe(() => {\n          this.messageService.success({ content: '编辑成功' })\n          this.$router.push({ name: 'shop-app-venue-manage' })\n        })\n      })\n    },\n    disabledStartDate(startValue) {\n      const endValue = this.end_time\n      if (!endValue) {\n        // 结束时间未选择\n        return (\n          startValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      let start =\n        endValue.valueOf() >\n        moment()\n          .add(30, 'y')\n          .valueOf()\n          ? moment(endValue)\n              .subtract(30, 'y')\n              .valueOf()\n          : moment()\n              .startOf('day')\n              .valueOf()\n      return (\n        startValue.valueOf() < start ||\n        startValue.valueOf() > moment(endValue).valueOf()\n      )\n    },\n    disabledEndDate(endValue) {\n      const startValue = this.start_time\n      if (!startValue) {\n        // 开始时间未选择\n        return (\n          endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      return (\n        endValue.valueOf() >=\n          moment(startValue)\n            .add(30, 'y')\n            .valueOf() ||\n        endValue.valueOf() < moment(startValue).valueOf() ||\n        endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n      )\n    },\n    handleStartOpenChange(open) {\n      if (!open) {\n        this.endOpen = true\n      }\n    },\n    start_time_change(data) {\n      this.start_time = cloneDeep(data)\n    },\n    handleEndOpenChange(open) {\n      this.endOpen = open\n    },\n    end_time_change(data) {\n      this.end_time = cloneDeep(data)\n    },\n    cyclicTypeChange(e) {\n      this.cyclicType = e.target.value\n    }\n  }\n}\n</script>\n"]}]}