{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/bind.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/bind.vue","mtime":1591147717008},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { LoginService } from '../login.service'\nimport { ruleOptions } from './login.config'\nimport NoCaptcha from './no-captcha'\nimport { PatternService } from '@/services/pattern.service'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport InputPhone from '@/views/biz-components/input-phone/input-phone'\nimport InputPhoneCode from '@/views/biz-components/input-phone-code/input-phone-code'\nimport { cloneDeep } from 'lodash-es'\n\nexport default {\n  name: 'LoginUserBind',\n  bem: {\n    b: 'page-login-bind',\n    bHead: 'head'\n  },\n  components: {\n    NoCaptcha,\n    InputPhone,\n    InputPhoneCode\n  },\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService,\n      noCaptchaService: NoCaptchaService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.loginService.loading$\n    }\n  },\n  props: {\n    value: {\n      type: Object\n    }\n  },\n  mounted() {\n    let params = {\n      code_id: 37,\n      phone_code: 86,\n      phone: ''\n    }\n    if (this.value && this.value.country_phone) {\n      params = this.value.country_phone\n    }\n    this.form.setFieldsValue({\n      country_phone: params\n    })\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      isCountTime: false,\n      countryInfo: {}\n    }\n  },\n  methods: {\n    onClickCaptcha() {\n      this.form.validate(['country_phone']).then(values => {\n        const { country_phone } = values\n        const params = {\n          phone: country_phone.phone,\n          country_code_id: country_phone.code_id,\n          is_bind: 2\n        }\n        this.getCaptcha(params)\n      })\n    },\n    getCaptcha(params) {\n      const nvc_val = this.noCaptchaService.generateNVCVal()\n      if (!nvc_val) {\n        return\n      }\n      params.nvc_val = nvc_val\n      this.loginService.getCaptcha(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        this.isCountTime = true\n      }, this.errorHandler)\n    },\n    errorHandler(err) {\n      const code = err.response.code\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    endCount() {\n      this.isCountTime = false\n    },\n    onSelectCountry(event) {\n      this.countryInfo = event\n    },\n    onBind() {\n      this.form.validate().then(values => {\n        const params = cloneDeep(values)\n        const country_phone = values.country_phone\n        params.account = values.name\n        params.phone = country_phone.phone\n        params.pwd = values.password\n        params.country_code_id = country_phone.code_id\n        delete params.country_phone\n        delete params.name\n        delete params.password\n        this.$emit('click', params)\n      })\n    }\n  }\n}\n",{"version":3,"sources":["bind.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bind.vue","sourceRoot":"src-entries/account/views/pages/account/login#","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div :class=\"bHead()\">\n      <label :class=\"bHead('title')\">绑定登录手机号</label>\n      <p :class=\"bHead('desc')\">\n        用于登录、密码找回和验证身份，保护您的账号安全\n      </p>\n    </div>\n    <st-form :form=\"form\" @submit.prevent=\"onBind\" :class=\"b('form')\">\n      <st-form-item>\n        <a-input\n          size=\"large\"\n          placeholder=\"用户名、邮箱\"\n          v-decorator=\"decorators.name\"\n        />\n      </st-form-item>\n      <st-form-item>\n        <a-input\n          size=\"large\"\n          type=\"password\"\n          placeholder=\"密码\"\n          v-decorator=\"decorators.password\"\n        />\n      </st-form-item>\n      <st-form-item>\n        <input-phone\n          v-decorator=\"decorators.country_phone\"\n          placeholder=\"请输入手机号码\"\n        ></input-phone>\n      </st-form-item>\n      <!-- 无痕验证 -->\n      <st-form-item class=\"mg-b0\">\n        <no-captcha id=\"bind-phone-code\"></no-captcha>\n      </st-form-item>\n      <st-form-item>\n        <input-phone-code\n          v-decorator=\"decorators.captcha\"\n          @click=\"onClickCaptcha\"\n          placeholder=\"请输入验证码\"\n          :isCountTime=\"isCountTime\"\n          @endCount=\"endCount\"\n        ></input-phone-code>\n      </st-form-item>\n      <st-form-item class=\"mg-b32\">\n        <st-button\n          :class=\"b('login-button')\"\n          :loading=\"loading.loginAccount\"\n          pill\n          block\n          size=\"large\"\n          type=\"primary\"\n          html-type=\"submit\"\n        >\n          登录\n        </st-button>\n      </st-form-item>\n    </st-form>\n  </div>\n</template>\n\n<script>\nimport { LoginService } from '../login.service'\nimport { ruleOptions } from './login.config'\nimport NoCaptcha from './no-captcha'\nimport { PatternService } from '@/services/pattern.service'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport InputPhone from '@/views/biz-components/input-phone/input-phone'\nimport InputPhoneCode from '@/views/biz-components/input-phone-code/input-phone-code'\nimport { cloneDeep } from 'lodash-es'\n\nexport default {\n  name: 'LoginUserBind',\n  bem: {\n    b: 'page-login-bind',\n    bHead: 'head'\n  },\n  components: {\n    NoCaptcha,\n    InputPhone,\n    InputPhoneCode\n  },\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService,\n      noCaptchaService: NoCaptchaService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.loginService.loading$\n    }\n  },\n  props: {\n    value: {\n      type: Object\n    }\n  },\n  mounted() {\n    let params = {\n      code_id: 37,\n      phone_code: 86,\n      phone: ''\n    }\n    if (this.value && this.value.country_phone) {\n      params = this.value.country_phone\n    }\n    this.form.setFieldsValue({\n      country_phone: params\n    })\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      isCountTime: false,\n      countryInfo: {}\n    }\n  },\n  methods: {\n    onClickCaptcha() {\n      this.form.validate(['country_phone']).then(values => {\n        const { country_phone } = values\n        const params = {\n          phone: country_phone.phone,\n          country_code_id: country_phone.code_id,\n          is_bind: 2\n        }\n        this.getCaptcha(params)\n      })\n    },\n    getCaptcha(params) {\n      const nvc_val = this.noCaptchaService.generateNVCVal()\n      if (!nvc_val) {\n        return\n      }\n      params.nvc_val = nvc_val\n      this.loginService.getCaptcha(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        this.isCountTime = true\n      }, this.errorHandler)\n    },\n    errorHandler(err) {\n      const code = err.response.code\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    endCount() {\n      this.isCountTime = false\n    },\n    onSelectCountry(event) {\n      this.countryInfo = event\n    },\n    onBind() {\n      this.form.validate().then(values => {\n        const params = cloneDeep(values)\n        const country_phone = values.country_phone\n        params.account = values.name\n        params.phone = country_phone.phone\n        params.pwd = values.password\n        params.country_code_id = country_phone.code_id\n        delete params.country_phone\n        delete params.name\n        delete params.password\n        this.$emit('click', params)\n      })\n    }\n  }\n}\n</script>\n"]}]}