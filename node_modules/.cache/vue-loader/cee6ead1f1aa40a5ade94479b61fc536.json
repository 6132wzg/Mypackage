{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/list.vue","mtime":1597895242004},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// table\nimport tableMixin from '@/mixins/table.mixin'\nimport { ListService } from './list.service'\nimport MarkteingPluginTitle from '../../components#/marketing-title'\nimport { columns } from './list.config'\nimport { TYPE } from '@/constants/marketing/plugin'\nimport useShare from '@/hooks/marketing/share.hook'\n// modal\nexport default {\n  name: 'ActivityList',\n  mixins: [tableMixin],\n  bem: {\n    bPage: 'page-plugin-activity-registration',\n    bSearch: 'search'\n  },\n  data() {\n    return {\n      TYPE,\n      plugin_image: [],\n      redirectPath: {\n        addActivity: 'brand-marketing-plugin-activity-registration-add',\n        editActivity: 'brand-marketing-plugin-activity-registration-edit',\n        checkinActivity: 'brand-marketing-plugin-activity-registration-checkin',\n        copyActivity: 'brand-marketing-plugin-activity-registration-copy',\n        rosterActivity: 'brand-marketing-plugin-activity-registration-roster'\n      }\n    }\n  },\n  hooks() {\n    return {\n      share: useShare()\n    }\n  },\n  serviceInject() {\n    return {\n      service: ListService\n    }\n  },\n  rxState() {\n    const {\n      info$,\n      brand$,\n      page$,\n      list$,\n      activityStatus$,\n      loading$,\n      auth$\n    } = this.service\n    return {\n      activityStatus$,\n      page$,\n      list$,\n      auth$,\n      loading$,\n      brand$,\n      info$\n    }\n  },\n  components: {\n    MarkteingPluginTitle\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    onConfigHandle() {\n      this.$router.push({\n        path: '/brand/setting/mina/index'\n      })\n    },\n    onClickRouterPush({ record, pathName }) {\n      this.$router.push({\n        name: this.redirectPath[pathName]\n      })\n    },\n    onClickEdit({ record, pathName }) {\n      this.$router.push({\n        name: this.redirectPath[pathName],\n        query: { id: record.id }\n      })\n    },\n    onCLickGeneralize(record) {\n      this.service.getSharePosterInfo(record.id).subscribe(res => {\n        const info = this.info$\n        const activity_date = `${info.start_time} - ${info.end_time}`\n        const shsInfo = {\n          qrcode_url: info.qrcode,\n          brand_name: this.brand$.name,\n          brand_logo: this.brand$.logo,\n          activity_img: info.image.image_url,\n          activity_title: info.activity_name,\n          activity_date,\n          activity_address: info.address\n        }\n        this.share.poster({\n          isAuth: res.is_auth,\n          shsInfo,\n          shsPath: '/saas/activity'\n        })\n      })\n    },\n    onClickNameList({ record, pathName }) {\n      this.$router.push({\n        name: this.redirectPath[pathName],\n        query: { id: record.id }\n      })\n    },\n    onClickStop(record) {\n      this.$confirm({\n        title: '提示',\n        content: '确认取消该活动吗?',\n        okText: '是的',\n        cancelText: '再想想',\n        onOk: () => {\n          this.service.cancelSignUp(record.id).subscribe(res => {\n            this.$router.reload()\n          })\n        },\n        onCancel() {}\n      })\n    },\n    onClickCopy({ record, pathName }) {\n      this.$router.push({\n        name: this.redirectPath[pathName],\n        query: { id: record.id }\n      })\n    }\n  }\n}\n",null]}