{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/course/summary.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/course/summary.service.ts","mtime":1600926382560},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { StatApi, OrderShopListQuery } from '@/api/v1/stat/shop';\nimport { forkJoin } from 'rxjs';\nimport { AuthService } from '@/services/auth.service';\n\nvar SummaryService = /*#__PURE__*/function () {\n  function SummaryService(statApi, authService) {\n    _classCallCheck(this, SummaryService);\n\n    this.statApi = statApi;\n    this.authService = authService;\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.total$ = new State({});\n    this.loading$ = new State({});\n    this.auth$ = this.authService.authMap$({\n      export: 'shop:stat:class_reports|export_summary'\n    });\n  }\n\n  _createClass(SummaryService, [{\n    key: \"getCourseList\",\n    value: function getCourseList(query) {\n      var _this = this;\n\n      return this.statApi.getCourseList(query).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n\n        _this.total$.commit(function () {\n          return res.total;\n        });\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init(query) {\n      return forkJoin(this.getCourseList(query));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, form) {\n      return this.init(to.meta.query);\n    }\n  }]);\n\n  return SummaryService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof OrderShopListQuery !== \"undefined\" && OrderShopListQuery) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], SummaryService.prototype, \"getCourseList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], SummaryService.prototype, \"init\", null);\n\nSummaryService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof StatApi !== \"undefined\" && StatApi) === \"function\" ? _b : Object, typeof (_c = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _c : Object])], SummaryService);\nexport { SummaryService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/course/summary.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,OAAT,EAAkB,kBAAlB,QAA4C,oBAA5C;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,WAAT,QAA4B,yBAA5B;;AAEA,IAAa,cAAb;AAQE,0BAAoB,OAApB,EAA8C,WAA9C,EAAsE;AAAA;;AAAlD,SAAA,OAAA,GAAA,OAAA;AAA0B,SAAA,WAAA,GAAA,WAAA;AAP9C,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,MAAA,GAAS,IAAI,KAAJ,CAAU,EAAV,CAAT;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,QAAjB,CAA0B;AAChC,MAAA,MAAM,EAAE;AADwB,KAA1B,CAAR;AAG0E;;AAR5E;AAAA;AAAA,kCAUgB,KAVhB,EAUyC;AAAA;;AACrC,aAAO,KAAK,OAAL,CAAa,aAAb,CAA2B,KAA3B,EAAkC,IAAlC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB;AAAA,iBAAM,GAAG,CAAC,KAAV;AAAA,SAAnB;AACD,OAJE,CADE,CAAP;AAOD;AAlBH;AAAA;AAAA,yBAoBO,KApBP,EAoBiB;AACb,aAAO,QAAQ,CAAC,KAAK,aAAL,CAAmB,KAAnB,CAAD,CAAf;AACD;AAtBH;AAAA;AAAA,+BAuBa,EAvBb,EAuB+B,IAvB/B,EAuBiD;AAC7C,aAAO,KAAK,IAAL,CAAU,EAAE,CAAC,IAAH,CAAQ,KAAlB,CAAP;AACD;AAzBH;;AAAA;AAAA,GAAA;;AAUE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAqB,kB,KAAkB,W,IAAlB,kB,MAAkB,U,GAAA,E,GAAA,M,EAAvC,E,uCAAA,CAAA,E,wBAAA,E,eAAA,EAQC,IARD,CAAA;;AAUA,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,wBAAA,E,MAAA,EAEC,IAFD,CAAA;;AApBW,cAAc,GAAA,UAAA,CAAA,CAD1B,UAAU,EACgB,E,qDAQI,O,KAAO,W,IAAP,O,MAAO,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAuB,WAAvB,KAAkC,WAAlC,IAAuB,WAAvB,MAAkC,UAAlC,GAAkC,EAAlC,GAAkC,M,EAR7C,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { StatApi, OrderShopListQuery } from '@/api/v1/stat/shop'\nimport { forkJoin } from 'rxjs'\nimport { AuthService } from '@/services/auth.service'\n@Injectable()\nexport class SummaryService {\n  list$ = new State([])\n  page$ = new State({})\n  total$ = new State({})\n  loading$ = new State({})\n  auth$ = this.authService.authMap$({\n    export: 'shop:stat:class_reports|export_summary'\n  })\n  constructor(private statApi: StatApi, private authService: AuthService) {}\n  @Effect()\n  getCourseList(query: OrderShopListQuery) {\n    return this.statApi.getCourseList(query).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n        this.total$.commit(() => res.total)\n      })\n    )\n  }\n  @Effect()\n  init(query: any) {\n    return forkJoin(this.getCourseList(query))\n  }\n  beforeEach(to: ServiceRoute, form: ServiceRoute) {\n    return this.init(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}