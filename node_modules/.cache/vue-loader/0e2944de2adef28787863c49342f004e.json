{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/small-course/transfer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/small-course/transfer.vue","mtime":1594718340041},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport { TransferService } from './transfer.service'\nimport { cloneDeep, get } from 'lodash-es'\nimport { PatternService } from '@/services/pattern.service'\nimport { OPERATION_TYPES } from '@/constants/sold/operations'\nimport { ruleOptions } from './transfer.config'\nimport EditableContractNumber from '@/views/biz-components/contract/editable-contract-number.vue'\nimport MemberSearch from '@/views/biz-components/member-search/member-search'\nimport { PERSON_TYPE } from '@/constants/course/small-course'\nexport default {\n  name: 'ModalSoldCourseSmallCourseTransfer',\n  bem: {\n    transfer: 'modal-sold-course-transfer'\n  },\n  serviceProviders() {\n    return [TransferService]\n  },\n  serviceInject() {\n    return {\n      transferService: TransferService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.transferService.loading$,\n      info: this.transferService.info$,\n      memberPaymentlist: this.transferService.memberPaymentlist$\n    }\n  },\n  components: {\n    EditableContractNumber,\n    MemberSearch\n  },\n  props: ['id'],\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      PERSON_TYPE,\n      form,\n      decorators,\n      OPERATION_TYPES,\n      show: false,\n      poundage: ''\n    }\n  },\n  created() {\n    this.transferService.getCourseInfo(this.id).subscribe(res => {\n      this.poundage = this.info.poundage\n      this.transferService\n        .getMemberPaymentList({\n          member_id: get(res, 'info.member_id'),\n          product_type: 7,\n          operation_type: OPERATION_TYPES.TRANSFORM\n        })\n        .subscribe()\n    })\n  },\n  methods: {\n    moment,\n    onSubmit() {\n      this.form.validate().then(values => {\n        this.transferService\n          .editCourseTransfer(\n            {\n              member_id: values.member_id,\n              member_name: values.member_name,\n              mobile: values.mobile ? values.mobile.phone : undefined,\n              country_prefix: values.mobile ? values.mobile.code_id : undefined,\n              remain_price: +values.remainPrice,\n              contract_number: this.info.contract_number,\n              frozen_pay_type: +values.payType,\n              sold_type: this.info.sold_type,\n              handling_fee: this.poundage,\n              handling_fee_reduce: values.handling_fee_reduce,\n              is_minors: values.is_minors,\n              parent_name: values.parent_name,\n              parent_mobile: values.parent_mobile\n                ? values.parent_mobile.phone\n                : undefined,\n              parent_country_prefix: values.parent_mobile\n                ? values.parent_mobile.code_id\n                : undefined,\n              parent_user_role: values.parent_user_role\n            },\n            this.id\n          )\n          .subscribe(res => {\n            this.$emit('success')\n            this.show = false\n          })\n      })\n    }\n  }\n}\n",null]}