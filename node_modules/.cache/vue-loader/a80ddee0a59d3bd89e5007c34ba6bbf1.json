{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/protocol.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/protocol.vue","mtime":1591147717348},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ProtocolService } from './protocol.service'\nimport { MessageService } from '@/services/message.service'\nimport { UserService } from '@/services/user.service'\nimport { ruleOptions } from './protocol.config'\nexport default {\n  bem: {\n    protocol: 'member-protocol'\n  },\n  serviceInject() {\n    return {\n      protocolService: ProtocolService,\n      messageService: MessageService,\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      protocolInfo: this.protocolService.protocolInfo$,\n      loading: this.protocolService.loading$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      isEdit: false,\n      protocolStatus: {\n        1: '开启',\n        2: '关闭'\n      }\n    }\n  },\n  mounted() {\n    if (this.isInit) {\n      this.onEdit()\n    }\n  },\n  computed: {\n    isInit() {\n      return !Object.keys(this.protocolInfo).length\n    }\n  },\n  methods: {\n    onEdit() {\n      this.isEdit = true\n      setTimeout(() => {\n        this.form.setFieldsValue({\n          protocol_status: this.protocolInfo.protocol_status,\n          title: this.protocolInfo.title,\n          content: this.protocolInfo.content\n        })\n      })\n    },\n    onSave() {\n      this.form.validate().then(values => {\n        this.protocolService.update(values).subscribe(() => {\n          this.messageService.success({\n            content: '编辑成功'\n          })\n          this.$router.reload()\n          this.isEdit = false\n        })\n      })\n    },\n    onCancel() {\n      this.isEdit = false\n    }\n  }\n}\n",null]}