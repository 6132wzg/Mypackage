{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop-staff/re-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop-staff/re-password.vue","mtime":1594718339927},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport StaffInfo from './staff-info'\nimport { RePasswordService } from './re-password.service'\nimport { ruleOptions } from './re-password.config'\n\nexport default {\n  name: 'RePassword',\n  serviceInject() {\n    return {\n      rePasswordService: RePasswordService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.rePasswordService.loading$,\n      rePasswordInfo: this.rePasswordService.rePasswordInfo$\n    }\n  },\n  components: {\n    StaffInfo\n  },\n  props: {\n    staff: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      openJurisdiction: false,\n      openRepassword: false, // 重置密码\n      show: false\n    }\n  },\n  computed: {\n    is_permission() {\n      return this.rePasswordInfo.is_permission\n    },\n    hasAccountName() {\n      return this.rePasswordInfo.account_name\n    },\n    bindAccount() {\n      return (\n        this.rePasswordInfo &&\n        this.rePasswordInfo.wechat &&\n        this.rePasswordInfo.mail &&\n        this.rePasswordInfo.phone &&\n        this.rePasswordInfo.QQ\n      )\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    changePermission(e) {\n      this.openJurisdiction = e.target.checked\n    },\n    init() {\n      this.rePasswordService.getRePassword(this.staff.id).subscribe(res => {\n        res = res.account\n        this.openJurisdiction = !!res.is_permission\n        let form = {\n          password: res.password,\n          repeat_password: res.repeat_password\n        }\n        if (this.hasAccountName) {\n          form = Object.assign(form, {\n            name: res.account_name\n          })\n        }\n        this.form.setFieldsValue(form)\n      })\n    },\n    onClickRePassword() {\n      this.openRepassword = true\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const form = {\n          id: this.staff.id,\n          is_permission: +this.openJurisdiction,\n          ...values\n        }\n        // 未创建账号\n        if (!this.hasAccountName) {\n          if (values.name && values.password && values.repeat_password) {\n            this.rePasswordService.setAccount(form).subscribe(() => {\n              this.show = false\n            })\n          } else {\n            this.rePasswordService\n              .updatepermission(this.staff.id, {\n                is_permission: +this.openJurisdiction\n              })\n              .subscribe(() => {\n                this.show = false\n              })\n          }\n        } else {\n          // 填写了账号\n          if (values.password && values.repeat_password) {\n            this.rePasswordService.rePassword(form).subscribe(() => {\n              this.show = false\n            })\n          } else {\n            this.rePasswordService\n              .updatepermission(this.staff.id, {\n                is_permission: +this.openJurisdiction\n              })\n              .subscribe(() => {\n                this.show = false\n              })\n          }\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["re-password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"re-password.vue","sourceRoot":"src/views/biz-modals/shop-staff","sourcesContent":["<template>\n  <st-modal\n    class=\"modal-staff-delete\"\n    title=\"管理登录账号\"\n    @ok=\"onSubmit\"\n    size=\"small\"\n    :confirmLoading=\"\n      openRepassword ? loading.getRePassword : loading.setAccount\n    \"\n    v-model=\"show\"\n  >\n    <staff-info :staff=\"staff\"></staff-info>\n    <div>\n      <st-form :form=\"form\" autocomplete=\"off\">\n        <st-form-item label=\"系统权限\">\n          <a-checkbox\n            :checked=\"openJurisdiction\"\n            @change.stop=\"changePermission\"\n          >\n            开通系统使用权限\n          </a-checkbox>\n        </st-form-item>\n        <!-- 账号重置 -->\n        <st-form-item label=\"登录账号\" v-if=\"hasAccountName\">\n          <span>{{ rePasswordInfo.account_name }}</span>\n          <span style=\"color: #1890FF\" @click=\"onClickRePassword\">\n            重置密码\n          </span>\n        </st-form-item>\n        <!-- 新账号注册 -->\n        <st-form-item\n          label=\"登录账号\"\n          v-if=\"!hasAccountName && openJurisdiction\"\n          required\n        >\n          <a-input\n            autocomplete=\"off\"\n            placeholder=\"6～18个字符，可使用字母，数字，下划线\"\n            v-decorator=\"decorators.name\"\n          />\n        </st-form-item>\n        <st-form-item\n          label=\"登录密码\"\n          v-if=\"!hasAccountName && openJurisdiction\"\n          required\n        >\n          <a-input\n            type=\"password\"\n            autocomplete=\"new-password\"\n            v-decorator=\"decorators.password\"\n            placeholder=\"6~15个字符，区分大小写\"\n          />\n        </st-form-item>\n        <st-form-item\n          label=\"确认密码\"\n          v-if=\"!hasAccountName && openJurisdiction\"\n          required\n        >\n          <a-input\n            autocomplete=\"off\"\n            type=\"password\"\n            v-decorator=\"decorators.repeat_password\"\n            placeholder=\"请再次填写密码\"\n          />\n        </st-form-item>\n        <!-- 登录重置密码 -->\n        <st-form-item label=\"登录密码\" v-if=\"openRepassword\" required>\n          <a-input\n            type=\"password\"\n            autocomplete=\"new-password\"\n            v-decorator=\"decorators.password\"\n            placeholder=\"6~15个字符，区分大小写\"\n          />\n        </st-form-item>\n        <st-form-item label=\"确认密码\" v-if=\"openRepassword\" required>\n          <a-input\n            type=\"password\"\n            autocomplete=\"new-password\"\n            v-decorator=\"decorators.repeat_password\"\n            placeholder=\"请再次填写密码\"\n          />\n        </st-form-item>\n        <!-- 绑定账号 -->\n        <st-form-item label=\"账号绑定\" v-if=\"bindAccount\">\n          <div v-if=\"rePasswordInfo.wechat\">\n            <span>绑定微信号</span>\n            <span>{{ rePasswordInfo.wechat }}</span>\n          </div>\n          <div v-if=\"rePasswordInfo.mail\">\n            <span>绑定邮箱</span>\n            <span>{{ rePasswordInfo.mail }}</span>\n          </div>\n          <div v-if=\"rePasswordInfo.phone\">\n            <span>绑定手机</span>\n            <span>{{ rePasswordInfo.phone }}</span>\n          </div>\n          <div v-if=\"rePasswordInfo.QQ\">\n            <span>绑定qq</span>\n            <span>{{ rePasswordInfo.QQ }}</span>\n          </div>\n        </st-form-item>\n      </st-form>\n    </div>\n  </st-modal>\n</template>\n\n<script>\nimport StaffInfo from './staff-info'\nimport { RePasswordService } from './re-password.service'\nimport { ruleOptions } from './re-password.config'\n\nexport default {\n  name: 'RePassword',\n  serviceInject() {\n    return {\n      rePasswordService: RePasswordService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.rePasswordService.loading$,\n      rePasswordInfo: this.rePasswordService.rePasswordInfo$\n    }\n  },\n  components: {\n    StaffInfo\n  },\n  props: {\n    staff: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      openJurisdiction: false,\n      openRepassword: false, // 重置密码\n      show: false\n    }\n  },\n  computed: {\n    is_permission() {\n      return this.rePasswordInfo.is_permission\n    },\n    hasAccountName() {\n      return this.rePasswordInfo.account_name\n    },\n    bindAccount() {\n      return (\n        this.rePasswordInfo &&\n        this.rePasswordInfo.wechat &&\n        this.rePasswordInfo.mail &&\n        this.rePasswordInfo.phone &&\n        this.rePasswordInfo.QQ\n      )\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    changePermission(e) {\n      this.openJurisdiction = e.target.checked\n    },\n    init() {\n      this.rePasswordService.getRePassword(this.staff.id).subscribe(res => {\n        res = res.account\n        this.openJurisdiction = !!res.is_permission\n        let form = {\n          password: res.password,\n          repeat_password: res.repeat_password\n        }\n        if (this.hasAccountName) {\n          form = Object.assign(form, {\n            name: res.account_name\n          })\n        }\n        this.form.setFieldsValue(form)\n      })\n    },\n    onClickRePassword() {\n      this.openRepassword = true\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const form = {\n          id: this.staff.id,\n          is_permission: +this.openJurisdiction,\n          ...values\n        }\n        // 未创建账号\n        if (!this.hasAccountName) {\n          if (values.name && values.password && values.repeat_password) {\n            this.rePasswordService.setAccount(form).subscribe(() => {\n              this.show = false\n            })\n          } else {\n            this.rePasswordService\n              .updatepermission(this.staff.id, {\n                is_permission: +this.openJurisdiction\n              })\n              .subscribe(() => {\n                this.show = false\n              })\n          }\n        } else {\n          // 填写了账号\n          if (values.password && values.repeat_password) {\n            this.rePasswordService.rePassword(form).subscribe(() => {\n              this.show = false\n            })\n          } else {\n            this.rePasswordService\n              .updatepermission(this.staff.id, {\n                is_permission: +this.openJurisdiction\n              })\n              .subscribe(() => {\n                this.show = false\n              })\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}