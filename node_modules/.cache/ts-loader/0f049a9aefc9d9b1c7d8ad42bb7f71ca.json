{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify/notice.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify/notice.service.ts","mtime":1591147717375},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { NotifyService } from \"./../notify.service\";\nimport { State, Effect } from 'rx-state';\nimport { NotifyApi } from '@/api/v1/notify';\nimport { Injectable } from 'vue-service-app';\nimport { tap } from 'rxjs/operators';\n\nvar NoticeService = /*#__PURE__*/function () {\n  function NoticeService(api, notifyService) {\n    _classCallCheck(this, NoticeService);\n\n    this.api = api;\n    this.notifyService = notifyService;\n    this.loading$ = new State({});\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.info$ = new State({});\n    this.noticeTypeOptions$ = new State({});\n  }\n\n  _createClass(NoticeService, [{\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      return this.api.getNoticeList(query).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n\n        _this.notifyService.getNoticePcUnread().subscribe();\n      }));\n    }\n  }, {\n    key: \"getAnnouncementInfo\",\n    value: function getAnnouncementInfo(query) {\n      var _this2 = this;\n\n      return this.api.getAnnouncementInfo(query).pipe(tap(function (res) {\n        _this2.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"getNoticeEnum\",\n    value: function getNoticeEnum() {\n      var _this3 = this;\n\n      return this.api.getAnnouncementEnum().pipe(tap(function (res) {\n        _this3.noticeTypeOptions$.commit(function () {\n          return [{\n            label: '全部',\n            value: -1\n          }].concat(_toConsumableArray(res.list.map(function (item) {\n            return {\n              label: item.name,\n              value: item.id\n            };\n          })));\n        });\n      }));\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter() {\n      return this.getNoticeEnum();\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to) {\n      return this.getList(to.meta.query);\n    }\n  }]);\n\n  return NoticeService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], NoticeService.prototype, \"getList\", null);\n\nNoticeService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof NotifyApi !== \"undefined\" && NotifyApi) === \"function\" ? _a : Object, typeof (_b = typeof NotifyService !== \"undefined\" && NotifyService) === \"function\" ? _b : Object])], NoticeService);\nexport { NoticeService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify/notice.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,aAAT;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,SAAT,QAA0B,iBAA1B;AACA,SAAS,UAAT,QAAyC,iBAAzC;AACA,SAAS,GAAT,QAAoB,gBAApB;;AAGA,IAAa,aAAb;AAME,yBAAoB,GAApB,EAA4C,aAA5C,EAAwE;AAAA;;AAApD,SAAA,GAAA,GAAA,GAAA;AAAwB,SAAA,aAAA,GAAA,aAAA;AAL5C,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,kBAAA,GAAqB,IAAI,KAAJ,CAAU,EAAV,CAArB;AAC4E;;AAN9E;AAAA;AAAA,4BAQU,KARV,EAQoB;AAAA;;AAChB,aAAO,KAAK,GAAL,CAAS,aAAT,CAAuB,KAAvB,EAA8B,IAA9B,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,aAAL,CAAmB,iBAAnB,GAAuC,SAAvC;AACD,OAJE,CADE,CAAP;AAOD;AAhBH;AAAA;AAAA,wCAiBsB,KAjBtB,EAiBgC;AAAA;;AAC5B,aAAO,KAAK,GAAL,CAAS,mBAAT,CAA6B,KAA7B,EAAoC,IAApC,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,MAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AAvBH;AAAA;AAAA,oCAwBe;AAAA;;AACX,aAAO,KAAK,GAAL,CAAS,mBAAT,GAA+B,IAA/B,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,kBAAL,CAAwB,MAAxB,CAA+B;AAAA,kBAC7B;AAAE,YAAA,KAAK,EAAE,IAAT;AAAe,YAAA,KAAK,EAAE,CAAC;AAAvB,WAD6B,4BAE1B,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAa,UAAC,IAAD,EAAc;AAC5B,mBAAO;AAAE,cAAA,KAAK,EAAE,IAAI,CAAC,IAAd;AAAoB,cAAA,KAAK,EAAE,IAAI,CAAC;AAAhC,aAAP;AACD,WAFE,CAF0B;AAAA,SAA/B;AAMD,OAPE,CADE,CAAP;AAUD;AAnCH;AAAA;AAAA,uCAoCkB;AACd,aAAO,KAAK,aAAL,EAAP;AACD;AAtCH;AAAA;AAAA,+BAuCa,EAvCb,EAuC6B;AACzB,aAAO,KAAK,OAAL,CAAa,EAAE,CAAC,IAAH,CAAQ,KAArB,CAAP;AACD;AAzCH;;AAAA;AAAA,GAAA;;AAQE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,uBAAA,E,SAAA,EAQC,IARD,CAAA;;AARW,aAAa,GAAA,UAAA,CAAA,CADzB,UAAU,EACe,E,qDAMC,S,KAAS,W,IAAT,S,MAAS,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAyB,aAAzB,KAAsC,WAAtC,IAAyB,aAAzB,MAAsC,UAAtC,GAAsC,EAAtC,GAAsC,M,EANhD,CAAA,EAAb,aAAa,CAAb;SAAA,a","sourcesContent":["import { NotifyService } from './../notify.service'\nimport { State, Effect } from 'rx-state'\nimport { NotifyApi } from '@/api/v1/notify'\nimport { Injectable, ServiceRoute } from 'vue-service-app'\nimport { tap } from 'rxjs/operators'\n\n@Injectable()\nexport class NoticeService {\n  loading$ = new State({})\n  list$ = new State([])\n  page$ = new State({})\n  info$ = new State({})\n  noticeTypeOptions$ = new State({})\n  constructor(private api: NotifyApi, private notifyService: NotifyService) {}\n  @Effect()\n  getList(query: any) {\n    return this.api.getNoticeList(query).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n        this.notifyService.getNoticePcUnread().subscribe()\n      })\n    )\n  }\n  getAnnouncementInfo(query: any) {\n    return this.api.getAnnouncementInfo(query).pipe(\n      tap(res => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n  getNoticeEnum() {\n    return this.api.getAnnouncementEnum().pipe(\n      tap((res: any) => {\n        this.noticeTypeOptions$.commit(() => [\n          { label: '全部', value: -1 },\n          ...res.list.map((item: any) => {\n            return { label: item.name, value: item.id }\n          })\n        ])\n      })\n    )\n  }\n  beforeRouteEnter() {\n    return this.getNoticeEnum()\n  }\n  beforeEach(to: ServiceRoute) {\n    return this.getList(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}