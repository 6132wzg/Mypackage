{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/physical-test/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/physical-test/list.vue","mtime":1597396799951},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport MarkteingPluginTitle from '@/views/pages/brand/marketing/components#/marketing-title';\nimport BrandAppPhysicalTestNewLabel from '@/views/biz-modals/brand/app/physical-test/new-label';\nimport { ListService } from \"./list.service\";\nimport { cloneDeep } from 'lodash-es';\nimport { TYPE } from '@/constants/marketing/plugin';\nexport default {\n  name: 'brand-app-physical-test',\n  bem: {\n    b: 'brand-app-physical-test'\n  },\n  components: {\n    MarkteingPluginTitle: MarkteingPluginTitle\n  },\n  modals: {\n    BrandAppPhysicalTestNewLabel: BrandAppPhysicalTestNewLabel\n  },\n  serviceInject: function serviceInject() {\n    return {\n      physicalTestService: ListService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.physicalTestService.loading$,\n      indicators: this.physicalTestService.list$,\n      labels: this.physicalTestService.labelList$,\n      auth: this.physicalTestService.auth$\n    };\n  },\n  props: {},\n  data: function data() {\n    return {\n      statusAdd: false,\n      statusEdit: false,\n      tags: [],\n      editIndicator: {},\n      TYPE: TYPE\n    };\n  },\n  computed: {\n    indicatorsNum: function indicatorsNum() {\n      var len = this.indicators.length;\n\n      if (len === 1) {\n        return 0;\n      } else {\n        return this.statusAdd ? len - 2 : len - 1;\n      }\n    },\n    canEditIndicator: function canEditIndicator() {\n      return this.indicators.slice(1);\n    },\n    addButtonDisable: function addButtonDisable() {\n      if (this.auth.add) {\n        return this.statusAdd;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    checkMove: function checkMove(evt) {\n      var draggedContext = evt.draggedContext,\n          relatedContext = evt.relatedContext,\n          dragged = evt.dragged,\n          from = evt.from,\n          to = evt.to;\n      var draggedElement = draggedContext.element;\n      var relatedElement = relatedContext.element;\n      console.log('statusEdit', this.statusEdit); // 新增状态不可拖拽\n\n      if (this.statusAdd) return false; // 编辑状态不可拖拽\n\n      if (this.statusEdit) return false;\n      return (!relatedElement || !relatedElement.isAdd) && !draggedElement.isAdd;\n    },\n    resetIndicator: function resetIndicator() {\n      this.editIndicator = {\n        item_name: '',\n        item_unit: '',\n        is_show: 1,\n        is_must: 1,\n        isEdit: true\n      };\n    },\n    handleReGetBodyImg: function handleReGetBodyImg() {\n      this.$message.success({\n        content: '体态图新增成功'\n      });\n      this.physicalTestService.getBodyImgLableList().subscribe();\n    },\n    handleRemoveTag: function handleRemoveTag(tag) {\n      var _this = this;\n\n      this.physicalTestService.removePhysicalTestBodyImgLabel(tag.id).subscribe(function (res) {\n        _this.$message.success({\n          content: '体态图删除成功'\n        });\n\n        _this.physicalTestService.getBodyImgLableList().subscribe();\n      });\n    },\n    handleAddIndicator: function handleAddIndicator() {\n      this.indicators = this.indicators.map(function (i) {\n        i.isEdit = false;\n        return i;\n      });\n      this.statusAdd = true;\n      this.resetIndicator();\n      this.indicators.splice(1, 0, this.editIndicator);\n    },\n    handleEditIndicator: function handleEditIndicator(indicator) {\n      this.statusEdit = true; // 如果是从新增状态,点击编辑按钮时\n\n      if (this.statusAdd) {\n        this.indicators.splice(1, 1);\n        this.statusAdd = false;\n      }\n\n      this.editIndicator = cloneDeep(indicator);\n      this.indicators = this.indicators.map(function (i) {\n        if (i.id === indicator.id) {\n          i.isEdit = true;\n        } else {\n          i.isEdit = false;\n        }\n\n        return i;\n      });\n    },\n    handleRemoveIndicators: function handleRemoveIndicators(indicator) {\n      var _this2 = this;\n\n      this.physicalTestService.deleteBodyIndicator(indicator.id).subscribe(function (res) {\n        _this2.statusEdit = false;\n        _this2.indicators = _this2.indicators.filter(function (i) {\n          return i.id !== indicator.id;\n        });\n      });\n    },\n    handleSaveIndicators: function handleSaveIndicators(indicator) {\n      var _this3 = this;\n\n      console.log('handleSaveIndicators', indicator);\n\n      if (this.statusAdd) {\n        this.physicalTestService.addBodyIndicator({\n          item_name: indicator.item_name,\n          item_unit: indicator.item_unit,\n          is_show: indicator.is_show,\n          is_must: indicator.is_must\n        }).subscribe(function (res) {\n          // 保存新增的基础提测数据\n          _this3.statusEdit = false;\n          _this3.statusAdd = false;\n\n          _this3.resetIndicator();\n\n          _this3.physicalTestService.getBodyIndicatorList().subscribe();\n\n          console.log('res');\n        });\n      } else {\n        // 保存修改的基础提测数据\n        this.physicalTestService.editBodyIndicator({\n          id: this.editIndicator.id,\n          item_name: this.editIndicator.item_name,\n          item_unit: this.editIndicator.item_unit,\n          is_show: this.editIndicator.is_show,\n          is_must: this.editIndicator.is_must\n        }).subscribe(function (res) {\n          _this3.statusEdit = false;\n          _this3.indicators = _this3.indicators.map(function (i) {\n            if (i.id === indicator.id) {\n              _this3.editIndicator.isEdit = false;\n              i = _this3.editIndicator;\n\n              _this3.resetIndicator();\n            }\n\n            return i;\n          });\n        });\n      }\n    },\n    handleCancelEditIndicators: function handleCancelEditIndicators(indicator) {\n      this.statusEdit = false;\n\n      if (this.statusAdd) {\n        this.indicators.splice(1, 1);\n        this.resetIndicator();\n        this.statusAdd = false;\n      } else {\n        this.indicators = this.indicators.map(function (i) {\n          i.isEdit = false;\n          return i;\n        });\n      }\n    },\n    handleSortIndicator: function handleSortIndicator() {\n      var indicators = this.indicators.slice(1);\n      this.physicalTestService.moveBodyIndicators({\n        item_sort: indicators\n      }).subscribe();\n    },\n    dragStart: function dragStart(ev) {\n      ev.item.classList.add('dragged');\n    },\n    dragEnd: function dragEnd(ev) {\n      ev.item.classList.remove('dragged');\n    }\n  }\n};",null]}