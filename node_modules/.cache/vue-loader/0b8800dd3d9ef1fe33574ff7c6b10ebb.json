{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/list.vue","mtime":1601345845257},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ListService } from './list.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './list.config'\nimport { ruleOptions } from './list.config'\nimport ShopList from '@/views/biz-modals/package/shop-list'\nimport Synchronize from '@/views/biz-modals/package/synchronize'\nimport SuccessTip from '@/views/biz-modals/package/success-tip'\nimport SoldCoursePackageUpdateRights from '@/views/biz-modals/sold/course/package/update-rights'\nimport userPackageActions from '@/hooks/package/package-actions.hook'\nexport default {\n  name: 'BrandPackageList',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      listService: ListService\n    }\n  },\n  modals: {\n    ShopList,\n    Synchronize,\n    SuccessTip,\n    SoldCoursePackageUpdateRights\n  },\n  hooks() {\n    return {\n      userPackageActions: userPackageActions(this)\n    }\n  },\n  rxState() {\n    const {\n      list$,\n      page$,\n      loading$,\n      auth$,\n      packageType$,\n      publicChannel$,\n      supportNum$\n    } = this.listService\n    return {\n      list$,\n      page$,\n      loading$,\n      auth$,\n      packageType$,\n      publicChannel$,\n      supportNum$\n    }\n  },\n  bem: {\n    b: 'page-brand-package-list'\n  },\n  data() {\n    return {\n      FIXATION: 3,\n      UNLIMIT: 1,\n      RANGE: 2,\n      pageType: 'brand'\n    }\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    addPackage() {\n      this.$router.push({ name: 'brand-product-package-add' })\n    },\n    getShopList(id) {\n      this.$modalRouter.push({\n        name: 'shop-list',\n        props: {\n          id\n        }\n      })\n    },\n    onUpShelf(id, channel) {\n      this.userPackageActions.onUpShelf({\n        id,\n        channel,\n        pageType: this.pageType\n      })\n    },\n    onDownShelf(id) {\n      this.userPackageActions.onDownShelf({ id, pageType: this.pageType })\n    },\n    batchOperate(id) {\n      this.$modalRouter.push({\n        name: 'Synchronize',\n        on: {\n          success: () => {\n            this.$confirm({\n              title: '提示',\n              content: `请再次确认是否同步，同步后会覆盖售出课程包，将会有2～5s无法正常使用`,\n              onOk: () => {\n                this.listService.setSyncSold(id).subscribe(res => {\n                  this.$modalRouter.push({\n                    name: 'success-tip'\n                  })\n                  this.$router.reload()\n                })\n              },\n              onCancel() {}\n            })\n          }\n        }\n      })\n    },\n    deletePackage(id, name) {\n      this.userPackageActions\n        .deletePackage(\n          id,\n          name,\n          this.listService.deletePackage.bind(this.listService)\n        )\n        .then(res => {\n          this.$router.reload()\n        })\n    },\n    onEdit(id) {\n      this.userPackageActions.onEdit({ pageType: this.pageType, id })\n    },\n    onDetail(id, packageType) {\n      this.$router.push({\n        name: 'brand-product-package-info',\n        query: {\n          id,\n          packageType\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["list.vue"],"names":[],"mappingsfile":"list.vue","sourceRoot":"src/views/pages/brand/product/package","sourcesContent":["<template>\n  <st-panel app :class=\"b()\">\n    <div slot=\"title\">\n      <st-input-search\n        @search=\"onSingleSearch('course_name', $event, true)\"\n        v-model=\"$searchQuery.course_name\"\n        placeholder=\"课程包名称\"\n      />\n    </div>\n    <div :class=\"b('operation')\">\n      <st-button\n        type=\"primary\"\n        @click=\"addPackage\"\n        :disabled=\"!auth$.add\"\n        icon=\"add\"\n      >\n        新增课程包\n      </st-button>\n      <div :class=\"b('select-group')\">\n        <a-select\n          v-model=\"$searchQuery.support_num\"\n          @change=\"onSingleSearch('support_num', $event)\"\n          :class=\"b('select')\"\n          class=\"mg-r16\"\n          style=\"width: 160px\"\n          :options=\"supportNum$\"\n        />\n        <a-select\n          v-model=\"$searchQuery.package_type\"\n          @change=\"onSingleSearch('package_type', $event)\"\n          :class=\"b('select')\"\n          style=\"width: 160px\"\n          :options=\"packageType$\"\n        />\n        <a-select\n          v-model=\"$searchQuery.publish_channel\"\n          @change=\"onSingleSearch('publish_channel', $event)\"\n          :class=\"b('select')\"\n          class=\"mg-l16\"\n          style=\"width: 160px\"\n          :options=\"publicChannel$\"\n        />\n      </div>\n    </div>\n    <st-table\n      class=\"mg-t16\"\n      :page=\"page$\"\n      :columns=\"columns\"\n      @change=\"onTableChange\"\n      rowKey=\"package_course_id\"\n      :dataSource=\"list$\"\n      :loading=\"loading$.getList\"\n    >\n      <template slot=\"package_type\" slot-scope=\"text\">\n        {{ text | enumFilter('package_course.package_type') }}\n      </template>\n      <template slot=\"valid_time\" slot-scope=\"text, record\">\n        <span class=\"white-nowrap\">\n          {{ text }}\n          {{\n            record.valid_time_unit\n              | enumFilter('package_course.valid_time_unit')\n          }}\n        </span>\n      </template>\n      <template slot=\"is_limit\" slot-scope=\"text\">\n        <span>{{ text | enumFilter('package_course.is_limit') }}</span>\n      </template>\n      <template slot=\"sale_shop_num\" slot-scope=\"text, record\">\n        <a @click=\"getShopList(record.package_course_id)\">\n          {{ `${record.up_shop_num} / ${text}` }}\n        </a>\n      </template>\n\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <st-table-actions>\n          <a\n            v-if=\"record.auth['brand:product:package_course|edit']\"\n            @click=\"onEdit(record.package_course_id)\"\n          >\n            编辑\n          </a>\n          <a\n            v-if=\"record.auth['brand:product:package_course|get']\"\n            @click=\"onDetail(record.package_course_id, record.package_type)\"\n          >\n            详情\n          </a>\n          <a\n            v-if=\"record.auth['brand:product:package_course|up']\"\n            @click=\"\n              onUpShelf(\n                record.package_course_id,\n                record.publish_channel,\n                record.is_permanent_sale\n              )\n            \"\n          >\n            上架\n          </a>\n          <a\n            v-if=\"record.auth['brand:product:package_course|down']\"\n            @click=\"onDownShelf(record.package_course_id, record.course_name)\"\n          >\n            下架\n          </a>\n          <a\n            v-if=\"record.auth['brand:product:package_course|batch_operate']\"\n            @click=\"batchOperate(record.package_course_id, record.course_name)\"\n          >\n            应用至售出\n          </a>\n          <a\n            v-if=\"record.auth['brand:product:package_course|del']\"\n            @click=\"deletePackage(record.package_course_id, record.course_name)\"\n          >\n            删除\n          </a>\n          <a\n            v-if=\"record.auth['brand:product:package_course|sync_rights']\"\n            v-modal-link=\"{\n              name: 'sold-course-package-update-rights',\n              props: {\n                id: record.package_course_id,\n                isSync: true,\n                isShowLink: true,\n                isBrandTaskLink: true\n              }\n            }\"\n          >\n            修改售出权益\n          </a>\n        </st-table-actions>\n      </div>\n    </st-table>\n  </st-panel>\n</template>\n<script>\nimport { ListService } from './list.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './list.config'\nimport { ruleOptions } from './list.config'\nimport ShopList from '@/views/biz-modals/package/shop-list'\nimport Synchronize from '@/views/biz-modals/package/synchronize'\nimport SuccessTip from '@/views/biz-modals/package/success-tip'\nimport SoldCoursePackageUpdateRights from '@/views/biz-modals/sold/course/package/update-rights'\nimport userPackageActions from '@/hooks/package/package-actions.hook'\nexport default {\n  name: 'BrandPackageList',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      listService: ListService\n    }\n  },\n  modals: {\n    ShopList,\n    Synchronize,\n    SuccessTip,\n    SoldCoursePackageUpdateRights\n  },\n  hooks() {\n    return {\n      userPackageActions: userPackageActions(this)\n    }\n  },\n  rxState() {\n    const {\n      list$,\n      page$,\n      loading$,\n      auth$,\n      packageType$,\n      publicChannel$,\n      supportNum$\n    } = this.listService\n    return {\n      list$,\n      page$,\n      loading$,\n      auth$,\n      packageType$,\n      publicChannel$,\n      supportNum$\n    }\n  },\n  bem: {\n    b: 'page-brand-package-list'\n  },\n  data() {\n    return {\n      FIXATION: 3,\n      UNLIMIT: 1,\n      RANGE: 2,\n      pageType: 'brand'\n    }\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    addPackage() {\n      this.$router.push({ name: 'brand-product-package-add' })\n    },\n    getShopList(id) {\n      this.$modalRouter.push({\n        name: 'shop-list',\n        props: {\n          id\n        }\n      })\n    },\n    onUpShelf(id, channel) {\n      this.userPackageActions.onUpShelf({\n        id,\n        channel,\n        pageType: this.pageType\n      })\n    },\n    onDownShelf(id) {\n      this.userPackageActions.onDownShelf({ id, pageType: this.pageType })\n    },\n    batchOperate(id) {\n      this.$modalRouter.push({\n        name: 'Synchronize',\n        on: {\n          success: () => {\n            this.$confirm({\n              title: '提示',\n              content: `请再次确认是否同步，同步后会覆盖售出课程包，将会有2～5s无法正常使用`,\n              onOk: () => {\n                this.listService.setSyncSold(id).subscribe(res => {\n                  this.$modalRouter.push({\n                    name: 'success-tip'\n                  })\n                  this.$router.reload()\n                })\n              },\n              onCancel() {}\n            })\n          }\n        }\n      })\n    },\n    deletePackage(id, name) {\n      this.userPackageActions\n        .deletePackage(\n          id,\n          name,\n          this.listService.deletePackage.bind(this.listService)\n        )\n        .then(res => {\n          this.$router.reload()\n        })\n    },\n    onEdit(id) {\n      this.userPackageActions.onEdit({ pageType: this.pageType, id })\n    },\n    onDetail(id, packageType) {\n      this.$router.push({\n        name: 'brand-product-package-info',\n        query: {\n          id,\n          packageType\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}