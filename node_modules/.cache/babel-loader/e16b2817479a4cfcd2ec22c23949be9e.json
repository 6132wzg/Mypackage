{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/department#/tree/tree-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/department#/tree/tree-item.vue","mtime":1591147717364},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { DepartmentService } from '@/views/pages/brand/staff/department.service';\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      departmentService: DepartmentService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      auth: this.departmentService.auth$\n    };\n  },\n  name: 'TreeItem',\n  props: {\n    item: Object,\n    level: {\n      type: Number,\n      default: function _default() {\n        return 0;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      editValue: '',\n      addValue: '',\n      isActive: false,\n      opreations: [{\n        clickName: this.addTreeNade,\n        name: '新增'\n      }, {\n        clickName: this.editTreeNade,\n        name: '编辑'\n      }, {\n        clickName: this.deleteTreeNade,\n        name: '删除'\n      }],\n      placements: ['bottomLeft'],\n      visible: false,\n      isOpen: false\n    };\n  },\n  computed: {\n    isFolder: function isFolder() {\n      return this.item.children && this.item.children.length;\n    },\n    paddingLeft: function paddingLeft() {\n      if (!this.level) return 20 + 'px';\n      return (this.level - 1) * 16 + 20 + 'px';\n    }\n  },\n  methods: {\n    cancelAdd: function cancelAdd() {\n      this.item.isAdd = false;\n    },\n    cancelEdit: function cancelEdit() {\n      this.item.isEdit = false;\n    },\n    editTreeNode: function editTreeNode() {\n      var _this = this;\n\n      console.log('editTreeNode', this.$refs.treeNode);\n      this.editValue = this.item.name;\n      this.$emit('edit-item', this.item);\n      this.$nextTick().then(function () {\n        var doms = document.querySelectorAll('.tree-node__content');\n        doms.forEach(function (dom) {\n          dom.setAttribute('class', 'tree-node__content');\n        });\n\n        _this.$refs.treeNode.setAttribute('class', 'tree-node__content active');\n      });\n    },\n    addTreeNode: function addTreeNode() {\n      var _this2 = this;\n\n      console.log('addTreeNode', this.$refs.treeNode);\n      this.$emit('add-item', this.item);\n      this.$nextTick().then(function () {\n        var doms = document.querySelectorAll('.tree-node__content');\n        doms.forEach(function (dom) {\n          dom.setAttribute('class', 'tree-node__content');\n        });\n\n        _this2.$refs.treeNode.setAttribute('class', 'tree-node__content active');\n      });\n    },\n    toggle: function toggle(e) {\n      if (this.isFolder) {\n        this.isOpen = !this.isOpen;\n      }\n    },\n    addDepartment: function addDepartment(item) {\n      var _this3 = this;\n\n      console.log('addDepartment', this.$refs.treeNode, item);\n      this.cancelAdd();\n      this.departmentService.addDepartment({\n        parent_id: this.item.id,\n        department_name: this.addValue\n      }).subscribe(function () {\n        _this3.$emit('update-data');\n      });\n    },\n    editDepartment: function editDepartment(item) {\n      var _this4 = this;\n\n      console.log('editDepartment', this.$refs.treeNode, item);\n      this.cancelEdit();\n      this.departmentService.updateDepartment({\n        id: this.item.id,\n        department_name: this.editValue\n      }).subscribe(function () {\n        _this4.$emit('update-data');\n      });\n    },\n    deleteDepartment: function deleteDepartment(item) {\n      var _this5 = this;\n\n      console.log('deleteDepartment', this.$refs.treeNode, item);\n\n      if (item.count > 0) {\n        this.$error({\n          title: '',\n          content: '当前部门下有员工，无法删除'\n        });\n      } else {\n        this.$confirm({\n          title: '确认要删除',\n          content: '删除部门后,部门无法恢复，确认删除？',\n          onOk: function onOk() {\n            return new Promise(function (resolve, reject) {\n              return _this5.departmentService.delDepartment({\n                id: _this5.item.id\n              }).subscribe(function () {\n                setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n\n                _this5.$emit('update-data');\n              });\n            }).catch(function () {\n              return console.log('Oops errors!');\n            });\n          },\n          onCancel: function onCancel() {}\n        });\n      }\n    },\n    getTreeNodeOnclick: function getTreeNodeOnclick(e) {\n      this.isActive = true;\n      this.$emit('node-item-detail', this.item);\n      this.$nextTick().then(function () {\n        var doms = document.querySelectorAll('.tree-node__content');\n        var treeOpreationEle = document.querySelectorAll('.tree-node__content .tree-opreation');\n        treeOpreationEle.forEach(function (dom) {\n          dom.setAttribute('class', 'tree-opreation');\n        });\n        doms.forEach(function (dom) {\n          dom.setAttribute('class', 'tree-node__content');\n        });\n        e.currentTarget.querySelector('.tree-opreation').setAttribute('class', 'tree-opreation active');\n        e.currentTarget.setAttribute('class', 'tree-node__content active');\n      });\n    },\n    hide: function hide() {\n      this.visible = false;\n    },\n    makeFolder: function makeFolder() {\n      if (!this.isFolder) {\n        this.$emit('make-folder', this.item);\n        this.isOpen = true;\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (this.level === 0) {\n      this.isOpen = true;\n    } else {\n      this.$set(this.item, 'isEdit', false);\n      this.$set(this.item, 'isAdd', false);\n    }\n  }\n};",null]}