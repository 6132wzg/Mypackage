import Vue from 'vue'

interface StFormRuleConfig {
  /**
   * 自定义校验
   * 返回字符串代表校验错误
   */
  validator(rule: StFormRuleConfig, value: any, values: object): any
  /**
   * 校验前转换字段值
   */
  transform(value: any): any
  /**
   * 正则表达式校验
   */
  defalutMessage: string
  pattern: RegExp
  message: string
  enum: string
  len: number
  max: number
  min: number
  required: boolean
  type: string
  whitespace: boolean
}

interface StFormDecoratorConfig {
  [key: string]: {
    rules: StFormRuleConfig[]
    initialValue: any
    /**
     * 转换默认的 value 给控件
     */
    normalize(value: any, preValue: any, allValues: any): any
    preserve: boolean
    /**
     * 收集子节点的值的时机
     */
    trigger: string
    /**
     * 当某一规则校验不通过时，是否停止剩下的规则的校验
     */
    validateFirst: boolean
    /**
     * 校验子节点值的时机
     */
    validateTrigger: string
    /**
     * 子节点的值的属性
     */
    valuePropName: string
  }
}

export interface StForm {
  decorators(
    decoratorConfig:
      | StFormDecoratorConfig
      | ((vm: Vue) => StFormDecoratorConfig)
  ): object
}

export interface StFormFactory {
  create(): StForm
}
