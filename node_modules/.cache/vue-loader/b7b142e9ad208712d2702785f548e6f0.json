{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/course/team/course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/course/team/course.vue","mtime":1598250255914},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport shopSelect from '@/views/biz-components/shop-select'\nimport StaffSelect from '@/views/biz-components/staff-select'\nimport StTotal from '@/views/biz-components/st/total/total.vue'\nimport StTotalItem from '@/views/biz-components/st/total/total-item.vue'\nimport ShopStatFreeCoachModal from '@/views/biz-modals/stat/free-coach'\nimport ShopStatTeamReserveModal from '@/views/biz-modals/stat/team-reserve'\n\nimport { CourseService } from './course.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, totalColumns } from './course.config'\nimport moment from 'moment'\n\nexport default {\n  name: 'BrandCoachTeamCourse',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      service: CourseService\n    }\n  },\n  rxState() {\n    const {\n      list$,\n      page$,\n      total$,\n      auth$,\n      loading$,\n      productType$,\n      categoryList$,\n      courseList$\n    } = this.service\n    return {\n      list: list$,\n      page: page$,\n      total: total$,\n      auth: auth$,\n      courseList: courseList$,\n      categoryList: categoryList$,\n      productType: productType$,\n      loading: loading$\n    }\n  },\n  modals: {\n    ShopStatFreeCoachModal,\n    ShopStatTeamReserveModal\n  },\n  bem: {\n    b: 'page-shop-coach-team-course',\n    bHeader: 'page-shop-stat-header'\n  },\n  watch: {\n    courseList: {\n      deep: true,\n      handler() {\n        !this.courseList.find(\n          item => item.id === this.$searchQuery.course_id\n        ) &&\n          this.$router.push({\n            query: {\n              ...this.finalSearchQuery,\n              course_id: -1\n            }\n          })\n      }\n    }\n  },\n  data() {\n    return {\n      columns,\n      totalColumns,\n      coursePage: {\n        current_page: 1,\n        size: 20\n      }\n    }\n  },\n  created() {\n    this.service.getCategoryList().subscribe()\n    this.service\n      .getCourseList(\n        {\n          type: 1,\n          category_id: this.$searchQuery.category_id,\n          ...this.coursePage\n        },\n        true\n      )\n      .subscribe()\n  },\n  computed: {\n    value() {\n      let day = this.$searchQuery.start_date ? 0 : this.$searchQuery.day\n      return {\n        day,\n        start_date: this.$searchQuery.start_date,\n        end_date: this.$searchQuery.end_date\n      }\n    }\n  },\n  methods: {\n    moment,\n    onChangeTableDays(event) {\n      this.$searchQuery.day = event.recently_day || undefined\n      this.$searchQuery.start_date = event.start_date || undefined\n      this.$searchQuery.end_date = event.end_date || undefined\n      this.onSearch()\n    },\n    onStaffSelectRefresh(isreload = false, query = {}) {\n      console.log('isReload', isreload)\n      this.coursePage.current_page = isreload\n        ? 1\n        : this.coursePage.current_page + 1\n      return this.service\n        .getCourseList(\n          {\n            type: 1,\n            ...query,\n            category_id: this.$searchQuery.category_id,\n            ...this.coursePage\n          },\n          isreload\n        )\n        .subscribe()\n    }\n  },\n  components: {\n    StTotal,\n    StTotalItem\n  }\n}\n",{"version":3,"sources":["course.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"course.vue","sourceRoot":"src/views/pages/shop/stat/course/team","sourcesContent":["<template>\n  <div :class=\"b('panne')\">\n    <div :class=\"b('section')\">\n      <header :class=\"bHeader('header')\">\n        <div :class=\"bHeader('button-wapper')\">\n          <st-button\n            type=\"primary\"\n            v-if=\"auth.export\"\n            v-export-excel=\"{\n              type: 'shop/team_course/export',\n              query: $searchQuery\n            }\"\n          >\n            全部导出\n          </st-button>\n        </div>\n        <div :class=\"bHeader('actions')\">\n          <st-select\n            :options=\"categoryList\"\n            :defaultLabel=\"'全部课程类型'\"\n            v-model=\"$searchQuery.category_id\"\n            @change=\"onSingleSearch('category_id', $event)\"\n          ></st-select>\n          <st-select-scroll\n            style=\"width: 150px\"\n            _label=\"course_name\"\n            _value=\"id\"\n            showArrow\n            isSrcoll\n            v-model=\"$searchQuery.course_id\"\n            :showSearch=\"false\"\n            :query=\"{\n              category_id: $searchQuery.category_id\n            }\"\n            :list=\"courseList\"\n            @change=\"onSingleSearch('course_id', $event)\"\n            @refresh=\"onStaffSelectRefresh(true, $event)\"\n            @search=\"onStaffSelectRefresh(true, $event)\"\n            @scroll=\"onStaffSelectRefresh(false, $event)\"\n          ></st-select-scroll>\n          <st-recent-radio-group\n            @change=\"onChangeTableDays\"\n            :value=\"value\"\n            :disabledDate=\"\n              current =>\n                current.format('YYYY-MM-DD') &&\n                current.format('YYYY-MM-DD') >= moment().format('YYYY-MM-DD')\n            \"\n          ></st-recent-radio-group>\n        </div>\n      </header>\n      <main :class=\"b('mian')\">\n        <st-total\n          :class=\"b('total')\"\n          :indexs=\"totalColumns\"\n          :dataSource=\"total\"\n          hasTitle\n        >\n          <a\n            slot=\"total_num\"\n            slot-scope=\"item\"\n            v-modal-link=\"{\n              name: 'shop-stat-team-reserve-modal',\n              props: {\n                query: $searchQuery,\n                title: '预约明细',\n                type: 'shop-team-course'\n              }\n            }\"\n          >\n            <st-total-item\n              :unit=\"item.unit\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></st-total-item>\n          </a>\n        </st-total>\n        <st-table\n          class=\"mg-t16\"\n          :loading=\"loading.getList\"\n          :columns=\"columns\"\n          :scroll=\"{ x: 1400 }\"\n          :rowKey=\"(record, idx) => idx\"\n          :page=\"page\"\n          @change=\"onTableChange\"\n          :dataSource=\"list\"\n        >\n          <a\n            slot=\"total_num\"\n            slot-scope=\"text, record\"\n            v-modal-link=\"{\n              name: 'shop-stat-team-reserve-modal',\n              props: {\n                query: { ...$searchQuery, course_id: record.course_id },\n                title: '预约明细',\n                type: 'shop-team-course'\n              }\n            }\"\n          >\n            {{ text }}\n          </a>\n        </st-table>\n      </main>\n    </div>\n  </div>\n</template>\n<script>\nimport shopSelect from '@/views/biz-components/shop-select'\nimport StaffSelect from '@/views/biz-components/staff-select'\nimport StTotal from '@/views/biz-components/st/total/total.vue'\nimport StTotalItem from '@/views/biz-components/st/total/total-item.vue'\nimport ShopStatFreeCoachModal from '@/views/biz-modals/stat/free-coach'\nimport ShopStatTeamReserveModal from '@/views/biz-modals/stat/team-reserve'\n\nimport { CourseService } from './course.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, totalColumns } from './course.config'\nimport moment from 'moment'\n\nexport default {\n  name: 'BrandCoachTeamCourse',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      service: CourseService\n    }\n  },\n  rxState() {\n    const {\n      list$,\n      page$,\n      total$,\n      auth$,\n      loading$,\n      productType$,\n      categoryList$,\n      courseList$\n    } = this.service\n    return {\n      list: list$,\n      page: page$,\n      total: total$,\n      auth: auth$,\n      courseList: courseList$,\n      categoryList: categoryList$,\n      productType: productType$,\n      loading: loading$\n    }\n  },\n  modals: {\n    ShopStatFreeCoachModal,\n    ShopStatTeamReserveModal\n  },\n  bem: {\n    b: 'page-shop-coach-team-course',\n    bHeader: 'page-shop-stat-header'\n  },\n  watch: {\n    courseList: {\n      deep: true,\n      handler() {\n        !this.courseList.find(\n          item => item.id === this.$searchQuery.course_id\n        ) &&\n          this.$router.push({\n            query: {\n              ...this.finalSearchQuery,\n              course_id: -1\n            }\n          })\n      }\n    }\n  },\n  data() {\n    return {\n      columns,\n      totalColumns,\n      coursePage: {\n        current_page: 1,\n        size: 20\n      }\n    }\n  },\n  created() {\n    this.service.getCategoryList().subscribe()\n    this.service\n      .getCourseList(\n        {\n          type: 1,\n          category_id: this.$searchQuery.category_id,\n          ...this.coursePage\n        },\n        true\n      )\n      .subscribe()\n  },\n  computed: {\n    value() {\n      let day = this.$searchQuery.start_date ? 0 : this.$searchQuery.day\n      return {\n        day,\n        start_date: this.$searchQuery.start_date,\n        end_date: this.$searchQuery.end_date\n      }\n    }\n  },\n  methods: {\n    moment,\n    onChangeTableDays(event) {\n      this.$searchQuery.day = event.recently_day || undefined\n      this.$searchQuery.start_date = event.start_date || undefined\n      this.$searchQuery.end_date = event.end_date || undefined\n      this.onSearch()\n    },\n    onStaffSelectRefresh(isreload = false, query = {}) {\n      console.log('isReload', isreload)\n      this.coursePage.current_page = isreload\n        ? 1\n        : this.coursePage.current_page + 1\n      return this.service\n        .getCourseList(\n          {\n            type: 1,\n            ...query,\n            category_id: this.$searchQuery.category_id,\n            ...this.coursePage\n          },\n          isreload\n        )\n        .subscribe()\n    }\n  },\n  components: {\n    StTotal,\n    StTotalItem\n  }\n}\n</script>\n"]}]}