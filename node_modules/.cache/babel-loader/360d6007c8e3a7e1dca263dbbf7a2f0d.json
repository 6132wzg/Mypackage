{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/desc/desc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/desc/desc.vue","mtime":1594864208765},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport StDescItem from \"./desc-item.vue\";\nexport default {\n  name: 'InfoPane',\n  components: {\n    StDescItem: StDescItem\n  },\n  bem: {\n    b: 'st-desc'\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'line'\n    },\n    $colon: {\n      type: Boolean,\n      default: true\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      key: 'report'\n    };\n  },\n  computed: {\n    showData: function showData() {\n      var _this = this;\n\n      var templateData = [];\n      this.dataSource.forEach(function (ele) {\n        templateData.push({\n          label: ele.titleTotal || ele.title,\n          value: ele.value,\n          colon: _this.$colon || ele.colon || '',\n          slotName: ele.scopedSlots ? ele.scopedSlots.customRender : ''\n        });\n      });\n      console.log(this.$colon);\n      return templateData;\n    },\n    itemMaxWidth: function itemMaxWidth() {\n      var _this2 = this;\n\n      var maxWidth = 200;\n      this.showData.map(function (item) {\n        var str = item.label + (item.colon ? '：' : '') + item.value;\n\n        var width = _this2.getTextWidth(str, 12);\n\n        console.log(str, width);\n        maxWidth = Math.max(width, maxWidth);\n      });\n      console.log('最大值', maxWidth);\n      return maxWidth;\n    }\n  },\n  methods: {\n    recentChange: function recentChange(query) {\n      this.$emit('change', query);\n    },\n    // 计算所有 item 中的 最大宽度\n    getTextWidth: function getTextWidth(str, fontSize) {\n      var gap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 15;\n      var result = 100;\n      var ele = document.createElement('span');\n      ele.innerText = str;\n      ele.setAttribute('style', \"position: absolute; font-size: \".concat(fontSize, \"px; opacity: 0\"));\n      document.documentElement.append(ele);\n      if (ele && ele.offsetWidth) result = ele.offsetWidth;\n      document.documentElement.removeChild(ele);\n      return result + gap;\n    }\n  }\n};",null]}