{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/course/personal/list/brand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/course/personal/list/brand.vue","mtime":1596188219520},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ListService } from '../list.service'\nimport { BrandService } from './brand.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './brand.config'\nimport CourseSupportCourseCocahesBrand from '@/views/biz-modals/course/support-course-cocahes-brand'\nimport CourseSupportCourseShops from '@/views/biz-modals/course/support-course-shops'\nimport { SHOP_SETTING, IS_AVAILABLE } from '@/constants/course/personal'\nexport default {\n  name: 'PersonalCourseListInBrand',\n  mixins: [tableMixin],\n  modals: {\n    CourseSupportCourseCocahesBrand,\n    CourseSupportCourseShops\n  },\n  serviceInject() {\n    return {\n      listService: ListService,\n      brandService: BrandService\n    }\n  },\n  data() {\n    return {\n      SHOP_SETTING,\n      IS_AVAILABLE,\n      defaultValue: -1\n    }\n  },\n  computed: {\n    columns\n  },\n  rxState() {\n    return {\n      categoryList: this.listService.categoryList$,\n      loading: this.brandService.loading$,\n      list: this.brandService.list$,\n      page: this.brandService.page$,\n      auth: this.brandService.auth$\n    }\n  },\n  methods: {\n    onDeleteCourse(record) {\n      this.brandService.deleteCourse(record.course_id).subscribe(() => {\n        this.$router.push({ query: this.$searchQuery })\n      })\n    },\n    onSetAvailable(record) {\n      const available =\n        record.is_available.id === IS_AVAILABLE.VALID\n          ? IS_AVAILABLE.INVALID\n          : IS_AVAILABLE.VALID\n      this.brandService\n        .setAvailable({ course_id: record.course_id, available })\n        .subscribe(() => {\n          this.$router.push({ query: this.$searchQuery })\n        })\n    },\n    filterOption(input, option) {\n      return (\n        option.componentOptions.children[0].text\n          .toLowerCase()\n          .indexOf(input.toLowerCase()) >= 0\n      )\n    },\n    onChange() {\n      this.$router.push({ query: { ...this.$searchQuery, course_name: '' } })\n    },\n    addPersonalCourse() {\n      this.$router.push({ name: 'brand-product-course-personal-add' })\n    }\n  }\n}\n",null]}