{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/ring/ring.config.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/ring/ring.config.ts","mtime":1600926555668},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nexport var chartConfig = function chartConfig(vm) {\n  return {\n    options: {\n      scales: {\n        value: {\n          formatter: function formatter(v) {\n            return vm.unitBack ? v + vm.unit : vm.unit + v;\n          }\n        }\n      },\n      coord: {\n        type: 'theta',\n        cfg: {\n          innerRadius: 0.65\n        }\n      },\n      tooltip: {\n        showTitle: false,\n        itemTpl: \"<li class=\\\"tooltip-item-{name}\\\">\\n                    <span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>\\n                    {name}\\n                    <span class=\\\"st-g2-tooltip-value\\\">| {percent}</span>\\n                  </li>\"\n      },\n      legends: {\n        name: {\n          position: vm.opt$.legend.position,\n          // position: 'right-center',\n          // itemWidth: 160,\n          useHtml: true,\n          // textStyle: {\n          //   fill: '#3E4D5C'\n          // },\n          itemTpl: function itemTpl(name, color, checked, index) {\n            var row = vm.dv.findRow({\n              name: name\n            });\n            var value = vm.valFormat(row.value);\n            var tooltipId = vm.tooltipMap && vm.tooltipMap[row.key];\n            return \"<li class=\\\"g2-legend-list-item item-{originValue} item-{index} {checked} \".concat(vm.opt$.legend.layout, \"\\\" data-color=\\\"{originColor}\\\" data-value=\\\"{originValue}\\\">\\n                    <div>\\n                      <i class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></i>\\n                      <span class=\\\"g2-legend-text\\\">\").concat(name, \"</span>\\n                      <span id='legend-{index}'></span>\\n                    </div>\\n                    <div class='legend-right'>\\n                      <span class='legend-percent'>\").concat(vm.unitBack ? value + vm.unit : vm.unit + value, \"</span>\\n                    </div>\\n                  </li>\");\n          },\n          onHover: function onHover(ev) {\n            console.log(ev); // 总计为 0 是阻止事件继续执行hover\n\n            if (!vm.total) return;\n            var $s = vm.$el.querySelector.bind(vm.$el);\n            var name = ev.item.value;\n            var row = vm.dv.findRow({\n              name: name\n            });\n            var shapes = ev.shapes;\n            var geom = ev.geom;\n            var legend = ev.currentTarget; // 选中对应单元\n\n            vm.total && geom.setShapesActived(shapes);\n            legend.addEventListener('mouseleave', function () {\n              vm.resetTotal();\n            });\n            $s('.guide-value').textContent = vm.valFormat(row.value);\n            $s('.guide-name-text').textContent = row.name;\n            $s('.guide-name-tooltip').setAttribute('style', 'display: none');\n          }\n        }\n      },\n      guides: [{\n        type: 'html',\n        position: ['50%', '50%'],\n        html: function html() {\n          vm.resize = Math.random();\n          console.log(vm);\n          return \"<div class='guide \".concat(vm.opt$.guide.layout, \"' style='width: \").concat(vm.height / 2, \"px'>\\n                    <div class='guide-name'>\\n                      <span class=\\\"guide-name-text\\\">\").concat(vm.totalName, \"</span>\\n                      <span class=\\\"guide-name-tooltip\\\" id=\\\"guide-name-tooltip\").concat(vm.tooltipId, \"\\\"></span>\\n                    </div>\\n                    <div class='guide-title'>\\n                      <span class='guide-unit' style=\\\"display: \").concat(vm.unitBack ? 'none' : 'inline-block', \"\\\">\").concat(vm.unit, \"</span>\\n                      <span class='guide-value'>\").concat(vm.valFormat(vm.total) || 0, \"</span>\\n                      <span class='guide-unit' style=\\\"display: \").concat(!vm.unitBack ? 'none' : 'inline-block', \"\\\">\").concat(vm.unit, \"</span>\\n                    </div>\\n                  </div>\");\n        }\n      }],\n      geoms: [{\n        type: 'intervalStack',\n        position: 'value',\n        active: {\n          style: {\n            fillOpacity: 1,\n            lineWidth: 8\n          }\n        },\n        select: false,\n        color: {\n          field: 'name',\n          callback: function callback(name, key) {\n            // if (vm.total == 0 || !vm.total) return '#E9EDF2'\n            // console.log('color', name, key, vm.$colorMap[name])\n            return vm.$colorMap[name];\n          }\n        },\n        style: {\n          fillOpacity: 1,\n          cursor: 'pointer'\n        },\n        tooltip: {\n          field: 'name*percent',\n          callback: function callback(name, percent) {\n            return {\n              name: name,\n              percent: function (p) {\n                // 百分比处理，精确至 0.001%（最小值）\n                var r = 10;\n                var u = 1,\n                    i = 0;\n                p = p * 100;\n\n                while (p < u && i < 3) {\n                  u = u / 10;\n                  i++;\n                }\n\n                if (p < u) p = u;\n                return (i <= 0 ? Math.floor(p) : p.toFixed(i)) + '%';\n              }(percent)\n            };\n          }\n        }\n      }]\n    }\n  };\n};",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/ring/ring.config.ts"],"names":[],"mappings":"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","sourcesContent":["export const chartConfig = vm => ({\n  options: {\n    scales: {\n      value: {\n        formatter: v => (vm.unitBack ? v + vm.unit : vm.unit + v)\n      }\n    },\n    coord: {\n      type: 'theta',\n      cfg: {\n        innerRadius: 0.65\n      }\n    },\n    tooltip: {\n      showTitle: false,\n      itemTpl: `<li class=\"tooltip-item-{name}\">\n                    <span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>\n                    {name}\n                    <span class=\"st-g2-tooltip-value\">| {percent}</span>\n                  </li>`\n    },\n    legends: {\n      name: {\n        position: vm.opt$.legend.position,\n        // position: 'right-center',\n        // itemWidth: 160,\n        useHtml: true,\n        // textStyle: {\n        //   fill: '#3E4D5C'\n        // },\n        itemTpl: (name, color, checked, index) => {\n          const row = vm.dv.findRow({ name })\n          const value = vm.valFormat(row.value)\n          const tooltipId = vm.tooltipMap && vm.tooltipMap[row.key]\n          return `<li class=\"g2-legend-list-item item-{originValue} item-{index} {checked} ${\n            vm.opt$.legend.layout\n          }\" data-color=\"{originColor}\" data-value=\"{originValue}\">\n                    <div>\n                      <i class=\"g2-legend-marker\" style=\"background-color:{color};\"></i>\n                      <span class=\"g2-legend-text\">${name}</span>\n                      <span id='legend-{index}'></span>\n                    </div>\n                    <div class='legend-right'>\n                      <span class='legend-percent'>${\n                        vm.unitBack ? value + vm.unit : vm.unit + value\n                      }</span>\n                    </div>\n                  </li>`\n        },\n        onHover: ev => {\n          console.log(ev)\n          // 总计为 0 是阻止事件继续执行hover\n          if (!vm.total) return\n          const $s = vm.$el.querySelector.bind(vm.$el)\n          const name = ev.item.value\n          const row = vm.dv.findRow({ name })\n          const shapes = ev.shapes\n          const geom = ev.geom\n          const legend = ev.currentTarget\n          // 选中对应单元\n          vm.total && geom.setShapesActived(shapes)\n          legend.addEventListener('mouseleave', () => {\n            vm.resetTotal()\n          })\n          $s('.guide-value').textContent = vm.valFormat(row.value)\n          $s('.guide-name-text').textContent = row.name\n          $s('.guide-name-tooltip').setAttribute('style', 'display: none')\n        }\n      }\n    },\n    guides: [\n      {\n        type: 'html',\n        position: ['50%', '50%'],\n        html: () => {\n          vm.resize = Math.random()\n          console.log(vm)\n          return `<div class='guide ${\n            vm.opt$.guide.layout\n          }' style='width: ${vm.height / 2}px'>\n                    <div class='guide-name'>\n                      <span class=\"guide-name-text\">${vm.totalName}</span>\n                      <span class=\"guide-name-tooltip\" id=\"guide-name-tooltip${\n                        vm.tooltipId\n                      }\"></span>\n                    </div>\n                    <div class='guide-title'>\n                      <span class='guide-unit' style=\"display: ${\n                        vm.unitBack ? 'none' : 'inline-block'\n                      }\">${vm.unit}</span>\n                      <span class='guide-value'>${vm.valFormat(vm.total) ||\n                        0}</span>\n                      <span class='guide-unit' style=\"display: ${\n                        !vm.unitBack ? 'none' : 'inline-block'\n                      }\">${vm.unit}</span>\n                    </div>\n                  </div>`\n        }\n      }\n    ],\n    geoms: [\n      {\n        type: 'intervalStack',\n        position: 'value',\n        active: {\n          style: {\n            fillOpacity: 1,\n            lineWidth: 8\n          }\n        },\n        select: false,\n        color: {\n          field: 'name',\n          callback: (name, key) => {\n            // if (vm.total == 0 || !vm.total) return '#E9EDF2'\n            // console.log('color', name, key, vm.$colorMap[name])\n            return vm.$colorMap[name]\n          }\n        },\n        style: {\n          fillOpacity: 1,\n          cursor: 'pointer'\n        },\n        tooltip: {\n          field: 'name*percent',\n          callback: (name, percent) => {\n            return {\n              name,\n              percent: (function(p) {\n                // 百分比处理，精确至 0.001%（最小值）\n                const r = 10\n                let u = 1,\n                  i = 0\n                p = p * 100\n                while (p < u && i < 3) {\n                  u = u / 10\n                  i++\n                }\n                if (p < u) p = u\n                return (i <= 0 ? Math.floor(p) : p.toFixed(i)) + '%'\n              })(percent)\n            }\n          }\n        }\n      }\n    ]\n  }\n})\n"],"sourceRoot":""}]}