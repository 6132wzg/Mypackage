{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/notification/vc-notification-st/Notification.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/notification/vc-notification-st/Notification.js","mtime":1591147717109},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _vue = require('vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _vueTypes = require('ant-design-vue/lib/_util/vue-types');\n\nvar _vueTypes2 = _interopRequireDefault(_vueTypes);\n\nvar _propsUtil = require('ant-design-vue/lib/_util/props-util');\n\nvar _BaseMixin = require('ant-design-vue/lib/_util/BaseMixin');\n\nvar _BaseMixin2 = _interopRequireDefault(_BaseMixin);\n\nvar _createChainedFunction = require('ant-design-vue/lib/_util/createChainedFunction');\n\nvar _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);\n\nvar _getTransitionProps = require('ant-design-vue/lib/_util/getTransitionProps');\n\nvar _getTransitionProps2 = _interopRequireDefault(_getTransitionProps);\n\nvar _Notice = require(\"./Notice\");\n\nvar _Notice2 = _interopRequireDefault(_Notice);\n\nvar _base = require('ant-design-vue/lib/base');\n\nvar _base2 = _interopRequireDefault(_base);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction noop() {}\n\nvar seed = 0;\nvar now = Date.now();\n\nfunction getUuid() {\n  return 'rcNotification_' + now + '_' + seed++;\n}\n\nvar Notification = {\n  mixins: [_BaseMixin2['default']],\n  props: {\n    prefixCls: _vueTypes2['default'].string.def('rc-notification'),\n    transitionName: _vueTypes2['default'].string,\n    animation: _vueTypes2['default'].oneOfType([_vueTypes2['default'].string, _vueTypes2['default'].object]).def('fade'),\n    maxCount: _vueTypes2['default'].number,\n    closeIcon: _vueTypes2['default'].any\n  },\n  data: function data() {\n    return {\n      notices: []\n    };\n  },\n  methods: {\n    getTransitionName: function getTransitionName() {\n      var props = this.$props;\n      var transitionName = props.transitionName;\n\n      if (!transitionName && props.animation) {\n        transitionName = props.prefixCls + '-' + props.animation;\n      }\n\n      return transitionName;\n    },\n    add: function add(notice) {\n      var key = notice.key = notice.key || getUuid();\n      var maxCount = this.$props.maxCount;\n      this.setState(function (previousState) {\n        var notices = previousState.notices;\n        var noticeIndex = notices.map(function (v) {\n          return v.key;\n        }).indexOf(key);\n        var updatedNotices = notices.concat();\n\n        if (noticeIndex !== -1) {\n          updatedNotices.splice(noticeIndex, 1, notice);\n        } else {\n          if (maxCount && notices.length >= maxCount) {\n            // XXX, use key of first item to update new added (let React to move exsiting\n            // instead of remove and mount). Same key was used before for both a) external\n            // manual control and b) internal react 'key' prop , which is not that good.\n            notice.updateKey = updatedNotices[0].updateKey || updatedNotices[0].key;\n            updatedNotices.pop();\n          }\n\n          updatedNotices.unshift(notice);\n        }\n\n        return {\n          notices: updatedNotices\n        };\n      });\n    },\n    remove: function remove(key) {\n      this.setState(function (previousState) {\n        return {\n          notices: previousState.notices.filter(function (notice) {\n            return notice.key !== key;\n          })\n        };\n      });\n    }\n  },\n  render: function render(h) {\n    var _this = this;\n\n    var prefixCls = this.prefixCls,\n        notices = this.notices,\n        remove = this.remove,\n        getTransitionName = this.getTransitionName;\n    var transitionProps = (0, _getTransitionProps2['default'])(getTransitionName());\n    var noticeNodes = notices.map(function (notice, index) {\n      var update = Boolean(index === notices.length - 1 && notice.updateKey);\n      var key = notice.updateKey ? notice.updateKey : notice.key;\n      var content = notice.content,\n          duration = notice.duration,\n          closable = notice.closable,\n          onClose = notice.onClose,\n          style = notice.style,\n          className = notice['class'];\n      var close = (0, _createChainedFunction2['default'])(remove.bind(_this, notice.key), onClose);\n      var noticeProps = {\n        props: {\n          prefixCls: prefixCls,\n          duration: duration,\n          closable: closable,\n          update: update,\n          closeIcon: (0, _propsUtil.getComponentFromProp)(_this, 'closeIcon')\n        },\n        on: {\n          close: close,\n          click: notice.onClick || noop\n        },\n        style: style,\n        class: className,\n        key: key\n      };\n      return h(_Notice2['default'], noticeProps, [typeof content === 'function' ? content(h) : content]);\n    });\n    var className = (0, _defineProperty3['default'])({}, prefixCls, 1);\n    var style = (0, _propsUtil.getStyle)(this);\n    return h('div', {\n      class: className,\n      style: style || {\n        top: '65px',\n        left: '50%'\n      }\n    }, [h('transition-group', transitionProps, [noticeNodes])]);\n  }\n};\n\nNotification.newInstance = function newNotificationInstance(properties, callback) {\n  var _ref = properties || {},\n      getContainer = _ref.getContainer,\n      style = _ref.style,\n      className = _ref['class'],\n      props = (0, _objectWithoutProperties3['default'])(_ref, ['getContainer', 'style', 'class']);\n\n  var div = document.createElement('div');\n\n  if (getContainer) {\n    var root = getContainer();\n    root.appendChild(div);\n  } else {\n    document.body.appendChild(div);\n  }\n\n  var V = _base2['default'].Vue || _vue2['default'];\n  new V({\n    el: div,\n    mounted: function mounted() {\n      var self = this;\n      this.$nextTick(function () {\n        callback({\n          notice: function notice(noticeProps) {\n            self.$refs.notification.add(noticeProps);\n          },\n          removeNotice: function removeNotice(key) {\n            self.$refs.notification.remove(key);\n          },\n          component: self,\n          destroy: function destroy() {\n            self.$destroy();\n            self.$el.parentNode.removeChild(self.$el);\n          }\n        });\n      });\n    },\n    render: function render() {\n      var h = arguments[0];\n      var p = {\n        props: props,\n        ref: 'notification',\n        style: style,\n        class: className\n      };\n      return h(Notification, p);\n    }\n  });\n};\n\nexports['default'] = Notification;",null]}