{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/index.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/index.js","mtime":1591147717498},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport { Container, Inject, InjectionToken, Injectable } from \"./di\";\nimport multiguard from 'vue-router-multiguard';\nimport { isCtor, isFn, last } from \"./utils\";\nimport ServiceRouter from \"./router\";\nimport VuePlugin from \"./vue-plugin\";\nimport { plusHook } from 'vue-router-plus';\nimport createController from \"./controller-mixin\";\nimport { isPlainObject } from 'lodash-es';\n\nvar VueServiceApp = /*#__PURE__*/function () {\n  _createClass(VueServiceApp, null, [{\n    key: \"install\",\n    value: function install(Vue, container) {\n      Vue.use(VuePlugin, container);\n    }\n  }]);\n\n  function VueServiceApp() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$base = _ref.base,\n        base = _ref$base === void 0 ? '/' : _ref$base,\n        _ref$mode = _ref.mode,\n        mode = _ref$mode === void 0 ? 'history' : _ref$mode,\n        _ref$routes = _ref.routes,\n        routes = _ref$routes === void 0 ? [] : _ref$routes,\n        _ref$scrollBehavior = _ref.scrollBehavior,\n        scrollBehavior = _ref$scrollBehavior === void 0 ? function () {} : _ref$scrollBehavior,\n        _ref$container = _ref.container,\n        container = _ref$container === void 0 ? null : _ref$container;\n\n    _classCallCheck(this, VueServiceApp);\n\n    this.routerOptions = {\n      base: base,\n      mode: mode,\n      routes: routes,\n      scrollBehavior: scrollBehavior\n    };\n    /**\n     * @type {Container}\n     */\n\n    this.container = container;\n    /**\n     * @type {ServiceRouter}\n     */\n\n    this.router = null;\n\n    if (!this.container) {\n      throw new Error('[vue-service-app] need container!');\n    } // init\n\n\n    this.initRouter();\n    this.initProvideRouter(); // router.beforeEach\n\n    this.resolveAllHooksHandler();\n    this.guardsHandler();\n    this.controllerHandler();\n    this.afterEachHandler();\n    console.log('[vue-service-app]', this);\n  }\n\n  _createClass(VueServiceApp, [{\n    key: \"initRouter\",\n    value: function initRouter() {\n      // TODO: 可以去掉 直接配置在meta中即可\n      var walkRoutes = function walkRoutes(routes) {\n        routes.forEach(function (route) {\n          if (!route.meta) {\n            route.meta = {};\n          }\n\n          if (route.guards) {\n            route.meta.guards = route.guards || [];\n          }\n\n          route.meta.controller = route.controller;\n\n          if (route.queryOptions) {\n            route.meta.queryOptions = route.queryOptions;\n          }\n\n          if (route.children && route.children.length) {\n            walkRoutes(route.children);\n          }\n        });\n      };\n\n      walkRoutes(this.routerOptions.routes);\n      this.router = new ServiceRouter(this.routerOptions, {\n        maxRedirect: {\n          count: 150,\n          duration: 3000\n        }\n      });\n    }\n    /**\n     * router Provider\n     */\n\n  }, {\n    key: \"initProvideRouter\",\n    value: function initProvideRouter() {\n      this.container.bindValue(ServiceRouter, this.router);\n    }\n  }, {\n    key: \"resolveAllHooksHandler\",\n    value: function resolveAllHooksHandler() {\n      this.router.beforeEach(function (to, from, next) {\n        if (!to.matched.length) {\n          return next();\n        }\n\n        var matched = to.matched;\n        var tasks = [];\n        matched.forEach(function (routeRecord) {\n          // 路由守卫\n          var Guards = routeRecord.meta.guards; // 路由控制器\n\n          var Controller = routeRecord.meta.controller; // 路由组件\n\n          var Component = routeRecord.components.default;\n\n          if (isCtor(Controller)) {\n            routeRecord.Controller = Controller;\n          } else {\n            if (isFn(Controller)) {\n              tasks.push(Controller().then(function (Ctrl) {\n                routeRecord.Controller = Ctrl;\n              }));\n            }\n          }\n\n          if (isPlainObject(Component)) {\n            routeRecord.Component = Component;\n          } else {\n            if (isFn(Component)) {\n              tasks.push(Component().then(function (Comp) {\n                routeRecord.Component = Comp.default;\n              }));\n            }\n          } // resolve 异步 guards\n\n\n          if (Guards && Guards.length) {\n            var GuardsQueue = Guards.filter(function (G) {\n              return isFn(G) || isCtor(G);\n            }).map(function (G) {\n              return isCtor(G) ? Promise.resolve(G) : G();\n            });\n            tasks.push(Promise.all(GuardsQueue).then(function (Gs) {\n              routeRecord.Guards = Gs;\n            }));\n          }\n        });\n\n        if (!tasks.length) {\n          return next();\n        }\n\n        Promise.all(tasks).then(function () {\n          next(); // console.log(matched)\n        });\n      });\n    }\n  }, {\n    key: \"guardsHandler\",\n    value: function guardsHandler() {\n      var _this = this;\n\n      this.router.beforeEach(function (to, from, next) {\n        var matched = to.matched;\n\n        if (!matched) {\n          return next();\n        } // console.log('matched', matched)\n\n\n        var guards = matched.reduce(function (res, routeRecord) {\n          return res.concat(routeRecord.Guards || []);\n        }, []);\n        var middlewares = []; // 同name -> 路由更新的钩子\n\n        if (to.name === from.name) {\n          middlewares = _this._getBeforeMiddlewaresByGuards(guards, 'beforeRouteUpdate');\n        } // 不同name -> guard的路由进入钩子\n\n\n        if (to.name !== from.name) {\n          middlewares = _this._getBeforeMiddlewaresByGuards(guards, 'beforeRouteEnter');\n        }\n\n        if (!middlewares.length) {\n          return next();\n        }\n\n        var plusMiddlewares = middlewares.map(function (fn) {\n          return plusHook(fn);\n        });\n        multiguard(plusMiddlewares)(to, from, next);\n      });\n    }\n  }, {\n    key: \"controllerHandler\",\n    value: function controllerHandler() {\n      var _this2 = this;\n\n      this.router.beforeEach(function (to, from, next) {\n        if (_this2.isControllerMixied) {\n          return next();\n        }\n\n        var matched = to.matched;\n\n        if (!matched.length) {\n          return next();\n        }\n\n        matched.filter(function (routeRecord) {\n          return routeRecord.Controller;\n        }).forEach(function (routeRecord) {\n          if (routeRecord.isControllerMixed) {\n            return;\n          }\n\n          var Component = routeRecord.Component;\n\n          if (Component) {\n            Component.mixins = Component.mixins || [];\n            var controllerMixin = createController(routeRecord.Controller, _this2.container);\n            Component.mixins.unshift(controllerMixin);\n            routeRecord.isControllerMixed = true;\n          }\n        });\n        return next();\n      });\n    }\n    /**\n     * 路由后置处理\n     */\n\n  }, {\n    key: \"afterEachHandler\",\n    value: function afterEachHandler() {\n      var _this3 = this;\n\n      this.router.afterEach(function (to, from) {\n        var matched = to.matched;\n\n        if (!matched.length) {\n          return;\n        }\n\n        matched.reduce(function (res, routeRecord) {\n          return res.concat(routeRecord.Guards || []);\n        }, []).map(function (G) {\n          return _this3.container.get(G);\n        }).filter(function (g) {\n          return g.afterEach;\n        }).reduce(function (res, g) {\n          return res.concat([g.afterEach.bind(g)]);\n        }, []).forEach(function (fn) {\n          fn(to, from);\n        });\n      });\n    }\n    /**\n     * @param {Array<any>} Guards 路由构造函数\n     * @param {string} mode beforeRouteEnter 或  beforeRouteUpdate\n     */\n\n  }, {\n    key: \"_getBeforeMiddlewaresByGuards\",\n    value: function _getBeforeMiddlewaresByGuards(Guards, mode) {\n      var _this4 = this;\n\n      return Guards.map(function (G) {\n        return _this4.container.get(G);\n      }).filter(function (g) {\n        return g.beforeEach || g[mode];\n      }).reduce(function (res, g) {\n        // 加入beforeEach钩子\n        if (g.beforeEach) {\n          res.push(g.beforeEach.bind(g));\n        } // 加入beforeRouteEnter 或 beforeRouteUpdate 钩子\n\n\n        if (g[mode]) {\n          res.push(g[mode].bind(g));\n        }\n\n        return res;\n      }, []);\n    }\n  }]);\n\n  return VueServiceApp;\n}();\n\nexport { ServiceRouter, Inject, InjectionToken, Injectable, Container, createController };\nexport default VueServiceApp;",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/index.js"],"names":["Container","Inject","InjectionToken","Injectable","multiguard","isCtor","isFn","last","ServiceRouter","VuePlugin","plusHook","createController","isPlainObject","VueServiceApp","Vue","container","use","base","mode","routes","scrollBehavior","routerOptions","router","Error","initRouter","initProvideRouter","resolveAllHooksHandler","guardsHandler","controllerHandler","afterEachHandler","console","log","walkRoutes","forEach","route","meta","guards","controller","queryOptions","children","length","maxRedirect","count","duration","bindValue","beforeEach","to","from","next","matched","tasks","routeRecord","Guards","Controller","Component","components","default","push","then","Ctrl","Comp","GuardsQueue","filter","G","map","Promise","resolve","all","Gs","reduce","res","concat","middlewares","name","_getBeforeMiddlewaresByGuards","plusMiddlewares","fn","isControllerMixied","isControllerMixed","mixins","controllerMixin","unshift","afterEach","get","g","bind"],"mappings":"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","sourcesContent":["import { Container, Inject, InjectionToken, Injectable } from './di'\nimport multiguard from 'vue-router-multiguard'\nimport { isCtor, isFn, last } from './utils'\nimport ServiceRouter from './router'\nimport VuePlugin from './vue-plugin'\nimport { plusHook } from 'vue-router-plus'\nimport createController from './controller-mixin'\nimport { isPlainObject } from 'lodash-es'\n\nclass VueServiceApp {\n  static install(Vue, container) {\n    Vue.use(VuePlugin, container)\n  }\n  constructor({\n    base = '/',\n    mode = 'history',\n    routes = [],\n    scrollBehavior = () => {},\n    container = null\n  } = {}) {\n    this.routerOptions = {\n      base,\n      mode,\n      routes,\n      scrollBehavior\n    }\n    /**\n     * @type {Container}\n     */\n    this.container = container\n    /**\n     * @type {ServiceRouter}\n     */\n    this.router = null\n\n    if (!this.container) {\n      throw new Error('[vue-service-app] need container!')\n    }\n    // init\n    this.initRouter()\n    this.initProvideRouter()\n    // router.beforeEach\n    this.resolveAllHooksHandler()\n    this.guardsHandler()\n    this.controllerHandler()\n    this.afterEachHandler()\n\n    console.log('[vue-service-app]', this)\n  }\n  initRouter() {\n    // TODO: 可以去掉 直接配置在meta中即可\n    const walkRoutes = routes => {\n      routes.forEach(route => {\n        if (!route.meta) {\n          route.meta = {}\n        }\n        if (route.guards) {\n          route.meta.guards = route.guards || []\n        }\n        route.meta.controller = route.controller\n        if (route.queryOptions) {\n          route.meta.queryOptions = route.queryOptions\n        }\n        if (route.children && route.children.length) {\n          walkRoutes(route.children)\n        }\n      })\n    }\n    walkRoutes(this.routerOptions.routes)\n\n    this.router = new ServiceRouter(this.routerOptions, {\n      maxRedirect: {\n        count: 150,\n        duration: 3000\n      }\n    })\n  }\n  /**\n   * router Provider\n   */\n  initProvideRouter() {\n    this.container.bindValue(ServiceRouter, this.router)\n  }\n  resolveAllHooksHandler() {\n    this.router.beforeEach((to, from, next) => {\n      if (!to.matched.length) {\n        return next()\n      }\n      const matched = to.matched\n      const tasks = []\n\n      matched.forEach(routeRecord => {\n        // 路由守卫\n        const Guards = routeRecord.meta.guards\n        // 路由控制器\n        const Controller = routeRecord.meta.controller\n        // 路由组件\n        const Component = routeRecord.components.default\n\n        if (isCtor(Controller)) {\n          routeRecord.Controller = Controller\n        } else {\n          if (isFn(Controller)) {\n            tasks.push(\n              Controller().then(Ctrl => {\n                routeRecord.Controller = Ctrl\n              })\n            )\n          }\n        }\n\n        if (isPlainObject(Component)) {\n          routeRecord.Component = Component\n        } else {\n          if (isFn(Component)) {\n            tasks.push(\n              Component().then(Comp => {\n                routeRecord.Component = Comp.default\n              })\n            )\n          }\n        }\n        // resolve 异步 guards\n        if (Guards && Guards.length) {\n          const GuardsQueue = Guards.filter(G => isFn(G) || isCtor(G)).map(G =>\n            isCtor(G) ? Promise.resolve(G) : G()\n          )\n          tasks.push(\n            Promise.all(GuardsQueue).then(Gs => {\n              routeRecord.Guards = Gs\n            })\n          )\n        }\n      })\n      if (!tasks.length) {\n        return next()\n      }\n      Promise.all(tasks).then(() => {\n        next()\n        // console.log(matched)\n      })\n    })\n  }\n  guardsHandler() {\n    this.router.beforeEach((to, from, next) => {\n      const matched = to.matched\n      if (!matched) {\n        return next()\n      }\n      // console.log('matched', matched)\n      const guards = matched.reduce(\n        (res, routeRecord) => res.concat(routeRecord.Guards || []),\n        []\n      )\n      let middlewares = []\n      // 同name -> 路由更新的钩子\n      if (to.name === from.name) {\n        middlewares = this._getBeforeMiddlewaresByGuards(\n          guards,\n          'beforeRouteUpdate'\n        )\n      }\n      // 不同name -> guard的路由进入钩子\n      if (to.name !== from.name) {\n        middlewares = this._getBeforeMiddlewaresByGuards(\n          guards,\n          'beforeRouteEnter'\n        )\n      }\n\n      if (!middlewares.length) {\n        return next()\n      }\n\n      const plusMiddlewares = middlewares.map(fn => plusHook(fn))\n\n      multiguard(plusMiddlewares)(to, from, next)\n    })\n  }\n  controllerHandler() {\n    this.router.beforeEach((to, from, next) => {\n      if (this.isControllerMixied) {\n        return next()\n      }\n      const matched = to.matched\n      if (!matched.length) {\n        return next()\n      }\n      matched\n        .filter(routeRecord => routeRecord.Controller)\n        .forEach(routeRecord => {\n          if (routeRecord.isControllerMixed) {\n            return\n          }\n          const Component = routeRecord.Component\n          if (Component) {\n            Component.mixins = Component.mixins || []\n            const controllerMixin = createController(\n              routeRecord.Controller,\n              this.container\n            )\n            Component.mixins.unshift(controllerMixin)\n            routeRecord.isControllerMixed = true\n          }\n        })\n      return next()\n    })\n  }\n  /**\n   * 路由后置处理\n   */\n  afterEachHandler() {\n    this.router.afterEach((to, from) => {\n      const matched = to.matched\n      if (!matched.length) {\n        return\n      }\n\n      matched\n        .reduce((res, routeRecord) => res.concat(routeRecord.Guards || []), [])\n        .map(G => this.container.get(G))\n        .filter(g => g.afterEach)\n        .reduce((res, g) => res.concat([g.afterEach.bind(g)]), [])\n        .forEach(fn => {\n          fn(to, from)\n        })\n    })\n  }\n  /**\n   * @param {Array<any>} Guards 路由构造函数\n   * @param {string} mode beforeRouteEnter 或  beforeRouteUpdate\n   */\n  _getBeforeMiddlewaresByGuards(Guards, mode) {\n    return Guards.map(G => this.container.get(G))\n      .filter(g => g.beforeEach || g[mode])\n      .reduce((res, g) => {\n        // 加入beforeEach钩子\n        if (g.beforeEach) {\n          res.push(g.beforeEach.bind(g))\n        }\n        // 加入beforeRouteEnter 或 beforeRouteUpdate 钩子\n        if (g[mode]) {\n          res.push(g[mode].bind(g))\n        }\n        return res\n      }, [])\n  }\n}\n\nexport {\n  ServiceRouter,\n  Inject,\n  InjectionToken,\n  Injectable,\n  Container,\n  createController\n}\n\nexport default VueServiceApp\n"]}]}