{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/card/info/member/info/usage-log.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/card/info/member/info/usage-log.service.ts","mtime":1591147717449},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { CardApi } from '@/api/v1/sold/cards';\n\nvar UsageLogService = /*#__PURE__*/function () {\n  function UsageLogService(cardApi) {\n    _classCallCheck(this, UsageLogService);\n\n    this.cardApi = cardApi;\n    this.list$ = new State({});\n    this.page$ = new State({});\n    this.loading$ = new State({});\n  }\n\n  _createClass(UsageLogService, [{\n    key: \"getList\",\n    value: function getList(query, type) {\n      var _this = this;\n\n      return this.cardApi.getCardsUsageLog(query, type).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to) {\n      return this.getList(to.meta.query, 'member');\n    }\n  }]);\n\n  return UsageLogService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object, String]), __metadata(\"design:returntype\", void 0)], UsageLogService.prototype, \"getList\", null);\n\nUsageLogService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof CardApi !== \"undefined\" && CardApi) === \"function\" ? _a : Object])], UsageLogService);\nexport { UsageLogService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/card/info/member/info/usage-log.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,OAAT,QAAwB,qBAAxB;;AAGA,IAAa,eAAb;AAIE,2BAAoB,OAApB,EAAoC;AAAA;;AAAhB,SAAA,OAAA,GAAA,OAAA;AAHpB,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACwC;;AAJ1C;AAAA;AAAA,4BAMU,KANV,EAMsB,IANtB,EAMkC;AAAA;;AAC9B,aAAO,KAAK,OAAL,CAAa,gBAAb,CAA8B,KAA9B,EAAqC,IAArC,EAA2C,IAA3C,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAHE,CADE,CAAP;AAMD;AAbH;AAAA;AAAA,+BAca,EAdb,EAc6B;AACzB,aAAO,KAAK,OAAL,CAAa,EAAE,CAAC,IAAH,CAAQ,KAArB,EAA4B,QAA5B,CAAP;AACD;AAhBH;;AAAA;AAAA,GAAA;;AAME,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,iDAAA,E,uCAAA,CAAA,E,yBAAA,E,SAAA,EAOC,IAPD,CAAA;;AANW,eAAe,GAAA,UAAA,CAAA,CAD3B,UAAU,EACiB,E,qDAIG,O,KAAO,W,IAAP,O,MAAO,U,GAAA,E,GAAA,M,EAJV,CAAA,EAAf,eAAe,CAAf;SAAA,e","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { CardApi } from '@/api/v1/sold/cards'\n\n@Injectable()\nexport class UsageLogService implements Controller {\n  list$ = new State({})\n  page$ = new State({})\n  loading$ = new State({})\n  constructor(private cardApi: CardApi) {}\n  @Effect()\n  getList(query: any, type: string) {\n    return this.cardApi.getCardsUsageLog(query, type).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  beforeEach(to: ServiceRoute) {\n    return this.getList(to.meta.query, 'member')\n  }\n}\n"],"sourceRoot":""}]}