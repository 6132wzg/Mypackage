{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/hour-picker#/hour-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/hour-picker#/hour-picker.vue","mtime":1600926556043},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SLIDER, WEEK_NO_SELF, WEEK, TIMER } from './hour-picker.config'\nimport { constant, cloneDeep, difference } from 'lodash-es'\nimport DateSlider from '@/views/components/date-slider#/date-slider'\nexport default {\n  name: 'StShopHourPicker',\n  bem: {\n    ShopHourPicker: 'st-hour-picker'\n  },\n  components: {\n    DateSlider\n  },\n  model: {\n    prop: 'value',\n    event: 'ShopHourPickerChange'\n  },\n  props: {\n    // TODO: shop hour picker后续修改，不能有默认值\n    value: {\n      type: Array,\n      default: () => []\n    },\n    isInfo: {\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 24\n    },\n    step: {\n      type: Number,\n      default: 0.5\n    }\n  },\n  data() {\n    return {\n      defaultWeekList: WEEK,\n      time: TIMER,\n      slider: cloneDeep(SLIDER),\n      copeSlider: {}, // 复制到功能需要,为中间值\n      weekSelects: [],\n      isInit: true\n    }\n  },\n  computed: {\n    currentTime() {\n      return this.time[this.isInfo ? 'info' : 'edit']\n    }\n  },\n  watch: {\n    slider: {\n      handler(n, o) {\n        // console.log('slider 变化', n, o)\n        let value = this.slider.filter(item => item.show)\n        value = value.map(item => {\n          return {\n            week_day: item.week_day,\n            range: item.range,\n            start_time: this.timeFilter(item.value[0]),\n            end_time: this.timeFilter(item.value[1])\n          }\n        })\n        this.$emit('ShopHourPickerChange', value)\n      },\n      deep: true\n    },\n    weekSelects(n, o) {\n      if (this.isInit) return\n      // console.log('weekSelects', n, o)\n      if (n.length === o.length) return\n      n.length > o.length ? this.addSlider(n, o) : this.removeSlider(n, o)\n    }\n  },\n  created() {\n    this.$nextTick(() => {\n      this.init()\n    })\n  },\n  methods: {\n    // 获取日期选择数组\n    init() {\n      // console.log('init', this.value)\n      this.weekSelects = this.value.map(item => item.week_day)\n      if (this.weekSelects.length) this.getSliderInfoList()\n      else this.isInit = false\n    },\n    // 获取的数据对格式进行处理\n    getSliderInfoList() {\n      // console.log('获取的数据对格式进行处理 => value', this.value)\n      this.value.map(item => {\n        let week_day = cloneDeep(item.week_day)\n        let index = --week_day\n        this.slider[index].value = [\n          item.start_time.replace(/:00/gi, '').replace(/:30/gi, '.5') - 0,\n          item.end_time.replace(/:00/gi, '').replace(/:30/gi, '.5') - 0\n        ]\n        this.slider[index].show = true\n        this.slider[index].range = cloneDeep(item.range)\n        // console.log('sliderByweekDay end', this.slider[index].value)\n      })\n      this.isInit = false\n      // console.log('根据value值,设置slider => slider', this.slider)\n    },\n    // 新增slider\n    addSlider(n, o) {\n      const index = difference(n, o)\n      // console.log('addSlider', index)\n      index.forEach(i => {\n        let endIndex = --i\n        if (this.slider[endIndex].show) return\n        this.slider[endIndex].show = true\n        this.slider[endIndex].value = [10, 24]\n      })\n    },\n    // 删除slider\n    removeSlider(n, o) {\n      const index = difference(o, n)\n      index.forEach(i => {\n        let endIndex = --i\n        this.slider[endIndex].show = false\n        this.slider[endIndex].value = []\n      })\n    },\n    // 时间过滤器\n    timeFilter(time) {\n      return /^\\d+$/.test(time) && time >= 10\n        ? time + ':00'\n        : /^\\d+$/.test(time) && time < 10\n        ? '0' + time + ':00'\n        : !/^\\d+$/.test(time) && time < 10\n        ? '0' + (time + '').replace(/.5/gi, ':30')\n        : (time + '').replace(/.5/gi, ':30') + ''\n    },\n    // tooltip格式处理\n    formatter(value) {\n      const valueHalf =\n        value >= 10 ? `${parseInt(value)}:30` : `0${parseInt(value)}:30`\n      const valueInt = value >= 10 ? `${value}:00` : `0${value}:00`\n      return value % 1 === 0 ? valueInt : valueHalf\n    },\n    onChange(sliders) {\n      Array.isArray(sliders) &&\n        sliders.forEach(key => {\n          if (this.slider[key]) this.slider[key].value = this.copeSlider.value\n        })\n    },\n    copyTo(item, index) {\n      this.copeSlider = cloneDeep(item)\n      const week = cloneDeep(WEEK_NO_SELF)\n      // WEEK_NO_SELF中对应weekArr中的值设置为true,非对应的或\n      this.weekSelects.forEach(selectWeekDay => {\n        if (selectWeekDay !== item.week_day) {\n          week[selectWeekDay - 1] = true\n        }\n      })\n      item.week = week\n    }\n  },\n  filters: {\n    filterWeekDay(value) {\n      let filterValue = --value\n      return WEEK[filterValue] && WEEK[filterValue]['label']\n    },\n    filterOperation(value) {\n      return WEEK[value] && WEEK[value]['label']\n    }\n  },\n  beforeDestory() {\n    this.weekSelects = []\n    this.init = true\n    // console.log('beforeDestory')\n  }\n}\n",{"version":3,"sources":["hour-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"hour-picker.vue","sourceRoot":"src/views/components/hour-picker#","sourcesContent":["<template>\n  <div class=\"st-hour-picker\" :class=\"{ isInfo: isInfo }\">\n    <st-checkbox-button-group\n      v-model=\"weekSelects\"\n      v-if=\"!isInfo\"\n      :class=\"ShopHourPicker('check')\"\n    >\n      <st-checkbox-button-item\n        :key=\"index\"\n        :value=\"item.value\"\n        v-for=\"(item, index) in defaultWeekList\"\n      >\n        {{ item.label }}\n      </st-checkbox-button-item>\n    </st-checkbox-button-group>\n    <div class=\"st-hour-picker__content\">\n      <div class=\"st-hour-picker__title\">\n        <div class=\"label\">时间段</div>\n        <div class=\"timeBox\" :class=\"{ isInfo: isInfo, isNotInfo: !isInfo }\">\n          <div class=\"time\" v-for=\"(time, index) in currentTime\" :key=\"index\">\n            {{ time }}\n          </div>\n        </div>\n        <div class=\"operate\" v-if=\"!isInfo\">操作</div>\n      </div>\n      <div\n        :class=\"ShopHourPicker('box')\"\n        v-for=\"(item, index) in slider\"\n        :key=\"index\"\n      >\n        <div :class=\"ShopHourPicker('slider')\" v-if=\"item.show\">\n          <!-- label -->\n          <div class=\"label\">\n            <span>{{ item.week_day | filterWeekDay }}</span>\n          </div>\n          <!-- slider -->\n          <div class=\"sliderBox\">\n            <date-slider\n              :step=\"step\"\n              :disable=\"isInfo\"\n              :rangeData=\"item.range\"\n              :tipFormatter=\"formatter\"\n              v-model=\"item.value\"\n            ></date-slider>\n          </div>\n          <!-- 操作列 -->\n          <div class=\"operation\" v-if=\"!isInfo\">\n            <a-popover\n              placement=\"bottomRight\"\n              trigger=\"click\"\n              class=\"slider-copy-bottom\"\n            >\n              <template slot=\"content\">\n                <a-checkbox-group\n                  @change=\"onChange\"\n                  class=\"slider-copy\"\n                  v-for=\"(canWeekDayCopy, index) in item.week\"\n                  :key=\"index\"\n                >\n                  <a-checkbox :value=\"index\" :disabled=\"!canWeekDayCopy\">\n                    {{ index | filterOperation }}\n                  </a-checkbox>\n                </a-checkbox-group>\n              </template>\n              <span @click=\"copyTo(item, index)\">复制到</span>\n            </a-popover>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { SLIDER, WEEK_NO_SELF, WEEK, TIMER } from './hour-picker.config'\nimport { constant, cloneDeep, difference } from 'lodash-es'\nimport DateSlider from '@/views/components/date-slider#/date-slider'\nexport default {\n  name: 'StShopHourPicker',\n  bem: {\n    ShopHourPicker: 'st-hour-picker'\n  },\n  components: {\n    DateSlider\n  },\n  model: {\n    prop: 'value',\n    event: 'ShopHourPickerChange'\n  },\n  props: {\n    // TODO: shop hour picker后续修改，不能有默认值\n    value: {\n      type: Array,\n      default: () => []\n    },\n    isInfo: {\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 24\n    },\n    step: {\n      type: Number,\n      default: 0.5\n    }\n  },\n  data() {\n    return {\n      defaultWeekList: WEEK,\n      time: TIMER,\n      slider: cloneDeep(SLIDER),\n      copeSlider: {}, // 复制到功能需要,为中间值\n      weekSelects: [],\n      isInit: true\n    }\n  },\n  computed: {\n    currentTime() {\n      return this.time[this.isInfo ? 'info' : 'edit']\n    }\n  },\n  watch: {\n    slider: {\n      handler(n, o) {\n        // console.log('slider 变化', n, o)\n        let value = this.slider.filter(item => item.show)\n        value = value.map(item => {\n          return {\n            week_day: item.week_day,\n            range: item.range,\n            start_time: this.timeFilter(item.value[0]),\n            end_time: this.timeFilter(item.value[1])\n          }\n        })\n        this.$emit('ShopHourPickerChange', value)\n      },\n      deep: true\n    },\n    weekSelects(n, o) {\n      if (this.isInit) return\n      // console.log('weekSelects', n, o)\n      if (n.length === o.length) return\n      n.length > o.length ? this.addSlider(n, o) : this.removeSlider(n, o)\n    }\n  },\n  created() {\n    this.$nextTick(() => {\n      this.init()\n    })\n  },\n  methods: {\n    // 获取日期选择数组\n    init() {\n      // console.log('init', this.value)\n      this.weekSelects = this.value.map(item => item.week_day)\n      if (this.weekSelects.length) this.getSliderInfoList()\n      else this.isInit = false\n    },\n    // 获取的数据对格式进行处理\n    getSliderInfoList() {\n      // console.log('获取的数据对格式进行处理 => value', this.value)\n      this.value.map(item => {\n        let week_day = cloneDeep(item.week_day)\n        let index = --week_day\n        this.slider[index].value = [\n          item.start_time.replace(/:00/gi, '').replace(/:30/gi, '.5') - 0,\n          item.end_time.replace(/:00/gi, '').replace(/:30/gi, '.5') - 0\n        ]\n        this.slider[index].show = true\n        this.slider[index].range = cloneDeep(item.range)\n        // console.log('sliderByweekDay end', this.slider[index].value)\n      })\n      this.isInit = false\n      // console.log('根据value值,设置slider => slider', this.slider)\n    },\n    // 新增slider\n    addSlider(n, o) {\n      const index = difference(n, o)\n      // console.log('addSlider', index)\n      index.forEach(i => {\n        let endIndex = --i\n        if (this.slider[endIndex].show) return\n        this.slider[endIndex].show = true\n        this.slider[endIndex].value = [10, 24]\n      })\n    },\n    // 删除slider\n    removeSlider(n, o) {\n      const index = difference(o, n)\n      index.forEach(i => {\n        let endIndex = --i\n        this.slider[endIndex].show = false\n        this.slider[endIndex].value = []\n      })\n    },\n    // 时间过滤器\n    timeFilter(time) {\n      return /^\\d+$/.test(time) && time >= 10\n        ? time + ':00'\n        : /^\\d+$/.test(time) && time < 10\n        ? '0' + time + ':00'\n        : !/^\\d+$/.test(time) && time < 10\n        ? '0' + (time + '').replace(/.5/gi, ':30')\n        : (time + '').replace(/.5/gi, ':30') + ''\n    },\n    // tooltip格式处理\n    formatter(value) {\n      const valueHalf =\n        value >= 10 ? `${parseInt(value)}:30` : `0${parseInt(value)}:30`\n      const valueInt = value >= 10 ? `${value}:00` : `0${value}:00`\n      return value % 1 === 0 ? valueInt : valueHalf\n    },\n    onChange(sliders) {\n      Array.isArray(sliders) &&\n        sliders.forEach(key => {\n          if (this.slider[key]) this.slider[key].value = this.copeSlider.value\n        })\n    },\n    copyTo(item, index) {\n      this.copeSlider = cloneDeep(item)\n      const week = cloneDeep(WEEK_NO_SELF)\n      // WEEK_NO_SELF中对应weekArr中的值设置为true,非对应的或\n      this.weekSelects.forEach(selectWeekDay => {\n        if (selectWeekDay !== item.week_day) {\n          week[selectWeekDay - 1] = true\n        }\n      })\n      item.week = week\n    }\n  },\n  filters: {\n    filterWeekDay(value) {\n      let filterValue = --value\n      return WEEK[filterValue] && WEEK[filterValue]['label']\n    },\n    filterOperation(value) {\n      return WEEK[value] && WEEK[value]['label']\n    }\n  },\n  beforeDestory() {\n    this.weekSelects = []\n    this.init = true\n    // console.log('beforeDestory')\n  }\n}\n</script>\n"]}]}