{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/finance/flow/expenditure.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/finance/flow/expenditure.service.ts","mtime":1591147717382},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { FlowApi, GetListInput } from \"./../../../../../api/v1/finance/flow\";\nimport { UserService } from '@/services/user.service';\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state/src';\nimport { tap } from 'rxjs/operators';\n\nvar ExpenditureService = /*#__PURE__*/function () {\n  function ExpenditureService(userService, api) {\n    _classCallCheck(this, ExpenditureService);\n\n    this.userService = userService;\n    this.api = api;\n    this.loading$ = new State({});\n    this.page$ = new State({});\n    this.list$ = new State([]);\n    this.total$ = new State({});\n    this.payType$ = this.userService.getOptions$('finance.pay_channel');\n  }\n\n  _createClass(ExpenditureService, [{\n    key: \"getList\",\n    value: function getList(params) {\n      var _this = this;\n\n      return this.api.getExpenditureListInShop(params).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n\n        _this.total$.commit(function () {\n          return res.total;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter(to) {\n      this.userService.getOptions$('finance.pay_channel').pipe(tap(function (list) {\n        list = [{\n          value: -1,\n          label: '全部'\n        }].concat(_toConsumableArray(list));\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to) {\n      return this.getList(to.meta.query);\n    }\n  }]);\n\n  return ExpenditureService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof GetListInput !== \"undefined\" && GetListInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], ExpenditureService.prototype, \"getList\", null);\n\nExpenditureService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _b : Object, typeof (_c = typeof FlowApi !== \"undefined\" && FlowApi) === \"function\" ? _c : Object])], ExpenditureService);\nexport { ExpenditureService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/finance/flow/expenditure.service.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,OAAT,EAAkB,YAAlB;AACA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAmC,UAAnC,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,cAA9B;AACA,SAAS,GAAT,QAAyB,gBAAzB;;AAIA,IAAa,kBAAb;AAOE,8BAAoB,WAApB,EAAsD,GAAtD,EAAkE;AAAA;;AAA9C,SAAA,WAAA,GAAA,WAAA;AAAkC,SAAA,GAAA,GAAA,GAAA;AANtD,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,MAAA,GAAS,IAAI,KAAJ,CAAU,EAAV,CAAT;AACA,SAAA,QAAA,GAAW,KAAK,WAAL,CAAiB,WAAjB,CAA6B,qBAA7B,CAAX;AAEsE;;AAPxE;AAAA;AAAA,4BAUU,MAVV,EAU8B;AAAA;;AAC1B,aAAO,KAAK,GAAL,CAAS,wBAAT,CAAkC,MAAlC,EAA0C,IAA1C,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB;AAAA,iBAAM,GAAG,CAAC,KAAV;AAAA,SAAnB;AACD,OAJE,CADE,CAAP;AAOD;AAlBH;AAAA;AAAA,qCAmBmB,EAnBnB,EAmBmC;AAC/B,WAAK,WAAL,CAAiB,WAAjB,CAA6B,qBAA7B,EAAoD,IAApD,CACE,GAAG,CAAC,UAAC,IAAD,EAAc;AAChB,QAAA,IAAI,IAAI;AAAE,UAAA,KAAK,EAAE,CAAC,CAAV;AAAa,UAAA,KAAK,EAAE;AAApB,SAAJ,4BAAmC,IAAnC,EAAJ;AACD,OAFE,CADL;AAKD;AAzBH;AAAA;AAAA,+BA0Ba,EA1Bb,EA0B6B;AACzB,aAAO,KAAK,OAAL,CAAa,EAAE,CAAC,IAAH,CAAQ,KAArB,CAAP;AACD;AA5BH;;AAAA;AAAA,GAAA;;AAUE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAgB,Y,KAAY,W,IAAZ,Y,MAAY,U,GAAA,E,GAAA,M,EAA5B,E,uCAAA,CAAA,E,4BAAA,E,SAAA,EAQC,IARD,CAAA;;AAVW,kBAAkB,GAAA,UAAA,CAAA,CAD9B,UAAU,EACoB,E,qDAOI,W,KAAW,W,IAAX,W,MAAW,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAe,OAAf,KAAsB,WAAtB,IAAe,OAAf,MAAsB,UAAtB,GAAsB,EAAtB,GAAsB,M,EAPrC,CAAA,EAAlB,kBAAkB,CAAlB;SAAA,kB","sourcesContent":["import { FlowApi, GetListInput } from './../../../../../api/v1/finance/flow'\nimport { UserService } from '@/services/user.service'\nimport { Controller, ServiceRoute, Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state/src'\nimport { tap, map } from 'rxjs/operators'\nimport { forkJoin } from 'rxjs'\n\n@Injectable()\nexport class ExpenditureService implements Controller {\n  loading$ = new State({})\n  page$ = new State({})\n  list$ = new State([])\n  total$ = new State({})\n  payType$ = this.userService.getOptions$('finance.pay_channel')\n\n  constructor(private userService: UserService, private api: FlowApi) {}\n\n  @Effect()\n  getList(params: GetListInput) {\n    return this.api.getExpenditureListInShop(params).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n        this.total$.commit(() => res.total)\n      })\n    )\n  }\n  beforeRouteEnter(to: ServiceRoute) {\n    this.userService.getOptions$('finance.pay_channel').pipe(\n      tap((list: any) => {\n        list = [{ value: -1, label: '全部' }, ...list]\n      })\n    )\n  }\n  beforeEach(to: ServiceRoute) {\n    return this.getList(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}