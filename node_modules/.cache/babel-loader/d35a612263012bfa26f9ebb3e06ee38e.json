{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/notification/notification-st/index.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/notification/notification-st/index.js","mtime":1591147717108},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["'use strict'; // Object.defineProperty(exports, '__esModule', {\n//   value: true\n// })\n\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vcNotification = require(\"../vc-notification-st\");\n\nvar _vcNotification2 = _interopRequireDefault(_vcNotification); // FIXME: 这里引入了全量包\n// var _icon = require('ant-design-vue')\n\n\nvar _icon = {};\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nconsole.log(_icon2['default']);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // export type NotificationPlacement = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n// export type IconType = 'success' | 'info' | 'error' | 'warning';\n\n\nvar notificationInstance = {};\nvar defaultDuration = 4.5;\nvar defaultTop = '24px';\nvar defaultBottom = '24px';\nvar defaultPlacement = 'topRight';\n\nvar defaultGetContainer = function defaultGetContainer() {\n  return document.body;\n}; // export interface ConfigProps {\n//   top?: number;\n//   bottom?: number;\n//   duration?: number;\n//   placement?: NotificationPlacement;\n//   getContainer?: () => HTMLElement;\n// }\n\n\nfunction setNotificationConfig(options) {\n  var duration = options.duration,\n      placement = options.placement,\n      bottom = options.bottom,\n      top = options.top,\n      getContainer = options.getContainer;\n\n  if (duration !== undefined) {\n    defaultDuration = duration;\n  }\n\n  if (placement !== undefined) {\n    defaultPlacement = placement;\n  }\n\n  if (bottom !== undefined) {\n    defaultBottom = typeof bottom === 'number' ? bottom + 'px' : bottom;\n  }\n\n  if (top !== undefined) {\n    defaultTop = typeof top === 'number' ? top + 'px' : top;\n  }\n\n  if (getContainer !== undefined) {\n    defaultGetContainer = getContainer;\n  }\n}\n\nfunction getPlacementStyle(placement) {\n  var style = void 0;\n\n  switch (placement) {\n    case 'topLeft':\n      style = {\n        left: 0,\n        top: defaultTop,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'topRight':\n      style = {\n        right: 0,\n        top: defaultTop,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom: defaultBottom\n      };\n      break;\n\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom: defaultBottom\n      };\n      break;\n  }\n\n  return style;\n}\n\nfunction getNotificationInstance(prefixCls, placement, callback) {\n  var cacheKey = prefixCls + '-' + placement;\n\n  if (notificationInstance[cacheKey]) {\n    callback(notificationInstance[cacheKey]);\n    return;\n  }\n\n  _vcNotification2['default'].newInstance({\n    prefixCls: prefixCls,\n    class: prefixCls + '-' + placement,\n    style: getPlacementStyle(placement),\n    getContainer: defaultGetContainer,\n    closeIcon: function closeIcon(h) {\n      return h(_icon2['default'], {\n        class: prefixCls + '-close-icon',\n        attrs: {\n          type: 'close'\n        }\n      });\n    } // eslint-disable-line\n\n  }, function (notification) {\n    notificationInstance[cacheKey] = notification;\n    callback(notification);\n  });\n}\n\nvar typeToIcon = {\n  success: 'check-circle-o',\n  info: 'info-circle-o',\n  error: 'close-circle-o',\n  warning: 'exclamation-circle-o'\n}; // export interface ArgsProps {\n//   message: React.ReactNode;\n//   description: React.ReactNode;\n//   btn?: React.ReactNode;\n//   key?: string;\n//   onClose?: () => void;\n//   duration?: number | null;\n//   icon?: React.ReactNode;\n//   placement?: NotificationPlacement;\n//   style?: React.CSSProperties;\n//   prefixCls?: string;\n//   className?: string;\n//   readonly type?: IconType;\n// }\n\nfunction notice(args) {\n  var icon = args.icon,\n      type = args.type,\n      description = args.description,\n      placement = args.placement,\n      message = args.message,\n      btn = args.btn;\n  var outerPrefixCls = args.prefixCls || 'ant-notification';\n  var prefixCls = outerPrefixCls + '-notice';\n  var duration = args.duration === undefined ? defaultDuration : args.duration;\n  var iconNode = null;\n\n  if (icon) {\n    iconNode = function iconNode(h) {\n      return h('span', {\n        class: prefixCls + '-icon'\n      }, [typeof icon === 'function' ? icon(h) : icon]);\n    };\n  } else if (type) {\n    var iconType = typeToIcon[type];\n\n    iconNode = function iconNode(h) {\n      return h(_icon2['default'], {\n        class: prefixCls + '-icon ' + prefixCls + '-icon-' + type,\n        attrs: {\n          type: iconType\n        }\n      });\n    }; // eslint-disable-line\n\n  }\n\n  getNotificationInstance(outerPrefixCls, placement || defaultPlacement, function (notification) {\n    notification.notice({\n      content: function content(h) {\n        return h('div', {\n          class: iconNode ? prefixCls + '-with-icon' : ''\n        }, [iconNode && iconNode(h), h('div', {\n          class: prefixCls + '-message'\n        }, [!description && iconNode ? h('span', {\n          class: prefixCls + '-message-single-line-auto-margin'\n        }) : null, typeof message === 'function' ? message(h) : message]), h('div', {\n          class: prefixCls + '-description'\n        }, [typeof description === 'function' ? description(h) : description]), btn ? h('span', {\n          class: prefixCls + '-btn'\n        }, [typeof btn === 'function' ? btn(h) : btn]) : null]);\n      },\n      duration: duration,\n      closable: true,\n      onClose: args.onClose,\n      onClick: args.onClick,\n      key: args.key,\n      style: args.style || {},\n      class: args['class']\n    });\n  });\n}\n\nvar api = {\n  open: notice,\n  close: function close(key) {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      return notificationInstance[cacheKey].removeNotice(key);\n    });\n  },\n  config: setNotificationConfig,\n  destroy: function destroy() {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      notificationInstance[cacheKey].destroy();\n      delete notificationInstance[cacheKey];\n    });\n  }\n};\n['success', 'info', 'warning', 'error'].forEach(function (type) {\n  api[type] = function (args) {\n    return api.open((0, _extends3['default'])({}, args, {\n      type: type\n    }));\n  };\n});\napi.warn = api.warning; // export interface NotificationApi {\n//   success(args: ArgsProps): void;\n//   error(args: ArgsProps): void;\n//   info(args: ArgsProps): void;\n//   warn(args: ArgsProps): void;\n//   warning(args: ArgsProps): void;\n//   open(args: ArgsProps): void;\n//   close(key: string): void;\n//   config(options: ConfigProps): void;\n//   destroy(): void;\n// }\n\nexport default api;",null]}