{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/package/form/form-item#/transfer-setting-form-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/package/form/form-item#/transfer-setting-form-item.vue","mtime":1600926555705},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { FormService } from \"../form.service\";\nexport default {\n  name: 'TransferSettingFormSetting',\n  inject: ['form'],\n  data: function data() {\n    return {\n      isTransfer: false,\n      isReset: true,\n      range: {\n        min: 0,\n        max: 99\n      }\n    };\n  },\n  serviceInject: function serviceInject() {\n    return {\n      service: FormService\n    };\n  },\n  rxState: function rxState() {\n    var transferUnitOptions$ = this.service.transferUnitOptions$;\n    return {\n      transferUnitOptions$: transferUnitOptions$\n    };\n  },\n  computed: {\n    decorators: function decorators() {\n      return this.form.decorators;\n    }\n  },\n  methods: {\n    onchangeUnit: function onchangeUnit(value) {\n      this.getRange(value);\n    },\n    onChange: function onChange(event) {\n      var _this = this;\n\n      this.isReset = false;\n      var timer = setTimeout(function () {\n        _this.isReset = true;\n        clearTimeout(timer);\n      }, 100);\n      this.isTransfer = !!event[0];\n      this.form.isTransfer = !!event[0];\n    },\n    getRange: function getRange(unit) {\n      var _this2 = this;\n\n      var ranges = {\n        1: {\n          min: 0,\n          max: 100\n        },\n        2: {\n          min: 0,\n          max: 999999\n        }\n      };\n      this.$nextTick().then(function () {\n        unit = unit ? unit : _this2.form.form.getFieldValue('transfer_unit');\n        _this2.range = ranges[unit];\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.isTransfer = !!this.form.initInfo.is_allow_transfer;\n    this.getRange();\n  }\n};",{"version":3,"sources":["transfer-setting-form-item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAAA,WAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,4BADA;AAEA,EAAA,MAAA,EAAA,CAAA,MAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,GAAA,EAAA;AAFA;AAHA,KAAA;AAQA,GAZA;AAaA,EAAA,aAbA,2BAaA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GAjBA;AAkBA,EAAA,OAlBA,qBAkBA;AAAA,QACA,oBADA,GACA,KAAA,OADA,CACA,oBADA;AAEA,WAAA;AACA,MAAA,oBAAA,EAAA;AADA,KAAA;AAGA,GAvBA;AAwBA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,IAAA,CAAA,UAAA;AACA;AAHA,GAxBA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,WAAA,QAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,KAJA,EAIA;AAAA;;AACA,WAAA,OAAA,GAAA,KAAA;AACA,UAAA,KAAA,GAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,QAAA,YAAA,CAAA,KAAA,CAAA;AACA,OAHA,EAGA,GAHA,CAAA;AAIA,WAAA,UAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,WAAA,IAAA,CAAA,UAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,KAZA;AAaA,IAAA,QAbA,oBAaA,IAbA,EAaA;AAAA;;AACA,UAAA,MAAA,GAAA;AACA,WAAA;AACA,UAAA,GAAA,EAAA,CADA;AAEA,UAAA,GAAA,EAAA;AAFA,SADA;AAKA,WAAA;AACA,UAAA,GAAA,EAAA,CADA;AAEA,UAAA,GAAA,EAAA;AAFA;AALA,OAAA;AAUA,WAAA,SAAA,GAAA,IAAA,CAAA,YAAA;AACA,QAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,aAAA,CAAA,eAAA,CAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AACA,OAHA;AAIA;AA5BA,GA7BA;AA2DA,EAAA,OA3DA,qBA2DA;AACA,SAAA,UAAA,GAAA,CAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,iBAAA;AACA,SAAA,QAAA;AACA;AA9DA,CAAA","sourcesContent":["<template>\n  <!-- 转让设置 -->\n  <div :class=\"form.b('transfer-item')\">\n    <st-form-item label=\"转让设置\" :required=\"isTransfer\" labelWidth=\"148px\">\n      <a-checkbox-group\n        v-decorator=\"decorators.is_allow_transfer\"\n        @change=\"onChange\"\n      >\n        <a-checkbox :value=\"1\">\n          <span>支持转让</span>\n        </a-checkbox>\n      </a-checkbox-group>\n    </st-form-item>\n    <st-form-item\n      v-if=\"isReset\"\n      class=\"input-number\"\n      label=\"\"\n      :required=\"isTransfer\"\n    >\n      <st-input-number\n        v-decorator=\"decorators.transfer_rate\"\n        :min=\"range.min\"\n        :max=\"range.max\"\n        float\n        :disabled=\"!isTransfer\"\n        style=\"width: 141px\"\n      >\n        <a-select\n          slot=\"addonAfter\"\n          @change=\"onchangeUnit\"\n          v-decorator=\"decorators.transfer_unit\"\n          :options=\"transferUnitOptions$\"\n        ></a-select>\n      </st-input-number>\n    </st-form-item>\n  </div>\n</template>\n\n<script>\nimport { FormService } from '../form.service'\nexport default {\n  name: 'TransferSettingFormSetting',\n  inject: ['form'],\n  data() {\n    return {\n      isTransfer: false,\n      isReset: true,\n      range: {\n        min: 0,\n        max: 99\n      }\n    }\n  },\n  serviceInject() {\n    return {\n      service: FormService\n    }\n  },\n  rxState() {\n    let { transferUnitOptions$ } = this.service\n    return {\n      transferUnitOptions$\n    }\n  },\n  computed: {\n    decorators() {\n      return this.form.decorators\n    }\n  },\n  methods: {\n    onchangeUnit(value) {\n      this.getRange(value)\n    },\n    onChange(event) {\n      this.isReset = false\n      let timer = setTimeout(() => {\n        this.isReset = true\n        clearTimeout(timer)\n      }, 100)\n      this.isTransfer = !!event[0]\n      this.form.isTransfer = !!event[0]\n    },\n    getRange(unit) {\n      let ranges = {\n        1: {\n          min: 0,\n          max: 100\n        },\n        2: {\n          min: 0,\n          max: 999999\n        }\n      }\n      this.$nextTick().then(() => {\n        unit = unit ? unit : this.form.form.getFieldValue('transfer_unit')\n        this.range = ranges[unit]\n      })\n    }\n  },\n  mounted() {\n    this.isTransfer = !!this.form.initInfo.is_allow_transfer\n    this.getRange()\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src/views/biz-components/package/form/form-item#"}]}