{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/revenue/product.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/revenue/product.vue","mtime":1598250255923},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport StTotal from '@/views/biz-components/st/total/total.vue'\nimport StTotalItem from '@/views/biz-components/st/total/total-item.vue'\nimport StDesc from '@/views/biz-components/st/desc/desc.vue'\nimport ShopStatDetailListModal from '@/views/biz-modals/stat/order-detail'\nimport ShopStatDailyListModal from '@/views/biz-modals/stat/daily-detail'\n\nimport moment from 'moment'\nimport { ProductService } from './product.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport {\n  columns,\n  totalColumns,\n  dailyTotalColumns,\n  countDesc\n} from './product.config'\nexport default {\n  name: 'BrandStatRevenueProduct',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      productService: ProductService\n    }\n  },\n  modals: {\n    ShopStatDetailListModal,\n    ShopStatDailyListModal\n  },\n  rxState() {\n    console.log(this.productService)\n    const {\n      list$,\n      page$,\n      total$,\n      auth$,\n      dataToday$,\n      updateTime$,\n      productType$,\n      loading$\n    } = this.productService\n    return {\n      list: list$,\n      page: page$,\n      total: total$,\n      auth: auth$,\n      dataToday: dataToday$,\n      updateTime: updateTime$,\n      productType: productType$,\n      loading: loading$\n    }\n  },\n  bem: {\n    b: 'page-brand-stat-revenue-product',\n    bHeader: 'page-brand-stat-header'\n  },\n  data() {\n    return {\n      dataTodayShop: -1\n    }\n  },\n  created() {\n    this.getDataToday()\n  },\n  computed: {\n    columns,\n    totalColumns,\n    countDesc,\n    dailyTotalColumns\n  },\n  methods: {\n    moment,\n    // TODO:\n    onChangeDataDays(event) {\n      this.$searchQuery.day = event.recently_day || undefined\n      this.$searchQuery.start_date = event.start_date || undefined\n      this.$searchQuery.end_date = event.end_date || undefined\n      this.onSearch()\n    },\n    getDataToday() {\n      return this.productService.getDataToday().subscribe()\n    },\n    refresh() {\n      return this.productService.getDataRefresh()\n    },\n    dailyRefresh() {\n      return this.productService.getDataToday({ is_refresh: 1 })\n    }\n  },\n  components: {\n    StTotal,\n    StTotalItem,\n    StDesc\n  }\n}\n",null]}