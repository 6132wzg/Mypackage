{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/find#/valid-id.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/find#/valid-id.vue","mtime":1591147717007},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FindService } from '../find.service'\nimport { ruleOptions } from './find.config'\nimport { PatternService } from '@/services/pattern.service'\nimport InputPhoneCode from '@/views/biz-components/input-phone-code/input-phone-code'\nimport { IS_BIND } from '@/constants/account'\n\nexport default {\n  bem: {\n    b: 'page-find-account-valid-id'\n  },\n  name: 'FindAccountValidId',\n  components: {\n    InputPhoneCode\n  },\n  serviceInject() {\n    return {\n      findService: FindService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.findService.loading$\n    }\n  },\n  props: {\n    isBind: Boolean,\n    bindInfo: {\n      type: Object\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      IS_BIND,\n      form,\n      decorators,\n      isCountTime: false\n    }\n  },\n  methods: {\n    getCaptcha() {\n      const params = {\n        account: this.bindInfo.account\n      }\n      this.findService.sendCaptcha(params).subscribe(res => {\n        this.isCountTime = true\n      })\n    },\n    endCount() {\n      this.isCountTime = false\n    },\n    next() {\n      this.form.validate().then(values => {\n        values.account = this.bindInfo.account\n        this.$emit('next', values)\n      })\n    },\n    goBind() {\n      this.$router.push({\n        path: '/account/login',\n        query: {\n          isBind: true\n        }\n      })\n    }\n  }\n}\n",null]}