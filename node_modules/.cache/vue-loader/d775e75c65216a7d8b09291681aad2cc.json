{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/components#/cabinet-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/components#/cabinet-list.vue","mtime":1591147717441},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { CabinetListService as CabinetService } from './cabinet-list.service'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nexport default {\n  bem: {\n    b: 'st-setting-cabinet'\n  },\n  serviceInject() {\n    return {\n      cabinetService: CabinetService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      resData: cabinetService.resData$,\n      auth: cabinetService.auth$\n    }\n  },\n  modals: {\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary\n  },\n  props: {\n    isOperationInBatch: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'temporary'\n    },\n    areaName: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    isOperationInBatch() {\n      this.checkedList = []\n      this.indeterminate = false\n      this.checkAll = false\n    }\n  },\n  computed: {\n    list() {\n      return this.resData.list\n    },\n    plainOptions() {\n      const { list } = this\n      const ret = []\n      list.forEach(item => {\n        ret.push(item.id)\n      })\n      return ret\n    }\n  },\n  data() {\n    return {\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false,\n      editFlag: ''\n    }\n  },\n  methods: {\n    onChange(checkedList) {\n      const { plainOptions } = this\n      this.checkedList = checkedList\n      this.indeterminate =\n        !!checkedList.length && checkedList.length < plainOptions.length\n      this.checkAll = checkedList.length === plainOptions.length\n      this.$emit('selectChange', checkedList)\n    },\n    onCheckAllChange(e) {\n      Object.assign(this, {\n        checkedList: e.target.checked ? this.plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      })\n      this.$emit('selectChange', this.checkedList)\n    },\n    mouseEventHander(type, id) {\n      this.editFlag = `${type}-${id}`\n    },\n    change() {\n      this.$emit('change')\n    }\n  }\n}\n",{"version":3,"sources":["cabinet-list.vue"],"names":[],"mappingsfile":"cabinet-list.vue","sourceRoot":"src/views/pages/shop/setting/components#","sourcesContent":["<template>\n  <div>\n    <section v-if=\"list && list.length\">\n      <div v-if=\"isOperationInBatch\" class=\"mg-b12\">\n        <a-checkbox\n          :indeterminate=\"indeterminate\"\n          :checked=\"checkAll\"\n          @change=\"onCheckAllChange\"\n        />\n        <span>\n          已选\n          <span class=\"color-primary\">{{ checkedList.length }}</span>\n          / {{ list.length }}\n        </span>\n      </div>\n      <a-checkbox-group\n        :value=\"checkedList\"\n        @change=\"onChange\"\n        class=\"full-width\"\n      >\n        <a-row :gutter=\"16\" :class=\"b()\">\n          <a-col\n            v-for=\"(item, index) in list\"\n            :key=\"index\"\n            :md=\"6\"\n            :lg=\"4\"\n            :xl=\"3\"\n          >\n            <div\n              :class=\"b('item')\"\n              @mouseenter=\"mouseEventHander('enter', item.id)\"\n              @mouseleave=\"mouseEventHander('leave', item.id)\"\n            >\n              <template v-if=\"item.is_smart\">\n                <div class=\"smart-cabinet-logo\" v-if=\"item.is_online\">\n                  <st-icon\n                    class=\"smart-cabinet-logo__img\"\n                    type=\"cabinet-logo\"\n                    color=\"#ffffff\"\n                  ></st-icon>\n                </div>\n\n                <st-help-tooltip :isCustom=\"true\" title=\"该储物柜已离线\" v-else>\n                  <div class=\"smart-cabinet-logo smart-cabinet-logo--disabled\">\n                    <st-icon\n                      class=\"smart-cabinet-logo__img\"\n                      type=\"cabinet-logo\"\n                      color=\"#9BACB9\"\n                    ></st-icon>\n                  </div>\n                </st-help-tooltip>\n              </template>\n\n              <div :class=\"b('item-num')\">{{ item.serial_num }}</div>\n              <div v-if=\"item.price_num\" :class=\"b('item-price')\">\n                ¥{{ item.price_num }}/天\n              </div>\n              <div :class=\"b('action')\">\n                <a-checkbox v-if=\"isOperationInBatch\" :value=\"item.id\" />\n                <a\n                  v-else\n                  v-modal-link=\"{\n                    name: `shop-cabinet-edit-${type}`,\n                    props: {\n                      id: item.id,\n                      areaName\n                    },\n                    on: {\n                      change\n                    }\n                  }\"\n                >\n                  <span\n                    v-if=\"editFlag === `enter-${item.id}` && auth.edit\"\n                    :class=\"b('item-edit')\"\n                  >\n                    编辑\n                  </span>\n                </a>\n              </div>\n            </div>\n          </a-col>\n        </a-row>\n      </a-checkbox-group>\n    </section>\n    <section v-else>\n      <st-no-data text=\"暂无储物柜～\" />\n    </section>\n  </div>\n</template>\n<script>\nimport { CabinetListService as CabinetService } from './cabinet-list.service'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nexport default {\n  bem: {\n    b: 'st-setting-cabinet'\n  },\n  serviceInject() {\n    return {\n      cabinetService: CabinetService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      resData: cabinetService.resData$,\n      auth: cabinetService.auth$\n    }\n  },\n  modals: {\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary\n  },\n  props: {\n    isOperationInBatch: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'temporary'\n    },\n    areaName: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    isOperationInBatch() {\n      this.checkedList = []\n      this.indeterminate = false\n      this.checkAll = false\n    }\n  },\n  computed: {\n    list() {\n      return this.resData.list\n    },\n    plainOptions() {\n      const { list } = this\n      const ret = []\n      list.forEach(item => {\n        ret.push(item.id)\n      })\n      return ret\n    }\n  },\n  data() {\n    return {\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false,\n      editFlag: ''\n    }\n  },\n  methods: {\n    onChange(checkedList) {\n      const { plainOptions } = this\n      this.checkedList = checkedList\n      this.indeterminate =\n        !!checkedList.length && checkedList.length < plainOptions.length\n      this.checkAll = checkedList.length === plainOptions.length\n      this.$emit('selectChange', checkedList)\n    },\n    onCheckAllChange(e) {\n      Object.assign(this, {\n        checkedList: e.target.checked ? this.plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      })\n      this.$emit('selectChange', this.checkedList)\n    },\n    mouseEventHander(type, id) {\n      this.editFlag = `${type}-${id}`\n    },\n    change() {\n      this.$emit('change')\n    }\n  }\n}\n</script>\n"]}]}