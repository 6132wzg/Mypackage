{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-entry-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-entry-line.vue","mtime":1594718339905},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport { Chart } from '@antv/g2';\nimport { View } from 'st-data-set';\nimport chartMixin from \"./mixin\";\nimport { toKFilter } from \"./filters\";\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05-19',value:2015},{date:'08-20',value:3800}]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    color: {\n      type: String,\n      default: 'l(90) 0:#57ABFF 1:#4169F7'\n    },\n    height: {\n      type: Number,\n      default: 200\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data: function data() {\n    return {// MAX: 0\n    };\n  },\n  computed: {\n    MAX: function MAX() {\n      var maxValue = this.dv.max('value');\n      return maxValue > this.max ? maxValue : this.max;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +row.value;\n          return row;\n        }\n      });\n    },\n    changeData: function changeData() {\n      this.chart.destroy();\n      this.initChart();\n    },\n    initChart: function initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        // svg阴影比较符合预期\n        renderer: 'svg',\n        height: this.height,\n        padding: 'auto'\n      });\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          formatter: toKFilter,\n          max: +this.MAX,\n          min: 0,\n          tickCount: 2\n        }\n      });\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      });\n      this.chart.line().shape('smooth').position('date*value').size(2).style({\n        shadowColor: 'rgba(65,105,247,.4)',\n        shadowBlur: 20,\n        shadowOffsetY: 4\n      }).color(this.color).tooltip('name*value', function (name, value) {\n        return {\n          name: '入场人数',\n          value: value + '人'\n        };\n      });\n      this.chart.render();\n    }\n  }\n};",null]}