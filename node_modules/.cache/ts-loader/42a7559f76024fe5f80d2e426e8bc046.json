{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/marketing/scan-table.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/marketing/scan-table.service.ts","mtime":1600926555830},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { ActivityQrcodeApi, GetScanListQuery } from '@/api/v1/marketing/activity-qrcode';\nimport { tap } from 'rxjs/operators';\n\nvar ScanTableService = /*#__PURE__*/function () {\n  function ScanTableService(activityQrcodeApi) {\n    _classCallCheck(this, ScanTableService);\n\n    this.activityQrcodeApi = activityQrcodeApi;\n    this.loading$ = new State({});\n    this.list$ = new State([]);\n    this.page$ = new State({\n      current_page: 1,\n      size: 20,\n      total_counts: 1,\n      total_pages: 1\n    });\n  }\n\n  _createClass(ScanTableService, [{\n    key: \"getScanList\",\n    value: function getScanList(query) {\n      var _this = this;\n\n      return this.activityQrcodeApi.getScanList(query).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }]);\n\n  return ScanTableService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof GetScanListQuery !== \"undefined\" && GetScanListQuery) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], ScanTableService.prototype, \"getScanList\", null);\n\nScanTableService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof ActivityQrcodeApi !== \"undefined\" && ActivityQrcodeApi) === \"function\" ? _b : Object])], ScanTableService);\nexport { ScanTableService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/marketing/scan-table.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SACE,iBADF,EAEE,gBAFF,QAGO,oCAHP;AAIA,SAAS,GAAT,QAAoB,gBAApB;;AAEA,IAAa,gBAAb;AASE,4BAAoB,iBAApB,EAAwD;AAAA;;AAApC,SAAA,iBAAA,GAAA,iBAAA;AARpB,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU;AAChB,MAAA,YAAY,EAAE,CADE;AAEhB,MAAA,IAAI,EAAE,EAFU;AAGhB,MAAA,YAAY,EAAE,CAHE;AAIhB,MAAA,WAAW,EAAE;AAJG,KAAV,CAAR;AAM4D;;AAT9D;AAAA;AAAA,gCAWc,KAXd,EAWqC;AAAA;;AACjC,aAAO,KAAK,iBAAL,CAAuB,WAAvB,CAAmC,KAAnC,EAA0C,IAA1C,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAHE,CADE,CAAP;AAMD;AAlBH;;AAAA;AAAA,GAAA;;AAWE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAmB,gB,KAAgB,W,IAAhB,gB,MAAgB,U,GAAA,E,GAAA,M,EAAnC,E,uCAAA,CAAA,E,0BAAA,E,aAAA,EAOC,IAPD,CAAA;;AAXW,gBAAgB,GAAA,UAAA,CAAA,CAD5B,UAAU,EACkB,E,qDASY,iB,KAAiB,W,IAAjB,iB,MAAiB,U,GAAA,E,GAAA,M,EAT7B,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourcesContent":["import { Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport {\n  ActivityQrcodeApi,\n  GetScanListQuery\n} from '@/api/v1/marketing/activity-qrcode'\nimport { tap } from 'rxjs/operators'\n@Injectable()\nexport class ScanTableService {\n  loading$ = new State({})\n  list$ = new State([])\n  page$ = new State({\n    current_page: 1,\n    size: 20,\n    total_counts: 1,\n    total_pages: 1\n  })\n  constructor(private activityQrcodeApi: ActivityQrcodeApi) {}\n  @Effect()\n  getScanList(query: GetScanListQuery) {\n    return this.activityQrcodeApi.getScanList(query).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n}\n"],"sourceRoot":""}]}