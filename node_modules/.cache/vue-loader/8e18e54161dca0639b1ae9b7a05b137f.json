{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify.vue","mtime":1591147717374},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { NotifyService } from './notify.service'\nexport default {\n  name: 'CommonNotify',\n  bem: {\n    bPage: 'page-common-notify'\n  },\n  serviceInject() {\n    return {\n      service: NotifyService\n    }\n  },\n  rxState() {\n    const { info$, authTabs$ } = this.service\n    return {\n      // authTabs: this.service.authTabs$\n      authTabs$,\n      info$\n    }\n  },\n  methods: {\n    onChange() {\n      this.service.getNoticePcUnread().subscribe()\n    }\n  }\n}\n",{"version":3,"sources":["notify.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"notify.vue","sourceRoot":"src/views/pages/common","sourcesContent":["<template>\n  <st-panel\n    :class=\"bPage()\"\n    @change=\"onChange\"\n    app\n    initial\n    isBadge\n    :tabs=\"authTabs$\"\n  >\n    <router-view></router-view>\n  </st-panel>\n</template>\n<script>\nimport { NotifyService } from './notify.service'\nexport default {\n  name: 'CommonNotify',\n  bem: {\n    bPage: 'page-common-notify'\n  },\n  serviceInject() {\n    return {\n      service: NotifyService\n    }\n  },\n  rxState() {\n    const { info$, authTabs$ } = this.service\n    return {\n      // authTabs: this.service.authTabs$\n      authTabs$,\n      info$\n    }\n  },\n  methods: {\n    onChange() {\n      this.service.getNoticePcUnread().subscribe()\n    }\n  }\n}\n</script>\n"]}]}