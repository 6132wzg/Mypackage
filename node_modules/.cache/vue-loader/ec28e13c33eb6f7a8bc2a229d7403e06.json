{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/line.vue","mtime":1595918102082},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n\nimport mixin from './mixin'\nexport default {\n  name: 'StLineChart',\n  mixins: [mixin],\n  methods: {\n    renderChart() {\n      const chart = this.initChart('line')\n      const { x, y } = this.opts.fieldNames\n      chart.scale(y, {\n        min: 0\n      })\n      chart.scale(x, {\n        range: [0, 1]\n      })\n      chart.tooltip({\n        crosshairs: {\n          type: 'line'\n        }\n      })\n      chart.line().position([x, y])\n      chart\n        .point()\n        .position([x, y])\n        .size(4)\n        .shape('circle')\n        .style({\n          stroke: '#fff',\n          lineWidth: 1\n        })\n      chart.render()\n    }\n  }\n}\n",{"version":3,"sources":["line.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"line.vue","sourceRoot":"src/views/biz-components/chart","sourcesContent":["<template>\n  <div :id=\"id\"></div>\n</template>\n<script>\nimport mixin from './mixin'\nexport default {\n  name: 'StLineChart',\n  mixins: [mixin],\n  methods: {\n    renderChart() {\n      const chart = this.initChart('line')\n      const { x, y } = this.opts.fieldNames\n      chart.scale(y, {\n        min: 0\n      })\n      chart.scale(x, {\n        range: [0, 1]\n      })\n      chart.tooltip({\n        crosshairs: {\n          type: 'line'\n        }\n      })\n      chart.line().position([x, y])\n      chart\n        .point()\n        .position([x, y])\n        .size(4)\n        .shape('circle')\n        .style({\n          stroke: '#fff',\n          lineWidth: 1\n        })\n      chart.render()\n    }\n  }\n}\n</script>\n"]}]}