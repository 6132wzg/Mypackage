{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/brand.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/brand.service.ts","mtime":1591147717345},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { BrandApi, UpdateInput } from '@/api/v1/setting/brand';\n\nvar BrandService = /*#__PURE__*/function () {\n  function BrandService(brandApi) {\n    _classCallCheck(this, BrandService);\n\n    this.brandApi = brandApi;\n    this.brandInfo$ = new State({});\n    this.systemInfo$ = new State({});\n    this.loading$ = new State({});\n  }\n\n  _createClass(BrandService, [{\n    key: \"getInfo\",\n    value: function getInfo() {\n      var _this = this;\n\n      return this.brandApi.getInfo().pipe(tap(function (res) {\n        _this.brandInfo$.commit(function () {\n          return res.info.brand_info;\n        });\n\n        _this.systemInfo$.commit(function () {\n          return res.info.system_info;\n        });\n      }));\n    }\n  }, {\n    key: \"update\",\n    value: function update(data) {\n      return this.brandApi.update(data);\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return this.getInfo();\n    }\n  }]);\n\n  return BrandService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof UpdateInput !== \"undefined\" && UpdateInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], BrandService.prototype, \"update\", null);\n\nBrandService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof BrandApi !== \"undefined\" && BrandApi) === \"function\" ? _b : Object])], BrandService);\nexport { BrandService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/brand.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,QAAT,EAAmB,WAAnB,QAAsC,wBAAtC;;AAGA,IAAa,YAAb;AAIE,wBAAoB,QAApB,EAAsC;AAAA;;AAAlB,SAAA,QAAA,GAAA,QAAA;AAHpB,SAAA,UAAA,GAAa,IAAI,KAAJ,CAAU,EAAV,CAAb;AACA,SAAA,WAAA,GAAc,IAAI,KAAJ,CAAU,EAAV,CAAd;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AAC0C;;AAJ5C;AAAA;AAAA,8BAKS;AAAA;;AACL,aAAO,KAAK,QAAL,CAAc,OAAd,GAAwB,IAAxB,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,UAAL,CAAgB,MAAhB,CAAuB;AAAA,iBAAM,GAAG,CAAC,IAAJ,CAAS,UAAf;AAAA,SAAvB;;AACA,QAAA,KAAI,CAAC,WAAL,CAAiB,MAAjB,CAAwB;AAAA,iBAAM,GAAG,CAAC,IAAJ,CAAS,WAAf;AAAA,SAAxB;AACD,OAHE,CADE,CAAP;AAMD;AAZH;AAAA;AAAA,2BAcS,IAdT,EAc0B;AACtB,aAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,IAArB,CAAP;AACD;AAhBH;AAAA;AAAA,+BAiBa,EAjBb,EAiB+B,IAjB/B,EAiBiD;AAC7C,aAAO,KAAK,OAAL,EAAP;AACD;AAnBH;;AAAA;AAAA,GAAA;;AAcE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAa,W,KAAW,W,IAAX,W,MAAW,U,GAAA,E,GAAA,M,EAAxB,E,uCAAA,CAAA,E,sBAAA,E,QAAA,EAEC,IAFD,CAAA;;AAdW,YAAY,GAAA,UAAA,CAAA,CADxB,UAAU,EACc,E,qDAIO,Q,KAAQ,W,IAAR,Q,MAAQ,U,GAAA,E,GAAA,M,EAJf,CAAA,EAAZ,YAAY,CAAZ;SAAA,Y","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { BrandApi, UpdateInput } from '@/api/v1/setting/brand'\n\n@Injectable()\nexport class BrandService implements Controller {\n  brandInfo$ = new State({})\n  systemInfo$ = new State({})\n  loading$ = new State({})\n  constructor(private brandApi: BrandApi) {}\n  getInfo() {\n    return this.brandApi.getInfo().pipe(\n      tap((res: any) => {\n        this.brandInfo$.commit(() => res.info.brand_info)\n        this.systemInfo$.commit(() => res.info.system_info)\n      })\n    )\n  }\n  @Effect()\n  update(data: UpdateInput) {\n    return this.brandApi.update(data)\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return this.getInfo()\n  }\n}\n"],"sourceRoot":""}]}