{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/frozen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/frozen.vue","mtime":1596188219492},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FrozenService } from './frozen.service'\nimport { columns, ruleOptions } from './frozen.config'\nimport moment from 'moment'\nexport default {\n  name: 'ModalShopFrozen',\n  bem: {\n    frozen: 'modal-shop-frozen'\n  },\n  serviceInject() {\n    return {\n      frozenService: FrozenService\n    }\n  },\n  rxState() {\n    return {\n      list: this.frozenService.list$,\n      staffList: this.frozenService.staffList$,\n      payMethodList: this.frozenService.payMethodList$,\n      hasTransferFeeList: this.frozenService.hasTransferFeeList$,\n      loading: this.frozenService.loading$\n    }\n  },\n  name: 'frozen',\n  bem: {\n    basic: 'shop-frozen'\n  },\n  props: {\n    record: {\n      type: Object\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isTransferFlag: false,\n      selectedRows: [],\n      dateString: [],\n      selectedRowsHelp: ''\n    }\n  },\n  created() {\n    this.getMemberBuy()\n  },\n  methods: {\n    disabledDate(current) {\n      // Can not select days before today and today\n      return (\n        current && current.format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD')\n      )\n    },\n    moment,\n    // 搜索员工\n    onSearch(data) {\n      this.memberSearchText = data\n      if (data === '') {\n        this.frozenService.memberList$.commit(() => [])\n        this.form.resetFields(['pay_fee'])\n      } else {\n        this.frozenService.getMemberList(data).subscribe(res => {\n          if (!res.list.length) {\n            this.form.resetFields(['pay_fee'])\n          }\n        })\n      }\n    },\n    getMemberBuy() {\n      this.frozenService.getMemberBuy(this.record.member_id).subscribe()\n    },\n    getMemberTransfer(data) {\n      this.frozenService.getMemberTransfer(data).subscribe(state => {\n        this.show = false\n        this.$emit('success')\n      })\n    },\n    save(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        if (this.selectedRows.length <= 0) {\n          this.selectedRowsHelp = '请选择冻结的卡课'\n          return\n        } else {\n          this.selectedRowsHelp = ''\n        }\n        values.product = this.selectedRows.map(item => {\n          return {\n            product_type: item.product_type,\n            product_id: item.id\n          }\n        })\n        values.id = this.record.member_id\n        values.end_time = moment(values.end_time).format('YYYY-MM-DD HH:mm')\n        this.getMemberTransfer(values)\n      })\n    },\n    onChangeDatepicker(date, dateString) {\n      this.dateString = dateString\n    },\n    changeTransfer(event) {\n      if (event.target.value === 0) {\n        this.isTransferFlag = false\n      } else {\n        this.isTransferFlag = true\n      }\n    }\n  },\n  computed: {\n    columns,\n    rowSelection() {\n      let self = this\n      const { selectedRowKeys } = this\n      return {\n        onChange: (selectedRowKeys, selectedRows) => {\n          self.selectedRows = selectedRows\n          if (selectedRows.length > 0) {\n            self.selectedRowsHelp = ''\n          }\n        },\n        getCheckboxProps: record => ({\n          props: {\n            // 产品类型为 1 会员卡 2 课程包  is_purchaser 1 为购卡人\n            disabled:\n              [1, 4].includes(record.product_type) && record.is_purchaser !== 1\n          }\n        })\n      }\n    }\n  }\n}\n",null]}