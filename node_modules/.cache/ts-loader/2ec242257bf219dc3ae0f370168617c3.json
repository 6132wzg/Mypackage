{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/deposit/edit.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/deposit/edit.service.ts","mtime":1591147717403},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { Effect, State } from 'rx-state';\nimport { CardsApi, CardsInput } from '@/api/v1/cards';\nimport { tap } from 'rxjs/operators';\nimport { UserService } from '@/services/user.service';\n\nvar EditService = /*#__PURE__*/function () {\n  function EditService(cardsApi, userService) {\n    _classCallCheck(this, EditService);\n\n    this.cardsApi = cardsApi;\n    this.userService = userService;\n    this.cardInfo$ = new State({});\n    this.loading$ = new State({});\n    this.cardBgList$ = this.userService.getOptions$('member_card.card_bg_list');\n    this.unit$ = this.userService.getOptions$('deposit_card.unit');\n    this.consumerType$ = this.userService.getOptions$('deposit_card.consumer_type');\n    this.consumptionRange$ = this.userService.getOptions$('deposit_card.consumption_range');\n    this.transferUnit$ = this.userService.getOptions$('deposit_card.transfer_unit');\n    this.supportSales$ = this.userService.getOptions$('deposit_card.support_sales');\n    this.sellType$ = this.userService.getOptions$('deposit_card.sell_type');\n  }\n\n  _createClass(EditService, [{\n    key: \"getCardInfo\",\n    value: function getCardInfo(id) {\n      var _this = this;\n\n      return this.cardsApi.getCardDepositInfoBackBrand(id).pipe(tap(function (res) {\n        _this.cardInfo$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"editCard\",\n    value: function editCard(data) {\n      return this.cardsApi.editCardDeposit(data, 'shop');\n    }\n  }, {\n    key: \"init\",\n    value: function init(id) {\n      return this.getCardInfo(id);\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter(to, from) {\n      return this.init(to.meta.query.id);\n    }\n  }]);\n\n  return EditService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof CardsInput !== \"undefined\" && CardsInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], EditService.prototype, \"editCard\", null);\n\nEditService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof CardsApi !== \"undefined\" && CardsApi) === \"function\" ? _b : Object, typeof (_c = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _c : Object])], EditService);\nexport { EditService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/deposit/edit.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,MAAT,EAAiB,KAAjB,QAA8B,UAA9B;AACA,SAAS,QAAT,EAAmB,UAAnB,QAAqC,gBAArC;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,WAAT,QAA4B,yBAA5B;;AAEA,IAAa,WAAb;AAaE,uBAAoB,QAApB,EAAgD,WAAhD,EAAwE;AAAA;;AAApD,SAAA,QAAA,GAAA,QAAA;AAA4B,SAAA,WAAA,GAAA,WAAA;AAZhD,SAAA,SAAA,GAAY,IAAI,KAAJ,CAAU,EAAV,CAAZ;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,WAAA,GAAc,KAAK,WAAL,CAAiB,WAAjB,CAA6B,0BAA7B,CAAd;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,WAAjB,CAA6B,mBAA7B,CAAR;AACA,SAAA,aAAA,GAAgB,KAAK,WAAL,CAAiB,WAAjB,CAA6B,4BAA7B,CAAhB;AACA,SAAA,iBAAA,GAAoB,KAAK,WAAL,CAAiB,WAAjB,CAClB,gCADkB,CAApB;AAGA,SAAA,aAAA,GAAgB,KAAK,WAAL,CAAiB,WAAjB,CAA6B,4BAA7B,CAAhB;AACA,SAAA,aAAA,GAAgB,KAAK,WAAL,CAAiB,WAAjB,CAA6B,4BAA7B,CAAhB;AACA,SAAA,SAAA,GAAY,KAAK,WAAL,CAAiB,WAAjB,CAA6B,wBAA7B,CAAZ;AAE4E;;AAb9E;AAAA;AAAA,gCAcc,EAdd,EAcwB;AAAA;;AACpB,aAAO,KAAK,QAAL,CAAc,2BAAd,CAA0C,EAA1C,EAA8C,IAA9C,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,SAAL,CAAe,MAAf,CAAsB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAtB;AACD,OAFE,CADE,CAAP;AAKD;AApBH;AAAA;AAAA,6BAsBW,IAtBX,EAsB2B;AACvB,aAAO,KAAK,QAAL,CAAc,eAAd,CAA8B,IAA9B,EAAoC,MAApC,CAAP;AACD;AAxBH;AAAA;AAAA,yBAyBO,EAzBP,EAyBiB;AACb,aAAO,KAAK,WAAL,CAAiB,EAAjB,CAAP;AACD;AA3BH;AAAA;AAAA,qCA4BmB,EA5BnB,EA4BqC,IA5BrC,EA4BuD;AACnD,aAAO,KAAK,IAAL,CAAU,EAAE,CAAC,IAAH,CAAQ,KAAR,CAAc,EAAxB,CAAP;AACD;AA9BH;;AAAA;AAAA,GAAA;;AAsBE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAe,U,KAAU,W,IAAV,U,MAAU,U,GAAA,E,GAAA,M,EAAzB,E,uCAAA,CAAA,E,qBAAA,E,UAAA,EAEC,IAFD,CAAA;;AAtBW,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDAaQ,Q,KAAQ,W,IAAR,Q,MAAQ,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAuB,WAAvB,KAAkC,WAAlC,IAAuB,WAAvB,MAAkC,UAAlC,GAAkC,EAAlC,GAAkC,M,EAblD,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { Effect, State } from 'rx-state'\nimport { CardsApi, CardsInput } from '@/api/v1/cards'\nimport { tap } from 'rxjs/operators'\nimport { UserService } from '@/services/user.service'\n@Injectable()\nexport class EditService implements Controller {\n  cardInfo$ = new State({})\n  loading$ = new State({})\n  cardBgList$ = this.userService.getOptions$('member_card.card_bg_list')\n  unit$ = this.userService.getOptions$('deposit_card.unit')\n  consumerType$ = this.userService.getOptions$('deposit_card.consumer_type')\n  consumptionRange$ = this.userService.getOptions$(\n    'deposit_card.consumption_range'\n  )\n  transferUnit$ = this.userService.getOptions$('deposit_card.transfer_unit')\n  supportSales$ = this.userService.getOptions$('deposit_card.support_sales')\n  sellType$ = this.userService.getOptions$('deposit_card.sell_type')\n\n  constructor(private cardsApi: CardsApi, private userService: UserService) {}\n  getCardInfo(id: string) {\n    return this.cardsApi.getCardDepositInfoBackBrand(id).pipe(\n      tap((res: any) => {\n        this.cardInfo$.commit(() => res.info)\n      })\n    )\n  }\n  @Effect()\n  editCard(data: CardsInput) {\n    return this.cardsApi.editCardDeposit(data, 'shop')\n  }\n  init(id: string) {\n    return this.getCardInfo(id)\n  }\n  beforeRouteEnter(to: ServiceRoute, from: ServiceRoute) {\n    return this.init(to.meta.query.id)\n  }\n}\n"],"sourceRoot":""}]}