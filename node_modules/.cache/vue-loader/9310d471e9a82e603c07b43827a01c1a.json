{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/crm/reset.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/crm/reset.vue","mtime":1591147717138},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { MessageService } from '@/services/message.service'\nexport default {\n  serviceInject() {\n    return {\n      messageService: MessageService\n    }\n  },\n  data() {\n    return {\n      show: false\n    }\n  },\n  props: {\n    text: {\n      type: String,\n      default: ''\n    }\n  },\n  created() {},\n  methods: {\n    cancel() {\n      this.$emit('cancel')\n      this.show = false\n    },\n    save() {\n      this.$emit('success')\n      this.show = false\n    }\n  }\n}\n",{"version":3,"sources":["reset.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"reset.vue","sourceRoot":"src/views/biz-modals/brand/setting/crm","sourcesContent":["<template>\n  <st-modal\n    title=\"重置\"\n    size=\"small\"\n    v-model=\"show\"\n    @ok=\"save\"\n    @cancel=\"cancel\"\n  >\n    {{ text }}\n  </st-modal>\n</template>\n<script>\nimport { MessageService } from '@/services/message.service'\nexport default {\n  serviceInject() {\n    return {\n      messageService: MessageService\n    }\n  },\n  data() {\n    return {\n      show: false\n    }\n  },\n  props: {\n    text: {\n      type: String,\n      default: ''\n    }\n  },\n  created() {},\n  methods: {\n    cancel() {\n      this.$emit('cancel')\n      this.show = false\n    },\n    save() {\n      this.$emit('success')\n      this.show = false\n    }\n  }\n}\n</script>\n"]}]}