{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/assign-shop/assign-shop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/assign-shop/assign-shop.vue","mtime":1597895241983},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { AssignShopService } from './assign-shop.service'\nimport { ruleOptions } from './assign-shop.config'\nexport default {\n  serviceInject() {\n    return {\n      assignShopService: AssignShopService\n    }\n  },\n  rxState() {\n    const { loading$, types$, shopList$ } = this.assignShopService\n    return {\n      loading: loading$,\n      types: types$,\n      shopList: shopList$\n    }\n  },\n  decorators() {\n    return this.form.addDecorators(this.ruleOptions)\n  },\n  bem: {\n    b: 'biz-assign-shop'\n  },\n  props: {\n    /**\n     * 1当前门店/2多店/3全店\n     */\n    type: {\n      type: Number,\n      default: 1\n    },\n    shopIds: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    label: {\n      type: String,\n      default: '入场场馆'\n    },\n    labelWidth: {\n      type: String,\n      default: '88px'\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    },\n    required: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      currentType: 1,\n      /**\n       * 多门店\n       */\n      MULTI_SHOP: 2\n    }\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    },\n    isShowShopList() {\n      /**\n       * 多店\n       */\n      return this.currentType === this.MULTI_SHOP\n    }\n  },\n  watch: {\n    disabled() {\n      this.form.validateFields(['currentShopIds'], { force: true })\n    },\n    type(val) {\n      this.currentType = val\n    },\n    shopIds: {\n      handler(val) {\n        this.form.setFieldsValue({\n          currentShopIds: val\n        })\n      },\n      deep: true\n    }\n  },\n  created() {\n    this.assignShopService.getShopList().subscribe()\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const { type, shopIds } = this\n      this.currentType = type\n      this.$nextTick(() => {\n        this.form.setFieldsValue({\n          currentShopIds: shopIds\n        })\n      })\n    },\n    onShopIdsChange(currentShopIds) {\n      this.form.setFieldsValue({\n        currentShopIds\n      })\n      this.onChange()\n    },\n    onTypeChange(e) {\n      this.currentType = e.target.value\n      this.$nextTick(() => {\n        this.form.validateFields(['currentShopIds'], { force: true })\n      })\n      this.onChange()\n    },\n    onChange() {\n      const { currentType } = this\n      const currentShopIds = this.form.getFieldValue('currentShopIds')\n      this.$emit('change', currentType, currentShopIds)\n    }\n  }\n}\n",{"version":3,"sources":["assign-shop.vue"],"names":[],"mappingsfile":"assign-shop.vue","sourceRoot":"src/views/biz-components/shop/assign-shop","sourcesContent":["<template>\n  <st-form-item\n    :class=\"b()\"\n    :labelGutter=\"labelGutter\"\n    :labelWidth=\"labelWidth\"\n    :required=\"required\"\n  >\n    <template slot=\"label\">\n      <slot v-if=\"$slots.label\" name=\"label\"></slot>\n      <template>{{ label }}</template>\n    </template>\n    <a-radio-group\n      v-model=\"currentType\"\n      :options=\"types\"\n      :disabled=\"disabled\"\n      @change=\"onTypeChange\"\n    ></a-radio-group>\n    <st-container\n      v-show=\"isShowShopList\"\n      class=\"mg-t16\"\n      :class=\"b('container')\"\n    >\n      <a-checkbox-group\n        v-decorator=\"decorators.currentShopIds\"\n        :disabled=\"disabled\"\n        @change=\"onShopIdsChange\"\n        class=\"full-width\"\n      >\n        <a-row>\n          <a-col\n            :span=\"12\"\n            v-for=\"item in shopList\"\n            :key=\"item.value\"\n            :class=\"b('item')\"\n          >\n            <a-checkbox :value=\"item.id\">{{ item.shop_name }}</a-checkbox>\n          </a-col>\n        </a-row>\n      </a-checkbox-group>\n    </st-container>\n  </st-form-item>\n</template>\n<script>\nimport { AssignShopService } from './assign-shop.service'\nimport { ruleOptions } from './assign-shop.config'\nexport default {\n  serviceInject() {\n    return {\n      assignShopService: AssignShopService\n    }\n  },\n  rxState() {\n    const { loading$, types$, shopList$ } = this.assignShopService\n    return {\n      loading: loading$,\n      types: types$,\n      shopList: shopList$\n    }\n  },\n  decorators() {\n    return this.form.addDecorators(this.ruleOptions)\n  },\n  bem: {\n    b: 'biz-assign-shop'\n  },\n  props: {\n    /**\n     * 1当前门店/2多店/3全店\n     */\n    type: {\n      type: Number,\n      default: 1\n    },\n    shopIds: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    label: {\n      type: String,\n      default: '入场场馆'\n    },\n    labelWidth: {\n      type: String,\n      default: '88px'\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    },\n    required: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      currentType: 1,\n      /**\n       * 多门店\n       */\n      MULTI_SHOP: 2\n    }\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    },\n    isShowShopList() {\n      /**\n       * 多店\n       */\n      return this.currentType === this.MULTI_SHOP\n    }\n  },\n  watch: {\n    disabled() {\n      this.form.validateFields(['currentShopIds'], { force: true })\n    },\n    type(val) {\n      this.currentType = val\n    },\n    shopIds: {\n      handler(val) {\n        this.form.setFieldsValue({\n          currentShopIds: val\n        })\n      },\n      deep: true\n    }\n  },\n  created() {\n    this.assignShopService.getShopList().subscribe()\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const { type, shopIds } = this\n      this.currentType = type\n      this.$nextTick(() => {\n        this.form.setFieldsValue({\n          currentShopIds: shopIds\n        })\n      })\n    },\n    onShopIdsChange(currentShopIds) {\n      this.form.setFieldsValue({\n        currentShopIds\n      })\n      this.onChange()\n    },\n    onTypeChange(e) {\n      this.currentType = e.target.value\n      this.$nextTick(() => {\n        this.form.validateFields(['currentShopIds'], { force: true })\n      })\n      this.onChange()\n    },\n    onChange() {\n      const { currentType } = this\n      const currentShopIds = this.form.getFieldValue('currentShopIds')\n      this.$emit('change', currentType, currentShopIds)\n    }\n  }\n}\n</script>\n"]}]}