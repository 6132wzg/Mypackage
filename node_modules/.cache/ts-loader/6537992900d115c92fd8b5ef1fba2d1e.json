{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/member/list/all.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/member/list/all.service.ts","mtime":1600926556375},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { CardsApi, CardListInput } from '@/api/v1/cards';\nimport { tap, map } from 'rxjs/operators';\nimport { AuthService } from '@/services/auth.service';\nimport { UserService } from '@/services/user.service';\nimport { forkJoin } from 'rxjs';\n\nvar AllService = /*#__PURE__*/function () {\n  function AllService(userService, cardApi, authService) {\n    _classCallCheck(this, AllService);\n\n    this.userService = userService;\n    this.cardApi = cardApi;\n    this.authService = authService;\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.loading$ = new State({});\n    this.auth$ = this.authService.authMap$({\n      add: 'shop:product:member_card|add'\n    });\n    this.publishChannel$ = this.userService.getOptions$('member_card.publish_channel').pipe(map(function (options) {\n      return [{\n        value: -1,\n        label: '所有渠道'\n      }].concat(options);\n    }));\n    this.cardType$ = this.userService.getOptions$('member_card.card_type').pipe(map(function (options) {\n      return [{\n        value: -1,\n        label: '所有类型'\n      }].concat(options);\n    }));\n    this.sellStatus$ = this.userService.getOptions$('member_card.sell_status').pipe(map(function (options) {\n      return [{\n        value: -1,\n        label: '所有售卖状态'\n      }].concat(options);\n    }));\n    this.shelfStatus$ = this.userService.getOptions$('member_card.shelf_status').pipe(map(function (options) {\n      return [{\n        value: -1,\n        label: '所有上架状态'\n      }].concat(options);\n    }));\n    this.cardNumberTypeOptions$ = this.userService.getOptions$('member_card.support_member_num_simple').pipe(map(function (options) {\n      return [{\n        value: -1,\n        label: '支持入场人数'\n      }].concat(options);\n    }));\n  }\n\n  _createClass(AllService, [{\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      return this.cardApi.getCardList(query, 'shop', 'member').pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"deleteCard\",\n    value: function deleteCard(id) {\n      return this.cardApi.setCardsDelete(id, 'shop', 'member');\n    }\n  }, {\n    key: \"init\",\n    value: function init(query) {\n      return forkJoin([this.getList(query)]);\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to) {\n      return this.init(to.meta.query);\n    }\n  }]);\n\n  return AllService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof CardListInput !== \"undefined\" && CardListInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], AllService.prototype, \"getList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String]), __metadata(\"design:returntype\", void 0)], AllService.prototype, \"deleteCard\", null);\n\nAllService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _b : Object, typeof (_c = typeof CardsApi !== \"undefined\" && CardsApi) === \"function\" ? _c : Object, typeof (_d = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _d : Object])], AllService);\nexport { AllService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/member/list/all.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { CardsApi, CardListInput } from '@/api/v1/cards'\nimport { tap, map } from 'rxjs/operators'\nimport { AuthService } from '@/services/auth.service'\nimport { UserService } from '@/services/user.service'\nimport { forkJoin } from 'rxjs'\n@Injectable()\nexport class AllService implements Controller {\n  list$ = new State([])\n  page$ = new State({})\n  loading$ = new State({})\n  auth$ = this.authService.authMap$({\n    add: 'shop:product:member_card|add'\n  })\n  publishChannel$ = this.userService\n    .getOptions$('member_card.publish_channel')\n    .pipe(map(options => [{ value: -1, label: '所有渠道' }].concat(options)))\n  cardType$ = this.userService\n    .getOptions$('member_card.card_type')\n    .pipe(map(options => [{ value: -1, label: '所有类型' }].concat(options)))\n  sellStatus$ = this.userService\n    .getOptions$('member_card.sell_status')\n    .pipe(\n      map(options => [{ value: -1, label: '所有售卖状态' }].concat(options))\n    )\n  shelfStatus$ = this.userService\n    .getOptions$('member_card.shelf_status')\n    .pipe(\n      map(options => [{ value: -1, label: '所有上架状态' }].concat(options))\n    )\n  cardNumberTypeOptions$ = this.userService\n    .getOptions$('member_card.support_member_num_simple')\n    .pipe(\n      map(options => [{ value: -1, label: '支持入场人数' }].concat(options))\n    )\n\n  constructor(\n    private userService: UserService,\n    private cardApi: CardsApi,\n    private authService: AuthService\n  ) {}\n\n  @Effect()\n  getList(query: CardListInput) {\n    return this.cardApi.getCardList(query, 'shop', 'member').pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  @Effect()\n  deleteCard(id: string) {\n    return this.cardApi.setCardsDelete(id, 'shop', 'member')\n  }\n  init(query: CardListInput) {\n    return forkJoin([this.getList(query)])\n  }\n  beforeEach(to: ServiceRoute) {\n    return this.init(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}