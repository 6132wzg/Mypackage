{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/personal-team/add-in-batch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/personal-team/add-in-batch.vue","mtime":1591147717188},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from 'lodash-es'\nimport { PersonalTeamScheduleCommonService as CommonService } from '@/views/pages/shop/product/course/schedule/personal-team/service#/common.service'\nimport { PersonalTeamScheduleScheduleService as ScheduleService } from '@/views/pages/shop/product/course/schedule/personal-team/service#/schedule.service'\nimport { MessageService } from '@/services/message.service'\nimport { columns } from './add-in-batch.config'\nexport default {\n  name: 'AddCourseScheduleBatch',\n  serviceInject() {\n    return {\n      commonService: CommonService,\n      scheduleService: ScheduleService,\n      msg: MessageService\n    }\n  },\n  rxState() {\n    const commonService = this.commonService\n    return {\n      courseOptions: commonService.courseOptions$,\n      courseCoachOptions: commonService.courseCoachOptions$\n    }\n  },\n  data() {\n    const data = []\n    for (let i = 0; i < 100; i++) {\n      if (i === 0) {\n        data.push({\n          key: 0,\n          editable: true,\n          start_time: moment(),\n          course_id: '',\n          coach_id: '',\n          limit_num: 0\n        })\n      }\n    }\n    this.cacheData = data.map(item => ({ ...item }))\n    return {\n      data,\n      obj: {\n        key: 0,\n        editable: true,\n        start_time: '',\n        course_id: '',\n        coach_id: '',\n        show: {}\n      },\n      show: false\n    }\n  },\n  filters: {\n    formatDate(val) {\n      return val ? moment(val) : undefined\n    }\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    validateForm(form) {\n      if (!form.start_time) {\n        this.msg.error({ content: '排期开始时间不能为空' })\n        return false\n      }\n      if (!form.course_id) {\n        this.msg.error({ content: '请选择课程' })\n        return false\n      }\n      if (!form.coach_id) {\n        this.msg.error({ content: `请选择课程${this.$c('coach')}` })\n        return false\n      }\n      if (!form.limit_num) {\n        this.msg.error({ content: '请输入上课人数' })\n        return false\n      }\n      if (!form.course_fee) {\n        this.msg.error({ content: '请输入课时费' })\n        return false\n      }\n      return true\n    },\n    onOkSaveForm() {\n      let data = cloneDeep(this.data)\n      data = data\n        .filter((item, index) => {\n          return index !== 0\n        })\n        .map(item => {\n          delete item.show\n          delete item.key\n          delete item.editable\n          item.start_time = moment(item.start_time)\n            .format('YYYY-MM-DD HH:mm')\n            .valueOf()\n          item.limit_num = +item.limit_num\n          item.course_fee = +item.course_fee\n          return item\n        })\n      if (!data.length) {\n        this.msg.error({ content: '请填写排期！' })\n        return\n      }\n      this.scheduleService\n        .addScheduleInBatch(data)\n        .subscribe(this.onSubmitSuccess)\n    },\n    handleChange(value, key, column) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (column === 'course_id') {\n        this.commonService.getCourseCoachList(value).subscribe()\n        target.coach_id = ''\n      }\n      if (target) {\n        target[column] = value\n        if (column === 'start_time') {\n          target[column] = value.format('YYYY-MM-DD HH:mm')\n        }\n        console.log(target[column])\n        this.data = newData\n      }\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData\n      }\n    },\n    deleteData(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData.filter(item => {\n          return item.key !== key\n        })\n      }\n    },\n    getShowTableData(data) {\n      data.key = Math.random()\n      data.show = {}\n      data.show.start_time_show = moment(data.start_time).format(\n        'YYYY-MM-DD HH:mm'\n      )\n      data.show.course_id_show = this.getOptionName(\n        data.course_id,\n        this.courseOptions,\n        'name'\n      )\n      data.show.coach_id_show = this.getOptionName(\n        data.coach_id,\n        this.courseCoachOptions,\n        'name'\n      )\n      return data\n    },\n    getOptionName(id, options, name) {\n      let option = []\n      options.forEach(ele => {\n        if (ele.id === id) {\n          option = ele[name]\n        }\n      })\n      return option\n    },\n    save(key) {\n      let newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (!this.validateForm(target)) {\n        return ''\n      }\n      if (key === 0 && target) {\n        delete target.editable\n        delete newData[0].editable\n        newData[0] = this.getShowTableData(newData[0])\n        newData.unshift({\n          key: 0,\n          editable: true,\n          start_time: moment(),\n          course_id: '',\n          coach_id: '',\n          limit_num: 0,\n          show: {}\n        })\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n        return\n      }\n      if (target) {\n        delete target.editable\n        if (newData.length) {\n          newData.forEach(item => {\n            if (item.key === key && key !== 0) {\n              item = this.getShowTableData(item)\n            }\n          })\n        }\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n      }\n    },\n    cancel(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        Object.assign(\n          target,\n          this.cacheData.filter(item => key === item.key)[0]\n        )\n        delete target.editable\n        this.data = newData\n      }\n    },\n    onSubmitSuccess() {\n      this.show = false\n      this.$emit('ok')\n    }\n  }\n}\n",{"version":3,"sources":["add-in-batch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"add-in-batch.vue","sourceRoot":"src/views/biz-modals/schedule/personal-team","sourcesContent":["<template>\n  <st-modal\n    wrapClassName=\"modal-schedule-team-add-course-batch\"\n    title=\"批量新增课程排期\"\n    @ok=\"onOkSaveForm\"\n    width=\"1030px\"\n    v-model=\"show\"\n  >\n    <st-table\n      rowKey=\"course_id\"\n      :columns=\"columns\"\n      :page=\"false\"\n      :dataSource=\"data\"\n      bordered\n    >\n      <span slot=\"startTimeTitle\" class=\"modal-table-title\">\n        <i class=\"color-danger mg-r8\">*</i>\n        日期\n      </span>\n      <span slot=\"courseIdTitle\" class=\"modal-table-title\">\n        <i class=\"color-danger mg-r8\">*</i>\n        课程\n      </span>\n      <span slot=\"coachIdTitle\" class=\"modal-table-title\">\n        <i class=\"color-danger mg-r8\">*</i>\n        上课{{ $c('coach') }}\n      </span>\n      <span slot=\"limitNumTitle\" class=\"modal-table-title\">\n        <i class=\"color-danger mg-r8\">*</i>\n        人数\n      </span>\n      <span slot=\"courseFeeTitle\" class=\"modal-table-title\">\n        <i class=\"color-danger mg-r8\">*</i>\n        单节预约价格\n      </span>\n      <template slot=\"start_time\" slot-scope=\"text, record\">\n        <a-date-picker\n          v-if=\"record.editable\"\n          :showTime=\"{ format: 'HH:mm' }\"\n          placeholder=\"请选择时间\"\n          format=\"YYYY-MM-DD HH:mm\"\n          :value=\"text | formatDate\"\n          @change=\"e => handleChange(e, record.key, 'start_time')\"\n        />\n        <template v-else>\n          {{ record.show.start_time_show }}\n        </template>\n      </template>\n\n      <template slot=\"course_id\" slot-scope=\"text, record\">\n        <a-select\n          v-if=\"record.editable\"\n          placeholder=\"请选择课程\"\n          style=\"width: 180px\"\n          :value=\"text\"\n          @change=\"e => handleChange(e, record.key, 'course_id')\"\n        >\n          <a-select-option v-for=\"course in courseOptions\" :key=\"course.id\">\n            {{ course.name }}\n          </a-select-option>\n        </a-select>\n        <template v-else>\n          {{ record.show.course_id_show }}\n        </template>\n      </template>\n\n      <template slot=\"coach_id\" slot-scope=\"text, record\">\n        <a-select\n          v-if=\"record.editable\"\n          :placeholder=\"`请选择${$c('coach')}`\"\n          :value=\"text\"\n          style=\"width: 180px\"\n          @change=\"e => handleChange(e, record.key, 'coach_id')\"\n        >\n          <a-select-option v-for=\"coach in courseCoachOptions\" :key=\"coach.id\">\n            {{ coach.name }}\n          </a-select-option>\n        </a-select>\n        <template v-else>\n          {{ record.show.coach_id_show }}\n        </template>\n      </template>\n\n      <template slot=\"limit_num\" slot-scope=\"text, record\">\n        <div>\n          <a-input\n            v-if=\"record.editable\"\n            style=\"margin: -5px 0;width:100px;\"\n            :value=\"text\"\n            @change=\"e => handleChange(e.target.value, record.key, 'limit_num')\"\n          >\n            <span slot=\"suffix\">人</span>\n          </a-input>\n          <template v-else>\n            {{ text }}\n          </template>\n        </div>\n      </template>\n      <template slot=\"course_fee\" slot-scope=\"text, record\">\n        <div>\n          <a-input\n            v-if=\"record.editable\"\n            style=\"margin: -5px 0;width:110px;\"\n            :value=\"text\"\n            @change=\"\n              e => handleChange(e.target.value, record.key, 'course_fee')\n            \"\n            maxlength=\"6\"\n          >\n            <span slot=\"suffix\">元/节</span>\n          </a-input>\n          <template v-else>\n            {{ text }}\n          </template>\n        </div>\n      </template>\n      <template slot=\"operation\" slot-scope=\"text, record\">\n        <div class=\"editable-row-operations\">\n          <span v-if=\"record.editable\">\n            <a @click=\"() => save(record.key)\">保存</a>\n          </span>\n          <span v-else>\n            <a @click=\"() => edit(record.key)\">编辑</a>\n            <a @click=\"() => deleteData(record.key)\">删除</a>\n          </span>\n        </div>\n      </template>\n    </st-table>\n  </st-modal>\n</template>\n<script>\nimport { cloneDeep } from 'lodash-es'\nimport { PersonalTeamScheduleCommonService as CommonService } from '@/views/pages/shop/product/course/schedule/personal-team/service#/common.service'\nimport { PersonalTeamScheduleScheduleService as ScheduleService } from '@/views/pages/shop/product/course/schedule/personal-team/service#/schedule.service'\nimport { MessageService } from '@/services/message.service'\nimport { columns } from './add-in-batch.config'\nexport default {\n  name: 'AddCourseScheduleBatch',\n  serviceInject() {\n    return {\n      commonService: CommonService,\n      scheduleService: ScheduleService,\n      msg: MessageService\n    }\n  },\n  rxState() {\n    const commonService = this.commonService\n    return {\n      courseOptions: commonService.courseOptions$,\n      courseCoachOptions: commonService.courseCoachOptions$\n    }\n  },\n  data() {\n    const data = []\n    for (let i = 0; i < 100; i++) {\n      if (i === 0) {\n        data.push({\n          key: 0,\n          editable: true,\n          start_time: moment(),\n          course_id: '',\n          coach_id: '',\n          limit_num: 0\n        })\n      }\n    }\n    this.cacheData = data.map(item => ({ ...item }))\n    return {\n      data,\n      obj: {\n        key: 0,\n        editable: true,\n        start_time: '',\n        course_id: '',\n        coach_id: '',\n        show: {}\n      },\n      show: false\n    }\n  },\n  filters: {\n    formatDate(val) {\n      return val ? moment(val) : undefined\n    }\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    validateForm(form) {\n      if (!form.start_time) {\n        this.msg.error({ content: '排期开始时间不能为空' })\n        return false\n      }\n      if (!form.course_id) {\n        this.msg.error({ content: '请选择课程' })\n        return false\n      }\n      if (!form.coach_id) {\n        this.msg.error({ content: `请选择课程${this.$c('coach')}` })\n        return false\n      }\n      if (!form.limit_num) {\n        this.msg.error({ content: '请输入上课人数' })\n        return false\n      }\n      if (!form.course_fee) {\n        this.msg.error({ content: '请输入课时费' })\n        return false\n      }\n      return true\n    },\n    onOkSaveForm() {\n      let data = cloneDeep(this.data)\n      data = data\n        .filter((item, index) => {\n          return index !== 0\n        })\n        .map(item => {\n          delete item.show\n          delete item.key\n          delete item.editable\n          item.start_time = moment(item.start_time)\n            .format('YYYY-MM-DD HH:mm')\n            .valueOf()\n          item.limit_num = +item.limit_num\n          item.course_fee = +item.course_fee\n          return item\n        })\n      if (!data.length) {\n        this.msg.error({ content: '请填写排期！' })\n        return\n      }\n      this.scheduleService\n        .addScheduleInBatch(data)\n        .subscribe(this.onSubmitSuccess)\n    },\n    handleChange(value, key, column) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (column === 'course_id') {\n        this.commonService.getCourseCoachList(value).subscribe()\n        target.coach_id = ''\n      }\n      if (target) {\n        target[column] = value\n        if (column === 'start_time') {\n          target[column] = value.format('YYYY-MM-DD HH:mm')\n        }\n        console.log(target[column])\n        this.data = newData\n      }\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData\n      }\n    },\n    deleteData(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData.filter(item => {\n          return item.key !== key\n        })\n      }\n    },\n    getShowTableData(data) {\n      data.key = Math.random()\n      data.show = {}\n      data.show.start_time_show = moment(data.start_time).format(\n        'YYYY-MM-DD HH:mm'\n      )\n      data.show.course_id_show = this.getOptionName(\n        data.course_id,\n        this.courseOptions,\n        'name'\n      )\n      data.show.coach_id_show = this.getOptionName(\n        data.coach_id,\n        this.courseCoachOptions,\n        'name'\n      )\n      return data\n    },\n    getOptionName(id, options, name) {\n      let option = []\n      options.forEach(ele => {\n        if (ele.id === id) {\n          option = ele[name]\n        }\n      })\n      return option\n    },\n    save(key) {\n      let newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (!this.validateForm(target)) {\n        return ''\n      }\n      if (key === 0 && target) {\n        delete target.editable\n        delete newData[0].editable\n        newData[0] = this.getShowTableData(newData[0])\n        newData.unshift({\n          key: 0,\n          editable: true,\n          start_time: moment(),\n          course_id: '',\n          coach_id: '',\n          limit_num: 0,\n          show: {}\n        })\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n        return\n      }\n      if (target) {\n        delete target.editable\n        if (newData.length) {\n          newData.forEach(item => {\n            if (item.key === key && key !== 0) {\n              item = this.getShowTableData(item)\n            }\n          })\n        }\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n      }\n    },\n    cancel(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        Object.assign(\n          target,\n          this.cacheData.filter(item => key === item.key)[0]\n        )\n        delete target.editable\n        this.data = newData\n      }\n    },\n    onSubmitSuccess() {\n      this.show = false\n      this.$emit('ok')\n    }\n  }\n}\n</script>\n"]}]}