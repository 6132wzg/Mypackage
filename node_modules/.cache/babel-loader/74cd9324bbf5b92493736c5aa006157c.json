{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/member/number/add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/member/number/add.vue","mtime":1597396799986},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { UserService } from '@/services/user.service';\nimport moment from 'moment';\nimport { PatternService } from '@/services/pattern.service';\nimport { cloneDeep, remove } from 'lodash-es';\nimport { AddService } from \"./add.service\";\nimport MemberCard from '@/views/biz-components/h5/pages/member-card';\nimport H5Container from '@/views/biz-components/h5/h5-container';\nimport h5mixin from \"../period/h5mixin\";\nimport { MEMBER_CARD } from '@/views/biz-components/h5/pages/member-card.config';\nimport CardBgRadio from '@/views/biz-components/card-bg-radio/card-bg-radio';\nimport { SELL_TYPE, UNIT, CARD_TYPE } from '@/constants/card/member';\nimport { ruleOptions } from \"./number.config\";\nimport StEditor from '@/views/biz-components/st/editor/editor.vue';\nexport default {\n  name: 'PageShopNumberCardAdd',\n  mixins: [h5mixin],\n  components: {\n    StEditor: StEditor,\n    MemberCard: MemberCard,\n    H5Container: H5Container,\n    CardBgRadio: CardBgRadio\n  },\n  serviceInject: function serviceInject() {\n    return {\n      pattern: PatternService,\n      addService: AddService,\n      userService: UserService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      addLoading: this.addService.loading$,\n      shopName: this.userService.shop$,\n      cardBgList: this.addService.cardBgList$,\n      admissionRange: this.addService.admissionRange$,\n      priceSetting: this.addService.priceSetting$,\n      supportSales: this.addService.supportSales$,\n      unit: this.addService.unit$,\n      sellType: this.addService.sellType$,\n      supportMemberNums: this.addService.supportMemberNums$\n    };\n  },\n  bem: {\n    b: 'st-help-popover'\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      SELL_TYPE: SELL_TYPE,\n      UNIT: UNIT,\n      cardType: MEMBER_CARD.NUMBER_CARD,\n      MEMBER_CARD: MEMBER_CARD,\n      // 结束时间面板是否显示\n      endOpen: false,\n      // 价格梯度\n      rallyPriceList: [],\n      // 价格检验是否通过\n      rallyPriceIsOk: true,\n      // 价格是否未输入过\n      rallyPriceIsNoInput: true,\n      // 价格校验文案\n      rallyPriceValidText: '',\n      unit_list: [{\n        value: 2,\n        label: '天'\n      }, {\n        value: 3,\n        label: '月'\n      }, {\n        value: 4,\n        label: '年'\n      }],\n      // 售卖时间\n      start_time: null,\n      end_time: null,\n      // 是否支持转让\n      is_transfer: false,\n      // 转让单位\n      transferUnit: UNIT.RMB,\n      // 转让手续费\n      transferNum: 0,\n      // 售卖方式\n      sell_type: [SELL_TYPE.OFFLINE],\n      // 卡背景\n      cardBg: {\n        image_id: 0,\n        image_key: this.cardBgList[0].image_key,\n        image_url: '',\n        index: 1\n      },\n      // 卡背景的help文本\n      cardBgValidatorText: '',\n      // 卡介绍\n      cardIntroduction: '',\n      // 备注\n      cardContents: '',\n      // 是否配置了用户端\n      appConfig: true\n    };\n  },\n  methods: {\n    // 保存\n    onHandleSubmit: function onHandleSubmit(e) {\n      var _this = this;\n\n      this.form.validateFieldsAndScroll(function (err, values) {\n        _this.validatePrice();\n\n        _this.cardBgValidator();\n\n        if (!err && _this.priceValidateStatus === 'success' && _this.cardBgIsOk) {\n          var unit = _this.is_transfer ? _this.transferUnit : undefined;\n          var num = _this.is_transfer ? _this.transferNum : undefined;\n          var price_gradient = [];\n\n          _this.rallyPriceList.forEach(function (i) {\n            price_gradient.push({\n              unit: +i.time.unit,\n              num: +i.time.num,\n              rally_price: +i.rally_price,\n              frozen_day: +i.frozen_day,\n              gift_unit: +i.gift_unit,\n              validity_times: +i.validity_times\n            });\n          });\n\n          _this.addService.addCard({\n            card_type: _this.isFamilyCard ? CARD_TYPE.MORE_NUMBER : CARD_TYPE.NUMBER,\n            card_name: values.card_name,\n            special_note: values.special_note,\n            start_time: \"\".concat(_this.start_time.format('YYYY-MM-DD')),\n            end_time: \"\".concat(_this.end_time.format('YYYY-MM-DD')),\n            is_transfer: +_this.is_transfer,\n            unit: unit,\n            num: num,\n            sell_type: _this.sell_type,\n            card_introduction: _this.cardIntroduction,\n            card_contents: _this.cardContents,\n            card_bg: _this.cardBg,\n            price_gradient: price_gradient,\n            support_member_num: _this.isFamilyCard ? values.support_member_num : 1\n          }).subscribe(function (res) {\n            // 新增成功\n            _this.$router.push({\n              name: 'shop-product-card-member-list-all'\n            });\n          });\n        }\n      });\n    },\n    // 价格梯度\n    brandPriceSettingHandleChange: function brandPriceSettingHandleChange(_ref) {\n      var value = _ref.value,\n          key = _ref.key,\n          col = _ref.col,\n          prop = _ref.prop;\n      this.rallyPriceIsNoInput = false;\n\n      if (prop !== undefined) {\n        this.rallyPriceList[key][col][prop] = value;\n      } else {\n        this.rallyPriceList[key][col] = value;\n      }\n    },\n    // 删除价格\n    price_delete: function price_delete(index) {\n      this.rallyPriceList.splice(index, 1);\n    },\n    // 增加价格\n    price_add: function price_add() {\n      var key = parseInt(Math.random() * 999999).toString();\n      this.rallyPriceList.push({\n        key: key,\n        validity_times: null,\n        rally_price: null,\n        time: {\n          unit: 2,\n          num: null\n        },\n        frozen_day: null,\n        gift_unit: null\n      });\n    },\n    // 开始时间\n    disabledStartDate: function disabledStartDate(startValue) {\n      var endValue = this.end_time;\n\n      if (!endValue) {\n        // 结束时间未选择\n        return startValue.valueOf() < moment().startOf('day').valueOf();\n      }\n\n      var start = endValue.valueOf() > moment().add(30, 'y').valueOf() ? moment(endValue).subtract(30, 'y').valueOf() : moment().startOf('day').valueOf();\n      return startValue.valueOf() < start || startValue.valueOf() > moment(endValue).valueOf();\n    },\n    handleStartOpenChange: function handleStartOpenChange(open) {\n      if (!open) {\n        this.endOpen = true;\n      }\n    },\n    start_time_change: function start_time_change(data) {\n      this.start_time = cloneDeep(data);\n    },\n    // 结束时间\n    disabledEndDate: function disabledEndDate(endValue) {\n      var startValue = this.start_time;\n\n      if (!startValue) {\n        // 开始时间未选择\n        return endValue.valueOf() < moment().startOf('day').valueOf();\n      }\n\n      return endValue.valueOf() >= moment(startValue).add(30, 'y').valueOf() || endValue.valueOf() < moment(startValue).valueOf() || endValue.valueOf() < moment().startOf('day').valueOf();\n    },\n    handleEndOpenChange: function handleEndOpenChange(open) {\n      this.endOpen = open;\n    },\n    end_time_change: function end_time_change(data) {\n      this.end_time = cloneDeep(data);\n    },\n    // 转让\n    transfer: function transfer(e) {\n      this.is_transfer = e.target.checked; // 重置转让费用的校验\n\n      this.form.resetFields(['transferNum']);\n    },\n    transfter_change: function transfter_change(data) {\n      this.transferNum = data;\n    },\n    // moment\n    moment: moment,\n    // 检验price\n    validatePrice: function validatePrice() {\n      var _this2 = this;\n\n      this.rallyPriceIsNoInput = false;\n\n      if (!this.priceValidateRuleText.length) {\n        this.rallyPriceIsOk = false;\n      } else {\n        this.rallyPriceIsOk = this.priceValidateRuleText.every(function (i) {\n          return _this2.pattern.NUM_FLOAT(1).test(i);\n        });\n      }\n    },\n    onCardBgChange: function onCardBgChange(e) {\n      this.cardBgValidatorText = '';\n    },\n    // 卡背景校验\n    cardBgValidator: function cardBgValidator() {\n      var validata = this.cardBg.image_key !== '';\n      this.cardBgValidatorText = validata ? '' : '请上传卡背景';\n    }\n  },\n  watch: {\n    priceValidateStatus: function priceValidateStatus(newVal) {\n      this.rallyPriceValidText = newVal === 'success' ? '' : '请输入正确的数值';\n    },\n    transferUnit: {\n      deep: true,\n      handler: function handler() {\n        this.form.resetFields(['transferNum']);\n      }\n    }\n  },\n  computed: {\n    priceValidateStatus: function priceValidateStatus() {\n      if (this.rallyPriceIsNoInput) {\n        return 'success';\n      } else {\n        return this.rallyPriceIsOk ? 'success' : 'error';\n      }\n    },\n    priceValidateRuleText: function priceValidateRuleText() {\n      var text = [];\n      this.rallyPriceList.forEach(function (i) {\n        Object.keys(i).forEach(function (o) {\n          if (o !== 'key' && o !== 'time' && o !== '$_oddEvenKey') {\n            text.push(i[o]);\n          } else if (o === 'time') {\n            text.push(i[o].num);\n          }\n        });\n      });\n      return text;\n    },\n    // 售卖方式\n    sellTypeList: function sellTypeList() {\n      var sell_type = cloneDeep(this.sellType);\n      var arr = [];\n      sell_type.forEach(function (i) {\n        arr.push({\n          value: i.value,\n          label: i.label\n        });\n      });\n\n      if (!this.appConfig) {\n        remove(arr, function (i) {\n          return i.value === SELL_TYPE.CLIENT;\n        });\n      }\n\n      return arr;\n    },\n    // 卡背景是否校验通过\n    cardBgIsOk: function cardBgIsOk() {\n      return this.cardBgValidatorText === '';\n    },\n    // 转让设置的min\n    transferMin: function transferMin() {\n      return 0;\n    },\n    // 转让设置的max\n    transferMax: function transferMax() {\n      return this.transferUnit === UNIT.PERCENT ? 100 : 999999.9;\n    },\n    // 是否是多人卡\n    isFamilyCard: function isFamilyCard() {\n      return this.$searchQuery.type === 'family-card';\n    }\n  }\n};",null]}