{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/staff-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/staff-select.vue","mtime":1594718339878},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { isEqual } from 'lodash-es';\nimport { UserService } from '@/services/user.service';\nexport default {\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  name: 'StaffSelect',\n  serviceInject: function serviceInject() {\n    return {\n      userService: UserService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      staffList$: this.userService.staffList$\n    };\n  },\n  computed: {\n    cValue: {\n      set: function set(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return;\n        this.$emit('change', newValue);\n      },\n      get: function get() {\n        return this.value || this.defaultValue;\n      }\n    },\n    defaultOption: function defaultOption() {\n      return this.defaultLabel ? [{\n        title: this.defaultLabel,\n        value: -1\n      }] : [];\n    },\n    shopOptions: function shopOptions() {\n      return [].concat(_toConsumableArray(this.defaultOption), _toConsumableArray(this.staffList$.map(function (item) {\n        return {\n          label: item.nickname,\n          value: item.id\n        };\n      })));\n    }\n  },\n  props: {\n    mode: {\n      type: String\n    },\n    placeholder: {\n      type: String\n    },\n    type: {\n      type: String\n    },\n    width: {\n      type: String,\n      default: '150px'\n    },\n    value: {\n      type: [Number, String, Array]\n    },\n    query: {\n      type: Object,\n      default: function _default() {}\n    },\n    defaultValue: Number,\n    defaultLabel: {\n      type: String\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    query: {\n      deep: true,\n      handler: function handler(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return;\n        this.cValue = this.defaultOption.length ? this.defaultOption[0].value : '';\n        this.userService.fetchStaffList(_objectSpread({}, newValue)).subscribe();\n      }\n    }\n  },\n  methods: {\n    onChange: function onChange(value) {\n      this.$emit('change', value);\n    }\n  },\n  created: function created() {\n    this.userService.fetchStaffList(this.query).subscribe();\n  }\n};",null]}