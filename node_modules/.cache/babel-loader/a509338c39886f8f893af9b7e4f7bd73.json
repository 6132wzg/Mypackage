{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/package/upgrade.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/package/upgrade.vue","mtime":1594718340033},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport { UpgradeService } from \"./upgrade.service.ts\";\nimport { cloneDeep, get } from 'lodash-es';\nimport { timer } from 'rxjs';\nimport BizSoldCourseInfo from '@/views/biz-components/sold/cource-info.vue';\nimport { ruleOptions } from \"./upgrade.config\";\nimport { PatternService } from '@/services/pattern.service';\nimport EditableContractNumber from '@/views/biz-components/contract/editable-contract-number.vue';\nimport MemberSearch from '@/views/biz-components/member-search/member-search';\nimport SelectScroll from '@/views/biz-components/select-scroll/select-scroll';\nexport default {\n  name: 'ModalSoldDealSaleMemberCard',\n  bem: {\n    sale: 'modal-sold-deal-sale'\n  },\n  components: {\n    EditableContractNumber: EditableContractNumber,\n    BizSoldCourseInfo: BizSoldCourseInfo,\n    SelectScroll: SelectScroll\n  },\n  serviceProviders: function serviceProviders() {\n    return [UpgradeService];\n  },\n  serviceInject: function serviceInject() {\n    return {\n      upgradeService: UpgradeService,\n      pattern: PatternService\n    };\n  },\n  rxState: function rxState() {\n    var _this$upgradeService = this.upgradeService,\n        info$ = _this$upgradeService.info$,\n        packageOptions$ = _this$upgradeService.packageOptions$,\n        loading$ = _this$upgradeService.loading$,\n        newPackageInfo$ = _this$upgradeService.newPackageInfo$,\n        effectiveWayOptions$ = _this$upgradeService.effectiveWayOptions$,\n        couponList$ = _this$upgradeService.couponList$,\n        advanceList$ = _this$upgradeService.advanceList$,\n        currentPrice$ = _this$upgradeService.currentPrice$,\n        saleList$ = _this$upgradeService.saleList$;\n    return {\n      loading$: loading$,\n      info$: info$,\n      newPackageInfo$: newPackageInfo$,\n      advanceList$: advanceList$,\n      couponList$: couponList$,\n      effectiveWayOptions$: effectiveWayOptions$,\n      saleList$: saleList$,\n      currentPrice$: currentPrice$,\n      packageOptions$: packageOptions$\n    };\n  },\n  props: {\n    id: {\n      type: Number\n    },\n    memberInfo: {\n      type: Object\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false,\n      isTeamDisable: true,\n      isPersonalDisabled: true,\n      isValidDaysDisable: true,\n      // 定金\n      advanceDropdownVisible: false,\n      advanceList: [],\n      advanceText: '未选择定金',\n      advanceAmount: '',\n      selectAdvance: '',\n      deductionAmount: '',\n      description: '',\n      // 优惠券\n      selectCoupon: '',\n      couponText: '未选择优惠券',\n      couponAmount: '',\n      couponDropdownVisible: false,\n      isExpire: 1,\n      product_id: '',\n      couponList: []\n    };\n  },\n  computed: {\n    validDate: function validDate() {\n      return \"\".concat(moment().format('YYYY-MM-DD'), \"~\").concat(moment().add(this.newPackageInfo$.valid_time, 'days').format('YYYY-MM-DD'));\n    },\n    canChoseCoupon: function canChoseCoupon() {\n      var len = this.couponList$.length;\n      return !!len;\n    },\n    canChoseAdvance: function canChoseAdvance() {\n      var len = this.advanceList$.length;\n      return (this.id || this.product_id) && len;\n    },\n    orderAmountText: function orderAmountText() {\n      return this.currentPrice < 0 ? '小计不能为负' : '';\n    },\n    saleRangeType: function saleRangeType() {\n      return get(this.info.sale_range, 'type', 1);\n    },\n    hasProductInfo: function hasProductInfo() {\n      return JSON.stringify(this.info) !== '{}';\n    }\n  },\n  watch: {\n    selectCoupon: {\n      deep: true,\n      handler: function handler(newVal, oldVal) {\n        this.getPrice(newVal, this.selectAdvance, +this.deductionAmount);\n      }\n    },\n    selectAdvance: {\n      deep: true,\n      handler: function handler(newVal, oldVal) {\n        this.getPrice(this.selectCoupon, newVal, +this.deductionAmount);\n      }\n    },\n    deductionAmount: function deductionAmount(newVal, oldVal) {\n      this.getPrice(this.selectCoupon, this.selectAdvance, +newVal);\n    }\n  },\n  mounted: function mounted() {\n    this.upgradeService.init(this.id).subscribe(function (res) {\n      console.log('初始化页面完成');\n    });\n  },\n  methods: {\n    moment: moment,\n    getDeductionAmount: function getDeductionAmount(value) {\n      console.log(event);\n      this.deductionAmount = value;\n    },\n    // 选择课,筛选\n    handleSelect: function handleSelect(val) {\n      this.product_id = val;\n      this.onResetDiscounts();\n      this.handleGetCourseInfo(val);\n    },\n    // 选择课,搜索\n    handleSearch: function handleSearch(keywords) {\n      this.handleGetList(keywords);\n    },\n    onChangeEffectiveWay: function onChangeEffectiveWay(e) {\n      console.log(e.target.value);\n      this.isExpire = e.target.value;\n    },\n    onClickTeamConfirm: function onClickTeamConfirm() {\n      this.isTeamDisable = !this.isTeamDisable;\n    },\n    onClickPersonalConfirm: function onClickPersonalConfirm() {\n      this.isPersonalDisabled = !this.isPersonalDisabled;\n    },\n    onClickValidDaysConfirm: function onClickValidDaysConfirm() {\n      this.isValidDaysDisable = !this.isValidDaysDisable;\n    },\n    onResetDiscounts: function onResetDiscounts() {\n      console.log('onResetDiscounts'); // 重置优惠券及定金选择\n\n      this.resetCoupon();\n      this.resetAdvance();\n    },\n    // 重新获取优惠券及定金\n    onReGetDiscounts: function onReGetDiscounts(data) {\n      console.log('onReGetDiscounts'); // 如果存在会员id则请求重新拉取优惠券及定金列表\n\n      this.fetchAdvanceList(data);\n      this.fetchCouponList(data);\n    },\n    onMemberChange: function onMemberChange(data) {\n      // 重置优惠券及定金选择\n      this.onResetDiscounts(); // 如果存在会员id则请求重新拉取优惠券及定金列表\n\n      if (data) this.onReGetDiscounts(data);\n    },\n    onSelectAdvance: function onSelectAdvance() {\n      var _this = this;\n\n      timer(200).subscribe(function () {\n        _this.advanceDropdownVisible = false;\n      });\n    },\n    onSelectCoupon: function onSelectCoupon() {\n      var _this2 = this;\n\n      timer(200).subscribe(function () {\n        _this2.couponDropdownVisible = false;\n      });\n    },\n    // 重置定金选择\n    resetAdvance: function resetAdvance() {\n      this.advanceList = [];\n      this.advanceText = '未选择定金';\n      this.selectAdvance = '';\n      this.advanceAmount = '';\n    },\n    // 重置优惠券选择\n    resetCoupon: function resetCoupon() {\n      this.upgradeService.REST_COUPONLIST();\n      this.couponText = '未选择优惠券';\n      this.selectCoupon = '';\n      this.couponAmount = '';\n    },\n    onCancel: function onCancel() {\n      this.resetAdvance();\n    },\n    onSelectAdvanceChange: function onSelectAdvanceChange(data) {\n      if (!data.target.value) {\n        this.advanceAmount = 0;\n        this.advanceText = \"\\u672A\\u9009\\u62E9\\u5B9A\\u91D1\";\n        return;\n      }\n\n      var price = this.advanceList$.filter(function (o) {\n        return o.id === data.target.value;\n      })[0].price;\n      this.advanceAmount = price;\n      this.advanceText = \"\".concat(price, \"\\u5143\");\n    },\n    onSelectCouponChange: function onSelectCouponChange(event) {\n      var id = get(event.target.value, 'id', '');\n\n      if (id) {\n        var price = this.couponList$.filter(function (o) {\n          return o.id === id;\n        })[0].price;\n        this.couponAmount = price;\n        this.couponText = \"\".concat(price, \"\\u5143\");\n      } else {\n        this.resetCoupon();\n      }\n    },\n    // 计算实付金额\n    getPrice: function getPrice(coupon, advance, reduce) {\n      var memberId = this.info$.member_id;\n      var product_id = this.newPackageInfo$.product_id || undefined; // 1会员卡 2 私教课程 3 课程包 4储值卡 5 储物柜租赁\n\n      this.upgradeService.getPrice({\n        product_id: product_id,\n        product_type: 3,\n        coupon_id: coupon ? coupon.id : undefined,\n        member_id: memberId || undefined,\n        advance_id: advance || undefined,\n        reduce_amount: reduce || undefined\n      }).subscribe(function (res) {\n        console.log(res);\n      });\n    },\n    onCreateOrder: function onCreateOrder() {\n      var _this3 = this;\n\n      this.form.validate().then(function (values) {\n        var form = cloneDeep(values);\n        form.package_id = form.productId;\n        form.personal_times = +form.personal_times;\n        form.team_times = +form.team_times;\n        form.contract_number = _this3.info$.contract_number;\n        delete form.productId;\n\n        _this3.upgradeService.upgrade(_objectSpread({\n          id: _this3.info$.id\n        }, form, {\n          member_id: _this3.info$.member_id\n        })).subscribe(function (result) {\n          _this3.$emit('success', {\n            type: 'create',\n            orderId: result.info.order_id\n          });\n\n          _this3.show = false;\n        });\n      });\n    },\n    onPay: function onPay() {\n      var _this4 = this;\n\n      this.form.validate().then(function (values) {\n        var form = cloneDeep(values);\n        form.package_id = form.productId;\n        form.personal_times = +form.personal_times;\n        form.team_times = +form.team_times;\n        form.contract_number = _this4.info$.contract_number;\n        delete form.productId;\n        console.log(form, _this4.info$.member_id);\n\n        _this4.upgradeService.upgrade(_objectSpread({\n          id: _this4.info$.id\n        }, form, {\n          member_id: _this4.info$.member_id\n        })).subscribe(function (result) {\n          _this4.$emit('success', {\n            type: 'createPay',\n            orderId: result.info.order_id\n          });\n\n          _this4.show = false;\n        });\n      });\n    },\n    // 获取课程列表\n    handleGetList: function handleGetList(keyword) {\n      // if (this.finished) return false\n      this.upgradeService.getUpgradePackageList({\n        keyword: keyword\n      }).subscribe();\n    },\n    // 获取课程详情\n    handleGetCourseInfo: function handleGetCourseInfo(productId) {\n      var _this5 = this;\n\n      this.upgradeService.getNewUpgradePackageInfo(productId).subscribe(function (res) {\n        _this5.$nextTick().then(function () {\n          _this5.form.setFieldsValue({\n            productId: productId,\n            team_times: res.info.team_times,\n            personal_times: res.info.personal_times,\n            valid_days: res.info.valid_time\n          });\n        });\n      });\n    },\n    // 获取优惠券列表\n    fetchCouponList: function fetchCouponList(id) {\n      var package_id = this.form.getFieldValue('productId') || undefined;\n      var member_id = this.form.getFieldValue('member_id') || id;\n\n      if (package_id && member_id) {\n        var params = {\n          member_id: member_id,\n          package_id: package_id\n        };\n        this.upgradeService.getCouponList(params).subscribe();\n      }\n    },\n    // 获取定金列表\n    fetchAdvanceList: function fetchAdvanceList(id) {\n      var _this6 = this;\n\n      var member_id = this.form.getFieldValue('member_id') || id;\n\n      if (member_id) {\n        this.upgradeService.getAdvanceList(member_id).subscribe(function (res) {\n          _this6.advanceList$ = cloneDeep(res.list);\n        });\n      }\n    }\n  }\n};",null]}