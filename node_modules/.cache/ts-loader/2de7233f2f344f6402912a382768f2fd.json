{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-3!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/config.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/config.ts","mtime":1598250255713},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\n// chart 属性 方法 说明 https://g2-v3.antv.vision/zh/docs/api/chart\n// container: {string} | {HTMLDivElement},\n// width?: {number},\n// height?: {number},\n// padding?: {object} | {number} | {array},\n// background?: {object},\n// plotBackground?: {object},\n// forceFit?: {boolean},\n// animate?: {boolean},\n// pixelRatio?: {number},\n// data?: {array} | {DataSet.View},\n// theme?: {string} | {object},\n// renderer?: {string},\n// options 配置声明及示例 https://g2-v3.antv.vision/zh/docs/api/options/\n// options = {\n//   scales: { // 列定义声明\n//     type: {string}, // 指定数据类型，可声明的类型为：identity、linear、cat、time、timeCat、log、pow\n//     alias: {string}, // 数据字段的别名\n//     formatter: {function}, // 格式化文本内容\n//     range: {array}, // 输出数据的范围，默认[ 0, 1 ]，格式为 [ min, max ]，min 和 max 均为 0 至 1 范围的数据。\n//     tickCount: {number}, // 设置坐标轴上刻度点的个数\n//     ticks: {array}, // 用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示\n//     sync: {boolean} // 当 chart 存在不同数据源的 view 时，用于统一相同数据属性的值域范围\n//   },\n//   coord: {object}, // 坐标系配置\n//   axes: {object}, // 坐标轴配置\n//   legends: {object}, // 图例配置\n//   guides: {array}, // 图表辅助元素配置\n//   filters: {object}, // 数据过滤配置\n//   tooltip: {object}, // 提示信息配置\n//   facet: {object}, // 分面配置\n//   geoms: {array} // 图形语法相关配置\nimport { thousandsFilter } from \"./filters\";\nexport function ChartConfig() {\n  var _this = this;\n\n  var config = new Object();\n  config = {\n    defaultMultiLineOptions: {\n      options: {\n        scales: {\n          date: {\n            tickCount: 7,\n            range: [0, 1]\n          },\n          value: {\n            max: +this.MAX,\n            min: 0,\n            tickCount: 8,\n            formatter: function formatter(val) {\n              return _this.toKFilter(val, _this.unit || '元');\n            },\n            sync: true\n          }\n        },\n        axes: {\n          date: {\n            label: {\n              textStyle: {\n                fill: '#9BACB9'\n              }\n            },\n            tickLine: {\n              lineWidth: 0,\n              length: 0\n            }\n          },\n          value: {\n            label: {\n              textStyle: {\n                fill: '#9BACB9'\n              }\n            },\n            grid: {\n              lineStyle: {\n                lineWidth: 0.5,\n                lineDash: [0, 0]\n              }\n            }\n          }\n        },\n        legends: {\n          name: {\n            position: 'right-center',\n            useHtml: true,\n            textStyle: {\n              fill: '#3E4D5C'\n            },\n            itemTpl: function itemTpl() {\n              return '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + \"<span class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></span>\" + \" <span class=\\\"g2-legend-text\\\">{value}</span>\" + '</li>';\n            }\n          }\n        },\n        geoms: [{\n          type: 'line',\n          position: 'date*value',\n          color: {\n            field: \"name\",\n            callback: function callback(name) {\n              // console.log('color', name, this.$colorMap, this.$colorMap[name])\n              return _this.$colorMap[name];\n            }\n          },\n          style: {\n            field: \"name\",\n            cfg: {\n              shadowColor: function shadowColor(name) {\n                return _this.shadowColors[name];\n              },\n              shadowBlur: 20,\n              shadowOffsetY: 4\n            }\n          },\n          tooltip: {\n            field: 'name*value',\n            callback: function callback(name, value) {\n              return {\n                name: name,\n                value: '¥' + thousandsFilter(value)\n              };\n            }\n          },\n          size: 2,\n          shape: 'smooth'\n        }]\n      }\n    }\n  };\n  /**\n   * 找到对应 type 的默认配置，例如 chartConfig.defaultLineConfig\n   */\n\n  return config[\"default\".concat(this.type.replace(/(^[a-z]|\\-[a-z])/, function (i) {\n    return i.toUpperCase();\n  }).replace('-', ''), \"Options\")];\n}",null]}