{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/staff/staff-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/staff/staff-select.vue","mtime":1600926555724},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { isEqual } from 'lodash-es'\nimport { UserService } from '@/services/user.service'\nexport default {\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  name: 'StaffSelect',\n  serviceInject() {\n    return {\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      staffList$: this.userService.staffList$\n    }\n  },\n  computed: {\n    cValue: {\n      set(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return\n        this.$emit('change', newValue)\n      },\n      get() {\n        return this.value || this.defaultValue\n      }\n    },\n    defaultOption() {\n      return this.defaultLabel ? [{ title: this.defaultLabel, value: -1 }] : []\n    },\n    shopOptions() {\n      return [\n        ...this.defaultOption,\n        ...this.staffList$.map(item => {\n          return {\n            label: item.nickname,\n            value: item.id\n          }\n        })\n      ]\n    }\n  },\n  props: {\n    mode: {\n      type: String\n    },\n    placeholder: {\n      type: String\n    },\n    type: {\n      type: String\n    },\n    width: {\n      type: String,\n      default: '150px'\n    },\n    value: {\n      type: [Number, String, Array]\n    },\n    query: {\n      type: Object,\n      default: () => {}\n    },\n    defaultValue: Number,\n    defaultLabel: {\n      type: String\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    query: {\n      deep: true,\n      handler(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return\n        this.cValue = this.defaultOption.length\n          ? this.defaultOption[0].value\n          : ''\n        this.userService.fetchStaffList({ ...newValue }).subscribe()\n      }\n    }\n  },\n  methods: {\n    onChange(value) {\n      this.$emit('change', value)\n    }\n  },\n  created() {\n    this.userService.fetchStaffList(this.query).subscribe()\n  }\n}\n",{"version":3,"sources":["staff-select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"staff-select.vue","sourceRoot":"src/views/biz-components/staff","sourcesContent":["<template>\n  <a-select\n    :mode=\"mode\"\n    :placeholder=\"placeholder || '请选择教练'\"\n    :value=\"cValue\"\n    :style=\"{ width }\"\n    :defaultValue=\"defaultValue\"\n    :disabled=\"disabled\"\n    @change=\"onChange\"\n    :options=\"shopOptions\"\n  />\n</template>\n\n<script>\nimport { isEqual } from 'lodash-es'\nimport { UserService } from '@/services/user.service'\nexport default {\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  name: 'StaffSelect',\n  serviceInject() {\n    return {\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      staffList$: this.userService.staffList$\n    }\n  },\n  computed: {\n    cValue: {\n      set(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return\n        this.$emit('change', newValue)\n      },\n      get() {\n        return this.value || this.defaultValue\n      }\n    },\n    defaultOption() {\n      return this.defaultLabel ? [{ title: this.defaultLabel, value: -1 }] : []\n    },\n    shopOptions() {\n      return [\n        ...this.defaultOption,\n        ...this.staffList$.map(item => {\n          return {\n            label: item.nickname,\n            value: item.id\n          }\n        })\n      ]\n    }\n  },\n  props: {\n    mode: {\n      type: String\n    },\n    placeholder: {\n      type: String\n    },\n    type: {\n      type: String\n    },\n    width: {\n      type: String,\n      default: '150px'\n    },\n    value: {\n      type: [Number, String, Array]\n    },\n    query: {\n      type: Object,\n      default: () => {}\n    },\n    defaultValue: Number,\n    defaultLabel: {\n      type: String\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    query: {\n      deep: true,\n      handler(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return\n        this.cValue = this.defaultOption.length\n          ? this.defaultOption[0].value\n          : ''\n        this.userService.fetchStaffList({ ...newValue }).subscribe()\n      }\n    }\n  },\n  methods: {\n    onChange(value) {\n      this.$emit('change', value)\n    }\n  },\n  created() {\n    this.userService.fetchStaffList(this.query).subscribe()\n  }\n}\n</script>\n"]}]}