{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/list.vue","mtime":1596188219696},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ListService } from './list.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './list.config'\nimport { ruleOptions } from './list.config'\nimport OnSales from '@/views/biz-modals/package/onSales'\nimport OffSales from '@/views/biz-modals/package/offSales'\nimport ShopList from '@/views/biz-modals/package/shop-list'\nimport Synchronize from '@/views/biz-modals/package/synchronize'\nimport SuccessTip from '@/views/biz-modals/package/success-tip'\nimport { PRODUCT_CHANNEL } from '@/constants/course/package.ts'\nexport default {\n  name: 'BrandPackageList',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      listService: ListService\n    }\n  },\n  modals: {\n    OnSales,\n    OffSales,\n    ShopList,\n    Synchronize,\n    SuccessTip\n  },\n  rxState() {\n    const {\n      list$,\n      page$,\n      loading$,\n      auth$,\n      packageType$,\n      publicChannel$,\n      supportNum$\n    } = this.listService\n    return {\n      list$,\n      page$,\n      loading$,\n      auth$,\n      packageType$,\n      publicChannel$,\n      supportNum$\n    }\n  },\n  bem: {\n    b: 'page-brand-package-list'\n  },\n  data() {\n    return {\n      FIXATION: 3,\n      UNLIMIT: 1,\n      RANGE: 2\n    }\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    getShopList(id) {\n      this.$modalRouter.push({\n        name: 'shop-list',\n        props: {\n          id\n        }\n      })\n    },\n    onUpShelf(id, channel) {\n      this.$modalRouter.push({\n        name: 'on-sales',\n        props: {\n          id,\n          channel: channel === PRODUCT_CHANNEL.SHOP ? 'shop' : 'brand'\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onDownShelf(id) {\n      this.$modalRouter.push({\n        name: 'off-sales',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    batchOperate(id) {\n      this.$modalRouter.push({\n        name: 'Synchronize',\n        on: {\n          success: () => {\n            this.$confirm({\n              title: '提示',\n              content: `请再次确认是否同步，同步后会覆盖售出课程包，将会有2～5s无法正常使用`,\n              onOk: () => {\n                this.listService.setSyncSold(id).subscribe(res => {\n                  this.$modalRouter.push({\n                    name: 'success-tip'\n                  })\n                  this.$router.reload()\n                })\n              },\n              onCancel() {}\n            })\n          }\n        }\n      })\n    },\n    deletePackage(id, name) {\n      this.$confirm({\n        title: '提示',\n        content: ` 删除后不影响已购买的用户，一旦删除则无法恢复，确认删除${name}？`,\n        onOk: () => {\n          this.listService.deletePackage(id).subscribe(res => {\n            this.$router.reload()\n          })\n        },\n        onCancel() {}\n      })\n    },\n    onEdit(id, type) {\n      let editList = {\n        [this.FIXATION]: 'brand-product-package-edit-fix-package',\n        [this.UNLIMIT]: 'brand-product-package-edit-unlimit-package',\n        [this.RANGE]: 'brand-product-package-edit-range-package'\n      }\n      this.$router.push({\n        name: editList[type],\n        query: {\n          id\n        }\n      })\n    },\n    onDetail(id, packageType) {\n      this.$router.push({\n        name: 'brand-product-package-info',\n        query: {\n          id,\n          packageType\n        }\n      })\n    }\n  }\n}\n",null]}