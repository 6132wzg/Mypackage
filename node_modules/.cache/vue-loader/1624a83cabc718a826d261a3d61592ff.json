{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/scope.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/scope.vue","mtime":1600926555958},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ScopeService } from './scope.service'\nimport { ruleOptions } from './scope.config'\nimport { BATCH_TYPE, BATCH_INFO } from '@/constants/common/batch-operation'\nimport {\n  cloneDeep,\n  remove,\n  every,\n  filter,\n  reduce,\n  forEach,\n  find,\n  intersection\n} from 'lodash-es'\nexport default {\n  name: 'ModalSoldCourseScope',\n  bem: {\n    add: 'page-shop-add-range-package',\n    basic: 'page-shop-add-basic-package',\n    b: 'modal-sold-course-scope'\n  },\n  serviceProviders() {\n    return [ScopeService]\n  },\n  serviceInject() {\n    return {\n      scopeService: ScopeService\n    }\n  },\n  rxState() {\n    return {\n      list_num: this.scopeService.list_num$,\n      loading: this.scopeService.loading$,\n      coachList: this.scopeService.coachList$,\n      teamCourseList: this.scopeService.teamCourseList$,\n      teamCourseTreeList: this.scopeService.teamCourseTreeList$,\n      personalCourseList: this.scopeService.personalCourseList$,\n      personalCourseTreeList: this.scopeService.personalCourseTreeList$\n    }\n  },\n  props: {\n    ids: {\n      type: Array,\n      required: true\n    },\n    searchQuery: {\n      type: Object\n    }\n  },\n  mounted() {\n    this.scopeService.init(this.searchQuery).subscribe()\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      bacthTeamReduceTimes: 0,\n      bacthPersonalReduceTimes: 0,\n      expandedKeys: [],\n      autoExpandParent: true,\n      teamCourseIds: [],\n      expandedKeysCourse: [],\n      autoExpandParentCourse: true,\n      teamCourseList: [],\n      searchCourseValue: '',\n      teamChildrenIds: [],\n\n      personalCourseIds: [],\n      expandedKeysPersonal: [],\n      autoExpandParentPersonal: true,\n      searchPersonalValue: '',\n      personalChildrenIds: [],\n\n      BATCH_TYPE,\n      BATCH_INFO,\n      form,\n      decorators,\n      show: false,\n      batch_type: BATCH_TYPE.SELECTED,\n      teamCheckAll: false,\n      personalCheckAll: false,\n      coachAllOperationDropdownIsShow: false,\n      personalAllOperationCoachList: [],\n      personalAllOperationCoachTotal: 0\n    }\n  },\n  computed: {\n    teamCourseShowList() {\n      return this.teamCourseList.filter(item =>\n        this.teamChildrenIds.includes(item.id)\n      )\n    },\n    personalCourseShowList() {\n      const cocahes = []\n      let total = 0\n      this.coachList.forEach(item => {\n        cocahes.push(item.id)\n        total += item.coach_number\n      })\n      return this.personalCourseList.filter(item => {\n        // if (this.personalCourseIds.includes(item.id)) {\n        if (this.personalChildrenIds.includes(item.id)) {\n          item.coachGradeList = cocahes\n          item.coach = total\n          return item\n        }\n      })\n    },\n    helpText() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM\n        ? this.BATCH_INFO.ERROR_TIP\n        : ''\n    },\n    helpShow() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM\n    },\n    operateDataNum() {\n      return this.batch_type === this.BATCH_TYPE.SELECTED\n        ? this.ids.length\n        : this.list_num\n    }\n  },\n  methods: {\n    onBlurPersonalReduceTimes() {\n      this.bacthPersonalReduceTimes = ''\n    },\n    onChangePersonalReduceTimes(value) {\n      if (!this.personalCheckAll) return\n      this.personalCourseList = this.personalCourseList.map(item => {\n        item.course_weight = value\n        return item\n      })\n    },\n    onBlurTeamReduceTimes() {\n      this.bacthTeamReduceTimes = ''\n    },\n    onChangeTeamReduceTimes(value) {\n      if (!this.teamCheckAll) return\n      this.teamCourseList = this.teamCourseList.map(item => {\n        item.course_weight = value\n        return item\n      })\n    },\n    getPopupContainer() {\n      return document.getElementsByClassName('modal-sold-course-scope')[0]\n    },\n    onTeamTree() {\n      this.teamChildrenIds = this.teamCourseIds.filter(\n        i => !find(this.teamCourseTreeList, { id: i })\n      )\n      this.teamCourseIds.forEach((i, index) => {\n        const item = find(this.teamCourseTreeList, { id: i })\n        if (item) {\n          const isExist = item.children.filter(childrenItem =>\n            this.teamCourseIds.includes(childrenItem.id)\n          )\n          if (isExist.length <= 0) {\n            this.teamCourseIds.splice(index, 1)\n          } else if (isExist.length !== item.children.length) {\n            const index = this.teamCourseIds.indexOf(item.id)\n            this.teamCourseIds.splice(index, 1)\n          }\n        }\n      })\n    },\n    onPersonalTree() {\n      this.personalChildrenIds = this.personalCourseIds.filter(\n        i => !find(this.personalCourseTreeList, { id: i })\n      )\n      this.personalCourseIds.forEach((i, index) => {\n        const item = find(this.personalCourseTreeList, { id: i })\n        if (item) {\n          let isExist = []\n          if (item.children)\n            isExist = item.children.filter(childrenItem =>\n              this.personalCourseIds.includes(childrenItem.id)\n            )\n          if (isExist.length <= 0) {\n            this.personalCourseIds.splice(index, 1)\n          } else if (isExist.length !== item.children.length) {\n            const index = this.personalCourseIds.indexOf(item.id)\n            this.personalCourseIds.splice(index, 1)\n          }\n        }\n      })\n    },\n    coachItemChange(item, index) {\n      const arr = this.coachList.filter(i => item.coachGradeList.includes(i.id))\n      let total = 0\n      arr.forEach(i => {\n        total += i.coach_number\n      })\n      item.coach = total\n    },\n    onClickDeleteTeam(i, index) {\n      this.teamCourseIds = this.teamCourseIds.filter(item => item !== i.id)\n      this.onTeamTree()\n    },\n    onClickDeletePersonal(i, index) {\n      this.personalCourseIds = this.personalCourseIds.filter(\n        item => item !== i.id\n      )\n      this.onPersonalTree()\n    },\n    checkAllChange(type) {\n      if (type === 'team') {\n        this.teamCheckAll = !this.teamCheckAll\n        this.teamCourseShowList.forEach(item => {\n          item.checked = this.teamCheckAll\n        })\n      }\n      if (type === 'personal') {\n        this.personalCheckAll = !this.personalCheckAll\n        this.personalCourseShowList.forEach(item => {\n          item.checked = this.personalCheckAll\n        })\n      }\n    },\n    removeCourseItems(type) {\n      if (type === 'team') {\n        if (this.teamCheckAll) {\n          this.teamCourseIds = []\n          this.teamCheckAll = false\n          this.onTeamTree()\n        }\n      }\n      if (type === 'personal') {\n        if (this.personalCheckAll) {\n          this.personalCourseIds = []\n          this.personalCheckAll = false\n          this.onPersonalTree()\n        }\n      }\n    },\n    filterCourseList(e) {\n      const value = e.target.value\n      const expandedKeysCourse = this.teamCourseList\n        .map(item => {\n          if (item.name.indexOf(value) > -1) {\n            return this.getParentKey(\n              item.name,\n              cloneDeep(this.teamCourseTreeList)\n            )\n          }\n          return null\n        })\n        .filter((item, i, self) => item && self.indexOf(item) === i)\n      Object.assign(this, {\n        expandedKeysCourse,\n        searchCourseValue: value,\n        autoExpandParentCourse: true\n      })\n    },\n    filterPersonalList(e) {\n      const value = e.target.value\n      const expandedKeysPersonal = this.personalCourseList\n        .map(item => {\n          if (item.name.indexOf(value) > -1) {\n            return this.getParentKey(\n              item.name,\n              cloneDeep(this.personalCourseTreeList)\n            )\n          }\n          return null\n        })\n        .filter((item, i, self) => item && self.indexOf(item) === i)\n      Object.assign(this, {\n        expandedKeysPersonal,\n        searchPersonalValue: value,\n        autoExpandParentPersonal: true\n      })\n    },\n    getParentKey(key, tree) {\n      let parentKey\n      for (let i = 0; i < tree.length; i++) {\n        const node = tree[i]\n        if (node.children) {\n          if (node.children.some(item => item.name === key)) {\n            parentKey = node.key\n          } else if (this.getParentKey(key, node.children)) {\n            parentKey = this.getParentKey(key, node.children)\n          }\n        }\n      }\n      return parentKey\n    },\n    onExpandCourse(expandedKeys) {\n      this.expandedKeysCourse = expandedKeys\n      this.autoExpandParentCourse = false\n    },\n    onExpandPersonal(expandedKeys) {\n      this.expandedKeysPersonal = expandedKeys\n      this.autoExpandParentPersonal = false\n    },\n    coachAllChange() {\n      const arr = this.coachList.filter(i =>\n        this.personalAllOperationCoachList.includes(i.id)\n      )\n      let total = 0\n      arr.forEach(i => {\n        total += i.coach_number\n      })\n      this.personalAllOperationCoachTotal = total\n    },\n    coachAllOperationOk() {\n      const arr = this.coachList.filter(i =>\n        this.personalAllOperationCoachList.includes(i.id)\n      )\n      let total = 0\n      arr.forEach(i => {\n        total += i.coach_number\n      })\n      this.personalCourseShowList.forEach(item => {\n        item.coachGradeList = cloneDeep(this.personalAllOperationCoachList)\n        item.coach = total\n      })\n      // 清空\n      this.personalAllOperationCoachList = []\n      this.personalAllOperationCoachTotal = 0\n      // 收起\n      this.coachAllOperationDropdownIsShow = false\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const arrPersonal = []\n        const arrTeam = []\n        this.personalCourseShowList.forEach(item => {\n          arrPersonal.push({\n            id: item.id,\n            level_ids: item.coachGradeList,\n            course_weight: +item.course_weight\n          })\n        })\n        this.teamCourseShowList.forEach(item => {\n          arrTeam.push({\n            id: item.id,\n            course_weight: +item.course_weight\n          })\n        })\n        this.scopeService\n          .changePackageRange({\n            batch_type: this.batch_type,\n            sold_ids: this.ids,\n            conditions: this.searchQuery,\n            range_teams: arrTeam,\n            range_personals: arrPersonal\n          })\n          .subscribe(res => {\n            this.$emit('success')\n            this.show = false\n          })\n      })\n    }\n  }\n}\n",{"version":3,"sources":["scope.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqafile":"scope.vue","sourceRoot":"src/views/biz-modals/sold/course","sourcesContent":["<template>\n  <st-modal\n    title=\"更换上课范围\"\n    size=\"default\"\n    v-model=\"show\"\n    :wrapClassName=\"b()\"\n  >\n    <st-form :form=\"form\" labelWidth=\"75px\">\n      <st-form-item\n        label=\"选择\"\n        required\n        :help=\"helpText\"\n        :validateStatus=\"helpShow ? 'error' : ''\"\n      >\n        <st-batch-select-radio\n          :ids=\"this.ids\"\n          v-model=\"batch_type\"\n          :total=\"list_num\"\n        ></st-batch-select-radio>\n      </st-form-item>\n      <st-form-item label=\"团体课程\" required>\n        <div :class=\"(add('team-course-table'), add('course'))\">\n          <table :class=\"add('scope-table')\">\n            <colgroup>\n              <col style=\"width:5%;\" />\n              <col style=\"width:41%;\" />\n              <col style=\"width:40%;\" />\n              <col style=\"width:14%;\" />\n            </colgroup>\n            <tr class=\"bg-thead th\">\n              <th></th>\n              <th>课程名称</th>\n              <th>预约课程扣次</th>\n              <th>操作</th>\n            </tr>\n            <tbody>\n              <tr class=\"checkbox border-bottom\">\n                <td colspan=\"4\" class=\"team-course-add-buton\">\n                  <a-popover\n                    trigger=\"click\"\n                    :getPopupContainer=\"getPopupContainer\"\n                  >\n                    <template slot=\"content\">\n                      <div :class=\"b('popup-scroll')\">\n                        <st-input-search\n                          @change=\"filterCourseList\"\n                          placeholder=\"请输入查询内容\"\n                          round=\"round\"\n                        ></st-input-search>\n                        <a-tree\n                          checkable\n                          @check=\"onTeamTree\"\n                          @expand=\"onExpandCourse\"\n                          v-model=\"teamCourseIds\"\n                          :expandedKeys.sync=\"expandedKeysCourse\"\n                          :autoExpandParent=\"autoExpandParentCourse\"\n                          :treeData=\"teamCourseTreeList\"\n                        >\n                          <template slot=\"title\" slot-scope=\"{ title }\">\n                            <span v-if=\"title.indexOf(searchCourseValue) > -1\">\n                              {{\n                                title.substr(\n                                  0,\n                                  title.indexOf(searchCourseValue)\n                                )\n                              }}\n                              <span style=\"color: #f50\">\n                                {{ searchCourseValue }}\n                              </span>\n                              {{\n                                title.substr(\n                                  title.indexOf(searchCourseValue) +\n                                    searchCourseValue.length\n                                )\n                              }}\n                            </span>\n                            <span v-else>{{ title }}</span>\n                          </template>\n                        </a-tree>\n                      </div>\n                    </template>\n                    <st-button block type=\"dashed\" icon=\"add\">\n                      新增团体课程\n                    </st-button>\n                  </a-popover>\n                </td>\n              </tr>\n              <tr>\n                <td colspan=\"4\">\n                  <p\n                    v-if=\"!teamCourseShowList.length\"\n                    class=\"bg-row-even\"\n                    style=\"margin: 0;text-align:center;padding: 8px 0;\"\n                  >\n                    无数据\n                  </p>\n                  <ul\n                    :class=\"b('team-table')\"\n                    v-else\n                    v-scrollBar=\"{ stopPropagation: true }\"\n                    v-decorator=\"['teamCourseList2']\"\n                  >\n                    <li\n                      class=\"checkbox border-bottom\"\n                      :class=\"[\n                        index % 2 !== 0 ? 'bg-row-odd' : 'bg-row-even',\n                        b('course-item')\n                      ]\"\n                      v-for=\"(i, index) in teamCourseShowList\"\n                      :key=\"i.id\"\n                    >\n                      <div class=\"tg-c\" :class=\"b('checked')\">\n                        <a-checkbox :checked=\"i.checked\" />\n                      </div>\n                      <div :class=\"b('name')\">{{ i.name }}</div>\n                      <div :class=\"b('count')\">\n                        <st-input-number\n                          v-model=\"i.course_weight\"\n                          :min=\"0\"\n                          :max=\"99999\"\n                          style=\"width:104px\"\n                        >\n                          <template slot=\"addonAfter\">次</template>\n                        </st-input-number>\n                      </div>\n                      <div :class=\"b('delete')\">\n                        <a @click=\"onClickDeleteTeam(i, index)\">\n                          删除\n                        </a>\n                      </div>\n                    </li>\n                  </ul>\n                </td>\n              </tr>\n              <tr class=\"bg-thead checkbox topline\">\n                <td class=\"tg-c\">\n                  <a-checkbox\n                    @change=\"checkAllChange('team')\"\n                    :checked=\"teamCheckAll\"\n                  />\n                </td>\n                <td>批量操作</td>\n                <td>\n                  <st-input-number\n                    @change=\"onChangeTeamReduceTimes\"\n                    @blur=\"onBlurTeamReduceTimes\"\n                    v-model=\"bacthTeamReduceTimes\"\n                    :min=\"0\"\n                    :max=\"99999\"\n                    style=\"width:104px\"\n                  >\n                    <template slot=\"addonAfter\">次</template>\n                  </st-input-number>\n                </td>\n                <td>\n                  <a @click=\"removeCourseItems('team')\">\n                    删除\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </st-form-item>\n      <st-form-item label=\"私教课程\" class=\"mg-b0\" required>\n        <div :class=\"(add('personal-course-table'), add('course'))\">\n          <table :class=\"add('course-table')\">\n            <colgroup>\n              <col style=\"width:5%;\" />\n              <col style=\"width:25%;\" />\n              <col style=\"width:25%;\" />\n              <col style=\"width:25%;\" />\n              <col style=\"width:10%;\" />\n              <col style=\"width:10%;\" />\n            </colgroup>\n            <tr class=\"bg-thead th\">\n              <th></th>\n              <th>课程名称</th>\n              <th>扣除次数</th>\n              <th>支持{{ $c('coach') }}等级</th>\n              <th>授课{{ $c('coach') }}数</th>\n              <th>操作</th>\n            </tr>\n            <tbody>\n              <tr class=\"checkbox border-bottom\">\n                <td colspan=\"6\" class=\"personal-course-add-buton\">\n                  <a-popover trigger=\"click\">\n                    <template slot=\"content\">\n                      <div :class=\"b('popup-scroll')\">\n                        <st-input-search\n                          @change=\"filterPersonalList\"\n                          placeholder=\"请输入查询内容\"\n                          round=\"round\"\n                        ></st-input-search>\n                        <a-tree\n                          checkable\n                          @expand=\"onExpandPersonal\"\n                          @check=\"onPersonalTree\"\n                          v-model=\"personalCourseIds\"\n                          :expandedKeys.sync=\"expandedKeysPersonal\"\n                          :autoExpandParent=\"autoExpandParentPersonal\"\n                          :treeData=\"personalCourseTreeList\"\n                        >\n                          <template slot=\"title\" slot-scope=\"{ title }\">\n                            <span\n                              v-if=\"title.indexOf(searchPersonalValue) > -1\"\n                            >\n                              {{\n                                title.substr(\n                                  0,\n                                  title.indexOf(searchPersonalValue)\n                                )\n                              }}\n                              <span style=\"color: #f50\">\n                                {{ searchPersonalValue }}\n                              </span>\n                              {{\n                                title.substr(\n                                  title.indexOf(searchPersonalValue) +\n                                    searchPersonalValue.length\n                                )\n                              }}\n                            </span>\n                            <span v-else>{{ title }}</span>\n                          </template>\n                        </a-tree>\n                      </div>\n                    </template>\n                    <st-button block type=\"dashed\" icon=\"add\">\n                      新增私教课程\n                    </st-button>\n                  </a-popover>\n                </td>\n              </tr>\n              <tr>\n                <td colspan=\"6\">\n                  <p\n                    v-if=\"!personalCourseShowList.length\"\n                    class=\"bg-row-even\"\n                    style=\"margin: 0;text-align:center;padding: 8px 0;\"\n                  >\n                    无数据\n                  </p>\n                  <ul\n                    :class=\"b('team-table')\"\n                    v-else\n                    v-scrollBar=\"{ stopPropagation: true }\"\n                    v-decorator=\"['personalCourseList1']\"\n                  >\n                    <li\n                      class=\"checkbox border-bottom\"\n                      :class=\"[\n                        index % 2 !== 0 ? 'bg-row-odd' : 'bg-row-even',\n                        b('personal-item')\n                      ]\"\n                      v-for=\"(item, index) in personalCourseShowList\"\n                      :key=\"item.id\"\n                    >\n                      <div class=\"tg-c\">\n                        <a-checkbox :checked=\"item.checked\" />\n                      </div>\n                      <div>{{ item.name }}</div>\n                      <div>\n                        <st-input-number\n                          v-model=\"item.course_weight\"\n                          :min=\"0\"\n                          :max=\"99999\"\n                          style=\"width:104px\"\n                        >\n                          <template slot=\"addonAfter\">次</template>\n                        </st-input-number>\n                      </div>\n                      <div>\n                        <a-dropdown\n                          placement=\"bottomRight\"\n                          :trigger=\"['click']\"\n                        >\n                          <a>\n                            {{\n                              item.coachGradeList.length === coachList.length\n                                ? '全部'\n                                : `${item.coachGradeList.length}个`\n                            }}等级&nbsp;&nbsp;\n                            <st-icon class=\"icon-12\" type=\"down-small\" />\n                          </a>\n                          <a-checkbox-group\n                            :class=\"basic(`personal-dropdown`)\"\n                            v-model=\"item.coachGradeList\"\n                            @change=\"coachItemChange(item, index)\"\n                            slot=\"overlay\"\n                          >\n                            <!-- 在AForm组件里用自定义指令时，需要加上v-decorator,值不能重复 -->\n                            <ul\n                              class=\"personal-course-coach-grade-dropdown\"\n                              v-scrollBar=\"{\n                                stopPropagation: true\n                              }\"\n                              v-decorator=\"[\n                                `personalCourseListCoachGrade${index}`\n                              ]\"\n                            >\n                              <li\n                                v-for=\"(coachItem, coachIndex) in coachList\"\n                                :key=\"coachIndex\"\n                              >\n                                <a-checkbox :value=\"coachItem.id\">\n                                  {{ coachItem.setting_name }}\n                                </a-checkbox>\n                              </li>\n                            </ul>\n                          </a-checkbox-group>\n                        </a-dropdown>\n                      </div>\n                      <div>{{ item.coach }}</div>\n                      <div>\n                        <a @click=\"onClickDeletePersonal(item, index)\">\n                          删除\n                        </a>\n                      </div>\n                    </li>\n                  </ul>\n                </td>\n              </tr>\n              <tr class=\"bg-thead checkbox topline\">\n                <td class=\"tg-c\">\n                  <a-checkbox\n                    @change=\"checkAllChange('personal')\"\n                    :checked=\"personalCheckAll\"\n                  />\n                </td>\n                <td>批量操作</td>\n                <td>\n                  <st-input-number\n                    @change=\"onChangePersonalReduceTimes\"\n                    @blur=\"onBlurPersonalReduceTimes\"\n                    v-model=\"bacthPersonalReduceTimes\"\n                    :min=\"0\"\n                    :max=\"99999\"\n                    style=\"width:104px\"\n                  >\n                    <template slot=\"addonAfter\">次</template>\n                  </st-input-number>\n                </td>\n                <td>\n                  <a-dropdown\n                    placement=\"bottomRight\"\n                    :trigger=\"['click']\"\n                    v-model=\"coachAllOperationDropdownIsShow\"\n                  >\n                    <a href=\"javascript:void(0)\">\n                      批量设置等级&nbsp;&nbsp;\n                      <st-icon class=\"icon-12\" type=\"down-small\" />\n                    </a>\n                    <a-checkbox-group\n                      :class=\"basic(`personal-dropdown`)\"\n                      v-model=\"personalAllOperationCoachList\"\n                      @change=\"coachAllChange\"\n                      class=\"all\"\n                      slot=\"overlay\"\n                    >\n                      <ul\n                        class=\"personal-course-coach-grade-dropdown\"\n                        v-scrollBar=\"{ stopPropagation: true }\"\n                        v-decorator=\"['personalCourseListCoachGradeAll']\"\n                      >\n                        <li\n                          v-for=\"(coachItem, coachIndex) in coachList\"\n                          :key=\"coachIndex\"\n                        >\n                          <a-checkbox :value=\"coachItem.id\">\n                            {{ coachItem.setting_name }}\n                          </a-checkbox>\n                        </li>\n                      </ul>\n                      <div class=\"personal-course-coach-grade-dropdown-button\">\n                        <a\n                          :disabled=\"!personalAllOperationCoachList.length\"\n                          @click=\"coachAllOperationOk\"\n                        >\n                          确定\n                        </a>\n                      </div>\n                    </a-checkbox-group>\n                  </a-dropdown>\n                </td>\n                <td>{{ personalAllOperationCoachTotal }}</td>\n                <td>\n                  <a @click=\"removeCourseItems('personal')\">\n                    删除\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </st-form-item>\n    </st-form>\n    <template slot=\"footer\">\n      <st-button @click=\"show = false\">\n        取消\n      </st-button>\n      <st-popconfirm class=\"mg-l8\" @confirm=\"onSubmit\">\n        <div slot=\"title\" class=\"sold-popup-tip\">\n          <div class=\"sold-popup-tip__title\">\n            本次共选择{{ operateDataNum }}条记录，请再次确认是否提交！\n          </div>\n          <div class=\"sold-popup-tip__content\">\n            此操作将\n            <span class=\"color-danger\">覆盖</span>\n            当前选择项已有数据，将会有2-5s无法正常使用。\n          </div>\n        </div>\n        <st-button type=\"primary\" :loading=\"loading.changePackageRange\">\n          确认提交\n        </st-button>\n      </st-popconfirm>\n    </template>\n  </st-modal>\n</template>\n\n<script>\nimport { ScopeService } from './scope.service'\nimport { ruleOptions } from './scope.config'\nimport { BATCH_TYPE, BATCH_INFO } from '@/constants/common/batch-operation'\nimport {\n  cloneDeep,\n  remove,\n  every,\n  filter,\n  reduce,\n  forEach,\n  find,\n  intersection\n} from 'lodash-es'\nexport default {\n  name: 'ModalSoldCourseScope',\n  bem: {\n    add: 'page-shop-add-range-package',\n    basic: 'page-shop-add-basic-package',\n    b: 'modal-sold-course-scope'\n  },\n  serviceProviders() {\n    return [ScopeService]\n  },\n  serviceInject() {\n    return {\n      scopeService: ScopeService\n    }\n  },\n  rxState() {\n    return {\n      list_num: this.scopeService.list_num$,\n      loading: this.scopeService.loading$,\n      coachList: this.scopeService.coachList$,\n      teamCourseList: this.scopeService.teamCourseList$,\n      teamCourseTreeList: this.scopeService.teamCourseTreeList$,\n      personalCourseList: this.scopeService.personalCourseList$,\n      personalCourseTreeList: this.scopeService.personalCourseTreeList$\n    }\n  },\n  props: {\n    ids: {\n      type: Array,\n      required: true\n    },\n    searchQuery: {\n      type: Object\n    }\n  },\n  mounted() {\n    this.scopeService.init(this.searchQuery).subscribe()\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      bacthTeamReduceTimes: 0,\n      bacthPersonalReduceTimes: 0,\n      expandedKeys: [],\n      autoExpandParent: true,\n      teamCourseIds: [],\n      expandedKeysCourse: [],\n      autoExpandParentCourse: true,\n      teamCourseList: [],\n      searchCourseValue: '',\n      teamChildrenIds: [],\n\n      personalCourseIds: [],\n      expandedKeysPersonal: [],\n      autoExpandParentPersonal: true,\n      searchPersonalValue: '',\n      personalChildrenIds: [],\n\n      BATCH_TYPE,\n      BATCH_INFO,\n      form,\n      decorators,\n      show: false,\n      batch_type: BATCH_TYPE.SELECTED,\n      teamCheckAll: false,\n      personalCheckAll: false,\n      coachAllOperationDropdownIsShow: false,\n      personalAllOperationCoachList: [],\n      personalAllOperationCoachTotal: 0\n    }\n  },\n  computed: {\n    teamCourseShowList() {\n      return this.teamCourseList.filter(item =>\n        this.teamChildrenIds.includes(item.id)\n      )\n    },\n    personalCourseShowList() {\n      const cocahes = []\n      let total = 0\n      this.coachList.forEach(item => {\n        cocahes.push(item.id)\n        total += item.coach_number\n      })\n      return this.personalCourseList.filter(item => {\n        // if (this.personalCourseIds.includes(item.id)) {\n        if (this.personalChildrenIds.includes(item.id)) {\n          item.coachGradeList = cocahes\n          item.coach = total\n          return item\n        }\n      })\n    },\n    helpText() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM\n        ? this.BATCH_INFO.ERROR_TIP\n        : ''\n    },\n    helpShow() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM\n    },\n    operateDataNum() {\n      return this.batch_type === this.BATCH_TYPE.SELECTED\n        ? this.ids.length\n        : this.list_num\n    }\n  },\n  methods: {\n    onBlurPersonalReduceTimes() {\n      this.bacthPersonalReduceTimes = ''\n    },\n    onChangePersonalReduceTimes(value) {\n      if (!this.personalCheckAll) return\n      this.personalCourseList = this.personalCourseList.map(item => {\n        item.course_weight = value\n        return item\n      })\n    },\n    onBlurTeamReduceTimes() {\n      this.bacthTeamReduceTimes = ''\n    },\n    onChangeTeamReduceTimes(value) {\n      if (!this.teamCheckAll) return\n      this.teamCourseList = this.teamCourseList.map(item => {\n        item.course_weight = value\n        return item\n      })\n    },\n    getPopupContainer() {\n      return document.getElementsByClassName('modal-sold-course-scope')[0]\n    },\n    onTeamTree() {\n      this.teamChildrenIds = this.teamCourseIds.filter(\n        i => !find(this.teamCourseTreeList, { id: i })\n      )\n      this.teamCourseIds.forEach((i, index) => {\n        const item = find(this.teamCourseTreeList, { id: i })\n        if (item) {\n          const isExist = item.children.filter(childrenItem =>\n            this.teamCourseIds.includes(childrenItem.id)\n          )\n          if (isExist.length <= 0) {\n            this.teamCourseIds.splice(index, 1)\n          } else if (isExist.length !== item.children.length) {\n            const index = this.teamCourseIds.indexOf(item.id)\n            this.teamCourseIds.splice(index, 1)\n          }\n        }\n      })\n    },\n    onPersonalTree() {\n      this.personalChildrenIds = this.personalCourseIds.filter(\n        i => !find(this.personalCourseTreeList, { id: i })\n      )\n      this.personalCourseIds.forEach((i, index) => {\n        const item = find(this.personalCourseTreeList, { id: i })\n        if (item) {\n          let isExist = []\n          if (item.children)\n            isExist = item.children.filter(childrenItem =>\n              this.personalCourseIds.includes(childrenItem.id)\n            )\n          if (isExist.length <= 0) {\n            this.personalCourseIds.splice(index, 1)\n          } else if (isExist.length !== item.children.length) {\n            const index = this.personalCourseIds.indexOf(item.id)\n            this.personalCourseIds.splice(index, 1)\n          }\n        }\n      })\n    },\n    coachItemChange(item, index) {\n      const arr = this.coachList.filter(i => item.coachGradeList.includes(i.id))\n      let total = 0\n      arr.forEach(i => {\n        total += i.coach_number\n      })\n      item.coach = total\n    },\n    onClickDeleteTeam(i, index) {\n      this.teamCourseIds = this.teamCourseIds.filter(item => item !== i.id)\n      this.onTeamTree()\n    },\n    onClickDeletePersonal(i, index) {\n      this.personalCourseIds = this.personalCourseIds.filter(\n        item => item !== i.id\n      )\n      this.onPersonalTree()\n    },\n    checkAllChange(type) {\n      if (type === 'team') {\n        this.teamCheckAll = !this.teamCheckAll\n        this.teamCourseShowList.forEach(item => {\n          item.checked = this.teamCheckAll\n        })\n      }\n      if (type === 'personal') {\n        this.personalCheckAll = !this.personalCheckAll\n        this.personalCourseShowList.forEach(item => {\n          item.checked = this.personalCheckAll\n        })\n      }\n    },\n    removeCourseItems(type) {\n      if (type === 'team') {\n        if (this.teamCheckAll) {\n          this.teamCourseIds = []\n          this.teamCheckAll = false\n          this.onTeamTree()\n        }\n      }\n      if (type === 'personal') {\n        if (this.personalCheckAll) {\n          this.personalCourseIds = []\n          this.personalCheckAll = false\n          this.onPersonalTree()\n        }\n      }\n    },\n    filterCourseList(e) {\n      const value = e.target.value\n      const expandedKeysCourse = this.teamCourseList\n        .map(item => {\n          if (item.name.indexOf(value) > -1) {\n            return this.getParentKey(\n              item.name,\n              cloneDeep(this.teamCourseTreeList)\n            )\n          }\n          return null\n        })\n        .filter((item, i, self) => item && self.indexOf(item) === i)\n      Object.assign(this, {\n        expandedKeysCourse,\n        searchCourseValue: value,\n        autoExpandParentCourse: true\n      })\n    },\n    filterPersonalList(e) {\n      const value = e.target.value\n      const expandedKeysPersonal = this.personalCourseList\n        .map(item => {\n          if (item.name.indexOf(value) > -1) {\n            return this.getParentKey(\n              item.name,\n              cloneDeep(this.personalCourseTreeList)\n            )\n          }\n          return null\n        })\n        .filter((item, i, self) => item && self.indexOf(item) === i)\n      Object.assign(this, {\n        expandedKeysPersonal,\n        searchPersonalValue: value,\n        autoExpandParentPersonal: true\n      })\n    },\n    getParentKey(key, tree) {\n      let parentKey\n      for (let i = 0; i < tree.length; i++) {\n        const node = tree[i]\n        if (node.children) {\n          if (node.children.some(item => item.name === key)) {\n            parentKey = node.key\n          } else if (this.getParentKey(key, node.children)) {\n            parentKey = this.getParentKey(key, node.children)\n          }\n        }\n      }\n      return parentKey\n    },\n    onExpandCourse(expandedKeys) {\n      this.expandedKeysCourse = expandedKeys\n      this.autoExpandParentCourse = false\n    },\n    onExpandPersonal(expandedKeys) {\n      this.expandedKeysPersonal = expandedKeys\n      this.autoExpandParentPersonal = false\n    },\n    coachAllChange() {\n      const arr = this.coachList.filter(i =>\n        this.personalAllOperationCoachList.includes(i.id)\n      )\n      let total = 0\n      arr.forEach(i => {\n        total += i.coach_number\n      })\n      this.personalAllOperationCoachTotal = total\n    },\n    coachAllOperationOk() {\n      const arr = this.coachList.filter(i =>\n        this.personalAllOperationCoachList.includes(i.id)\n      )\n      let total = 0\n      arr.forEach(i => {\n        total += i.coach_number\n      })\n      this.personalCourseShowList.forEach(item => {\n        item.coachGradeList = cloneDeep(this.personalAllOperationCoachList)\n        item.coach = total\n      })\n      // 清空\n      this.personalAllOperationCoachList = []\n      this.personalAllOperationCoachTotal = 0\n      // 收起\n      this.coachAllOperationDropdownIsShow = false\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const arrPersonal = []\n        const arrTeam = []\n        this.personalCourseShowList.forEach(item => {\n          arrPersonal.push({\n            id: item.id,\n            level_ids: item.coachGradeList,\n            course_weight: +item.course_weight\n          })\n        })\n        this.teamCourseShowList.forEach(item => {\n          arrTeam.push({\n            id: item.id,\n            course_weight: +item.course_weight\n          })\n        })\n        this.scopeService\n          .changePackageRange({\n            batch_type: this.batch_type,\n            sold_ids: this.ids,\n            conditions: this.searchQuery,\n            range_teams: arrTeam,\n            range_personals: arrPersonal\n          })\n          .subscribe(res => {\n            this.$emit('success')\n            this.show = false\n          })\n      })\n    }\n  }\n}\n</script>\n"]}]}