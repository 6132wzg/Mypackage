{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/surplus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/surplus.vue","mtime":1591147717244},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from 'lodash-es'\nimport { SurplusService } from './surplus.service'\nimport { find as lodashFind, set } from 'lodash-es'\nexport default {\n  name: 'ModalSoldPackageSurplus',\n  bem: {\n    surplus: 'modal-sold-package-surplus'\n  },\n  serviceInject() {\n    return {\n      surplusService: SurplusService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.surplusService.loading$\n    }\n  },\n  props: {\n    courseType: {\n      type: String,\n      required: true\n    },\n    courseData: {\n      type: Object\n    }\n  },\n  watch: {\n    courseData(newVal) {\n      this.getEditInfo()\n    }\n  },\n  created() {\n    this.getEditInfo()\n  },\n  data() {\n    const form = this.$stForm.create()\n    return {\n      form,\n      show: false,\n      courseList: [],\n      remarks: ''\n    }\n  },\n  computed: {\n    decorators() {\n      const ruleOptions = {}\n      this.courseList.forEach(item => {\n        const decoId = this.calcDecoId(item)\n        ruleOptions[decoId] = {\n          rules: [\n            {\n              required: true,\n              message: '请输入课时'\n            }\n          ]\n        }\n      })\n      return this.form.decorators(ruleOptions)\n    }\n  },\n  methods: {\n    /**\n     * 计算decoratod中的id值 用于表单验证 发送是取值\n     */\n    calcDecoId(item) {\n      return `${item.product_type}-${item.id}`\n    },\n    getEditInfo() {\n      this.surplusService\n        .getPackageEditInfo(this.courseData.id)\n        .subscribe(res => {\n          this.courseList = cloneDeep(res.list)\n        })\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        let courseInfo = this.courseList.map(item => {\n          const decoId = this.calcDecoId(item)\n          return {\n            id: item.id,\n            product_type: item.product_type,\n            course_num_remain: +values[decoId]\n          }\n        })\n\n        this.surplusService\n          .edit(\n            { course_info: courseInfo, description: this.remarks },\n            this.courseData.id\n          )\n          .subscribe(res => {\n            this.$emit('success')\n            this.show = false\n          })\n      })\n    }\n  }\n}\n",null]}