{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/import.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/import.vue","mtime":1601345845214},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ImportService } from \"./import.service\";\nimport { MessageService } from '@/services/message.service';\nimport { OssService } from '@/services/oss.service';\nimport { IMPORT, IMPORT_TEXT } from '@/constants/setting/import';\nexport default {\n  name: 'ModalBrandSettingImport',\n  bem: {\n    b: 'modal-brand-setting-import',\n    bProgress: 'modal-brand-setting-import__progress'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      importService: ImportService,\n      messageService: MessageService,\n      ossService: OssService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.importService.loading$\n    };\n  },\n  props: {\n    type: {\n      type: Number,\n      default: IMPORT.MEMBER_BASIC\n    },\n    shopId: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      IMPORT: IMPORT,\n      show: false,\n      isLoading: false,\n      progress: 0,\n      isPrivate: true,\n      fileList: [],\n      fileType: ['xlsx']\n    };\n  },\n  computed: {\n    isType: function isType() {\n      var types = [this.IMPORT.SOLD_MEMBER_CARD, this.IMPORT.SOLD_DEPOSIT, this.IMPORT.SOLD_PERSONAL_COURSE, this.IMPORT.SOLD_PACKAGE, this.IMPORT.SOLD_RANGE_PACKAGE, this.IMPORT.SOLD_LEASE];\n      return types.includes(this.type);\n    },\n    importTitle: function importTitle() {\n      return IMPORT_TEXT(this)[this.type];\n    }\n  },\n  methods: {\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      var params = {\n        file_save_type: this.IMPORT.FILE_SAVE_TYPE,\n        file_source: this.fileList[0].file_key,\n        input_type: this.type,\n        shop_id: this.shopId || undefined\n      };\n      this.importService.uploadFile(params).subscribe(function (res) {\n        _this.show = false;\n\n        _this.$emit('success');\n      });\n    },\n    reSelect: function reSelect() {\n      this.fileList = [];\n      this.isLoading = false;\n    },\n    upload: function upload(data) {\n      var _this2 = this;\n\n      var fileCheckRet = this.fileCheck(data);\n\n      if (!fileCheckRet.isValid) {\n        this.messageService.error({\n          content: fileCheckRet.msg\n        });\n        return;\n      }\n\n      this.isLoading = true; // 业务\n\n      this.ossService.put({\n        business: 'excel',\n        isPrivate: this.isPrivate,\n        file: data.file,\n        uploadProgress: function uploadProgress(e) {\n          _this2.progress = parseInt(e.loaded / e.total * 100);\n        }\n      }).subscribe({\n        next: function next(val) {\n          _this2.fileList.push({\n            file_key: val.fileKey,\n            file_name: val.fileName,\n            file_host: val.host,\n            file_url: val.url\n          });\n        },\n        error: function error(val) {\n          _this2.messageService.error({\n            content: \"Error \".concat(val.message)\n          });\n\n          _this2.isLoading = false;\n        }\n      });\n    },\n    fileCheck: function fileCheck(data) {\n      var _data$file = data.file,\n          size = _data$file.size,\n          name = _data$file.name;\n      var sizeLimit = this.sizeLimit,\n          fileType = this.fileType;\n      var names = name.split('.');\n\n      if (names.length <= 0 || !fileType.includes(names[names.length - 1])) {\n        return {\n          isValid: false,\n          msg: \"\\u8BF7\\u4E0A\\u4F20\".concat(fileType, \"\\u683C\\u5F0F\\u7684\\u6587\\u4EF6\")\n        };\n      }\n\n      return {\n        isValid: true\n      };\n    }\n  }\n};",{"version":3,"sources":["import.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <st-modal\n    :title=\"importTitle\"\n    size=\"small\"\n    v-model=\"show\"\n    :confirmLoading=\"loading.uploadFile\"\n    wrapClassName=\"modal-brand-setting-import\"\n    @ok=\"onSubmit\"\n  >\n    <section :class=\"b()\">\n      <label :class=\"b('tip')\">数据处理方式:</label>\n      <div v-if=\"isType\" :class=\"b('content')\">\n        <p>新增数据</p>\n        <p>针对不重复数据，进行新增，重复数据导入失败</p>\n        <p>若一张表格合同编号出现重复，导入失败</p>\n      </div>\n      <div v-else :class=\"b('content')\">\n        <p>新增并覆盖原始数据</p>\n        <p>针对不重复的数据，进行新增</p>\n        <p>针对重复数据，进行覆盖</p>\n      </div>\n      <div :class=\"b('file')\">\n        <a-upload\n          v-if=\"!isLoading\"\n          :showUploadList=\"false\"\n          :customRequest=\"upload\"\n          :multiple=\"false\"\n          accept=\"xlsx\"\n        >\n          <label :class=\"b('file-btn')\">选择文件</label>\n        </a-upload>\n        <div :class=\"b('progress')\" v-else>\n          <div\n            v-if=\"isLoading && progress != 100\"\n            :class=\"bProgress('bg')\"\n            :style=\"{ width: `${progress}%` }\"\n          ></div>\n          <label :class=\"bProgress('file-name')\" v-if=\"fileList.length > 0\">\n            {{ fileList[0].file_name }}\n          </label>\n          <label\n            :class=\"bProgress('reselect')\"\n            v-if=\"fileList.length > 0\"\n            @click=\"reSelect\"\n          >\n            重新选择\n          </label>\n        </div>\n      </div>\n    </section>\n  </st-modal>\n</template>\n\n<script>\nimport { ImportService } from './import.service'\nimport { MessageService } from '@/services/message.service'\nimport { OssService } from '@/services/oss.service'\nimport { IMPORT, IMPORT_TEXT } from '@/constants/setting/import'\nexport default {\n  name: 'ModalBrandSettingImport',\n  bem: {\n    b: 'modal-brand-setting-import',\n    bProgress: 'modal-brand-setting-import__progress'\n  },\n  serviceInject() {\n    return {\n      importService: ImportService,\n      messageService: MessageService,\n      ossService: OssService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.importService.loading$\n    }\n  },\n  props: {\n    type: {\n      type: Number,\n      default: IMPORT.MEMBER_BASIC\n    },\n    shopId: {\n      type: Number\n    }\n  },\n  data() {\n    return {\n      IMPORT,\n      show: false,\n      isLoading: false,\n      progress: 0,\n      isPrivate: true,\n      fileList: [],\n      fileType: ['xlsx']\n    }\n  },\n  computed: {\n    isType() {\n      const types = [\n        this.IMPORT.SOLD_MEMBER_CARD,\n        this.IMPORT.SOLD_DEPOSIT,\n        this.IMPORT.SOLD_PERSONAL_COURSE,\n        this.IMPORT.SOLD_PACKAGE,\n        this.IMPORT.SOLD_RANGE_PACKAGE,\n        this.IMPORT.SOLD_LEASE\n      ]\n      return types.includes(this.type)\n    },\n    importTitle() {\n      return IMPORT_TEXT(this)[this.type]\n    }\n  },\n  methods: {\n    onSubmit() {\n      const params = {\n        file_save_type: this.IMPORT.FILE_SAVE_TYPE,\n        file_source: this.fileList[0].file_key,\n        input_type: this.type,\n        shop_id: this.shopId || undefined\n      }\n      this.importService.uploadFile(params).subscribe(res => {\n        this.show = false\n        this.$emit('success')\n      })\n    },\n    reSelect() {\n      this.fileList = []\n      this.isLoading = false\n    },\n    upload(data) {\n      const fileCheckRet = this.fileCheck(data)\n      if (!fileCheckRet.isValid) {\n        this.messageService.error({ content: fileCheckRet.msg })\n        return\n      }\n      this.isLoading = true\n      // 业务\n      this.ossService\n        .put({\n          business: 'excel',\n          isPrivate: this.isPrivate,\n          file: data.file,\n          uploadProgress: e => {\n            this.progress = parseInt((e.loaded / e.total) * 100)\n          }\n        })\n        .subscribe({\n          next: val => {\n            this.fileList.push({\n              file_key: val.fileKey,\n              file_name: val.fileName,\n              file_host: val.host,\n              file_url: val.url\n            })\n          },\n          error: val => {\n            this.messageService.error({ content: `Error ${val.message}` })\n            this.isLoading = false\n          }\n        })\n    },\n    fileCheck(data) {\n      const { size, name } = data.file\n      const { sizeLimit, fileType } = this\n      const names = name.split('.')\n      if (names.length <= 0 || !fileType.includes(names[names.length - 1])) {\n        return {\n          isValid: false,\n          msg: `请上传${fileType}格式的文件`\n        }\n      }\n      return {\n        isValid: true\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/brand/setting"}]}