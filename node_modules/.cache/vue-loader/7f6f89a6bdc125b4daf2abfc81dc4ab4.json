{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/change-user-type.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/change-user-type.vue","mtime":1600926555916},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ChangeUserTypeService } from './change-user-type.service'\nimport { ruleOptions } from './change-user-type.config'\nimport { PatternService } from '@/services/pattern.service'\n\nexport default {\n  serviceInject() {\n    return {\n      service: ChangeUserTypeService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      minorsType: this.service.minorsType$,\n      parentType: this.service.parentType$\n    }\n  },\n  bem: {\n    b: 'shop-binding-card'\n  },\n  props: {\n    info: {\n      type: Object\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isShowParent: false,\n      isEditParent: false\n    }\n  },\n  methods: {\n    save(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        let para = {}\n        this.changeUserType(values)\n      })\n    },\n    changeUserType(values) {\n      values.id = this.info.member_id\n      this.service.changeUserType(values).subscribe(state => {\n        this.show = false\n        this.$emit('success')\n      })\n    },\n    minorsChange(val) {\n      this.isShowParent = val\n    },\n    getParentInfo(e) {\n      if (e.target.value.length === 11) {\n        this.getParentInfoByPhone(e.target.value)\n      }\n    },\n    getParentInfoByPhone(phone) {\n      let query = {\n        mobile: phone\n      }\n      return this.service.getParentInfoByPhone(query).subscribe(res => {\n        if (res.exists) {\n          this.isEditParent = true\n          this.form.setFieldsValue({\n            parent_username: res.info.member_name\n          })\n        } else {\n          this.isEditParent = false\n          this.form.setFieldsValue({\n            parent_username: ''\n          })\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["change-user-type.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"change-user-type.vue","sourceRoot":"src/views/biz-modals/shop","sourcesContent":["<template>\n  <st-modal\n    @ok=\"save\"\n    v-model=\"show\"\n    wrapClassName=\"shop-binding-card\"\n    size=\"small\"\n  >\n    <div slot=\"title\">\n      <span>\n        变更用户类型\n        <st-help-tooltip id=\"TSCMT001\" />\n      </span>\n    </div>\n    <st-form :form=\"form\" @submit=\"save\" labelWidth=\"80px\">\n      <st-form-item label=\"姓名\">\n        <a-input\n          disabled\n          :value=\"info.member_name\"\n          placeholder=\"支持中英文,不超过15个字\"\n        ></a-input>\n      </st-form-item>\n      <st-form-item label=\"用户类型\" required>\n        <a-select @change=\"minorsChange\" v-decorator=\"decorators.is_minors\">\n          <a-select-option\n            v-for=\"(item, index) in minorsType\"\n            :value=\"item.value\"\n            :key=\"index\"\n          >\n            {{ item.label }}\n          </a-select-option>\n        </a-select>\n      </st-form-item>\n      <st-form-item label=\"手机号\" required v-if=\"!isShowParent\">\n        <a-input-group compact>\n          <a-input placeholder=\"请输入手机号\" v-decorator=\"decorators.mobile\" />\n        </a-input-group>\n      </st-form-item>\n      <st-form-item label=\"家长手机号\" v-if=\"isShowParent\" required>\n        <a-input-group compact>\n          <a-input\n            @change=\"getParentInfo\"\n            placeholder=\"请输入手机号\"\n            v-decorator=\"decorators.parent_mobile\"\n          />\n        </a-input-group>\n      </st-form-item>\n      <st-form-item label=\"家长姓名\" v-if=\"isShowParent\" required>\n        <a-input\n          :disabled=\"isEditParent\"\n          placeholder=\"请输入家长姓名\"\n          v-decorator=\"decorators.parent_username\"\n        >\n          <a-select\n            v-decorator=\"decorators.parent_user_role\"\n            slot=\"addonAfter\"\n            style=\"width: 70px\"\n          >\n            <a-select-option\n              v-for=\"(item, index) in parentType\"\n              :value=\"item.value\"\n              :key=\"index\"\n            >\n              {{ item.label }}\n            </a-select-option>\n          </a-select>\n        </a-input>\n      </st-form-item>\n    </st-form>\n  </st-modal>\n</template>\n<script>\nimport { ChangeUserTypeService } from './change-user-type.service'\nimport { ruleOptions } from './change-user-type.config'\nimport { PatternService } from '@/services/pattern.service'\n\nexport default {\n  serviceInject() {\n    return {\n      service: ChangeUserTypeService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      minorsType: this.service.minorsType$,\n      parentType: this.service.parentType$\n    }\n  },\n  bem: {\n    b: 'shop-binding-card'\n  },\n  props: {\n    info: {\n      type: Object\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isShowParent: false,\n      isEditParent: false\n    }\n  },\n  methods: {\n    save(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        let para = {}\n        this.changeUserType(values)\n      })\n    },\n    changeUserType(values) {\n      values.id = this.info.member_id\n      this.service.changeUserType(values).subscribe(state => {\n        this.show = false\n        this.$emit('success')\n      })\n    },\n    minorsChange(val) {\n      this.isShowParent = val\n    },\n    getParentInfo(e) {\n      if (e.target.value.length === 11) {\n        this.getParentInfoByPhone(e.target.value)\n      }\n    },\n    getParentInfoByPhone(phone) {\n      let query = {\n        mobile: phone\n      }\n      return this.service.getParentInfoByPhone(query).subscribe(res => {\n        if (res.exists) {\n          this.isEditParent = true\n          this.form.setFieldsValue({\n            parent_username: res.info.member_name\n          })\n        } else {\n          this.isEditParent = false\n          this.form.setFieldsValue({\n            parent_username: ''\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}