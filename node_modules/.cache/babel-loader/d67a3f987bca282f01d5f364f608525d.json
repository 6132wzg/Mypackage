{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/transaction/store.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/transaction/store.vue","mtime":1597396800005},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tableMixin from '@/mixins/table.mixin';\nimport { columns, ruleOptions } from \"./store.config\";\nimport StoreChooseSku from '@/views/biz-modals/store/choose-sku';\nimport StoreOrderTip from '@/views/biz-modals/store/order-tip';\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering';\nimport SoldDealAddMember from '@/views/biz-modals/sold/deal/add-member';\nimport { ListService } from \"./list.service\";\nimport { PatternService } from '@/services/pattern.service';\nimport { PRODUCT_TYPE } from '@/constants/sold/transaction';\nimport { MessageService } from '@/services/message.service';\nimport defaultImg from '@/assets/img/placeholder_good.png';\nexport default {\n  name: 'shopSoldTransactionCloud',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'shop-sold-transaction-cloud'\n  },\n  modals: {\n    StoreChooseSku: StoreChooseSku,\n    StoreOrderTip: StoreOrderTip,\n    SoldDealGathering: SoldDealGathering,\n    SoldDealAddMember: SoldDealAddMember\n  },\n  serviceInject: function serviceInject() {\n    return {\n      listService: ListService,\n      pattern: PatternService,\n      messageService: MessageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.listService.loading$,\n      memberList: this.listService.memberList$,\n      saleList: this.listService.saleList$,\n      storeProductList: this.listService.storeProductList$,\n      currentPrice: this.listService.currentPrice$,\n      actualAmount: this.listService.actualAmount$,\n      couponList: this.listService.couponList$,\n      productPage: this.listService.productPage$\n    };\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      PRODUCT_TYPE: PRODUCT_TYPE,\n      defaultImg: defaultImg,\n      memberSearchText: '',\n      // 搜索会员value\n      couponText: '未选择优惠券',\n      // 选择的优惠券名\n      couponDropdownVisible: false,\n      selectCoupon: '',\n      // 优惠券选择的信息\n      reducePrice: null,\n      description: '',\n      buyCar: [],\n      productUrl: ''\n    };\n  },\n  watch: {\n    $searchQuery: function $searchQuery() {\n      this.productPage = {};\n      this.getList();\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n    this.$searchQuery.product_type = PRODUCT_TYPE.STORE;\n    this.listService.couponList$.commit(function () {\n      return [];\n    });\n    this.getUseCouponList(0);\n    this.listService.getSaleList().subscribe();\n  },\n  methods: {\n    productImg: function productImg(index) {\n      this.storeProductList[index].isError = true;\n    },\n    // 获取商品列表\n    getList: function getList() {\n      this.listService.getStoreProductList(this.$searchQuery).subscribe();\n    },\n    // 新增购物车\n    onSku: function onSku(record) {\n      var _this = this;\n\n      this.listService.getGoodsDetail(record).subscribe(function (res) {\n        if (res.all_spec) {\n          // 多规格新增至购物车\n          _this.$modalRouter.push({\n            name: 'store-choose-sku',\n            props: {\n              productData: res\n            },\n            on: {\n              success: function success(result) {\n                var state = _this.buyCarJudge(result.sku_id, result.stock_amount);\n\n                if (state === 'error') {\n                  return;\n                }\n\n                result.product_id = record;\n\n                if (!state) {\n                  _this.buyCar.push(result);\n                }\n\n                _this.onSelectProductChange();\n              }\n            }\n          });\n        } else {\n          // 单规格新增至购物车\n          var state = _this.buyCarJudge(res.product_sku[0].sku_id, res.product_sku[0].stock_amount);\n\n          if (state === 'error') {\n            return;\n          }\n\n          if (!state) {\n            _this.buyCar.push({\n              sku_id: res.product_sku[0].sku_id,\n              product_id: record,\n              nums: 1,\n              rule_name: '',\n              product_name: res.product_name,\n              unit_price: res.product_sku[0].selling_price,\n              stock_amount: res.product_sku[0].stock_amount\n            });\n          }\n\n          _this.onSelectProductChange();\n        }\n      });\n    },\n    // 购物车新增商品库存验证\n    buyCarJudge: function buyCarJudge(id, number) {\n      if (!number) {\n        this.messageService.warn({\n          content: '商品库存不足'\n        });\n        return 'error';\n      }\n\n      for (var i = 0; i < this.buyCar.length; i++) {\n        var val = this.buyCar[i];\n\n        if (val.sku_id === id) {\n          if (val.nums >= number) {\n            this.messageService.warn({\n              content: '商品库存不足'\n            });\n            return 'error';\n          } else {\n            val.nums = val.nums + 1;\n            return 'noAdd';\n          }\n        }\n      }\n\n      if (this.buyCar.length >= 20) {\n        this.messageService.warn({\n          content: '购物车已满'\n        });\n        return 'error';\n      }\n    },\n    // 删除购物车商品\n    onDelBuyCar: function onDelBuyCar(i) {\n      this.buyCar.splice(i, 1);\n\n      if (!this.buyCar.length) {\n        this.resetCoupon();\n      }\n\n      this.onSelectProductChange();\n    },\n    // 生成订单号\n    createOrderNum: function createOrderNum(type) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.form.validate().then(function (values) {\n          var params = {\n            member_id: values.memberId,\n            coupon_id: _this2.selectCoupon.id,\n            sale_id: values.saleName,\n            reduce_price: _this2.reducePrice || 0,\n            description: _this2.description,\n            sale_range: 1,\n            shipping_mode: 1,\n            order_amount: _this2.currentPrice,\n            sku_info: _this2.buyCar\n          };\n\n          if (type === 'order') {\n            _this2.listService.createOrder(params).subscribe(function (result) {\n              _this2.clearData();\n\n              resolve(result.info.order_id.order_id);\n            });\n          } else {\n            _this2.listService.createOrderPay(params).subscribe(function (result) {\n              _this2.clearData();\n\n              resolve(result.info.order_id.order_id);\n            });\n          }\n        });\n      });\n    },\n    clearData: function clearData() {\n      this.buyCar = [];\n      this.selectCoupon = '';\n      this.reducePrice = '';\n      this.description = '';\n      this.listService.couponList$.commit(function () {\n        return [];\n      });\n      this.listService.currentPrice$.commit(function () {\n        return 0;\n      });\n      this.couponText = '未选择优惠券';\n      this.form.setFieldsValue({\n        memberId: '',\n        saleName: ''\n      });\n    },\n    // 创建订单\n    onCreateOrder: function () {\n      var _onCreateOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var orderId;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.createOrderNum('order');\n\n              case 2:\n                orderId = _context.sent;\n                this.payCallBack({\n                  type: 'create',\n                  message: '订单创建成功'\n                }, orderId);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onCreateOrder() {\n        return _onCreateOrder.apply(this, arguments);\n      }\n\n      return onCreateOrder;\n    }(),\n    // 立即支付\n    onPayOrder: function () {\n      var _onPayOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(orderId) {\n        var _this3 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (orderId) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.createOrderNum('orderPay');\n\n              case 3:\n                orderId = _context2.sent;\n\n              case 4:\n                this.$modalRouter.push({\n                  name: 'sold-deal-gathering',\n                  props: {\n                    order_id: orderId,\n                    type: 'cloud_store'\n                  },\n                  on: {\n                    success: function success(res) {\n                      _this3.payCallBack({\n                        type: 'pay',\n                        message: '收款成功'\n                      }, orderId);\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onPayOrder(_x) {\n        return _onPayOrder.apply(this, arguments);\n      }\n\n      return onPayOrder;\n    }(),\n    // 收款完提示\n    payCallBack: function payCallBack(props, orderId) {\n      var _this4 = this;\n\n      this.$modalRouter.push({\n        name: 'store-order-tip',\n        props: props,\n        on: {\n          success: function success(res) {\n            switch (res.type) {\n              case 'PrintOrder':\n                _this4.printOrder(orderId);\n\n                break;\n\n              case 'ViewOrder':\n                _this4.createdOrderViewOrder(orderId);\n\n                break;\n\n              case 'Pay':\n                _this4.onPayOrder(orderId);\n\n                break;\n            }\n          }\n        }\n      });\n    },\n    // 小票打印\n    printOrder: function printOrder(order_id) {\n      window.open('/ticket/gathering-print?id=' + order_id, '_blank', 'width=800,height=600');\n    },\n    // 查看订单\n    createdOrderViewOrder: function createdOrderViewOrder(order_id) {\n      this.$router.push({\n        name: 'shop-finance-order-info-collection-details',\n        query: {\n          id: order_id\n        }\n      });\n    },\n    // 新增会员\n    addMember: function addMember() {\n      var _this5 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-deal-add-member',\n        on: {\n          success: function success(res) {\n            _this5.onMemberSearch(res.name, res.id);\n          }\n        }\n      });\n    },\n    // 清空优惠券\n    resetCoupon: function resetCoupon() {\n      this.selectCoupon = '';\n      this.listService.couponList$.commit(function () {\n        return [];\n      });\n      this.couponText = '未选择优惠券';\n    },\n    // 购买商品的变化\n    onSelectProductChange: function onSelectProductChange() {\n      this.getPrice();\n      this.getUseCouponList();\n    },\n    // 会员搜索\n    onMemberSearch: function onMemberSearch(data, memberId) {\n      var _this6 = this;\n\n      this.memberSearchText = data;\n\n      if (!data) {\n        this.listService.memberList$.commit(function () {\n          return [];\n        });\n        this.form.resetFields(['memberId']);\n      } else {\n        this.listService.getMember(data, 1).subscribe(function (res) {\n          if (!res.list.length) {\n            _this6.form.resetFields(['memberId']);\n          }\n\n          if (memberId) {\n            _this6.form.setFieldsValue({\n              memberId: memberId\n            });\n          }\n        });\n      }\n    },\n    onMemberBlur: function onMemberBlur() {\n      var memberId = this.form.getFieldValue('memberId');\n\n      if (!memberId) {\n        this.resetCoupon();\n        this.getPrice();\n      }\n    },\n    // 会员Id变化 获取价格和优惠券列表\n    onMemberChange: function onMemberChange(data) {\n      console.log('onMemberChange', data);\n      this.resetCoupon();\n      this.getPrice(data);\n      if (data) this.getUseCouponList(data);\n    },\n    // 优惠券处理\n    onSelectCouponChange: function onSelectCouponChange(event) {\n      var price = this.couponList.filter(function (o) {\n        return o.id === event.target.value.id;\n      })[0].price;\n      this.couponText = \"\".concat(price, \"\\u5143\");\n      this.getPrice(0);\n    },\n    // 优惠券处理\n    onSelectCoupon: function onSelectCoupon() {\n      this.couponDropdownVisible = false;\n    },\n    // 价格计算\n    getPrice: function getPrice() {\n      var selectMemberId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var productInfo = [];\n      var memberId = selectMemberId || this.form.getFieldValue('memberId');\n      this.buyCar.forEach(function (val) {\n        productInfo.push({\n          sku_id: val.sku_id,\n          nums: val.nums || 0\n        });\n      });\n      this.listService.getStorePrice({\n        product_type: 8,\n        reduce_amount: this.reducePrice || undefined,\n        coupon_id: this.selectCoupon.id || undefined,\n        member_id: memberId || undefined,\n        product_info: productInfo.length ? productInfo : undefined\n      }).subscribe();\n    },\n    // 获取可用优惠券\n    getUseCouponList: function getUseCouponList(cardId) {\n      var productInfo = [];\n      var memberId = cardId ? cardId : this.form.getFieldValue('memberId');\n      this.buyCar.forEach(function (val) {\n        productInfo.push({\n          product_id: val.product_id,\n          sku_id: val.sku_id,\n          nums: val.nums || 0\n        });\n      });\n      this.listService.getUseCoupon({\n        product_info: JSON.stringify(productInfo),\n        member_id: memberId\n      }).subscribe();\n    },\n    // 分页切换\n    onChange: function onChange(pagination) {\n      this.$searchQuery.current_page = pagination.current;\n      this.$searchQuery.size = pagination.pageSize;\n      this.getList();\n    }\n  },\n  computed: {\n    columns: columns\n  }\n};",null]}