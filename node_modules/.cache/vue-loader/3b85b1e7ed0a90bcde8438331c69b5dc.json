{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/transaction/store.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/transaction/store.vue","mtime":1597396800005},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, ruleOptions } from './store.config'\nimport StoreChooseSku from '@/views/biz-modals/store/choose-sku'\nimport StoreOrderTip from '@/views/biz-modals/store/order-tip'\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldDealAddMember from '@/views/biz-modals/sold/deal/add-member'\nimport { ListService } from './list.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { PRODUCT_TYPE } from '@/constants/sold/transaction'\nimport { MessageService } from '@/services/message.service'\nimport defaultImg from '@/assets/img/placeholder_good.png'\nexport default {\n  name: 'shopSoldTransactionCloud',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'shop-sold-transaction-cloud'\n  },\n  modals: {\n    StoreChooseSku,\n    StoreOrderTip,\n    SoldDealGathering,\n    SoldDealAddMember\n  },\n  serviceInject() {\n    return {\n      listService: ListService,\n      pattern: PatternService,\n      messageService: MessageService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.listService.loading$,\n      memberList: this.listService.memberList$,\n      saleList: this.listService.saleList$,\n      storeProductList: this.listService.storeProductList$,\n      currentPrice: this.listService.currentPrice$,\n      actualAmount: this.listService.actualAmount$,\n      couponList: this.listService.couponList$,\n      productPage: this.listService.productPage$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      PRODUCT_TYPE,\n      defaultImg,\n      memberSearchText: '', // 搜索会员value\n      couponText: '未选择优惠券', // 选择的优惠券名\n      couponDropdownVisible: false,\n      selectCoupon: '', // 优惠券选择的信息\n      reducePrice: null,\n      description: '',\n      buyCar: [],\n      productUrl: ''\n    }\n  },\n  watch: {\n    $searchQuery() {\n      this.productPage = {}\n      this.getList()\n    }\n  },\n  mounted() {\n    this.getList()\n    this.$searchQuery.product_type = PRODUCT_TYPE.STORE\n    this.listService.couponList$.commit(() => [])\n    this.getUseCouponList(0)\n    this.listService.getSaleList().subscribe()\n  },\n  methods: {\n    productImg(index) {\n      this.storeProductList[index].isError = true\n    },\n    // 获取商品列表\n    getList() {\n      this.listService.getStoreProductList(this.$searchQuery).subscribe()\n    },\n    // 新增购物车\n    onSku(record) {\n      this.listService.getGoodsDetail(record).subscribe(res => {\n        if (res.all_spec) {\n          // 多规格新增至购物车\n          this.$modalRouter.push({\n            name: 'store-choose-sku',\n            props: {\n              productData: res\n            },\n            on: {\n              success: result => {\n                let state = this.buyCarJudge(result.sku_id, result.stock_amount)\n                if (state === 'error') {\n                  return\n                }\n                result.product_id = record\n                if (!state) {\n                  this.buyCar.push(result)\n                }\n                this.onSelectProductChange()\n              }\n            }\n          })\n        } else {\n          // 单规格新增至购物车\n          let state = this.buyCarJudge(\n            res.product_sku[0].sku_id,\n            res.product_sku[0].stock_amount\n          )\n          if (state === 'error') {\n            return\n          }\n          if (!state) {\n            this.buyCar.push({\n              sku_id: res.product_sku[0].sku_id,\n              product_id: record,\n              nums: 1,\n              rule_name: '',\n              product_name: res.product_name,\n              unit_price: res.product_sku[0].selling_price,\n              stock_amount: res.product_sku[0].stock_amount\n            })\n          }\n          this.onSelectProductChange()\n        }\n      })\n    },\n    // 购物车新增商品库存验证\n    buyCarJudge(id, number) {\n      if (!number) {\n        this.messageService.warn({ content: '商品库存不足' })\n        return 'error'\n      }\n      for (let i = 0; i < this.buyCar.length; i++) {\n        let val = this.buyCar[i]\n        if (val.sku_id === id) {\n          if (val.nums >= number) {\n            this.messageService.warn({ content: '商品库存不足' })\n            return 'error'\n          } else {\n            val.nums = val.nums + 1\n            return 'noAdd'\n          }\n        }\n      }\n      if (this.buyCar.length >= 20) {\n        this.messageService.warn({ content: '购物车已满' })\n        return 'error'\n      }\n    },\n    // 删除购物车商品\n    onDelBuyCar(i) {\n      this.buyCar.splice(i, 1)\n      if (!this.buyCar.length) {\n        this.resetCoupon()\n      }\n      this.onSelectProductChange()\n    },\n    // 生成订单号\n    createOrderNum(type) {\n      return new Promise((resolve, reject) => {\n        this.form.validate().then(values => {\n          let params = {\n            member_id: values.memberId,\n            coupon_id: this.selectCoupon.id,\n            sale_id: values.saleName,\n            reduce_price: this.reducePrice || 0,\n            description: this.description,\n            sale_range: 1,\n            shipping_mode: 1,\n            order_amount: this.currentPrice,\n            sku_info: this.buyCar\n          }\n          if (type === 'order') {\n            this.listService.createOrder(params).subscribe(result => {\n              this.clearData()\n              resolve(result.info.order_id.order_id)\n            })\n          } else {\n            this.listService.createOrderPay(params).subscribe(result => {\n              this.clearData()\n              resolve(result.info.order_id.order_id)\n            })\n          }\n        })\n      })\n    },\n    clearData() {\n      this.buyCar = []\n      this.selectCoupon = ''\n      this.reducePrice = ''\n      this.description = ''\n      this.listService.couponList$.commit(() => [])\n      this.listService.currentPrice$.commit(() => 0)\n      this.couponText = '未选择优惠券'\n      this.form.setFieldsValue({\n        memberId: '',\n        saleName: ''\n      })\n    },\n    // 创建订单\n    async onCreateOrder() {\n      let orderId = await this.createOrderNum('order')\n      this.payCallBack(\n        {\n          type: 'create',\n          message: '订单创建成功'\n        },\n        orderId\n      )\n    },\n    // 立即支付\n    async onPayOrder(orderId) {\n      if (!orderId) {\n        orderId = await this.createOrderNum('orderPay')\n      }\n      this.$modalRouter.push({\n        name: 'sold-deal-gathering',\n        props: {\n          order_id: orderId,\n          type: 'cloud_store'\n        },\n        on: {\n          success: res => {\n            this.payCallBack(\n              {\n                type: 'pay',\n                message: '收款成功'\n              },\n              orderId\n            )\n          }\n        }\n      })\n    },\n    // 收款完提示\n    payCallBack(props, orderId) {\n      this.$modalRouter.push({\n        name: 'store-order-tip',\n        props,\n        on: {\n          success: res => {\n            switch (res.type) {\n              case 'PrintOrder':\n                this.printOrder(orderId)\n                break\n              case 'ViewOrder':\n                this.createdOrderViewOrder(orderId)\n                break\n              case 'Pay':\n                this.onPayOrder(orderId)\n                break\n            }\n          }\n        }\n      })\n    },\n    // 小票打印\n    printOrder(order_id) {\n      window.open(\n        '/ticket/gathering-print?id=' + order_id,\n        '_blank',\n        'width=800,height=600'\n      )\n    },\n    // 查看订单\n    createdOrderViewOrder(order_id) {\n      this.$router.push({\n        name: 'shop-finance-order-info-collection-details',\n        query: {\n          id: order_id\n        }\n      })\n    },\n    // 新增会员\n    addMember() {\n      this.$modalRouter.push({\n        name: 'sold-deal-add-member',\n        on: {\n          success: res => {\n            this.onMemberSearch(res.name, res.id)\n          }\n        }\n      })\n    },\n    // 清空优惠券\n    resetCoupon() {\n      this.selectCoupon = ''\n      this.listService.couponList$.commit(() => [])\n      this.couponText = '未选择优惠券'\n    },\n    // 购买商品的变化\n    onSelectProductChange() {\n      this.getPrice()\n      this.getUseCouponList()\n    },\n    // 会员搜索\n    onMemberSearch(data, memberId) {\n      this.memberSearchText = data\n      if (!data) {\n        this.listService.memberList$.commit(() => [])\n        this.form.resetFields(['memberId'])\n      } else {\n        this.listService.getMember(data, 1).subscribe(res => {\n          if (!res.list.length) {\n            this.form.resetFields(['memberId'])\n          }\n          if (memberId) {\n            this.form.setFieldsValue({\n              memberId\n            })\n          }\n        })\n      }\n    },\n    onMemberBlur() {\n      let memberId = this.form.getFieldValue('memberId')\n      if (!memberId) {\n        this.resetCoupon()\n        this.getPrice()\n      }\n    },\n    // 会员Id变化 获取价格和优惠券列表\n    onMemberChange(data) {\n      console.log('onMemberChange', data)\n      this.resetCoupon()\n      this.getPrice(data)\n      if (data) this.getUseCouponList(data)\n    },\n    // 优惠券处理\n    onSelectCouponChange(event) {\n      let price = this.couponList.filter(o => o.id === event.target.value.id)[0]\n        .price\n      this.couponText = `${price}元`\n      this.getPrice(0)\n    },\n    // 优惠券处理\n    onSelectCoupon() {\n      this.couponDropdownVisible = false\n    },\n    // 价格计算\n    getPrice(selectMemberId = '') {\n      let productInfo = []\n      const memberId = selectMemberId || this.form.getFieldValue('memberId')\n      this.buyCar.forEach(val => {\n        productInfo.push({\n          sku_id: val.sku_id,\n          nums: val.nums || 0\n        })\n      })\n      this.listService\n        .getStorePrice({\n          product_type: 8,\n          reduce_amount: this.reducePrice || undefined,\n          coupon_id: this.selectCoupon.id || undefined,\n          member_id: memberId || undefined,\n          product_info: productInfo.length ? productInfo : undefined\n        })\n        .subscribe()\n    },\n    // 获取可用优惠券\n    getUseCouponList(cardId) {\n      let productInfo = []\n      const memberId = cardId ? cardId : this.form.getFieldValue('memberId')\n      this.buyCar.forEach(val => {\n        productInfo.push({\n          product_id: val.product_id,\n          sku_id: val.sku_id,\n          nums: val.nums || 0\n        })\n      })\n      this.listService\n        .getUseCoupon({\n          product_info: JSON.stringify(productInfo),\n          member_id: memberId\n        })\n        .subscribe()\n    },\n    // 分页切换\n    onChange(pagination) {\n      this.$searchQuery.current_page = pagination.current\n      this.$searchQuery.size = pagination.pageSize\n      this.getList()\n    }\n  },\n  computed: {\n    columns\n  }\n}\n",null]}