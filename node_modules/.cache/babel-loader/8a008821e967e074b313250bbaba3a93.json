{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/edit-shortcuts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/edit-shortcuts.vue","mtime":1600926555928},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport { EditShortcutService } from \"./edit-shortcuts.service\";\nimport { cloneDeep } from 'lodash-es';\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      editShortcutService: EditShortcutService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list: this.editShortcutService.list$,\n      auth: this.editShortcutService.auth$\n    };\n  },\n  components: {\n    draggable: draggable\n  },\n  name: '',\n  props: {},\n  data: function data() {\n    return {\n      show: false,\n      cloneList: [],\n      showList: [],\n      noshowList: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.editShortcutService.getIcons().subscribe(function (res) {\n      var list = cloneDeep(_this.list);\n      _this.cloneList = list.map(function (i) {\n        i.auth = _this.auth[i.id];\n        return i;\n      });\n      _this.showList = _this.cloneList.filter(function (i) {\n        return i.is_show;\n      });\n      _this.noshowList = _this.cloneList.filter(function (i) {\n        return !i.is_show;\n      });\n    });\n  },\n  methods: {\n    save: function save(e) {\n      var _this2 = this;\n\n      var self = this;\n      e.preventDefault();\n      console.log('showList', this.showList);\n      console.log('noshowList', this.noshowList);\n      this.editShortcutService.setIcons({\n        icons: [].concat(_toConsumableArray(this.showList), _toConsumableArray(this.noshowList))\n      }).subscribe(function (res) {\n        _this2.show = false;\n\n        _this2.$emit('done');\n      });\n    },\n    checkMove: function checkMove(evt) {\n      var draggedContext = evt.draggedContext,\n          dragged = evt.dragged,\n          from = evt.from,\n          to = evt.to;\n      var draggedElement = draggedContext.element;\n      var fromClassList = from.classList;\n      var toClassList = to.classList;\n\n      if (fromClassList.contains('show') && toClassList.contains('hidden')) {\n        draggedElement.is_show = 0;\n      } else if (fromClassList.contains('hidden') && toClassList.contains('show')) {\n        draggedElement.is_show = 1;\n      }\n    },\n    handleRemoveShortcut: function handleRemoveShortcut(item) {\n      item.is_show = 0;\n      this.showList = this.cloneList.filter(function (i) {\n        return i.is_show;\n      });\n      this.noshowList = this.cloneList.filter(function (i) {\n        return !i.is_show;\n      });\n    },\n    handleAddShortcut: function handleAddShortcut(item) {\n      item.is_show = 1;\n      this.showList = this.cloneList.filter(function (i) {\n        return i.is_show;\n      });\n      this.noshowList = this.cloneList.filter(function (i) {\n        return !i.is_show;\n      });\n    },\n    dragStart: function dragStart(ev) {\n      ev.item.classList.add('dragged');\n    },\n    dragEnd: function dragEnd(ev) {\n      ev.item.classList.remove('dragged');\n    }\n  }\n};",{"version":3,"sources":["edit-shortcuts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <st-modal\n    title=\"新增常用功能\"\n    @ok=\"save\"\n    v-model=\"show\"\n    width=\"464px\"\n    wrapClassName=\"edit-shortcuts\"\n  >\n    <div class=\"content\">\n      <div class=\"section\">\n        <div class=\"label\">不展示功能：</div>\n        <draggable\n          v-model=\"noshowList\"\n          :animation=\"200\"\n          group=\"shortcuts\"\n          class=\"shortcuts hidden\"\n          :move=\"checkMove\"\n          @start=\"dragStart\"\n          @end=\"dragEnd\"\n        >\n          <div\n            v-for=\"item in noshowList\"\n            :key=\"item.id\"\n            class=\"shortcut\"\n            @click=\"handleAddShortcut(item)\"\n          >\n            <span class=\"name\">{{ item.name }}</span>\n            <a-icon class=\"icon\" type=\"plus\" />\n          </div>\n        </draggable>\n      </div>\n      <div class=\"section\">\n        <div class=\"label\">展示功能：</div>\n        <draggable\n          v-model=\"showList\"\n          :animation=\"200\"\n          group=\"shortcuts\"\n          class=\"shortcuts show\"\n          :move=\"checkMove\"\n          @start=\"dragStart\"\n          @end=\"dragEnd\"\n        >\n          <div\n            v-for=\"item in showList\"\n            :key=\"item.id\"\n            class=\"shortcut\"\n            :class=\"{ hidden: !item.auth }\"\n            @click=\"handleRemoveShortcut(item)\"\n          >\n            <span class=\"name\">{{ item.name }}</span>\n            <a-icon class=\"icon\" type=\"close\" />\n          </div>\n        </draggable>\n      </div>\n    </div>\n  </st-modal>\n</template>\n<script>\nimport draggable from 'vuedraggable'\nimport { EditShortcutService } from './edit-shortcuts.service'\nimport { cloneDeep } from 'lodash-es'\n\nexport default {\n  serviceInject() {\n    return {\n      editShortcutService: EditShortcutService\n    }\n  },\n  rxState() {\n    return {\n      list: this.editShortcutService.list$,\n      auth: this.editShortcutService.auth$\n    }\n  },\n  components: { draggable },\n  name: '',\n  props: {},\n  data() {\n    return {\n      show: false,\n      cloneList: [],\n      showList: [],\n      noshowList: []\n    }\n  },\n  created() {\n    this.editShortcutService.getIcons().subscribe(res => {\n      let list = cloneDeep(this.list)\n      this.cloneList = list.map(i => {\n        i.auth = this.auth[i.id]\n        return i\n      })\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    })\n  },\n  methods: {\n    save(e) {\n      let self = this\n      e.preventDefault()\n      console.log('showList', this.showList)\n      console.log('noshowList', this.noshowList)\n      this.editShortcutService\n        .setIcons({\n          icons: [...this.showList, ...this.noshowList]\n        })\n        .subscribe(res => {\n          this.show = false\n          this.$emit('done')\n        })\n    },\n    checkMove(evt) {\n      const { draggedContext, dragged, from, to } = evt\n      const draggedElement = draggedContext.element\n      const fromClassList = from.classList\n      const toClassList = to.classList\n      if (fromClassList.contains('show') && toClassList.contains('hidden')) {\n        draggedElement.is_show = 0\n      } else if (\n        fromClassList.contains('hidden') &&\n        toClassList.contains('show')\n      ) {\n        draggedElement.is_show = 1\n      }\n    },\n    handleRemoveShortcut(item) {\n      item.is_show = 0\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    },\n    handleAddShortcut(item) {\n      item.is_show = 1\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    },\n    dragStart(ev) {\n      ev.item.classList.add('dragged')\n    },\n    dragEnd(ev) {\n      ev.item.classList.remove('dragged')\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/shop/reception"}]}