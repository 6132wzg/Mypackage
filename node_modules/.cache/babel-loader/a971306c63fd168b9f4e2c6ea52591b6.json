{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/table/table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/table/table.vue","mtime":1600926556064},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { merge, omit, map, forEach } from 'lodash-es';\n\nfunction addOddEvenKey(dataSource) {\n  for (var i in dataSource) {\n    dataSource[i].$_oddEvenKey = i % 2 ? \"even-\".concat(i) : \"odd-\".concat(i);\n\n    if (dataSource[i].children) {\n      for (var j in dataSource[i].children) {\n        dataSource[i].children[j].$_oddEvenKey = \"\".concat(dataSource[i].$_oddEvenKey, \"-\").concat(j);\n      }\n\n      if (dataSource[i].children.length) {\n        // 实际使用$_children来显示展开图标，因为没有元素时不需要展开\n        dataSource[i].$_children = dataSource[i].children;\n      }\n    }\n  }\n\n  return dataSource;\n}\n\nexport default {\n  name: 'StTable',\n  props: {\n    customRowSub: {\n      type: Number,\n      default: 0\n    },\n    page: {\n      type: null\n    },\n    alertSelection: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    pagination: {\n      type: null,\n      default: function _default() {\n        return {\n          size: 'small'\n        };\n      }\n    },\n    query: {\n      type: Object,\n      default: function _default() {}\n    },\n    dataSource: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    },\n    scroll: {\n      type: Object,\n      default: function _default() {\n        return null;\n      }\n    },\n\n    /**\n     * client | server 分页模式\n     */\n    pageMode: {\n      type: String,\n      default: 'server'\n    },\n    simplePage: {\n      type: Boolean,\n      default: false\n    },\n    stripe: {\n      type: Boolean,\n      default: true\n    },\n    // 无数据样式配置， 可以传入组件模版\n    emptyText: {\n      type: [String, Object],\n      default: ''\n    },\n\n    /**\n     * 需要合并行的字段集合，可以是单独的一个key，也可以是一个数组，支持传入字段格式化函数\n     * 参数示例： 'key' 或 ['key', 'key1', 'key2'] 或 [{ key: 'key', formatter: (value, record, index) => { return +value } }]\n     * 注意 启用了该字段，合并的字段就不能使用slot,更不支持事件绑定 TODO: 待扩展可自定义slot\n     */\n    rowSpanKey: {\n      type: [String, Array],\n      default: ''\n    }\n  },\n  watch: {\n    dataSource: function dataSource() {\n      if (this.pageMode === 'client') {\n        this.current = 1;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      pageSize: 20,\n      total: 0,\n      current: 1,\n      count: 1\n    };\n  },\n  computed: {\n    // 合并行字段处理，目前仅支持合并行数据formatter，不支持自定义模版和slot字段\n    columns: function columns() {\n      var _this = this;\n\n      return this.$attrs.columns.map(function (item) {\n        var rowSpanItem = _this.rowSpanMap[item.dataIndex];\n\n        if (rowSpanItem) {\n          item.customRender = function (value, row, index) {\n            var obj = {\n              children: rowSpanItem._formatter ? rowSpanItem._formatter(value, row, index) : value,\n              attrs: {\n                rowSpan: 1\n              }\n            };\n\n            if (rowSpanItem[value] && rowSpanItem[value].length > 1) {\n              if (rowSpanItem[value].firstKey === index) {\n                obj.attrs.rowSpan = rowSpanItem[value].length;\n              } else {\n                obj.attrs.rowSpan = 0;\n              }\n            }\n\n            return obj;\n          };\n        }\n\n        return item;\n      });\n    },\n    // 合并行字段 合并信息收集\n    rowSpanMap: function rowSpanMap() {\n      var _this2 = this;\n\n      if (!this.rowSpanKey) return false;\n      /**\n       * rowSpanMap格式 dataInex 为需要合并的字段key值，key 为该字段其中一个value值， length 为该值的重复次数， firstKey为该值第一次出现的下标\n       * {'dataIndex': { formatter, 'key': { length: 1, firstKey: index }}}\n       * 注意：数据源一定是排好的顺序 即相同数据类型一定要连在一起\n       */\n\n      var rowSpanMap = {};\n\n      var setRowSpanMap = function setRowSpanMap(itemKey, _ref) {\n        var key = _ref.key,\n            index = _ref.index,\n            formatter = _ref.formatter;\n        var rowSpanItem = rowSpanMap[itemKey] || {};\n\n        if (rowSpanItem[key]) {\n          rowSpanItem[key].length += 1;\n        } else {\n          rowSpanItem._formatter = formatter;\n          rowSpanItem[key] = {\n            length: 1,\n            firstKey: index\n          };\n        }\n\n        rowSpanMap[itemKey] = rowSpanItem;\n      }; // 遍历数据源，收集字段合并信息\n\n\n      this.dataSource.map(function (item, index) {\n        var key = '',\n            formatter = null;\n\n        if (typeof _this2.rowSpanKey === 'string') {\n          setRowSpanMap(_this2.rowSpanKey, {\n            key: item[_this2.rowSpanKey],\n            index: index\n          });\n        } else {\n          _this2.rowSpanKey.map(function (itemKey) {\n            if (typeof itemKey === 'string') {\n              setRowSpanMap(itemKey, {\n                key: item[itemKey],\n                index: index\n              });\n            } else {\n              setRowSpanMap(itemKey.key, {\n                key: item[itemKey.key],\n                formatter: itemKey.formatter,\n                index: index\n              });\n            }\n          });\n        }\n      });\n      return rowSpanMap;\n    },\n    locale: function locale() {\n      var h = this.$createElement;\n      return {\n        emptyText: this.emptyText || h(\"st-no-data\")\n      };\n    },\n    tableDataSource: function tableDataSource() {\n      addOddEvenKey(this.dataSource);\n      return this.dataSource;\n    },\n    defaultPageSize: function defaultPageSize() {\n      return this.simplePage ? 10 : 20;\n    },\n    tablePagination: {\n      get: function get() {\n        if (this.pagination === false || this.page === false) {\n          return false;\n        }\n\n        var sub = this.customRowSub;\n        var total = this.total > sub ? this.total - sub : 0;\n        var pageSize = this.pageMode === 'client' ? this.pageSize : this.defaultPageSize;\n\n        var _p = merge({\n          current: this.current,\n          pageSize: pageSize,\n          total: total,\n          showTotal: function showTotal(total, range) {\n            return \"\\u5171\".concat(total - sub, \"\\u6761\");\n          },\n          showSizeChanger: true\n        }, // 去除无用的pagination属性\n        omit(this.pagination, ['total_counts', 'total_pages', 'current_page', 'size']));\n\n        if (this.page) {\n          if (this.page.size) {\n            _p.pageSize = +this.page.size || this.defaultPageSize;\n          }\n\n          if (this.page.current_page) {\n            _p.current = +this.page.current_page || 1;\n          }\n\n          if (this.page.total_counts) {\n            _p.total = +this.page.total_counts || 0;\n          }\n\n          if (this.simplePage) {\n            _p.simple = true;\n          }\n        }\n\n        return _p;\n      }\n    }\n  },\n  methods: {\n    onCLick: function onCLick() {\n      this.alertSelection.onReset();\n    },\n    expand: function expand() {\n      for (var _len = arguments.length, ret = new Array(_len), _key = 0; _key < _len; _key++) {\n        ret[_key] = arguments[_key];\n      }\n\n      this.$emit.apply(this, ['expand'].concat(ret));\n    },\n    onChange: function onChange(pagination) {\n      if (this.pageMode === 'client') {\n        this.current = pagination.current;\n        this.total = pagination.total;\n        this.pageSize = pagination.pageSize;\n      }\n\n      var query = this.query;\n\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      this.$emit.apply(this, ['change', _objectSpread({}, pagination, {\n        query: query\n      })].concat(rest));\n    },\n    renderChildren: function renderChildren() {\n      var h = this.$createElement;\n      return map(this.$slots, function (vnode, slot) {\n        return h(\"template\", {\n          \"slot\": slot\n        }, [vnode]);\n      });\n    },\n    // 在有children的情况下显示自定义图标\n    // CustomExpandIcon(props) {\n    //   let text = ''\n    //   let className = 'st-expand-row-icon'\n    //   if (props.record.children && props.record.children.length) {\n    //     const type = props.expanded ? 'table-up' : 'table-down'\n    //     text = <st-icon type={type} />\n    //     className = 'st-expand-row-icon mg-r8'\n    //   }\n    //   return (\n    //     <span\n    //       class={className}\n    //       onClick={e => props.onExpand(props.record, e)}\n    //       style={{ cursor: 'pointer' }}\n    //     >\n    //       {text}\n    //     </span>\n    //   )\n    // },\n    rowClassName: function rowClassName(record) {\n      if (this.stripe) {\n        return record.$_oddEvenKey;\n      } else {\n        return '';\n      }\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    var props = _objectSpread({\n      pagination: this.tablePagination,\n      locale: this.locale,\n      dataSource: this.tableDataSource,\n      // scroll: this.tableDataSource.length >= 1 ? this.scroll : {},\n      rowClassName: this.rowClassName,\n      childrenColumnName: '$_children',\n      indentSize: 16\n    }, this.$attrs);\n\n    if (this.tableDataSource.length >= 1 && this.scroll) {\n      props.scroll = this.scroll;\n    } // 如果存在合并行则使用处理后的columns\n\n\n    if (this.rowSpanKey) {\n      props.columns = this.columns;\n    } // 判断是否是父子表格 先去掉 自定义图标和自定义expandedRowRender冲突\n    // props.expandIcon = this.CustomExpandIcon\n\n\n    var ce = this.alertSelection.onReset ? h('div', {\n      class: 'st-table-wapper'\n    }, [h('a-alert', {\n      class: 'st-table-alert mg-b8',\n      props: {\n        type: 'info',\n        showIcon: true\n      },\n      scopedSlots: {\n        message: function message(props) {\n          return h('div', {\n            class: 'st-table-alert__content'\n          }, ['已选 ', h('span', {\n            class: 'st-table-alert__count'\n          }, _this3.$attrs.rowSelection.selectedRowKeys.length || 0), ' 条数据', h('a', {\n            class: 'mg-l24 st-table-alert__reload',\n            on: {\n              click: _this3.onCLick\n            }\n          }, '取消')]);\n        }\n      }\n    }), h('a-table', {\n      class: ['st-table', this.stripe ? '' : 'st-table-normal', !this.tableDataSource.length && 'st-table-nodata'],\n      props: props,\n      on: {\n        change: this.onChange,\n        expand: this.expand\n      },\n      scopedSlots: this.$scopedSlots,\n      slot: this.$slots\n    }, this.renderChildren())]) : h('a-table', {\n      class: ['st-table', this.stripe ? '' : 'st-table-normal', !this.tableDataSource.length && 'st-table-nodata'],\n      props: props,\n      on: {\n        change: this.onChange,\n        expand: this.expand\n      },\n      scopedSlots: this.$scopedSlots,\n      slot: this.$slots\n    }, this.renderChildren());\n    return ce;\n  }\n};",{"version":3,"sources":["table.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nimport { merge, omit, map, forEach } from 'lodash-es'\nfunction addOddEvenKey(dataSource) {\n  for (let i in dataSource) {\n    dataSource[i].$_oddEvenKey = i % 2 ? `even-${i}` : `odd-${i}`\n    if (dataSource[i].children) {\n      for (let j in dataSource[i].children) {\n        dataSource[i].children[\n          j\n        ].$_oddEvenKey = `${dataSource[i].$_oddEvenKey}-${j}`\n      }\n      if (dataSource[i].children.length) {\n        // 实际使用$_children来显示展开图标，因为没有元素时不需要展开\n        dataSource[i].$_children = dataSource[i].children\n      }\n    }\n  }\n  return dataSource\n}\nexport default {\n  name: 'StTable',\n  props: {\n    customRowSub: {\n      type: Number,\n      default: 0\n    },\n    page: {\n      type: null\n    },\n    alertSelection: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    pagination: {\n      type: null,\n      default: () => {\n        return {\n          size: 'small'\n        }\n      }\n    },\n    query: {\n      type: Object,\n      default: () => {}\n    },\n    dataSource: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    scroll: {\n      type: Object,\n      default: () => null\n    },\n    /**\n     * client | server 分页模式\n     */\n    pageMode: {\n      type: String,\n      default: 'server'\n    },\n    simplePage: {\n      type: Boolean,\n      default: false\n    },\n    stripe: {\n      type: Boolean,\n      default: true\n    },\n    // 无数据样式配置， 可以传入组件模版\n    emptyText: {\n      type: [String, Object],\n      default: ''\n    },\n    /**\n     * 需要合并行的字段集合，可以是单独的一个key，也可以是一个数组，支持传入字段格式化函数\n     * 参数示例： 'key' 或 ['key', 'key1', 'key2'] 或 [{ key: 'key', formatter: (value, record, index) => { return +value } }]\n     * 注意 启用了该字段，合并的字段就不能使用slot,更不支持事件绑定 TODO: 待扩展可自定义slot\n     */\n    rowSpanKey: {\n      type: [String, Array],\n      default: ''\n    }\n  },\n  watch: {\n    dataSource() {\n      if (this.pageMode === 'client') {\n        this.current = 1\n      }\n    }\n  },\n  data() {\n    return {\n      pageSize: 20,\n      total: 0,\n      current: 1,\n      count: 1\n    }\n  },\n  computed: {\n    // 合并行字段处理，目前仅支持合并行数据formatter，不支持自定义模版和slot字段\n    columns() {\n      return this.$attrs.columns.map(item => {\n        const rowSpanItem = this.rowSpanMap[item.dataIndex]\n        if (rowSpanItem) {\n          item.customRender = (value, row, index) => {\n            const obj = {\n              children: rowSpanItem._formatter\n                ? rowSpanItem._formatter(value, row, index)\n                : value,\n              attrs: {\n                rowSpan: 1\n              }\n            }\n            if (rowSpanItem[value] && rowSpanItem[value].length > 1) {\n              if (rowSpanItem[value].firstKey === index) {\n                obj.attrs.rowSpan = rowSpanItem[value].length\n              } else {\n                obj.attrs.rowSpan = 0\n              }\n            }\n            return obj\n          }\n        }\n        return item\n      })\n    },\n    // 合并行字段 合并信息收集\n    rowSpanMap() {\n      if (!this.rowSpanKey) return false\n      /**\n       * rowSpanMap格式 dataInex 为需要合并的字段key值，key 为该字段其中一个value值， length 为该值的重复次数， firstKey为该值第一次出现的下标\n       * {'dataIndex': { formatter, 'key': { length: 1, firstKey: index }}}\n       * 注意：数据源一定是排好的顺序 即相同数据类型一定要连在一起\n       */\n      let rowSpanMap = {}\n      const setRowSpanMap = (itemKey, { key, index, formatter }) => {\n        const rowSpanItem = rowSpanMap[itemKey] || {}\n        if (rowSpanItem[key]) {\n          rowSpanItem[key].length += 1\n        } else {\n          rowSpanItem._formatter = formatter\n          rowSpanItem[key] = { length: 1, firstKey: index }\n        }\n        rowSpanMap[itemKey] = rowSpanItem\n      }\n      // 遍历数据源，收集字段合并信息\n      this.dataSource.map((item, index) => {\n        let key = '',\n          formatter = null\n        if (typeof this.rowSpanKey === 'string') {\n          setRowSpanMap(this.rowSpanKey, { key: item[this.rowSpanKey], index })\n        } else {\n          this.rowSpanKey.map(itemKey => {\n            if (typeof itemKey === 'string') {\n              setRowSpanMap(itemKey, { key: item[itemKey], index })\n            } else {\n              setRowSpanMap(itemKey.key, {\n                key: item[itemKey.key],\n                formatter: itemKey.formatter,\n                index\n              })\n            }\n          })\n        }\n      })\n      return rowSpanMap\n    },\n    locale() {\n      return {\n        emptyText: this.emptyText || <st-no-data />\n      }\n    },\n    tableDataSource() {\n      addOddEvenKey(this.dataSource)\n      return this.dataSource\n    },\n    defaultPageSize() {\n      return this.simplePage ? 10 : 20\n    },\n    tablePagination: {\n      get() {\n        if (this.pagination === false || this.page === false) {\n          return false\n        }\n        let sub = this.customRowSub\n        let total = this.total > sub ? this.total - sub : 0\n        const pageSize =\n          this.pageMode === 'client' ? this.pageSize : this.defaultPageSize\n        let _p = merge(\n          {\n            current: this.current,\n            pageSize,\n            total,\n            showTotal: function(total, range) {\n              return `共${total - sub}条`\n            },\n            showSizeChanger: true\n          },\n          // 去除无用的pagination属性\n          omit(this.pagination, [\n            'total_counts',\n            'total_pages',\n            'current_page',\n            'size'\n          ])\n        )\n        if (this.page) {\n          if (this.page.size) {\n            _p.pageSize = +this.page.size || this.defaultPageSize\n          }\n          if (this.page.current_page) {\n            _p.current = +this.page.current_page || 1\n          }\n          if (this.page.total_counts) {\n            _p.total = +this.page.total_counts || 0\n          }\n          if (this.simplePage) {\n            _p.simple = true\n          }\n        }\n        return _p\n      }\n    }\n  },\n  methods: {\n    onCLick() {\n      this.alertSelection.onReset()\n    },\n    expand(...ret) {\n      this.$emit('expand', ...ret)\n    },\n    onChange(pagination, ...rest) {\n      if (this.pageMode === 'client') {\n        this.current = pagination.current\n        this.total = pagination.total\n        this.pageSize = pagination.pageSize\n      }\n      const query = this.query\n      this.$emit('change', { ...pagination, query }, ...rest)\n    },\n    renderChildren() {\n      return map(this.$slots, (vnode, slot) => (\n        <template slot={slot}>{vnode}</template>\n      ))\n    },\n    // 在有children的情况下显示自定义图标\n    // CustomExpandIcon(props) {\n    //   let text = ''\n    //   let className = 'st-expand-row-icon'\n    //   if (props.record.children && props.record.children.length) {\n    //     const type = props.expanded ? 'table-up' : 'table-down'\n    //     text = <st-icon type={type} />\n    //     className = 'st-expand-row-icon mg-r8'\n    //   }\n    //   return (\n    //     <span\n    //       class={className}\n    //       onClick={e => props.onExpand(props.record, e)}\n    //       style={{ cursor: 'pointer' }}\n    //     >\n    //       {text}\n    //     </span>\n    //   )\n    // },\n    rowClassName(record) {\n      if (this.stripe) {\n        return record.$_oddEvenKey\n      } else {\n        return ''\n      }\n    }\n  },\n  render(h) {\n    let props = {\n      pagination: this.tablePagination,\n      locale: this.locale,\n      dataSource: this.tableDataSource,\n      // scroll: this.tableDataSource.length >= 1 ? this.scroll : {},\n      rowClassName: this.rowClassName,\n      childrenColumnName: '$_children',\n      indentSize: 16,\n      ...this.$attrs\n    }\n    if (this.tableDataSource.length >= 1 && this.scroll) {\n      props.scroll = this.scroll\n    }\n    // 如果存在合并行则使用处理后的columns\n    if (this.rowSpanKey) {\n      props.columns = this.columns\n    }\n    // 判断是否是父子表格 先去掉 自定义图标和自定义expandedRowRender冲突\n    // props.expandIcon = this.CustomExpandIcon\n    const ce = this.alertSelection.onReset\n      ? h('div', { class: 'st-table-wapper' }, [\n          h('a-alert', {\n            class: 'st-table-alert mg-b8',\n            props: { type: 'info', showIcon: true },\n            scopedSlots: {\n              message: props =>\n                h('div', { class: 'st-table-alert__content' }, [\n                  '已选 ',\n                  h(\n                    'span',\n                    { class: 'st-table-alert__count' },\n                    this.$attrs.rowSelection.selectedRowKeys.length || 0\n                  ),\n                  ' 条数据',\n                  h(\n                    'a',\n                    {\n                      class: 'mg-l24 st-table-alert__reload',\n                      on: {\n                        click: this.onCLick\n                      }\n                    },\n                    '取消'\n                  )\n                ])\n            }\n          }),\n          h(\n            'a-table',\n            {\n              class: [\n                'st-table',\n                this.stripe ? '' : 'st-table-normal',\n                !this.tableDataSource.length && 'st-table-nodata'\n              ],\n              props,\n              on: {\n                change: this.onChange,\n                expand: this.expand\n              },\n              scopedSlots: this.$scopedSlots,\n              slot: this.$slots\n            },\n            this.renderChildren()\n          )\n        ])\n      : h(\n          'a-table',\n          {\n            class: [\n              'st-table',\n              this.stripe ? '' : 'st-table-normal',\n              !this.tableDataSource.length && 'st-table-nodata'\n            ],\n            props,\n            on: {\n              change: this.onChange,\n              expand: this.expand\n            },\n            scopedSlots: this.$scopedSlots,\n            slot: this.$slots\n          },\n          this.renderChildren()\n        )\n    return ce\n  }\n}\n</script>\n"],"sourceRoot":"src/views/components/table"}]}