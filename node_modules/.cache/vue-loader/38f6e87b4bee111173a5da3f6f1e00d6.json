{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login.vue","mtime":1596188219468},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserService } from '@/services/user.service'\nimport { AuthService } from '@/services/auth.service'\nimport { LoginService } from './login.service'\nimport mobile from './login#/mobile'\nimport user from './login#/user'\nimport bind from './login#/bind'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport { throwError } from 'rxjs'\nimport Copyright from '@/views/biz-components/copyright/copyright'\n\nexport default {\n  name: 'Login',\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      userService: UserService,\n      authService: AuthService,\n      noCaptchaService: NoCaptchaService\n    }\n  },\n  data() {\n    return {\n      loginType: '',\n      typeNames: {\n        weibo: '微博登录',\n        qq: 'qq登录',\n        alipay: '支付宝登录',\n        wechat: '微信登录'\n      },\n      findPasswordTypes: [\n        { key: 'mobilefind', name: '手机找回' },\n        { key: 'emailfind', name: '邮件找回' }\n      ],\n      loginTypes: [\n        { key: 'user', name: '用户密码登录' },\n        { key: 'mobile', name: '手机验证码登录' }\n      ],\n      countryInfo: {}\n    }\n  },\n  components: {\n    LoginMobile: mobile,\n    LoginBind: bind,\n    LoginUser: user,\n    Copyright\n  },\n  rxState() {\n    return {\n      isBind: this.loginService.isBind$,\n      loading: this.loginService.loading$\n    }\n  },\n  mounted() {\n    if (this.isBind) {\n      this.loginType = 'bind'\n    } else {\n      this.loginType = 'user'\n    }\n  },\n  computed: {\n    switchLoginTypeIsShow() {\n      let types = ['user', 'mobile', 'qrcode', 'bind']\n      return types.includes(this.loginType)\n    }\n  },\n  methods: {\n    onClickChangeType(key) {\n      this.loginType = key\n    },\n    onFindPassword() {\n      this.loginType = 'mobilefind'\n    },\n    onThird(type) {\n      this.loginType = type\n    },\n    onClickBack() {\n      this.loginType = 'user'\n    },\n    bindBackLogin() {\n      if (this.loginType === 'bind') {\n        this.loginType = 'mobile'\n      }\n    },\n    onLogin(params) {\n      // params.nvc_val = window.getNVCVal()\n      const nvc_val = this.noCaptchaService.generateNVCVal()\n      if (!nvc_val) {\n        return\n      }\n      params.nvc_val = nvc_val\n      this.loginService.loginAccount(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        localStorage.clear()\n        location.href = '/'\n      }, this.loginErrorHandler)\n    },\n    loginErrorHandler(err) {\n      const code = err.response.code\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    // 切换登录方式\n    switchLoginType() {\n      this.loginType = this.loginType === 'qrcode' ? 'user' : 'qrcode'\n    },\n    onBind(event) {\n      this.loginType = 'bind'\n      this.countryInfo = event\n    },\n    onClickBind(params) {\n      this.loginService.bindPhoneForAccount(params).subscribe(res => {\n        this.countryInfo = {}\n        location.href = '/'\n      })\n    }\n  }\n}\n",null]}