{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/deposit/update-rights.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/deposit/update-rights.vue","mtime":1597895241997},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UpdateRightsService } from './update-rights.service.ts'\nimport { ruleOptions } from './update-rights.config'\nimport { MessageService } from '@/services/message.service'\nimport AssignShop from '@/views/biz-components/shop/assign-shop/assign-shop'\nexport default {\n  components: {\n    AssignShop\n  },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      updateRightsService: UpdateRightsService\n    }\n  },\n  rxState() {\n    const {\n      info$,\n      loading$,\n      consumeTypeOptions$,\n      transferUnitOptions$\n    } = this.updateRightsService\n    return {\n      info: info$,\n      loading: loading$,\n      consumeTypeOptions: consumeTypeOptions$,\n      transferUnitOptions: transferUnitOptions$\n    }\n  },\n  props: {\n    id: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      switches: {\n        consumeType: 0,\n        transferSetting: 0,\n        consumeShop: 0\n      }\n    }\n  },\n  created() {\n    this.updateRightsService.getInfo(this.id).subscribe(res => {\n      this.$nextTick(() => {\n        this.setFieldsValue(res.info)\n      })\n    })\n  },\n  methods: {\n    onShopChange(type, shopIds) {\n      this.info.consumption_range.consumption_range_type = type\n      this.info.consumption_range.select_shops = shopIds\n    },\n    setFieldsValue(info) {\n      const { transfer_num, transfer_unit } = info.transfer\n      this.form.setFieldsValue({\n        transfer_num,\n        transfer_unit: transfer_unit || 1\n      })\n    },\n    onSwitchChange() {\n      this.form.validateFields(['transfer_num', 'transfer_unit'], {\n        force: true\n      })\n    },\n    checkIsChanged() {\n      let isChanged = false\n      const { switches } = this\n      for (let i in switches) {\n        if (switches[i]) {\n          isChanged = true\n          return true\n        }\n      }\n      return isChanged\n    },\n    onSubmit() {\n      if (!this.checkIsChanged()) {\n        return this.messageService.error({\n          content: '未进行任何修改，无法确认'\n        })\n      }\n      this.form.validate().then(values => {\n        const { transfer, consumption_range, support_consumers } = this.info\n        const { switches } = this\n        const params = {\n          is_change_consumers: switches.consumeType,\n          consumption_range_type: consumption_range.consumption_range_type,\n          support_consumers,\n          is_change_transferable: switches.transferSetting,\n          transfer_num: values.transfer_num,\n          transfer_unit: values.transfer_unit,\n          is_transferable: transfer.is_transferable,\n          is_change_consumption_range: switches.consumeShop,\n          select_shops: consumption_range.select_shops\n        }\n        this.updateRightsService\n          .updateRights(this.id, params)\n          .subscribe(this.onSubmitSuccess)\n      })\n    },\n    onSubmitSuccess() {\n      this.messageService.success({\n        content: '提交成功'\n      })\n      this.show = false\n      this.$emit('success')\n    }\n  }\n}\n",null]}