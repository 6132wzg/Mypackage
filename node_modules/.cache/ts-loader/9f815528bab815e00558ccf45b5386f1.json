{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/rx-state/src/index.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/rx-state/src/index.ts","mtime":1600926555409},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Subject, Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport produce from 'immer';\nimport { refCount, publish, tap, finalize, shareReplay, distinctUntilChanged } from 'rxjs/operators';\n\nvar BehaviorSubjectState = /*#__PURE__*/function (_BehaviorSubject) {\n  _inherits(BehaviorSubjectState, _BehaviorSubject);\n\n  var _super = _createSuper(BehaviorSubjectState);\n\n  function BehaviorSubjectState() {\n    _classCallCheck(this, BehaviorSubjectState);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BehaviorSubjectState, [{\n    key: \"commit\",\n    value: function commit(mutation) {\n      // @ts-ignore\n      this.next(produce(this.value, mutation));\n    }\n  }, {\n    key: \"snapshot\",\n    value: function snapshot() {\n      return this.value;\n    }\n  }]);\n\n  return BehaviorSubjectState;\n}(BehaviorSubject);\n\nexport var State = /*#__PURE__*/function (_BehaviorSubjectState) {\n  _inherits(State, _BehaviorSubjectState);\n\n  var _super2 = _createSuper(State);\n\n  function State(initialState) {\n    var _this;\n\n    _classCallCheck(this, State);\n\n    _this = _super2.call(this, initialState); // @ts-ignore\n\n    var state$ = _assertThisInitialized(_this);\n\n    state$.commit = function (mutation) {\n      // @ts-ignore\n      _this.next(produce(_this.value, mutation));\n    };\n\n    state$.snapshot = function () {\n      return _this.value;\n    };\n\n    return _possibleConstructorReturn(_this, state$);\n  }\n\n  return State;\n}(BehaviorSubjectState);\n/**\n * 获得一个流最后的值状态快照\n */\n\nexport function getSnapshot(stream) {\n  var currentState = null;\n  var subscribtion = stream.subscribe(function (v) {\n    currentState = v;\n  });\n  subscribtion.unsubscribe();\n  return currentState;\n}\nexport var Action = /*#__PURE__*/function () {\n  function Action(epic) {\n    _classCallCheck(this, Action);\n\n    this.trigger$ = new Subject();\n    this.action$ = epic(this.trigger$).pipe(publish(), refCount());\n    this.action$.subscribe();\n  }\n\n  _createClass(Action, [{\n    key: \"dispatch\",\n    value: function dispatch(payload) {\n      this.trigger$.next(payload);\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      var _this$action$;\n\n      (_this$action$ = this.action$).subscribe.apply(_this$action$, arguments);\n    }\n  }]);\n\n  return Action;\n}();\nexport function log(tag) {\n  return function (source$) {\n    return source$.pipe(tap(function (v) {\n      if (tag) {\n        console.log(\"[rx-state] state [\".concat(tag, \"] -> \"), v);\n      } else {\n        console.log(\"[rx-state] state ->\", v);\n      }\n    }));\n  };\n}\n\nvar PATCH = function PATCH(tag, value) {\n  return function (state) {\n    state[tag] = value;\n  };\n};\n\nexport function Effect() {\n  return function (target, propKey, descriptor) {\n    var originalFn = target[propKey];\n\n    descriptor.value = function () {\n      var _this2 = this;\n\n      if (!this.loading$) {\n        console && console.warn('[rx-state]  Effect decorator can not find loading$ state!');\n        return originalFn.apply(this, arguments);\n      }\n\n      this.loading$.commit(PATCH(propKey, true));\n      var oriRequest$ = originalFn.apply(this, arguments);\n      var request$ = oriRequest$.pipe(finalize(function () {\n        _this2.loading$.commit(PATCH(propKey, false));\n      }));\n      return request$;\n    };\n  };\n}\n\nvar ObservableWithSnapshot = /*#__PURE__*/function (_Observable) {\n  _inherits(ObservableWithSnapshot, _Observable);\n\n  var _super3 = _createSuper(ObservableWithSnapshot);\n\n  function ObservableWithSnapshot() {\n    _classCallCheck(this, ObservableWithSnapshot);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(ObservableWithSnapshot, [{\n    key: \"snapshot\",\n    value: function snapshot() {\n      return getSnapshot(this);\n    }\n  }]);\n\n  return ObservableWithSnapshot;\n}(Observable);\n\nexport var Computed = /*#__PURE__*/function (_ObservableWithSnapsh) {\n  _inherits(Computed, _ObservableWithSnapsh);\n\n  var _super4 = _createSuper(Computed);\n\n  function Computed(source$) {\n    var _this3;\n\n    _classCallCheck(this, Computed);\n\n    _this3 = _super4.call(this);\n    var computed$ = source$.pipe(distinctUntilChanged(), shareReplay(1));\n\n    computed$.snapshot = function () {\n      return getSnapshot(computed$);\n    };\n\n    return _possibleConstructorReturn(_this3, computed$);\n  }\n\n  return Computed;\n}(ObservableWithSnapshot);\nexport function computed(fn, states) {\n  return new Computed(combineLatest.apply(void 0, _toConsumableArray(states).concat([fn])));\n}",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/rx-state/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,OAAT,EAAkB,UAAlB,EAA8B,eAA9B,EAA+C,aAA/C,QAAoE,MAApE;AACA,OAAO,OAAP,MAAoB,OAApB;AAEA,SACE,QADF,EAEE,OAFF,EAGE,GAHF,EAIE,QAJF,EAKE,WALF,EAME,oBANF,QAOO,gBAPP;;IAYM,oB;;;;;;;;;;;;;2BACG,Q,EAAqB;AAC1B;AACA,WAAK,IAAL,CAAU,OAAO,CAAC,KAAK,KAAN,EAAa,QAAb,CAAjB;AACD;;;+BACO;AACN,aAAO,KAAK,KAAZ;AACD;;;;EAPmC,e;;AAUtC,WAAa,KAAb;AAAA;;AAAA;;AACE,iBAAY,YAAZ,EAA6B;AAAA;;AAAA;;AAC3B,+BAAM,YAAN,EAD2B,CAE3B;;AACA,QAAM,MAAM,gCAAZ;;AACA,IAAA,MAAM,CAAC,MAAP,GAAgB,UAAC,QAAD,EAA0B;AACxC;AACA,YAAK,IAAL,CAAU,OAAO,CAAC,MAAK,KAAN,EAAa,QAAb,CAAjB;AACD,KAHD;;AAIA,IAAA,MAAM,CAAC,QAAP,GAAkB,YAAK;AACrB,aAAO,MAAK,KAAZ;AACD,KAFD;;AAGA,6CAAO,MAAP;AACD;;AAbH;AAAA,EAA8B,oBAA9B;AAgBA;;;;AAGA,OAAM,SAAU,WAAV,CAAyB,MAAzB,EAA8C;AAClD,MAAI,YAAY,GAAQ,IAAxB;AACA,MAAM,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,UAAA,CAAC,EAAG;AACxC,IAAA,YAAY,GAAG,CAAf;AACD,GAFoB,CAArB;AAGA,EAAA,YAAY,CAAC,WAAb;AACA,SAAO,YAAP;AACD;AAED,WAAa,MAAb;AAGE,kBAAY,IAAZ,EAA+B;AAAA;;AAC7B,SAAK,QAAL,GAAgB,IAAI,OAAJ,EAAhB;AACA,SAAK,OAAL,GAAe,IAAI,CAAC,KAAK,QAAN,CAAJ,CAAoB,IAApB,CAAyB,OAAO,EAAhC,EAAoC,QAAQ,EAA5C,CAAf;AACA,SAAK,OAAL,CAAa,SAAb;AACD;;AAPH;AAAA;AAAA,6BAQW,OARX,EAQ4B;AACxB,WAAK,QAAL,CAAc,IAAd,CAAmB,OAAnB;AACD;AAVH;AAAA;AAAA,gCAW0B;AAAA;;AACtB,4BAAK,OAAL,EAAa,SAAb;AACD;AAbH;;AAAA;AAAA;AAgBA,OAAM,SAAU,GAAV,CAAc,GAAd,EAA0B;AAC9B,SAAO,UAAS,OAAT,EAAiC;AACtC,WAAO,OAAO,CAAC,IAAR,CACL,GAAG,CAAC,UAAC,CAAD,EAAW;AACb,UAAI,GAAJ,EAAS;AACP,QAAA,OAAO,CAAC,GAAR,6BAAiC,GAAjC,YAA6C,CAA7C;AACD,OAFD,MAEO;AACL,QAAA,OAAO,CAAC,GAAR,wBAAmC,CAAnC;AACD;AACF,KANE,CADE,CAAP;AASD,GAVD;AAWD;;AAED,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,GAAD,EAAc,KAAd;AAAA,SAA6B,UAAC,KAAD,EAAe;AACxD,IAAA,KAAK,CAAC,GAAD,CAAL,GAAa,KAAb;AACD,GAFa;AAAA,CAAd;;AAIA,OAAM,SAAU,MAAV,GAAgB;AACpB,SAAO,UAAS,MAAT,EAAsB,OAAtB,EAAuC,UAAvC,EAAsD;AAC3D,QAAM,UAAU,GAAG,MAAM,CAAC,OAAD,CAAzB;;AACA,IAAA,UAAU,CAAC,KAAX,GAAmB,YAAA;AAAA;;AACjB,UAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,QAAA,OAAO,IACL,OAAO,CAAC,IAAR,CACE,2DADF,CADF;AAIA,eAAO,UAAU,CAAC,KAAX,CAAiB,IAAjB,EAAuB,SAAvB,CAAP;AACD;;AACD,WAAK,QAAL,CAAc,MAAd,CAAqB,KAAK,CAAC,OAAD,EAAU,IAAV,CAA1B;AACA,UAAM,WAAW,GAAoB,UAAU,CAAC,KAAX,CAAiB,IAAjB,EAAuB,SAAvB,CAArC;AACA,UAAM,QAAQ,GAAG,WAAW,CAAC,IAAZ,CACf,QAAQ,CAAC,YAAK;AACZ,QAAA,MAAI,CAAC,QAAL,CAAc,MAAd,CAAqB,KAAK,CAAC,OAAD,EAAU,KAAV,CAA1B;AACD,OAFO,CADO,CAAjB;AAKA,aAAO,QAAP;AACD,KAhBD;AAiBD,GAnBD;AAoBD;;IAEK,sB;;;;;;;;;;;;;+BACI;AACN,aAAO,WAAW,CAAC,IAAD,CAAlB;AACD;;;;EAHqC,U;;AAMxC,WAAa,QAAb;AAAA;;AAAA;;AACE,oBAAY,OAAZ,EAAkC;AAAA;;AAAA;;AAChC;AACA,QAAM,SAAS,GAAG,OAAO,CAAC,IAAR,CAChB,oBAAoB,EADJ,EAEhB,WAAW,CAAC,CAAD,CAFK,CAAlB;;AAIA,IAAA,SAAS,CAAC,QAAV,GAAqB,YAAA;AACnB,aAAO,WAAW,CAAC,SAAD,CAAlB;AACD,KAFD;;AAGA,8CAAO,SAAP;AACD;;AAXH;AAAA,EAAiC,sBAAjC;AAcA,OAAM,SAAU,QAAV,CACJ,EADI,EAEJ,MAFI,EAEqB;AAEzB,SAAO,IAAI,QAAJ,CAAa,aAAa,MAAb,4BAAiB,MAAjB,UAAyB,EAAzB,GAAb,CAAP;AACD","sourcesContent":["import { Subject, Observable, BehaviorSubject, combineLatest } from 'rxjs'\nimport produce from 'immer'\n\nimport {\n  refCount,\n  publish,\n  tap,\n  finalize,\n  shareReplay,\n  distinctUntilChanged\n} from 'rxjs/operators'\n\nexport type Mutation<T> = (state: T) => T | void\nexport type Epic<T> = (source$: Observable<T>) => Observable<any>\n\nclass BehaviorSubjectState<T> extends BehaviorSubject<T> {\n  commit(mutation: Mutation<T>): void {\n    // @ts-ignore\n    this.next(produce(this.value, mutation))\n  }\n  snapshot() {\n    return this.value\n  }\n}\n\nexport class State<T> extends BehaviorSubjectState<T> {\n  constructor(initialState: any) {\n    super(initialState)\n    // @ts-ignore\n    const state$ = this\n    state$.commit = (mutation: Mutation<T>) => {\n      // @ts-ignore\n      this.next(produce(this.value, mutation))\n    }\n    state$.snapshot = () => {\n      return this.value\n    }\n    return state$\n  }\n}\n\n/**\n * 获得一个流最后的值状态快照\n */\nexport function getSnapshot<T>(stream: Observable<T>): T {\n  let currentState: any = null\n  const subscribtion = stream.subscribe(v => {\n    currentState = v\n  })\n  subscribtion.unsubscribe()\n  return currentState\n}\n\nexport class Action<Payload> {\n  trigger$: Subject<Payload>\n  action$: Observable<any>\n  constructor(epic: Epic<Payload>) {\n    this.trigger$ = new Subject()\n    this.action$ = epic(this.trigger$).pipe(publish(), refCount())\n    this.action$.subscribe()\n  }\n  dispatch(payload?: Payload) {\n    this.trigger$.next(payload)\n  }\n  subscribe(...args: any[]) {\n    this.action$.subscribe(...args)\n  }\n}\n\nexport function log(tag?: string) {\n  return function(source$: Observable<any>) {\n    return source$.pipe(\n      tap((v: any) => {\n        if (tag) {\n          console.log(`[rx-state] state [${tag}] -> `, v)\n        } else {\n          console.log(`[rx-state] state ->`, v)\n        }\n      })\n    )\n  }\n}\n\nconst PATCH = (tag: string, value: any) => (state: any) => {\n  state[tag] = value\n}\n\nexport function Effect() {\n  return function(target: any, propKey: string, descriptor: any) {\n    const originalFn = target[propKey]\n    descriptor.value = function() {\n      if (!this.loading$) {\n        console &&\n          console.warn(\n            '[rx-state]  Effect decorator can not find loading$ state!'\n          )\n        return originalFn.apply(this, arguments)\n      }\n      this.loading$.commit(PATCH(propKey, true))\n      const oriRequest$: Observable<any> = originalFn.apply(this, arguments)\n      const request$ = oriRequest$.pipe(\n        finalize(() => {\n          this.loading$.commit(PATCH(propKey, false))\n        })\n      )\n      return request$\n    }\n  }\n}\n\nclass ObservableWithSnapshot<T> extends Observable<T> {\n  snapshot() {\n    return getSnapshot(this)\n  }\n}\n\nexport class Computed<T> extends ObservableWithSnapshot<T> {\n  constructor(source$: Observable<T>) {\n    super()\n    const computed$ = source$.pipe(\n      distinctUntilChanged(),\n      shareReplay(1)\n    ) as ObservableWithSnapshot<T>\n    computed$.snapshot = function() {\n      return getSnapshot(computed$)\n    }\n    return computed$\n  }\n}\n\nexport function computed<T>(\n  fn: Function,\n  states: Observable<any>[]\n): Computed<T> {\n  return new Computed(combineLatest(...states, fn))\n}\n"],"sourceRoot":""}]}