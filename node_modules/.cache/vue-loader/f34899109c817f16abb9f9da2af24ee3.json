{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/account/modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/account/modify.vue","mtime":1600926555812},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ModifyService } from './modify.service'\nimport { ruleOptions } from './modify.config'\nimport { PatternService } from '@/services/pattern.service'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport InputPhoneCode from '@/views/biz-components/account/input-phone-code/input-phone-code'\nimport { MessageService } from '@/services/message.service'\nimport { cloneDeep } from 'lodash-es'\nimport NoCaptcha from '@/views/biz-components/account/no-captcha'\nimport AccountBind from '@/views/biz-modals/account/bind'\nimport InputPwdStrength from '@/views/biz-components/account/input-pwd-strength/input-pwd-strength'\n\nexport default {\n  bem: {\n    b: 'account-modify'\n  },\n  serviceInject() {\n    return {\n      modifyService: ModifyService,\n      messageService: MessageService,\n      noCaptchaService: NoCaptchaService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      info: this.modifyService.info$,\n      loading: this.modifyService.loading$\n    }\n  },\n  components: {\n    NoCaptcha,\n    InputPhoneCode,\n    InputPwdStrength\n  },\n  modals: {\n    AccountBind\n  },\n  computed: {\n    isBind() {\n      return !this.info.account_phone_encrypt\n    }\n  },\n  mounted() {\n    this.modifyService.getUserInfo().subscribe()\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isCountTime: false,\n      isShowFooter: false,\n      isShowTel: false,\n      isShowPass: false,\n      isShowSuccess: false,\n      validStatus: 0\n    }\n  },\n  methods: {\n    goBind() {\n      this.show = false\n      this.$modalRouter.push({\n        name: 'account-bind',\n        props: {},\n        on: {}\n      })\n    },\n    checkPass() {\n      this.isShowFooter = true\n      this.isShowPass = true\n    },\n    checkTel() {\n      this.isShowFooter = true\n      this.isShowTel = true\n    },\n    goTelNext() {\n      this.form.validate(['captcha']).then(values => {\n        this.modifyService\n          .checkCaptcha({ captcha: values.captcha })\n          .subscribe(res => {\n            this.isShowTel = false\n          })\n      })\n    },\n    goPassNext() {\n      this.form.validate(['password']).then(values => {\n        this.modifyService\n          .checkAccount({ pwd: values.password })\n          .subscribe(res => {\n            this.isShowPass = false\n          })\n      })\n    },\n    onClickCaptcha() {\n      const params = {\n        phone: this.info.account_phone,\n        country_code_id: this.info.country_code_id\n      }\n      this.getCaptcha(params)\n    },\n    getCaptcha(params) {\n      const nvc_val = this.noCaptchaService.generateNVCVal()\n      if (!nvc_val) {\n        return\n      }\n      params.nvc_val = nvc_val\n      this.modifyService.getCaptcha(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        this.isCountTime = true\n      }, this.errorHandler)\n    },\n    errorHandler(err) {\n      const code = err.response.code\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    resetPass() {\n      this.form.validate(['pwd', 'repwd']).then(values => {\n        let para = {\n          pwd: values.pwd,\n          repwd: values.repwd\n        }\n        this.modifyService.resetPass(para).subscribe(res => {\n          this.isShowFooter = false\n          this.isShowSuccess = true\n        })\n      })\n    },\n    endCount() {\n      this.isCountTime = false\n    },\n    goLogin() {\n      location.href = location.origin + '/account/login'\n    }\n  }\n}\n",{"version":3,"sources":["modify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"modify.vue","sourceRoot":"src/views/biz-modals/account","sourcesContent":["<template>\n  <st-modal title=\"修改密码\" v-model=\"show\" width=\"476px\" :class=\"b()\">\n    <div v-if=\"!isShowFooter && !isShowSuccess\">\n      正在为账号名{{\n        info.account_name\n      }}修改密码，为确认是您本人操作，请完成身份验证\n      <span v-if=\"isBind\">\n        您当前暂未绑定手机号码，无法使用手机验证修改密码，\n        <a @click=\"goBind\">去绑定</a>\n      </span>\n      <div :class=\"b('item')\" class=\"mg-t16\">\n        密码验证方式\n        <st-button type=\"primary\" pill @click=\"checkPass\">去验证</st-button>\n      </div>\n      <div v-if=\"!isBind\" :class=\"b('item')\">\n        手机号码验证方式\n        <st-button type=\"primary\" pill @click=\"checkTel\">去验证</st-button>\n      </div>\n      <div :class=\"b('item')\">联系管理员修改密码</div>\n    </div>\n    <st-form :form=\"form\" labelWidth=\"88px\" labelGutter=\"16px\">\n      <div v-if=\"isShowPass\">\n        <st-form-item label=\"当前账户\" label-auto :class=\"b('text-item')\">\n          <label>{{ info.account_name }}</label>\n        </st-form-item>\n        <st-form-item label=\"当前密码\" required class=\"mg-b0\">\n          <a-input\n            type=\"password\"\n            v-decorator=\"decorators.password\"\n            placeholder=\"请输入当前密码\"\n            size=\"default\"\n          ></a-input>\n        </st-form-item>\n      </div>\n      <div v-if=\"isShowTel\">\n        <st-form-item label=\"当前手机号\" label-auto>\n          <label>{{ info.account_phone }}</label>\n        </st-form-item>\n        <st-form-item class=\"mg-b0\" label-fix label=\"滑块验证\">\n          <no-captcha id=\"get-phone-code\"></no-captcha>\n        </st-form-item>\n        <st-form-item label=\"短信验证码\" class=\"mg-b0\">\n          <input-phone-code\n            size=\"default\"\n            v-decorator=\"decorators.captcha\"\n            @click=\"onClickCaptcha\"\n            placeholder=\"请输入验证码\"\n            :isCountTime=\"isCountTime\"\n            @endCount=\"endCount\"\n          ></input-phone-code>\n        </st-form-item>\n      </div>\n\n      <div v-if=\"!isShowTel && !isShowPass && isShowFooter\">\n        <st-form-item label=\"新密码\" required>\n          <input-pwd-strength\n            max-length=\"15\"\n            v-decorator=\"decorators.pwd\"\n            placeholder=\"请输入新密码\"\n            :validStatus=\"validStatus\"\n            :strength=\"strength\"\n            size=\"default\"\n          ></input-pwd-strength>\n        </st-form-item>\n        <st-form-item label=\"确认新密码\" required>\n          <a-input\n            :maxLength=\"15\"\n            type=\"password\"\n            v-decorator=\"decorators.repwd\"\n            placeholder=\"请输入确认新密码\"\n            size=\"default\"\n          ></a-input>\n        </st-form-item>\n      </div>\n    </st-form>\n    <template slot=\"footer\">\n      <div v-show=\"isShowFooter\">\n        <st-button type=\"default\" @click=\"show = false\">取消</st-button>\n        <st-button type=\"primary\" v-if=\"isShowPass\" @click=\"goPassNext\">\n          确认\n        </st-button>\n        <st-button type=\"primary\" v-if=\"isShowTel\" @click=\"goTelNext\">\n          确认\n        </st-button>\n        <st-button\n          type=\"primary\"\n          v-if=\"!isShowTel && !isShowPass\"\n          :loading=\"loading.add\"\n          @click=\"resetPass\"\n        >\n          确认\n        </st-button>\n      </div>\n    </template>\n    <div :class=\"b('success')\" v-if=\"isShowSuccess\">\n      <img\n        src=\"/img/success.c90c2656.png\"\n        alt=\"success\"\n        :class=\"b('success-img')\"\n      />\n      <div :class=\"b('success-text')\">密码更新成功</div>\n      <st-button pill type=\"primary\" @click=\"goLogin\">立即登录</st-button>\n    </div>\n  </st-modal>\n</template>\n\n<script>\nimport { ModifyService } from './modify.service'\nimport { ruleOptions } from './modify.config'\nimport { PatternService } from '@/services/pattern.service'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport InputPhoneCode from '@/views/biz-components/account/input-phone-code/input-phone-code'\nimport { MessageService } from '@/services/message.service'\nimport { cloneDeep } from 'lodash-es'\nimport NoCaptcha from '@/views/biz-components/account/no-captcha'\nimport AccountBind from '@/views/biz-modals/account/bind'\nimport InputPwdStrength from '@/views/biz-components/account/input-pwd-strength/input-pwd-strength'\n\nexport default {\n  bem: {\n    b: 'account-modify'\n  },\n  serviceInject() {\n    return {\n      modifyService: ModifyService,\n      messageService: MessageService,\n      noCaptchaService: NoCaptchaService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      info: this.modifyService.info$,\n      loading: this.modifyService.loading$\n    }\n  },\n  components: {\n    NoCaptcha,\n    InputPhoneCode,\n    InputPwdStrength\n  },\n  modals: {\n    AccountBind\n  },\n  computed: {\n    isBind() {\n      return !this.info.account_phone_encrypt\n    }\n  },\n  mounted() {\n    this.modifyService.getUserInfo().subscribe()\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isCountTime: false,\n      isShowFooter: false,\n      isShowTel: false,\n      isShowPass: false,\n      isShowSuccess: false,\n      validStatus: 0\n    }\n  },\n  methods: {\n    goBind() {\n      this.show = false\n      this.$modalRouter.push({\n        name: 'account-bind',\n        props: {},\n        on: {}\n      })\n    },\n    checkPass() {\n      this.isShowFooter = true\n      this.isShowPass = true\n    },\n    checkTel() {\n      this.isShowFooter = true\n      this.isShowTel = true\n    },\n    goTelNext() {\n      this.form.validate(['captcha']).then(values => {\n        this.modifyService\n          .checkCaptcha({ captcha: values.captcha })\n          .subscribe(res => {\n            this.isShowTel = false\n          })\n      })\n    },\n    goPassNext() {\n      this.form.validate(['password']).then(values => {\n        this.modifyService\n          .checkAccount({ pwd: values.password })\n          .subscribe(res => {\n            this.isShowPass = false\n          })\n      })\n    },\n    onClickCaptcha() {\n      const params = {\n        phone: this.info.account_phone,\n        country_code_id: this.info.country_code_id\n      }\n      this.getCaptcha(params)\n    },\n    getCaptcha(params) {\n      const nvc_val = this.noCaptchaService.generateNVCVal()\n      if (!nvc_val) {\n        return\n      }\n      params.nvc_val = nvc_val\n      this.modifyService.getCaptcha(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        this.isCountTime = true\n      }, this.errorHandler)\n    },\n    errorHandler(err) {\n      const code = err.response.code\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    resetPass() {\n      this.form.validate(['pwd', 'repwd']).then(values => {\n        let para = {\n          pwd: values.pwd,\n          repwd: values.repwd\n        }\n        this.modifyService.resetPass(para).subscribe(res => {\n          this.isShowFooter = false\n          this.isShowSuccess = true\n        })\n      })\n    },\n    endCount() {\n      this.isCountTime = false\n    },\n    goLogin() {\n      location.href = location.origin + '/account/login'\n    }\n  }\n}\n</script>\n"]}]}