{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/card/shelf-shops.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/card/shelf-shops.vue","mtime":1595230476656},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ShelfShopsService } from \"./shelf-shops.service\";\nimport { columns } from \"./shelf-shops.config\";\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      shelfShopsService: ShelfShopsService\n    };\n  },\n  rxState: function rxState() {\n    var shelfShopsService = this.shelfShopsService;\n    return {\n      list: shelfShopsService.list$,\n      page: shelfShopsService.page$,\n      loading: shelfShopsService.loading$,\n      shelfStatusOptions: shelfShopsService.shelfStatusOptions$\n    };\n  },\n  computed: {\n    columns: columns,\n    pagination: function pagination() {\n      var page = this.page;\n      return {\n        current: page.current_page,\n        total: page.total_counts,\n        pageSize: page.size\n      };\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      default: '上下架门店'\n    },\n\n    /**\n     * 卡模板ID\n     */\n    id: {\n      type: Number,\n      default: 0\n    }\n  },\n  created: function created() {\n    this.getList();\n  },\n  data: function data() {\n    return {\n      show: false,\n      shelf_status: -1\n    };\n  },\n  methods: {\n    getList: function getList() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var query = _objectSpread({}, page, {\n        shelf_status: this.shelf_status\n      });\n\n      this.shelfShopsService.getList(this.id, query).subscribe();\n    },\n    onPageChange: function onPageChange(data) {\n      this.getList({\n        size: data.pageSize,\n        current_page: data.current\n      });\n    },\n    onShelfStatusChange: function onShelfStatusChange() {\n      this.getList();\n    }\n  }\n};",null]}