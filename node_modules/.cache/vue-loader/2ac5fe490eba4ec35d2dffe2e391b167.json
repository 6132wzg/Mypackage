{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/sold/transaction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/sold/transaction.vue","mtime":1600926555722},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldDealSaleCabinet from '@/views/biz-modals/sold/deal/sale-cabinet'\nimport SoldDealSaleCourse from '@/views/biz-modals/sold/deal/sale-course'\nimport SoldDealSaleDepositCard from '@/views/biz-modals/sold/deal/sale-deposit-card'\nimport SoldDealSaleMemberCard from '@/views/biz-modals/sold/deal/sale-member-card'\nimport SoldDealSalePersonalCourse from '@/views/biz-modals/sold/deal/sale-personal-course'\nimport SoldDealSaleSmallCourse from '@/views/biz-modals/sold/deal/sale-small-course'\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip'\nimport SoldDealWaitPay from '@/views/biz-modals/brand/app/pos/wait-pay-result'\nimport { PRODUCT_TYPE } from '@/constants/sold/transaction'\nimport { OssService } from '@/services/oss.service'\nexport default {\n  name: 'SoldTransaction',\n  props: {},\n  modals: {\n    SoldDealWaitPay,\n    SoldDealGathering,\n    SoldDealSaleCabinet,\n    SoldDealSaleCourse,\n    SoldDealSaleDepositCard,\n    SoldDealSaleMemberCard,\n    SoldDealSalePersonalCourse,\n    SoldDealGatheringTip,\n    SoldDealSaleSmallCourse\n  },\n  serviceInject() {\n    return {\n      ossService: OssService\n    }\n  },\n  data() {\n    return {\n      PRODUCT_TYPE\n    }\n  },\n  methods: {\n    // 订单收款modal\n    createdOrderPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 创建成功，提示框modal\n    createdGatheringTip(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering-tip',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 等待支付回调modal\n    createdWaitPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-wait-pay',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 订单收款回调\n    // modelType 业务类型 如储值卡签单 会员卡签单等\n    async payCallBack(orderId, modalType, callBackType, callBackData) {\n      switch (callBackType) {\n        case 'cancel':\n          this.onSearch()\n          break\n        case 'pay':\n          this.createdGatheringTip({\n            message: '收款成功',\n            order_id: orderId\n          }).then(res => {\n            this.tipCallBack(orderId, modalType, res.type)\n          })\n          break\n        case 'pos':\n          this.createdWaitPay(callBackData).then(() => {\n            this.createdGatheringTip({\n              message: '收款成功',\n              order_id: orderId\n            }).then(res => {\n              this.tipCallBack(orderId, modalType, res.type)\n            })\n          })\n          break\n      }\n    },\n    // 提示框回调，gathering-tip\n    async tipCallBack(orderId, modalType, callBackType) {\n      switch (callBackType) {\n        case 'cancel':\n          this.$router.reload()\n          break\n        case 'Print':\n          this.createdOrderPrint(orderId)\n          break\n        case 'ViewOrder':\n          this.createdOrderViewOrder(orderId)\n          break\n        /**\n         * 查看售出详情\n         */\n        case 'ViewOrder':\n          this.createdOrderViewOrder(orderId)\n          break\n        case 'PrintOrder':\n          this.printOrder(orderId)\n          break\n        case 'Pay':\n          this.createdOrderPay({ order_id: orderId, type: modalType }).then(\n            res => {\n              this.payCallBack(orderId, modalType, res.type, res)\n            }\n          )\n          break\n      }\n    },\n    /**\n     * 交易签单，签单操作\n     * @params order_id 订单id\n     * @params product_type 签单类型\n     * @params member_id 会员id\n     * @params member_name 会员姓名\n     * @params member_mobile 会员手机号\n     * @params id_card 证件号\n     * @params id_card_type 证件类型\n     * @params card_num 实体卡号\n     * @params physical_id 物理ID\n     */\n    onTransaction(\n      order_id,\n      product_type,\n      member_id,\n      member_name,\n      member_mobile,\n      id_card,\n      id_card_type,\n      card_num,\n      physical_id\n    ) {\n      let props = {}\n      if (order_id) {\n        props = {\n          id: order_id,\n          memberInfo: {\n            member_id,\n            member_name,\n            member_mobile,\n            id_card,\n            id_card_type,\n            card_num,\n            physical_id\n          }\n        }\n      }\n      switch (product_type) {\n        case this.PRODUCT_TYPE.MEMBER_CARD:\n          this.onMember(props)\n          break\n        case this.PRODUCT_TYPE.DEPOSIT_CARD:\n          this.onDeposit(props)\n          break\n        case this.PRODUCT_TYPE.PERSONAL_COURSE:\n          this.onPersonalCourse(props)\n          break\n        case this.PRODUCT_TYPE.PACKAGE:\n          this.onPackage(props)\n          break\n        case this.PRODUCT_TYPE.CABINET:\n          this.onCabinet(props)\n          break\n        case this.PRODUCT_TYPE.SMALL_COURSE:\n          this.onSmallCourse(props)\n          break\n      }\n    },\n    // 签单成功回调\n    async saleCallBack(result, type) {\n      if (result.type === 'create') {\n        // 创建订单成功\n        let props = {\n          order_id: result.orderId,\n          type,\n          message: '订单创建成功',\n          needPay: true\n        }\n        let orderSuccessRes = await this.createdGatheringTip(props)\n        this.tipCallBack(result.orderId, type, orderSuccessRes.type)\n      } else if (result.type === 'createPay') {\n        // 创建订单成功 并且到支付页面\n        let props = {\n          order_id: result.orderId,\n          type\n        }\n        let payOrderRes = await this.createdOrderPay(props)\n        this.payCallBack(result.orderId, type, payOrderRes.type, payOrderRes)\n      }\n    },\n    // 打印小票\n    printOrder(order_id) {\n      window.open(\n        '/ticket/gathering-print?id=' + order_id,\n        '_blank',\n        'width=800,height=600'\n      )\n    },\n    // 会员卡签单\n    onMember(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-member-card',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'member')\n          }\n        }\n      })\n    },\n    // 储值卡签单\n    onDeposit(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-deposit-card',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'deposit')\n          }\n        }\n      })\n    },\n    // 储物柜签单\n    onCabinet(props) {\n      props.id = '0' // 默认传0，因为没有选择具体的柜子\n      props.areaId = props.id\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-cabinet',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'cabinet_order')\n          }\n        }\n      })\n    },\n    // 课程包签单\n    onPackage(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-course',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'package')\n          }\n        }\n      })\n    },\n    // 私教课签单\n    onPersonalCourse(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-personal-course',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'personal')\n          }\n        }\n      })\n    },\n    // 小班课签单\n    onSmallCourse(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-small-course',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'small_course_order/detail')\n          }\n        }\n      })\n    },\n    // 打印合同\n    createdOrderPrint(order_id) {\n      let url = `${window.location.origin}/common/contract-preview?id=${order_id}`\n      this.ossService.openNewTab(url)\n    },\n    // 查看订单\n    createdOrderViewOrder(order_id) {\n      this.$router.push({\n        name: 'shop-finance-order-info-collection-details',\n        query: {\n          id: order_id\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["transaction.vue"],"names":[],"mappingsfile":"transaction.vue","sourceRoot":"src/views/biz-components/sold","sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldDealSaleCabinet from '@/views/biz-modals/sold/deal/sale-cabinet'\nimport SoldDealSaleCourse from '@/views/biz-modals/sold/deal/sale-course'\nimport SoldDealSaleDepositCard from '@/views/biz-modals/sold/deal/sale-deposit-card'\nimport SoldDealSaleMemberCard from '@/views/biz-modals/sold/deal/sale-member-card'\nimport SoldDealSalePersonalCourse from '@/views/biz-modals/sold/deal/sale-personal-course'\nimport SoldDealSaleSmallCourse from '@/views/biz-modals/sold/deal/sale-small-course'\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip'\nimport SoldDealWaitPay from '@/views/biz-modals/brand/app/pos/wait-pay-result'\nimport { PRODUCT_TYPE } from '@/constants/sold/transaction'\nimport { OssService } from '@/services/oss.service'\nexport default {\n  name: 'SoldTransaction',\n  props: {},\n  modals: {\n    SoldDealWaitPay,\n    SoldDealGathering,\n    SoldDealSaleCabinet,\n    SoldDealSaleCourse,\n    SoldDealSaleDepositCard,\n    SoldDealSaleMemberCard,\n    SoldDealSalePersonalCourse,\n    SoldDealGatheringTip,\n    SoldDealSaleSmallCourse\n  },\n  serviceInject() {\n    return {\n      ossService: OssService\n    }\n  },\n  data() {\n    return {\n      PRODUCT_TYPE\n    }\n  },\n  methods: {\n    // 订单收款modal\n    createdOrderPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 创建成功，提示框modal\n    createdGatheringTip(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering-tip',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 等待支付回调modal\n    createdWaitPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-wait-pay',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 订单收款回调\n    // modelType 业务类型 如储值卡签单 会员卡签单等\n    async payCallBack(orderId, modalType, callBackType, callBackData) {\n      switch (callBackType) {\n        case 'cancel':\n          this.onSearch()\n          break\n        case 'pay':\n          this.createdGatheringTip({\n            message: '收款成功',\n            order_id: orderId\n          }).then(res => {\n            this.tipCallBack(orderId, modalType, res.type)\n          })\n          break\n        case 'pos':\n          this.createdWaitPay(callBackData).then(() => {\n            this.createdGatheringTip({\n              message: '收款成功',\n              order_id: orderId\n            }).then(res => {\n              this.tipCallBack(orderId, modalType, res.type)\n            })\n          })\n          break\n      }\n    },\n    // 提示框回调，gathering-tip\n    async tipCallBack(orderId, modalType, callBackType) {\n      switch (callBackType) {\n        case 'cancel':\n          this.$router.reload()\n          break\n        case 'Print':\n          this.createdOrderPrint(orderId)\n          break\n        case 'ViewOrder':\n          this.createdOrderViewOrder(orderId)\n          break\n        /**\n         * 查看售出详情\n         */\n        case 'ViewOrder':\n          this.createdOrderViewOrder(orderId)\n          break\n        case 'PrintOrder':\n          this.printOrder(orderId)\n          break\n        case 'Pay':\n          this.createdOrderPay({ order_id: orderId, type: modalType }).then(\n            res => {\n              this.payCallBack(orderId, modalType, res.type, res)\n            }\n          )\n          break\n      }\n    },\n    /**\n     * 交易签单，签单操作\n     * @params order_id 订单id\n     * @params product_type 签单类型\n     * @params member_id 会员id\n     * @params member_name 会员姓名\n     * @params member_mobile 会员手机号\n     * @params id_card 证件号\n     * @params id_card_type 证件类型\n     * @params card_num 实体卡号\n     * @params physical_id 物理ID\n     */\n    onTransaction(\n      order_id,\n      product_type,\n      member_id,\n      member_name,\n      member_mobile,\n      id_card,\n      id_card_type,\n      card_num,\n      physical_id\n    ) {\n      let props = {}\n      if (order_id) {\n        props = {\n          id: order_id,\n          memberInfo: {\n            member_id,\n            member_name,\n            member_mobile,\n            id_card,\n            id_card_type,\n            card_num,\n            physical_id\n          }\n        }\n      }\n      switch (product_type) {\n        case this.PRODUCT_TYPE.MEMBER_CARD:\n          this.onMember(props)\n          break\n        case this.PRODUCT_TYPE.DEPOSIT_CARD:\n          this.onDeposit(props)\n          break\n        case this.PRODUCT_TYPE.PERSONAL_COURSE:\n          this.onPersonalCourse(props)\n          break\n        case this.PRODUCT_TYPE.PACKAGE:\n          this.onPackage(props)\n          break\n        case this.PRODUCT_TYPE.CABINET:\n          this.onCabinet(props)\n          break\n        case this.PRODUCT_TYPE.SMALL_COURSE:\n          this.onSmallCourse(props)\n          break\n      }\n    },\n    // 签单成功回调\n    async saleCallBack(result, type) {\n      if (result.type === 'create') {\n        // 创建订单成功\n        let props = {\n          order_id: result.orderId,\n          type,\n          message: '订单创建成功',\n          needPay: true\n        }\n        let orderSuccessRes = await this.createdGatheringTip(props)\n        this.tipCallBack(result.orderId, type, orderSuccessRes.type)\n      } else if (result.type === 'createPay') {\n        // 创建订单成功 并且到支付页面\n        let props = {\n          order_id: result.orderId,\n          type\n        }\n        let payOrderRes = await this.createdOrderPay(props)\n        this.payCallBack(result.orderId, type, payOrderRes.type, payOrderRes)\n      }\n    },\n    // 打印小票\n    printOrder(order_id) {\n      window.open(\n        '/ticket/gathering-print?id=' + order_id,\n        '_blank',\n        'width=800,height=600'\n      )\n    },\n    // 会员卡签单\n    onMember(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-member-card',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'member')\n          }\n        }\n      })\n    },\n    // 储值卡签单\n    onDeposit(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-deposit-card',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'deposit')\n          }\n        }\n      })\n    },\n    // 储物柜签单\n    onCabinet(props) {\n      props.id = '0' // 默认传0，因为没有选择具体的柜子\n      props.areaId = props.id\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-cabinet',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'cabinet_order')\n          }\n        }\n      })\n    },\n    // 课程包签单\n    onPackage(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-course',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'package')\n          }\n        }\n      })\n    },\n    // 私教课签单\n    onPersonalCourse(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-personal-course',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'personal')\n          }\n        }\n      })\n    },\n    // 小班课签单\n    onSmallCourse(props) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-small-course',\n        props,\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'small_course_order/detail')\n          }\n        }\n      })\n    },\n    // 打印合同\n    createdOrderPrint(order_id) {\n      let url = `${window.location.origin}/common/contract-preview?id=${order_id}`\n      this.ossService.openNewTab(url)\n    },\n    // 查看订单\n    createdOrderViewOrder(order_id) {\n      this.$router.push({\n        name: 'shop-finance-order-info-collection-details',\n        query: {\n          id: order_id\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}