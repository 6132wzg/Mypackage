{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/controller-mixin.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/controller-mixin.js","mtime":1591147717498},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import { isFunction, forEach } from 'lodash-es';\nimport { plusHook } from 'vue-router-plus';\nimport Multiguard from 'vue-router-multiguard';\n\nvar createController = function createController(Ctrl, container) {\n  var ctrl;\n  var mixin = {\n    beforeRouteEnter: [function (to, from, next) {\n      ctrl = container.get(Ctrl);\n      next();\n    }, function (to, from, next) {\n      if (!ctrl) {\n        next();\n      }\n\n      var beforeHooks = [];\n\n      if (isFunction(ctrl.beforeEach)) {\n        beforeHooks.push(plusHook(ctrl.beforeEach.bind(ctrl)));\n      }\n\n      if (isFunction(ctrl.beforeRouteEnter)) {\n        beforeHooks.push(plusHook(ctrl.beforeRouteEnter.bind(ctrl)));\n      }\n\n      return Multiguard(beforeHooks)(to, from, next);\n    }],\n    beforeRouteUpdate: [function (to, from, next) {\n      if (!ctrl) {\n        next();\n      }\n\n      var updateHooks = [];\n\n      if (isFunction(ctrl.beforeEach)) {\n        updateHooks.push(plusHook(ctrl.beforeEach.bind(ctrl)));\n      }\n\n      if (isFunction(ctrl.beforeRouteUpdate)) {\n        updateHooks.push(plusHook(ctrl.beforeRouteUpdate.bind(ctrl)));\n      }\n\n      return Multiguard(updateHooks)(to, from, next);\n    }],\n    beforeRouteLeave: [],\n    beforeCreate: [function () {\n      var _this = this;\n\n      if (!ctrl) {\n        return;\n      }\n\n      if (isFunction(ctrl.beforeCreate)) {\n        this.$root._skeletonLoading = true;\n        var ret = ctrl.beforeCreate.call(ctrl);\n\n        if (ret && ret.subscribe) {\n          ret.subscribe(function () {\n            _this.$root._skeletonLoading = false;\n          }, function () {\n            _this.$root._skeletonLoading = false;\n          });\n        }\n\n        return ret;\n      }\n    }],\n    beforeDestroy: [function () {\n      container.destroy(Ctrl);\n      ctrl = null;\n    }]\n  };\n  return mixin;\n};\n\nexport default createController;",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/controller-mixin.js"],"names":["isFunction","forEach","plusHook","Multiguard","createController","Ctrl","container","ctrl","mixin","beforeRouteEnter","to","from","next","get","beforeHooks","beforeEach","push","bind","beforeRouteUpdate","updateHooks","beforeRouteLeave","beforeCreate","$root","_skeletonLoading","ret","call","subscribe","beforeDestroy","destroy"],"mappings":"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","sourcesContent":["import { isFunction, forEach } from 'lodash-es'\nimport { plusHook } from 'vue-router-plus'\nimport Multiguard from 'vue-router-multiguard'\n\nconst createController = (Ctrl, container) => {\n  let ctrl\n  const mixin = {\n    beforeRouteEnter: [\n      function(to, from, next) {\n        ctrl = container.get(Ctrl)\n        next()\n      },\n      function(to, from, next) {\n        if (!ctrl) {\n          next()\n        }\n        const beforeHooks = []\n        if (isFunction(ctrl.beforeEach)) {\n          beforeHooks.push(plusHook(ctrl.beforeEach.bind(ctrl)))\n        }\n        if (isFunction(ctrl.beforeRouteEnter)) {\n          beforeHooks.push(plusHook(ctrl.beforeRouteEnter.bind(ctrl)))\n        }\n        return Multiguard(beforeHooks)(to, from, next)\n      }\n    ],\n    beforeRouteUpdate: [\n      function(to, from, next) {\n        if (!ctrl) {\n          next()\n        }\n        const updateHooks = []\n        if (isFunction(ctrl.beforeEach)) {\n          updateHooks.push(plusHook(ctrl.beforeEach.bind(ctrl)))\n        }\n        if (isFunction(ctrl.beforeRouteUpdate)) {\n          updateHooks.push(plusHook(ctrl.beforeRouteUpdate.bind(ctrl)))\n        }\n        return Multiguard(updateHooks)(to, from, next)\n      }\n    ],\n    beforeRouteLeave: [],\n    beforeCreate: [\n      function() {\n        if (!ctrl) {\n          return\n        }\n        if (isFunction(ctrl.beforeCreate)) {\n          this.$root._skeletonLoading = true\n          const ret = ctrl.beforeCreate.call(ctrl)\n          if (ret && ret.subscribe) {\n            ret.subscribe(\n              () => {\n                this.$root._skeletonLoading = false\n              },\n              () => {\n                this.$root._skeletonLoading = false\n              }\n            )\n          }\n          return ret\n        }\n      }\n    ],\n    beforeDestroy: [\n      function() {\n        container.destroy(Ctrl)\n        ctrl = null\n      }\n    ]\n  }\n  return mixin\n}\n\nexport default createController\n"]}]}