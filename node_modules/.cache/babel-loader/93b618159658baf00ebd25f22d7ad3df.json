{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/bind.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/bind.vue","mtime":1591147717008},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { LoginService } from \"../login.service\";\nimport { ruleOptions } from \"./login.config\";\nimport NoCaptcha from \"./no-captcha\";\nimport { PatternService } from '@/services/pattern.service';\nimport { NoCaptchaService } from '@/services/no-captcha.service';\nimport InputPhone from '@/views/biz-components/input-phone/input-phone';\nimport InputPhoneCode from '@/views/biz-components/input-phone-code/input-phone-code';\nimport { cloneDeep } from 'lodash-es';\nexport default {\n  name: 'LoginUserBind',\n  bem: {\n    b: 'page-login-bind',\n    bHead: 'head'\n  },\n  components: {\n    NoCaptcha: NoCaptcha,\n    InputPhone: InputPhone,\n    InputPhoneCode: InputPhoneCode\n  },\n  serviceInject: function serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService,\n      noCaptchaService: NoCaptchaService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.loginService.loading$\n    };\n  },\n  props: {\n    value: {\n      type: Object\n    }\n  },\n  mounted: function mounted() {\n    var params = {\n      code_id: 37,\n      phone_code: 86,\n      phone: ''\n    };\n\n    if (this.value && this.value.country_phone) {\n      params = this.value.country_phone;\n    }\n\n    this.form.setFieldsValue({\n      country_phone: params\n    });\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      isCountTime: false,\n      countryInfo: {}\n    };\n  },\n  methods: {\n    onClickCaptcha: function onClickCaptcha() {\n      var _this = this;\n\n      this.form.validate(['country_phone']).then(function (values) {\n        var country_phone = values.country_phone;\n        var params = {\n          phone: country_phone.phone,\n          country_code_id: country_phone.code_id,\n          is_bind: 2\n        };\n\n        _this.getCaptcha(params);\n      });\n    },\n    getCaptcha: function getCaptcha(params) {\n      var _this2 = this;\n\n      var nvc_val = this.noCaptchaService.generateNVCVal();\n\n      if (!nvc_val) {\n        return;\n      }\n\n      params.nvc_val = nvc_val;\n      this.loginService.getCaptcha(params).subscribe(function (res) {\n        _this2.noCaptchaService.resetNVC();\n\n        _this2.isCountTime = true;\n      }, this.errorHandler);\n    },\n    errorHandler: function errorHandler(err) {\n      var code = err.response.code;\n\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code);\n        return;\n      }\n\n      this.noCaptchaService.resetNVC();\n    },\n    endCount: function endCount() {\n      this.isCountTime = false;\n    },\n    onSelectCountry: function onSelectCountry(event) {\n      this.countryInfo = event;\n    },\n    onBind: function onBind() {\n      var _this3 = this;\n\n      this.form.validate().then(function (values) {\n        var params = cloneDeep(values);\n        var country_phone = values.country_phone;\n        params.account = values.name;\n        params.phone = country_phone.phone;\n        params.pwd = values.password;\n        params.country_code_id = country_phone.code_id;\n        delete params.country_phone;\n        delete params.name;\n        delete params.password;\n\n        _this3.$emit('click', params);\n      });\n    }\n  }\n};",null]}