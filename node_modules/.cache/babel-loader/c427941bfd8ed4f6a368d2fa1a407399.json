{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/staff/re-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/staff/re-password.vue","mtime":1591147717254},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport StaffInfo from \"./staff-info\";\nimport { RePasswordService } from \"./re-password.service\";\nimport { ruleOptions } from \"./re-password.config\";\nexport default {\n  name: 'RePassword',\n  serviceInject: function serviceInject() {\n    return {\n      rePasswordService: RePasswordService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.rePasswordService.loading$,\n      rePasswordInfo: this.rePasswordService.rePasswordInfo$\n    };\n  },\n  components: {\n    StaffInfo: StaffInfo\n  },\n  props: {\n    staff: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      openJurisdiction: false,\n      openRepassword: false,\n      // 重置密码\n      show: false\n    };\n  },\n  computed: {\n    is_permission: function is_permission() {\n      return this.rePasswordInfo.is_permission;\n    },\n    hasAccountName: function hasAccountName() {\n      return this.rePasswordInfo.account_name;\n    },\n    bindAccount: function bindAccount() {\n      return this.rePasswordInfo && this.rePasswordInfo.wechat && this.rePasswordInfo.mail && this.rePasswordInfo.phone && this.rePasswordInfo.QQ;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    changePermission: function changePermission(e) {\n      this.openJurisdiction = e.target.checked;\n    },\n    init: function init() {\n      var _this = this;\n\n      this.rePasswordService.getRePassword(this.staff.id).subscribe(function (res) {\n        res = res.account;\n        _this.openJurisdiction = !!res.is_permission;\n        var form = {\n          password: res.password,\n          repeat_password: res.repeat_password\n        };\n\n        if (_this.hasAccountName) {\n          form = Object.assign(form, {\n            name: res.account_name\n          });\n        }\n\n        _this.openRepassword && _this.form.setFieldsValue(form);\n      });\n    },\n    onClickRePassword: function onClickRePassword() {\n      this.openRepassword = true;\n    },\n    onSubmit: function onSubmit() {\n      var _this2 = this;\n\n      this.form.validate().then(function (values) {\n        var form = _objectSpread({\n          id: _this2.staff.id,\n          is_permission: +_this2.openJurisdiction\n        }, values);\n\n        if (!_this2.hasAccountName) {\n          if (values.name && values.password && values.repeat_password) {\n            _this2.rePasswordService.setAccount(form).subscribe(function () {\n              _this2.show = false;\n\n              _this2.$router.reload();\n            });\n          } else {\n            _this2.rePasswordService.updatepermission(_this2.staff.id, {\n              is_permission: +_this2.openJurisdiction\n            }).subscribe(function () {\n              _this2.show = false;\n\n              _this2.$router.reload();\n            });\n          }\n        } else {\n          if (values.password && values.repeat_password) {\n            _this2.rePasswordService.rePassword(form).subscribe(function () {\n              _this2.show = false;\n\n              _this2.$router.reload();\n            });\n          } else {\n            _this2.rePasswordService.updatepermission(_this2.staff.id, {\n              is_permission: +_this2.openJurisdiction\n            }).subscribe(function () {\n              _this2.show = false;\n\n              _this2.$router.reload();\n            });\n          }\n\n          _this2.show = false;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["re-password.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <st-modal\n    class=\"modal-staff-delete\"\n    title=\"管理登录账号\"\n    @ok=\"onSubmit\"\n    size=\"small\"\n    :confirmLoading=\"\n      openRepassword ? loading.getRePassword : loading.setAccount\n    \"\n    v-model=\"show\"\n  >\n    <staff-info :staff=\"staff\"></staff-info>\n    <div>\n      <st-form :form=\"form\">\n        <st-form-item label=\"系统权限\">\n          <a-checkbox\n            :checked=\"openJurisdiction\"\n            @change.stop=\"changePermission\"\n          >\n            开通系统使用权限\n          </a-checkbox>\n        </st-form-item>\n        <!-- 账号重置 -->\n        <st-form-item label=\"登录账号\" v-if=\"hasAccountName\">\n          <span>{{ rePasswordInfo.account_name }}</span>\n          <span style=\"color: #1890FF\" @click=\"onClickRePassword\">\n            重置密码\n          </span>\n        </st-form-item>\n        <!-- 新账号注册 -->\n        <st-form-item\n          label=\"登录账号\"\n          v-if=\"!hasAccountName && openJurisdiction\"\n          required\n        >\n          <a-input\n            placeholder=\"6～18个字符，可使用字母，数字，下划线\"\n            v-decorator=\"decorators.name\"\n            autocomplete=\"off\"\n          />\n        </st-form-item>\n        <st-form-item\n          label=\"登录密码\"\n          v-if=\"!hasAccountName && openJurisdiction\"\n          required\n        >\n          <a-input\n            type=\"password\"\n            autocomplete=\"new_password\"\n            v-decorator=\"decorators.password\"\n            placeholder=\"6~15个字符，区分大小写\"\n          />\n        </st-form-item>\n        <st-form-item\n          label=\"确认密码\"\n          v-if=\"!hasAccountName && openJurisdiction\"\n          required\n        >\n          <a-input\n            type=\"password\"\n            autocomplete=\"new_password\"\n            v-decorator=\"decorators.repeat_password\"\n            placeholder=\"请再次填写密码\"\n          />\n        </st-form-item>\n        <!-- 登录重置密码 -->\n        <st-form-item label=\"登录密码\" v-if=\"openRepassword\" required>\n          <a-input\n            v-decorator=\"decorators.password\"\n            placeholder=\"6~15个字符，区分大小写\"\n            type=\"password\"\n            autocomplete=\"new_password\"\n          />\n        </st-form-item>\n        <st-form-item label=\"确认密码\" v-if=\"openRepassword\" required>\n          <a-input\n            v-decorator=\"decorators.repeat_password\"\n            placeholder=\"请再次填写密码\"\n            type=\"password\"\n            autocomplete=\"new_password\"\n          />\n        </st-form-item>\n        <!-- 绑定账号 -->\n        <st-form-item label=\"账号绑定\" v-if=\"bindAccount\">\n          <div v-if=\"rePasswordInfo.wechat\">\n            <span>绑定微信号</span>\n            <span>{{ rePasswordInfo.wechat }}</span>\n          </div>\n          <div v-if=\"rePasswordInfo.mail\">\n            <span>绑定邮箱</span>\n            <span>{{ rePasswordInfo.mail }}</span>\n          </div>\n          <div v-if=\"rePasswordInfo.phone\">\n            <span>绑定手机</span>\n            <span>{{ rePasswordInfo.phone }}</span>\n          </div>\n          <div v-if=\"rePasswordInfo.QQ\">\n            <span>绑定qq</span>\n            <span>{{ rePasswordInfo.QQ }}</span>\n          </div>\n        </st-form-item>\n      </st-form>\n    </div>\n  </st-modal>\n</template>\n\n<script>\nimport StaffInfo from './staff-info'\nimport { RePasswordService } from './re-password.service'\nimport { ruleOptions } from './re-password.config'\nexport default {\n  name: 'RePassword',\n  serviceInject() {\n    return {\n      rePasswordService: RePasswordService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.rePasswordService.loading$,\n      rePasswordInfo: this.rePasswordService.rePasswordInfo$\n    }\n  },\n  components: {\n    StaffInfo\n  },\n  props: {\n    staff: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      openJurisdiction: false,\n      openRepassword: false, // 重置密码\n      show: false\n    }\n  },\n  computed: {\n    is_permission() {\n      return this.rePasswordInfo.is_permission\n    },\n    hasAccountName() {\n      return this.rePasswordInfo.account_name\n    },\n    bindAccount() {\n      return (\n        this.rePasswordInfo &&\n        this.rePasswordInfo.wechat &&\n        this.rePasswordInfo.mail &&\n        this.rePasswordInfo.phone &&\n        this.rePasswordInfo.QQ\n      )\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    changePermission(e) {\n      this.openJurisdiction = e.target.checked\n    },\n    init() {\n      this.rePasswordService.getRePassword(this.staff.id).subscribe(res => {\n        res = res.account\n        this.openJurisdiction = !!res.is_permission\n        let form = {\n          password: res.password,\n          repeat_password: res.repeat_password\n        }\n        if (this.hasAccountName) {\n          form = Object.assign(form, {\n            name: res.account_name\n          })\n        }\n        this.openRepassword && this.form.setFieldsValue(form)\n      })\n    },\n    onClickRePassword() {\n      this.openRepassword = true\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const form = {\n          id: this.staff.id,\n          is_permission: +this.openJurisdiction,\n          ...values\n        }\n        if (!this.hasAccountName) {\n          if (values.name && values.password && values.repeat_password) {\n            this.rePasswordService.setAccount(form).subscribe(() => {\n              this.show = false\n              this.$router.reload()\n            })\n          } else {\n            this.rePasswordService\n              .updatepermission(this.staff.id, {\n                is_permission: +this.openJurisdiction\n              })\n              .subscribe(() => {\n                this.show = false\n                this.$router.reload()\n              })\n          }\n        } else {\n          if (values.password && values.repeat_password) {\n            this.rePasswordService.rePassword(form).subscribe(() => {\n              this.show = false\n              this.$router.reload()\n            })\n          } else {\n            this.rePasswordService\n              .updatepermission(this.staff.id, {\n                is_permission: +this.openJurisdiction\n              })\n              .subscribe(() => {\n                this.show = false\n                this.$router.reload()\n              })\n          }\n          this.show = false\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/staff"}]}