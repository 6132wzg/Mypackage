{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/small-course/add#/create-group-course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/small-course/add#/create-group-course.vue","mtime":1597396799991},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { AddService } from \"../add.service\";\nimport { MessageService } from '@/services/message.service';\nimport { UserService } from '@/services/user.service';\nimport { ruleOptions } from \"../form.config\";\nimport { PatternService } from '@/services/pattern.service';\nimport CardBgRadio from '@/views/biz-components/card-bg-radio/card-bg-radio';\nimport StEditor from '@/views/biz-components/st/editor/editor.vue';\nexport default {\n  name: 'create-group-course',\n  serviceInject: function serviceInject() {\n    return {\n      addService: AddService,\n      messageService: MessageService,\n      userService: UserService,\n      pattern: PatternService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.addService.loading$,\n      rangeList: this.addService.rangeList$,\n      isAllowLeave: this.addService.isAllowLeave$\n    };\n  },\n  bem: {\n    b: 'create-group-course'\n  },\n  components: {\n    CardBgRadio: CardBgRadio,\n    StEditor: StEditor\n  },\n  data: function data(vm) {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      bg_image: {\n        image_id: 0,\n        image_key: '',\n        image_url: '',\n        index: 1\n      },\n      isShowLeaveContent: false\n    };\n  },\n  methods: {\n    save: function save(e) {\n      var _this = this;\n\n      e.preventDefault();\n      this.form.validate().then(function (values) {\n        values.course_begin_time = values.date[0].format('YYYY-MM-DD');\n        values.course_end_time = values.date[1].format('YYYY-MM-DD');\n        values.small_course_type = _this.$route.query.type;\n        values.image = _this.bg_image;\n        values.img_type = _this.bg_image.index;\n\n        if (!_this.isShowLeaveContent) {\n          delete values.leave_hours;\n          delete values.leave_limit;\n        }\n\n        if (_this.bg_image.index === 0) {\n          values.img_type = 3;\n\n          if (!_this.bg_image.image_url) {\n            _this.messageService.error({\n              content: '请上传图片'\n            });\n\n            return;\n          }\n        }\n\n        delete values.date;\n\n        _this.addService.addGroup(values).subscribe(function (res) {\n          _this.messageService.success({\n            content: '提交成功'\n          });\n\n          _this.$emit('goNext', res.course_id);\n        });\n      });\n    },\n    onLimitChange: function onLimitChange(e) {\n      this.isShowLeaveContent = e.target.value === 1;\n    },\n    onCourseTypeChange: function onCourseTypeChange(category_id) {\n      this.form.setFieldsValue({\n        category_id: category_id\n      });\n    },\n    onCourseNameChange: function onCourseNameChange(e) {\n      this.$emit('onCourseNameChange', e.target.value);\n    },\n    disabledDate: function disabledDate(current) {\n      return current && current.format('YYYY-MM-DD') < moment().add(1, 'day').format('YYYY-MM-DD');\n    }\n  }\n};",null]}