{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/total#/total.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/total#/total.vue","mtime":1600926556068},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { swiper, swiperSlide } from 'vue-awesome-swiper';\nimport StTotalItem from \"./total-item.vue\";\nimport 'swiper/dist/css/swiper.css';\nimport moment from 'moment';\nexport default {\n  name: 'StTotal',\n  bem: {\n    b: 'st-total'\n  },\n  components: {\n    swiper: swiper,\n    swiperSlide: swiperSlide,\n    StTotalItem: StTotalItem\n  },\n  props: {\n    indexs: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    dataSource: {\n      type: Object,\n      default: function _default() {}\n    },\n    hasTitle: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      show: true,\n      dWidth: 0\n    };\n  },\n  mounted: function mounted() {\n    this.getDiffWidth();\n  },\n  methods: {\n    // 计算页面宽度 与 组件内容容器宽度的差值\n    getDiffWidth: function getDiffWidth() {\n      var _this = this;\n\n      var pageWidth = document.body.clientWidth;\n      var contentWidth = this.$refs.content.offsetWidth;\n      this.dWidth += pageWidth > contentWidth ? pageWidth - contentWidth : 0; // console.log(pageWidth, contentWidth)\n      // 差值改变需要重新计算 breakponts 和 slidesPerView, 使用v-if 达到刷新 swiper的 options\n\n      this.show = false;\n\n      if (!this.show) {\n        setTimeout(function () {\n          _this.show = true;\n        }, 50);\n      }\n    },\n    // 计算字符串宽度宽度\n    getTextWidth: function getTextWidth(str, fontSize) {\n      var result = 100;\n      var ele = document.createElement('span');\n      ele.innerText = str;\n      ele.setAttribute('style', \"position: absolute; font-size: \".concat(fontSize, \"px; opacity: 0\"));\n      document.documentElement.append(ele);\n      if (ele && ele.offsetWidth) result = ele.offsetWidth;\n      document.documentElement.removeChild(ele); // 加上 item 的padding宽度\n\n      return result + 20;\n    }\n  },\n  watch: {\n    dataSource: {\n      deep: true,\n      handler: function handler() {\n        var _this2 = this;\n\n        this.show = false;\n\n        if (!this.show) {\n          setTimeout(function () {\n            _this2.show = true;\n          }, 50);\n        }\n      }\n    }\n  },\n  computed: {\n    showData: function showData() {\n      var _this3 = this;\n\n      var templateData = []; // for (let item in this.dataSource) {\n      // }\n\n      this.indexs.forEach(function (ele) {\n        templateData.push({\n          label: ele.titleTotal || ele.title,\n          value: _this3.dataSource[ele.dataIndex],\n          unit: ele.unit || '',\n          slotName: ele.scopedSlots ? ele.scopedSlots.customRender : ''\n        });\n      });\n      return templateData;\n    },\n    itemMaxWidth: function itemMaxWidth() {\n      var _this4 = this;\n\n      var maxWidth = 100; // 计算所有 item 长度 取最大值\n\n      this.indexs.map(function (item) {\n        var titleW = _this4.getTextWidth(item.titleTotal || item.title, 14);\n\n        var value = +_this4.dataSource[item.dataIndex] || 0;\n        value = value.toString().includes('.') ? value.toFixed(1) : value;\n\n        var valueW = _this4.getTextWidth((item.unit || '') + value, _this4.hasTitle ? 20 : 24); // console.log(\n        //   item.titleTotal || item.title,\n        //   titleW,\n        //   '¥' + (this.dataSource[item.dataIndex] || 0),\n        //   valueW\n        // )\n\n\n        maxWidth = Math.max(titleW, valueW, maxWidth);\n      }); // console.log('最大值', maxWidth)\n\n      return maxWidth;\n    },\n    slidesPerView: function slidesPerView() {\n      return Math.floor((1920 - this.dWidth) / this.itemMaxWidth);\n    },\n    // 设置不懂屏幕宽度下 可容纳item的最大数量\n    breakpoints: function breakpoints() {\n      var _this5 = this;\n\n      var w = 1200;\n      var minSize = Math.floor((w - this.dWidth) / this.itemMaxWidth);\n      w = minSize * this.itemMaxWidth + this.dWidth;\n      var breakpointsArr = [w];\n\n      while (w < 1920) {\n        w += this.itemMaxWidth;\n        breakpointsArr.push(w);\n      }\n\n      var breakpoints = {};\n      breakpointsArr.map(function (item, index) {\n        var num = Math.floor((item - _this5.dWidth) / _this5.itemMaxWidth);\n        breakpoints[item] = {\n          slidesPerView: num - (index === 0 ? 0 : 1)\n        };\n      }); // console.log('屏幕宽度 - 内容宽度', this.dWidth)\n      // console.log('变更节点配置', breakpoints)\n\n      return breakpoints;\n    },\n    // 获取最小宽度下可排放的item数量\n    minSlideLen: function minSlideLen() {\n      var w = 1280;\n      var minSize = Math.floor((w - this.dWidth) / this.itemMaxWidth);\n      w = minSize * this.itemMaxWidth + this.dWidth;\n      return this.breakpoints[w].slidesPerView;\n    },\n    timestamp: function timestamp() {\n      return moment().valueOf();\n    },\n    prevClass: function prevClass() {\n      return \"swiper-\".concat(this.timestamp, \"-button-prev\");\n    },\n    nextClass: function nextClass() {\n      return \"swiper-\".concat(this.timestamp, \"-button-next\");\n    },\n    navigationButtons: function navigationButtons() {\n      return {\n        nextEl: \".\".concat(this.nextClass),\n        prevEl: \".\".concat(this.prevClass)\n      };\n    },\n    sliderOptions: function sliderOptions() {\n      return {\n        autoplay: false,\n        navigation: _objectSpread({}, this.navigationButtons),\n        // Default parameters\n        // slidesPerView: 6,\n        // breakpoints: {\n        //   // when window width is >= 1280px\n        //   1440: {\n        //     slidesPerView: 4\n        //   }\n        // },\n        slidesPerView: this.slidesPerView,\n        breakpoints: this.breakpoints,\n        centeredSlides: false,\n        normalizeSlideIndex: false // ...this.options\n\n      };\n    }\n  }\n};",{"version":3,"sources":["total.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div v-if=\"hasTitle\" :class=\"b('title')\">\n      <slot name=\"title\">\n        <span :class=\"b('tip')\">本次筛选</span>\n        <st-t3 :class=\"b('t3')\">合计</st-t3>\n      </slot>\n    </div>\n    <div :class=\"b('content-wapper')\">\n      <div :class=\"[b('content'), !hasTitle ? b('content--full') : '']\">\n        <div\n          v-if=\"showData.length > minSlideLen\"\n          :class=\"prevClass\"\n          class=\"swiper-total-button-prev swiper-button-prev\"\n          slot=\"button-prev\"\n        >\n          <st-icon type=\"arrow-left\" class=\"arrow-left\" />\n        </div>\n        <div :class=\"b('item')\" ref=\"content\">\n          <swiper v-if=\"show\" :options=\"sliderOptions\" ref=\"swiperTotal\">\n            <swiper-slide\n              v-for=\"(item, index) in showData\"\n              :class=\"{ 'st-total-item__active': item.slotName }\"\n              :key=\"index\"\n            >\n              <slot :name=\"item.slotName\" v-bind=\"item\">\n                <st-total-item\n                  :unit=\"item.unit\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                ></st-total-item>\n              </slot>\n            </swiper-slide>\n          </swiper>\n        </div>\n\n        <div\n          v-if=\"showData.length > minSlideLen\"\n          :class=\"nextClass\"\n          class=\"swiper-total-button-next swiper-button-next\"\n          slot=\"button-next\"\n        >\n          <st-icon type=\"arrow-right\" class=\"arrow-right\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\nimport StTotalItem from './total-item.vue'\nimport 'swiper/dist/css/swiper.css'\nimport moment from 'moment'\nexport default {\n  name: 'StTotal',\n  bem: {\n    b: 'st-total'\n  },\n  components: {\n    swiper,\n    swiperSlide,\n    StTotalItem\n  },\n  props: {\n    indexs: {\n      type: Array,\n      default: () => []\n    },\n    dataSource: {\n      type: Object,\n      default: () => {}\n    },\n    hasTitle: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      show: true,\n      dWidth: 0\n    }\n  },\n  mounted() {\n    this.getDiffWidth()\n  },\n  methods: {\n    // 计算页面宽度 与 组件内容容器宽度的差值\n    getDiffWidth() {\n      const pageWidth = document.body.clientWidth\n      const contentWidth = this.$refs.content.offsetWidth\n      this.dWidth += pageWidth > contentWidth ? pageWidth - contentWidth : 0\n      // console.log(pageWidth, contentWidth)\n      // 差值改变需要重新计算 breakponts 和 slidesPerView, 使用v-if 达到刷新 swiper的 options\n      this.show = false\n      if (!this.show) {\n        setTimeout(() => {\n          this.show = true\n        }, 50)\n      }\n    },\n    // 计算字符串宽度宽度\n    getTextWidth(str, fontSize) {\n      let result = 100\n      let ele = document.createElement('span')\n      ele.innerText = str\n      ele.setAttribute(\n        'style',\n        `position: absolute; font-size: ${fontSize}px; opacity: 0`\n      )\n      document.documentElement.append(ele)\n      if (ele && ele.offsetWidth) result = ele.offsetWidth\n      document.documentElement.removeChild(ele)\n      // 加上 item 的padding宽度\n      return result + 20\n    }\n  },\n  watch: {\n    dataSource: {\n      deep: true,\n      handler() {\n        this.show = false\n        if (!this.show) {\n          setTimeout(() => {\n            this.show = true\n          }, 50)\n        }\n      }\n    }\n  },\n  computed: {\n    showData() {\n      let templateData = []\n      // for (let item in this.dataSource) {\n\n      // }\n      this.indexs.forEach(ele => {\n        templateData.push({\n          label: ele.titleTotal || ele.title,\n          value: this.dataSource[ele.dataIndex],\n          unit: ele.unit || '',\n          slotName: ele.scopedSlots ? ele.scopedSlots.customRender : ''\n        })\n      })\n      return templateData\n    },\n    itemMaxWidth() {\n      let maxWidth = 100\n      // 计算所有 item 长度 取最大值\n      this.indexs.map(item => {\n        let titleW = this.getTextWidth(item.titleTotal || item.title, 14)\n        let value = +this.dataSource[item.dataIndex] || 0\n        value = value.toString().includes('.') ? value.toFixed(1) : value\n        let valueW = this.getTextWidth(\n          (item.unit || '') + value,\n          this.hasTitle ? 20 : 24\n        )\n        // console.log(\n        //   item.titleTotal || item.title,\n        //   titleW,\n        //   '¥' + (this.dataSource[item.dataIndex] || 0),\n        //   valueW\n        // )\n        maxWidth = Math.max(titleW, valueW, maxWidth)\n      })\n      // console.log('最大值', maxWidth)\n      return maxWidth\n    },\n    slidesPerView() {\n      return Math.floor((1920 - this.dWidth) / this.itemMaxWidth)\n    },\n    // 设置不懂屏幕宽度下 可容纳item的最大数量\n    breakpoints() {\n      let w = 1200\n      let minSize = Math.floor((w - this.dWidth) / this.itemMaxWidth)\n      w = minSize * this.itemMaxWidth + this.dWidth\n      let breakpointsArr = [w]\n      while (w < 1920) {\n        w += this.itemMaxWidth\n        breakpointsArr.push(w)\n      }\n      const breakpoints = {}\n      breakpointsArr.map((item, index) => {\n        let num = Math.floor((item - this.dWidth) / this.itemMaxWidth)\n        breakpoints[item] = {\n          slidesPerView: num - (index === 0 ? 0 : 1)\n        }\n      })\n      // console.log('屏幕宽度 - 内容宽度', this.dWidth)\n      // console.log('变更节点配置', breakpoints)\n      return breakpoints\n    },\n    // 获取最小宽度下可排放的item数量\n    minSlideLen() {\n      let w = 1280\n      let minSize = Math.floor((w - this.dWidth) / this.itemMaxWidth)\n      w = minSize * this.itemMaxWidth + this.dWidth\n      return this.breakpoints[w].slidesPerView\n    },\n    timestamp() {\n      return moment().valueOf()\n    },\n    prevClass() {\n      return `swiper-${this.timestamp}-button-prev`\n    },\n    nextClass() {\n      return `swiper-${this.timestamp}-button-next`\n    },\n    navigationButtons() {\n      return {\n        nextEl: `.${this.nextClass}`,\n        prevEl: `.${this.prevClass}`\n      }\n    },\n    sliderOptions() {\n      return {\n        autoplay: false,\n        navigation: { ...this.navigationButtons },\n        // Default parameters\n        // slidesPerView: 6,\n        // breakpoints: {\n        //   // when window width is >= 1280px\n        //   1440: {\n        //     slidesPerView: 4\n        //   }\n        // },\n        slidesPerView: this.slidesPerView,\n        breakpoints: this.breakpoints,\n        centeredSlides: false,\n        normalizeSlideIndex: false\n        // ...this.options\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/components/total#"}]}