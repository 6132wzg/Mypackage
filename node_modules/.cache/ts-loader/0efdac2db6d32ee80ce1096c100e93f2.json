{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/services/auth.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/services/auth.service.ts","mtime":1600912105153},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d, _e;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable, ServiceRouter } from 'vue-service-app';\nimport { State, Computed } from 'rx-state';\nimport { tap, map } from 'rxjs/operators';\nimport { AuthApi } from '@/api/v1/common/auth';\nimport { get, forEach, pick } from 'lodash-es';\nimport { NProgressService } from \"./nprogress.service\";\nimport { NotificationService } from \"./notification.service\";\nimport { UserService } from \"./user.service\";\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService(authApi, nprogress, notification, userService, router) {\n    _classCallCheck(this, AuthService);\n\n    this.authApi = authApi;\n    this.nprogress = nprogress;\n    this.notification = notification;\n    this.userService = userService;\n    this.router = router;\n    this.auth$ = new State([]);\n    this.authedTabMap$ = new State({});\n  }\n\n  _createClass(AuthService, [{\n    key: \"SET_AUTH\",\n    value: function SET_AUTH(auth) {\n      this.auth$.commit(function () {\n        return auth;\n      });\n    }\n  }, {\n    key: \"UPDATE_AUTHED_TAB_MAP\",\n    value: function UPDATE_AUTHED_TAB_MAP(key, authedTabs) {\n      this.authedTabMap$.commit(function (prevTabMap) {\n        prevTabMap[key] = authedTabs;\n      });\n    }\n  }, {\n    key: \"fetchList\",\n    value: function fetchList() {\n      var _this = this;\n\n      return this.authApi.getList().pipe(tap(function (res) {\n        _this.SET_AUTH(get(res, 'auth', []));\n      }));\n    }\n    /**\n     * 校验某权限是否在全局下拥有\n     */\n\n  }, {\n    key: \"can\",\n    value: function can(authKey) {\n      var authSnap = this.auth$.snapshot();\n      return authSnap.includes(authKey);\n    }\n    /**\n     * 通过map表获取当页的全局权限点\n     * @param authMapConfig 需要的权限点对象map表\n     */\n\n  }, {\n    key: \"authMap$\",\n    value: function authMap$() {\n      var authMapConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new Computed(this.auth$.pipe(map(function (authList) {\n        var _authMap = {};\n        forEach(authMapConfig, function (v, k) {\n          _authMap[k] = authList.includes(v);\n        });\n        return _authMap;\n      })));\n    }\n    /**\n     * 通过路由名称获取授权的tabs数组对象\n     * @param routeName 路由名称\n     * @param AuthTabConfig 选项\n     */\n\n  }, {\n    key: \"getAuthTabs$\",\n    value: function getAuthTabs$(routeName) {\n      var _this2 = this;\n\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        withQuery: []\n      };\n      return new Computed(this.authedTabMap$.pipe(map(function (authMap) {\n        if (!(routeName in authMap)) {\n          _this2.notification.error({\n            title: 'GET_AUTH_TABS_ERROR',\n            content: \"\\u4E0D\\u5B58\\u5728 \".concat(routeName, \" \\u4E0B\\u7684tabs\")\n          });\n        }\n\n        return authMap[routeName];\n      }), map(function (authTabs) {\n        return authTabs.map(function (tab) {\n          tab.route.query = pick(_this2.router.to.query, config.withQuery);\n          return tab;\n        });\n      })));\n    }\n    /**\n     * 通过路由名称计算可用的权限路由数组\n     * @param tabs 需要计算权限的tabs数组\n     */\n\n  }, {\n    key: \"calcAuthedTabsByTabs\",\n    value: function calcAuthedTabsByTabs(tabs) {\n      var _this3 = this;\n\n      var authedTabs = [];\n      tabs.forEach(function (routeName) {\n        var resolvedRoute = _this3.router.resolve({\n          name: routeName\n        }); // 查找对应的route下的auth权限点\n\n\n        var meta = resolvedRoute.route.meta;\n\n        if (!meta) {\n          return;\n        }\n\n        var tab = {\n          label: _this3.userService.interpolation(meta.title),\n          route: {\n            name: resolvedRoute.route.name\n          }\n        };\n\n        if (!meta.title) {\n          console.warn(\"[auth.service] \\u8BF7\\u914D\\u7F6E \".concat(routeName, \" \\u4E0B\\u7684meta.title \\u6807\\u9898\"));\n          authedTabs.push(tab);\n          return;\n        }\n\n        if (!meta.auth) {\n          console.warn(\"[auth.service] \\u8BF7\\u914D\\u7F6E \".concat(routeName, \" \\u4E0B\\u7684meta.auth \\u6743\\u9650\\u70B9\\uFF0C\\u9ED8\\u8BA4\\u663E\\u793A \"));\n          authedTabs.push(tab);\n          return;\n        }\n        /**\n         * 没有配置 直接显示\n         */\n\n\n        if (!meta.auth) {\n          authedTabs.push(tab);\n        } else {\n          if (_this3.can(meta.auth)) {\n            authedTabs.push(tab);\n          }\n        }\n      });\n      console.log('[auth.service] authedTabs', authedTabs);\n      return authedTabs;\n    }\n  }]);\n\n  return AuthService;\n}();\n\nAuthService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof AuthApi !== \"undefined\" && AuthApi) === \"function\" ? _a : Object, typeof (_b = typeof NProgressService !== \"undefined\" && NProgressService) === \"function\" ? _b : Object, typeof (_c = typeof NotificationService !== \"undefined\" && NotificationService) === \"function\" ? _c : Object, typeof (_d = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _d : Object, typeof (_e = typeof ServiceRouter !== \"undefined\" && ServiceRouter) === \"function\" ? _e : Object])], AuthService);\nexport { AuthService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/services/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Dictionary, ServiceRouter } from 'vue-service-app'\nimport { State, Computed } from 'rx-state'\nimport { tap, map } from 'rxjs/operators'\nimport { AuthApi } from '@/api/v1/common/auth'\nimport { get, forEach, pick } from 'lodash-es'\nimport { NProgressService } from './nprogress.service'\nimport { NotificationService } from './notification.service'\nimport { UserService } from './user.service'\n\ninterface AuthTabConfig {\n  /**\n   * 需要附加的query参数字段数组\n   */\n  withQuery: string[]\n}\n\n@Injectable()\nexport class AuthService {\n  auth$ = new State<Array<string>>([])\n  authedTabMap$ = new State<Dictionary<any>>({})\n  constructor(\n    private authApi: AuthApi,\n    private nprogress: NProgressService,\n    private notification: NotificationService,\n    private userService: UserService,\n    private router: ServiceRouter\n  ) {}\n  SET_AUTH(auth: any[]) {\n    this.auth$.commit(() => auth)\n  }\n  UPDATE_AUTHED_TAB_MAP(key: string, authedTabs: any[]) {\n    this.authedTabMap$.commit(prevTabMap => {\n      prevTabMap[key] = authedTabs\n    })\n  }\n  fetchList() {\n    return this.authApi.getList().pipe(\n      tap((res: any) => {\n        this.SET_AUTH(get(res, 'auth', []))\n      })\n    )\n  }\n  /**\n   * 校验某权限是否在全局下拥有\n   */\n  can(authKey: string) {\n    const authSnap = this.auth$.snapshot()\n    return authSnap.includes(authKey)\n  }\n  /**\n   * 通过map表获取当页的全局权限点\n   * @param authMapConfig 需要的权限点对象map表\n   */\n  authMap$(authMapConfig: object = {}) {\n    return new Computed(\n      this.auth$.pipe(\n        map(authList => {\n          const _authMap: any = {}\n          forEach(authMapConfig, (v, k) => {\n            _authMap[k] = authList.includes(v)\n          })\n          return _authMap\n        })\n      )\n    )\n  }\n  /**\n   * 通过路由名称获取授权的tabs数组对象\n   * @param routeName 路由名称\n   * @param AuthTabConfig 选项\n   */\n  getAuthTabs$(\n    routeName: string,\n    config: AuthTabConfig = {\n      withQuery: []\n    }\n  ) {\n    return new Computed(\n      this.authedTabMap$.pipe(\n        map(authMap => {\n          if (!(routeName in authMap)) {\n            this.notification.error({\n              title: 'GET_AUTH_TABS_ERROR',\n              content: `不存在 ${routeName} 下的tabs`\n            })\n          }\n          return authMap[routeName]\n        }),\n        map(authTabs => {\n          return authTabs.map((tab: any) => {\n            tab.route.query = pick(this.router.to.query, config.withQuery)\n            return tab\n          })\n        })\n      )\n    )\n  }\n  /**\n   * 通过路由名称计算可用的权限路由数组\n   * @param tabs 需要计算权限的tabs数组\n   */\n  calcAuthedTabsByTabs(tabs: string[]): string[] {\n    const authedTabs = [] as any[]\n    tabs.forEach(routeName => {\n      const resolvedRoute = this.router.resolve({\n        name: routeName\n      })\n      // 查找对应的route下的auth权限点\n      const meta = resolvedRoute.route.meta\n      if (!meta) {\n        return\n      }\n      const tab = {\n        label: this.userService.interpolation(meta.title),\n        route: {\n          name: resolvedRoute.route.name\n        }\n      }\n      if (!meta.title) {\n        console.warn(`[auth.service] 请配置 ${routeName} 下的meta.title 标题`)\n        authedTabs.push(tab)\n        return\n      }\n      if (!meta.auth) {\n        console.warn(\n          `[auth.service] 请配置 ${routeName} 下的meta.auth 权限点，默认显示 `\n        )\n        authedTabs.push(tab)\n        return\n      }\n      /**\n       * 没有配置 直接显示\n       */\n      if (!meta.auth) {\n        authedTabs.push(tab)\n      } else {\n        if (this.can(meta.auth)) {\n          authedTabs.push(tab)\n        }\n      }\n    })\n    console.log('[auth.service] authedTabs', authedTabs)\n    return authedTabs\n  }\n}\n"],"sourceRoot":""}]}