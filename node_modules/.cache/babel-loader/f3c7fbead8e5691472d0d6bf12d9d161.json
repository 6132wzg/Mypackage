{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/card/brand-member/shelf.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/card/brand-member/shelf.vue","mtime":1595230476655},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ShelfService } from \"./shelf.service\";\nimport { cloneDeep } from 'lodash-es';\nimport { PatternService } from '@/services/pattern.service';\nimport ShopHourPicker from '@/views/biz-components/shop-hour-picker/shop-hour-picker';\nimport { ruleOptions, shopColumns, admissionTimeList } from \"./shelf.config\";\nimport { BRAND_MEMBER } from '@/constants/card/brand-member';\nimport { MessageService } from '@/services/message.service';\nexport default {\n  name: 'ModalCardBrandMemberShelf',\n  bem: {\n    shelves: 'modal-card-batch-shelves'\n  },\n  components: {\n    ShopHourPicker: ShopHourPicker\n  },\n  serviceInject: function serviceInject() {\n    return {\n      pattern: PatternService,\n      messageService: MessageService,\n      shelfService: ShelfService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      courseData: this.shelfService.courseList$,\n      course_interests: this.shelfService.course_interests$,\n      activateTypes: this.shelfService.activateTypes$,\n      loading: this.shelfService.loading$,\n      info: this.shelfService.info$,\n      shelfCardDetail: this.shelfService.shelfCardDetail$\n    };\n  },\n  props: {\n    id: {\n      type: Number,\n      default: 0\n    },\n    shelf_id: {\n      type: Number,\n      default: 0\n    },\n    actionType: {\n      type: String,\n      default: 'shelf'\n    },\n    title: {\n      type: String,\n      default: '标题'\n    }\n  },\n  computed: {\n    shopColumns: shopColumns,\n    admissionTimeList: admissionTimeList,\n    shopList: function shopList() {\n      var shopList = [];\n\n      if (this.info.sell_shops) {\n        this.info.sell_shops.forEach(function (i) {\n          var id = parseInt(Math.random() * 999999).toString();\n          shopList.push(_objectSpread({}, i, {\n            key: id\n          }));\n        });\n      }\n\n      return shopList;\n    },\n    admissionTimeIsOk: function admissionTimeIsOk() {\n      return this.admissionTimeText === '';\n    },\n    courseInterestsIsOk: function courseInterestsIsOk() {\n      return this.courseInterestsStatus === 'success';\n    },\n    priceIsOk: function priceIsOk() {\n      return this.priceHelpText === '';\n    },\n    priceValidataArray: function priceValidataArray() {\n      var array = [];\n      this.priceList.forEach(function (i) {\n        array.push(i.priceInputValue);\n      });\n      return array;\n    },\n    vipTree: function vipTree() {\n      var array = [];\n\n      if (this.actionType === 'shelf' && this.info.areas) {\n        this.info.areas.forEach(function (i) {\n          var children = [];\n          i.areas.forEach(function (o) {\n            children.push({\n              title: o.name,\n              key: \"\".concat(i.id, \"-\").concat(o.id),\n              scopedSlots: {\n                title: 'title'\n              }\n            });\n          });\n          array.push({\n            title: i.name,\n            key: i.id,\n            scopedSlots: {\n              title: 'title'\n            },\n            children: children\n          });\n        });\n      }\n\n      return array;\n    },\n    // 回传给后台的上架门店\n    sell_shops: function sell_shops() {\n      var shops = [];\n\n      if (this.info.sell_shops) {\n        this.info.sell_shops.forEach(function (i) {\n          shops.push(+i.id);\n        });\n      }\n\n      return shops;\n    }\n  },\n  watch: {\n    priceList: {\n      deep: true,\n      handler: function handler() {\n        var _this = this;\n\n        var b = this.priceValidataArray.every(function (i) {\n          return _this.pattern.NUM_FLOAT(1).test(i);\n        });\n        b && this.checkedPrice();\n      }\n    },\n    info: {\n      deep: true,\n      handler: function handler(newVal) {\n        var _this2 = this;\n\n        newVal.specs.forEach(function (i) {\n          _this2.priceList.push(_objectSpread({}, i, {\n            priceInputValue: ''\n          }));\n        });\n      }\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      firstLoading: false,\n      BRAND_MEMBER: BRAND_MEMBER,\n      form: form,\n      decorators: decorators,\n      show: true,\n      // 卡tag类型\n      cardTypeTag: {\n        1: 'number-card',\n        2: 'period-card'\n      },\n      // 门店明细\n      visible: false,\n      // 范围价格列表\n      priceList: [],\n      priceHelpText: '',\n      // 回传给后台的价格\n      specs: [],\n      // 开卡方式\n      openTypeList: [],\n      // 约课权益\n      // 输入是否正确\n      courseInterestsStatus: 'success',\n      courseInterestsHelpText: '',\n      // 课列表\n      courseInterests: null,\n      courseList: [],\n      // 显示更多\n      moreIsShow: true,\n      admissionTime: 1,\n      timeList: [],\n      // 回传给后台的时间段\n      inoutTime: [],\n      admissionTimeText: '',\n      expandedKeys: [],\n      autoExpandParent: true,\n      searchValue: '',\n      // 选择的vip区域\n      selectVipAreas: []\n    };\n  },\n  created: function created() {\n    var _this3 = this;\n\n    this.firstLoading = true;\n    var query = {};\n    var actionType = this.actionType,\n        shelf_id = this.shelf_id;\n\n    if (actionType === 'updateShelf') {\n      query.shelf_id = shelf_id;\n    }\n\n    this.shelfService.getInfo(this.id, query).subscribe(function (res) {\n      if (actionType === 'updateShelf') {\n        _this3.initShelfData();\n      }\n\n      _this3.firstLoading = false;\n    });\n  },\n  methods: {\n    getCourseList: function getCourseList(search) {\n      var query = {\n        course_name: search\n      };\n      this.shelfService.courseListAction$.dispatch(query);\n    },\n    // 检验入场时间是否输入正确\n    checkedAdmission: function checkedAdmission() {\n      this.admissionTimeText = this.admissionTime === 2 && this.moreIsShow && !this.timeList.length ? '请选择入场时间' : '';\n    },\n    brandPriceSettingHandleChange: function brandPriceSettingHandleChange(_ref) {\n      var value = _ref.value,\n          key = _ref.key;\n      this.priceList[key].priceInputValue = value;\n    },\n    // 检验门店自主定价价格输入是否正确\n    checkedPrice: function checkedPrice() {\n      var _this4 = this;\n\n      if (!(this.info.publish_channel === this.BRAND_MEMBER.PUBLISH_CHANNEL_1 && this.info.price_setting === this.BRAND_MEMBER.PRICE_SETTING_2)) {\n        this.priceHelpText = '';\n        return false;\n      }\n\n      var b = this.priceValidataArray.every(function (i) {\n        return _this4.pattern.NUM_FLOAT(1).test(i);\n      });\n      this.priceHelpText = b ? '' : '请输入价格';\n    },\n    onTreeSearch: function onTreeSearch(data) {\n      if (data === '') {\n        Object.assign(this, {\n          expandedKeys: [],\n          searchValue: data,\n          autoExpandParent: true\n        });\n        return;\n      }\n\n      var expandedKeys = [];\n      this.vipTree.forEach(function (i) {\n        if (i.children) {\n          i.children.forEach(function (o) {\n            if (o.title.includes(data)) {\n              expandedKeys.push(i.key);\n            }\n          });\n        }\n      });\n      this.expandedKeys = cloneDeep(expandedKeys);\n      this.searchValue = data;\n      this.autoExpandParent = true;\n    },\n    onExpand: function onExpand(expandedKeys) {\n      this.expandedKeys = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    onTreeSelect: function onTreeSelect(checkeds) {\n      var selectAreasObject = {};\n      var vipAreas = [];\n      var selectAreasArray = [];\n      vipAreas = checkeds.filter(function (i) {\n        return \"\".concat(i).includes('-');\n      });\n      vipAreas.forEach(function (i) {\n        if (selectAreasObject[i.split('-')[0]]) {\n          selectAreasObject[i.split('-')[0]].push(+i.split('-')[1]);\n        } else {\n          selectAreasObject[i.split('-')[0]] = [+i.split('-')[1]];\n        }\n      });\n      Object.keys(selectAreasObject).forEach(function (i) {\n        selectAreasArray.push({\n          shop_id: +i,\n          areas: cloneDeep(selectAreasObject[i])\n        });\n      });\n      this.selectVipAreas = cloneDeep(selectAreasArray);\n    },\n    // 格式化价格\n    formatSpecs: function formatSpecs() {\n      var _this5 = this;\n\n      this.specs = [];\n\n      if (this.info.publish_channel === this.BRAND_MEMBER.PUBLISH_CHANNEL_1 && this.info.price_setting === this.BRAND_MEMBER.PRICE_SETTING_2) {\n        // 有价格范围\n        this.priceList.forEach(function (i) {\n          _this5.specs.push({\n            specs_id: i.spec_id,\n            price: i.priceInputValue\n          });\n        });\n      } else {\n        // 无价格范围,发布渠道为2是门店，一定是无范围的\n        this.priceList.forEach(function (i) {\n          _this5.specs.push({\n            specs_id: i.spec_id,\n            price: i.rally_price\n          });\n        });\n      }\n    },\n    // 格式化入场时段\n    formatWeek: function formatWeek() {\n      var _this6 = this;\n\n      this.inoutTime = [];\n      this.timeList.forEach(function (i) {\n        _this6.inoutTime.push({\n          week_day: +i.week_day,\n          time_duration: [{\n            start_time: i.start_time,\n            end_time: i.end_time\n          }]\n        });\n      });\n    },\n    onSubmit: function onSubmit() {\n      var _this7 = this;\n\n      this.form.validate().then(function (values) {\n        _this7.checkedAdmission(); // TODO: shop hour picker后续修改，不能有默认值\n\n\n        _this7.formatWeek();\n\n        _this7.formatSpecs();\n\n        if (!_this7.inputCheck()) {\n          return;\n        }\n\n        if (_this7.admissionTimeIsOk) {\n          if (_this7.openTypeList.toString() === '3') {\n            _this7.$confirm({\n              title: '确认上架?',\n              content: '当前仅选择指定日期开卡，上架后小程序不显示该卡，确认上架？',\n              onOk: function onOk() {\n                _this7.sendShelfCard(values);\n              }\n            });\n\n            return;\n          }\n\n          _this7.sendShelfCard(values);\n        }\n      });\n    },\n    getParams: function getParams(values, shelf_id) {\n      var params = {\n        sell_shops: this.sell_shops,\n        open_type: this.openTypeList,\n        activate_duration: values.openDay === undefined ? values.openDay : +values.openDay,\n        course_interests: +this.courseInterests,\n        courses: values.courseList,\n        inout_type: this.admissionTime,\n        inout_time: this.inoutTime,\n        specs: this.specs\n      };\n      var actionType = this.actionType,\n          selectVipAreas = this.selectVipAreas,\n          shelfCardDetail = this.shelfCardDetail;\n\n      if (actionType === 'shelf') {\n        params.areas = selectVipAreas;\n      } else {\n        params.areas = shelfCardDetail.areas;\n      }\n\n      if (shelf_id) {\n        params.shelf_id = shelf_id;\n        /**\n         * 变更上架信息不传 sell_shops\n         */\n\n        delete params.sell_shops;\n      }\n\n      return params;\n    },\n    inputCheck: function inputCheck() {\n      if (!this.courseInterests) {\n        this.messageService.error({\n          content: '请选择约课权益'\n        });\n        return false;\n      }\n\n      return true;\n    },\n    sendShelfCard: function sendShelfCard(values) {\n      var _this8 = this;\n\n      var params = this.getParams(values);\n      this.shelfService.shelfCard(params, this.id).subscribe(function () {\n        _this8.show = false;\n\n        _this8.$emit('success');\n      });\n    },\n    onUpdateShelf: function onUpdateShelf() {\n      var _this9 = this;\n\n      this.form.validate().then(function (values) {\n        _this9.checkedAdmission();\n\n        _this9.formatWeek();\n\n        _this9.formatSpecs();\n\n        var params = _this9.getParams(values, _this9.shelf_id);\n\n        if (!_this9.inputCheck()) {\n          return;\n        }\n\n        _this9.shelfService.updateShelf(_this9.id, params).subscribe(function () {\n          _this9.show = false;\n\n          _this9.$emit('success');\n        });\n      });\n    },\n\n    /**\n     * 变更上架表单数据回显\n     */\n    initShelfData: function initShelfData() {\n      var _this10 = this;\n\n      var detail = this.shelfCardDetail;\n      this.openTypeList = detail.activate_type;\n      this.courseInterests = detail.course_interests;\n      this.admissionTime = detail.inout_type;\n      this.timeList = this.timeFilter(detail.inout_time);\n      this.vipAreaList = detail.areas;\n      this.$nextTick(function () {\n        _this10.form.setFieldsValue({\n          openDay: detail.automatic_num,\n          courseList: detail.courses\n        });\n      });\n      this.getCourseList('');\n    },\n    timeFilter: function timeFilter(timeList) {\n      return timeList.map(function (item) {\n        var week_day = item.week_day;\n        var _item$time_duration$ = item.time_duration[0],\n            start_time = _item$time_duration$.start_time,\n            end_time = _item$time_duration$.end_time;\n        return {\n          week_day: week_day,\n          start_time: start_time,\n          end_time: end_time\n        };\n      });\n    }\n  }\n};",null]}