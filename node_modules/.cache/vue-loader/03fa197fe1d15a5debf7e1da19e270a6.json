{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/face-upload/face-upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/face-upload/face-upload.vue","mtime":1596188219481},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { OssService } from '@/services/oss.service'\nimport { AppConfig } from '@/constants/config'\nimport { MessageService } from '@/services/message.service'\nimport FaceRecognition from '@/views/biz-modals/face/recognition'\nconst defaultSize = {\n  w: '182px',\n  h: '114px'\n}\nexport default {\n  name: 'StFaceUpload',\n  serviceInject() {\n    return {\n      oss: OssService,\n      appConfig: AppConfig,\n      messageService: MessageService\n    }\n  },\n  modals: {\n    FaceRecognition\n  },\n  props: {\n    numLimit: {\n      type: Number,\n      default: 1\n    },\n    /**\n     * 上传按钮的文字\n     */\n    placeholder: {\n      type: String,\n      default: '上传照片'\n    },\n    /**\n     * 图片及上传按钮的宽度\n     */\n    width: {\n      type: String,\n      default: defaultSize.w\n    },\n    /**\n     * 图片及上传按钮的宽度\n     */\n    height: {\n      type: String,\n      default: defaultSize.h\n    },\n    /**\n     * 初始图片列表 example: [{ image_id: 10000, image_key: 'http://styd-saas-test.oss-cn-shanghai.aliyuncs.com/image/pLOFb5kCPN4gPQ8H',image_url:'http://...' }]\n     */\n    list: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * 缩略图filter选项 同imgFilter选项\n     */\n    filterOptions: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * 后端字段映射 image_id,image_key,image_url\n     */\n    props: {\n      type: Object,\n      default: () => ({\n        image_id: 'image_id',\n        image_key: 'image_key',\n        image_url: 'image_url'\n      })\n    },\n    faceEditAuth: {\n      type: Boolean,\n      default: true\n    },\n    actionAuth: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      fileList: this.list,\n      isLoading: false,\n      progress: 0,\n      isShowFaceUpload: true\n    }\n  },\n  computed: {\n    imageId() {\n      return this.props.image_id\n    },\n    imageKey() {\n      return this.props.image_key\n    },\n    imageUrl() {\n      return this.props.image_url\n    },\n    sizeStyle() {\n      return `width: ${this.width};  height: ${this.height}`\n    },\n    computedFilterOptions() {\n      const w = parseInt(this.width) * 2\n      const h = parseInt(this.height) * 2\n      return Object.assign({ w, h }, this.filterOptions)\n    }\n  },\n  watch: {\n    list: {\n      handler(newList) {\n        console.log('newList', newList)\n        this.isShowFaceUpload = this.list.length < this.numLimit\n        this.fileList = this.list\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    handlerOpenFaceModal() {\n      this.$modalRouter.push({\n        name: 'face-recognition',\n        props: {\n          fileList: this.fileList\n        },\n        on: {\n          change: this.onChange,\n          processChange: this.processChange,\n          loadingChange: this.loadingChange\n        }\n      })\n    },\n    onDel() {\n      const { fileList } = this\n      const deletedFile = fileList.splice(0, 1)\n      this.fileList = fileList\n      this.$emit('delete', deletedFile[0])\n      this.$emit('change', this.fileList)\n    },\n    onChange(list) {\n      this.fileList = list\n      this.isShowFaceUpload = this.fileList.length < this.numLimit\n      this.$emit('change', this.fileList)\n    },\n    processChange(processNum) {\n      this.progress = processNum\n    },\n    loadingChange(status) {\n      this.isLoading = status\n    }\n  }\n}\n",null]}