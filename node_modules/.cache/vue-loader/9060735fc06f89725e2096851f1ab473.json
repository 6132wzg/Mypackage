{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/reserved-course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/reserved-course.vue","mtime":1591147717195},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from 'lodash-es'\nimport { SmallCourseScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service'\nimport { SmallCourseScheduleCommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service'\nimport { ruleOptions } from './reserved-course.config'\nexport default {\n  name: 'AddCourseSchedule',\n  serviceInject() {\n    return {\n      smallCourseScheduleService: SmallCourseScheduleService,\n      smallCourseScheduleCommonService: SmallCourseScheduleCommonService\n    }\n  },\n  rxState() {\n    const tss = this.smallCourseScheduleCommonService\n    return {\n      loading: this.smallCourseScheduleService.loading$,\n      coachSmallCourseOptions: tss.coachBindOptions$,\n      courseSmallCourseOptions: tss.courseSmallCourseOptions$,\n      courtOptions: tss.courtOptions$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      courseItem: '',\n      smallCourseInfo: {}\n    }\n  },\n  props: {\n    item: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    checked: {\n      type: Boolean,\n      default: () => {\n        return false\n      }\n    }\n  },\n  created() {\n    this.getBindCoachList(this.item.course_id)\n    console.log(this.item)\n    console.log(this.checked)\n  },\n  mounted() {\n    const item = cloneDeep(this.item)\n    const court_item = [+item.court_id, +item.court_site_id]\n    const time = moment(item.start_date)\n    this.form.setFieldsValue({\n      course_id: item.course_id,\n      coach_id: item.coach_id,\n      court_id: court_item,\n      current_course_name: item.current_course_name\n    })\n    this.form.setFieldsValue({\n      start_time: moment(`${this.item.start_date} ${this.item.start_time}`),\n      end_time: moment(`${this.item.start_date} ${this.item.end_time}`),\n      start_days: time\n    })\n  },\n  methods: {\n    onChangeCourse(value) {\n      this.getBindCoachList(value)\n      this.courseSmallCourseOptions.forEach((item, index) => {\n        if (item.course_id === value) {\n          this.smallCourseInfo = item\n        }\n      })\n    },\n    getBindCoachList(courseId) {\n      this.smallCourseScheduleCommonService\n        .getBindCoachList(courseId)\n        .subscribe()\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const form = cloneDeep(values)\n        console.log(values)\n        const start_days = values.start_days.format('YYYY-MM-DD')\n        const start_time = values.start_time.format('HH:mm')\n        const end_time = values.end_time.format('HH:mm')\n        form.start_time = start_days + ' ' + start_time\n        form.end_time = start_days + ' ' + end_time\n        form.cycle_start_date = this.smallCourseInfo.course_begin_time\n        form.cycle_end_date = this.smallCourseInfo.course_end_time\n        form.id = this.item.id\n        if (form.court_id) {\n          form.court_site_id = +form.court_id[1]\n          form.court_id = +form.court_id[0]\n        }\n        // 提交\n        console.log(form)\n        this.smallCourseScheduleService.update(form).subscribe(() => {\n          this.show = false\n          this.onScheduleChange()\n        })\n      })\n    },\n    onClick() {\n      this.show = false\n    },\n    onScheduleChange() {\n      this.$router.reload()\n    }\n  }\n}\n",{"version":3,"sources":["reserved-course.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"reserved-course.vue","sourceRoot":"src/views/biz-modals/schedule/small-course","sourcesContent":["<template>\n  <st-modal title=\"编辑课程排期\" v-model=\"show\" width=\"484px\">\n    <st-form :form=\"form\" labelWidth=\"70px\" labelAuto>\n      <st-form-item label=\"已约\">\n        <span>{{ item.reserved_num }}</span>\n      </st-form-item>\n      <st-form-item label=\"日期\" required>\n        <a-date-picker\n          style=\"width:100%\"\n          format=\"YYYY-MM-DD\"\n          v-decorator=\"decorators.start_days\"\n          :disabled=\"checked\"\n        />\n      </st-form-item>\n      <st-form-item label=\"开始时间\" required>\n        <a-time-picker\n          format=\"HH:mm\"\n          style=\"width:100%\"\n          v-decorator=\"decorators.start_time\"\n          :disabled=\"checked\"\n        />\n      </st-form-item>\n      <st-form-item label=\"结束时间\" required>\n        <a-time-picker\n          format=\"HH:mm\"\n          style=\"width:100%\"\n          v-decorator=\"decorators.end_time\"\n          :disabled=\"checked\"\n        />\n      </st-form-item>\n      <st-form-item :label=\"$c('small_course')\" required>\n        <a-select\n          :placeholder=\"$c('small_course')\"\n          @change=\"onChangeCourse\"\n          v-decorator=\"decorators.course_id\"\n          :disabled=\"checked\"\n        >\n          <a-select-option\n            v-for=\"course in courseSmallCourseOptions\"\n            :key=\"course.course_id\"\n            :value=\"course.course_id\"\n          >\n            {{ course.course_name }}\n          </a-select-option>\n        </a-select>\n      </st-form-item>\n      <st-form-item :label=\"$c('coach')\" required>\n        <a-select\n          :placeholder=\"`请选择${$c('coach')}`\"\n          v-decorator=\"decorators.coach_id\"\n        >\n          <a-select-option\n            v-for=\"coach in coachSmallCourseOptions\"\n            :key=\"coach.id\"\n            :value=\"coach.id\"\n          >\n            {{ coach.name }}\n          </a-select-option>\n        </a-select>\n      </st-form-item>\n      <st-form-item label=\"场地\" required>\n        <a-cascader\n          placeholder=\"请选择场地\"\n          :options=\"courtOptions\"\n          :fieldNames=\"{ label: 'name', value: 'id', children: 'children' }\"\n          v-decorator=\"decorators.court_id\"\n          :disabled=\"checked\"\n        />\n      </st-form-item>\n      <st-form-item label=\"排课名称\" class=\"mg-b0\">\n        <a-input\n          placeholder=\"请输入\"\n          v-decorator=\"decorators.current_course_name\"\n        />\n      </st-form-item>\n    </st-form>\n    <template slot=\"footer\">\n      <st-button @click=\"onClick\">取消</st-button>\n      <st-button type=\"primary\" :loading=\"loading.add\" @click=\"onSubmit\">\n        提交\n      </st-button>\n    </template>\n  </st-modal>\n</template>\n\n<script>\nimport { cloneDeep } from 'lodash-es'\nimport { SmallCourseScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service'\nimport { SmallCourseScheduleCommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service'\nimport { ruleOptions } from './reserved-course.config'\nexport default {\n  name: 'AddCourseSchedule',\n  serviceInject() {\n    return {\n      smallCourseScheduleService: SmallCourseScheduleService,\n      smallCourseScheduleCommonService: SmallCourseScheduleCommonService\n    }\n  },\n  rxState() {\n    const tss = this.smallCourseScheduleCommonService\n    return {\n      loading: this.smallCourseScheduleService.loading$,\n      coachSmallCourseOptions: tss.coachBindOptions$,\n      courseSmallCourseOptions: tss.courseSmallCourseOptions$,\n      courtOptions: tss.courtOptions$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      courseItem: '',\n      smallCourseInfo: {}\n    }\n  },\n  props: {\n    item: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    checked: {\n      type: Boolean,\n      default: () => {\n        return false\n      }\n    }\n  },\n  created() {\n    this.getBindCoachList(this.item.course_id)\n    console.log(this.item)\n    console.log(this.checked)\n  },\n  mounted() {\n    const item = cloneDeep(this.item)\n    const court_item = [+item.court_id, +item.court_site_id]\n    const time = moment(item.start_date)\n    this.form.setFieldsValue({\n      course_id: item.course_id,\n      coach_id: item.coach_id,\n      court_id: court_item,\n      current_course_name: item.current_course_name\n    })\n    this.form.setFieldsValue({\n      start_time: moment(`${this.item.start_date} ${this.item.start_time}`),\n      end_time: moment(`${this.item.start_date} ${this.item.end_time}`),\n      start_days: time\n    })\n  },\n  methods: {\n    onChangeCourse(value) {\n      this.getBindCoachList(value)\n      this.courseSmallCourseOptions.forEach((item, index) => {\n        if (item.course_id === value) {\n          this.smallCourseInfo = item\n        }\n      })\n    },\n    getBindCoachList(courseId) {\n      this.smallCourseScheduleCommonService\n        .getBindCoachList(courseId)\n        .subscribe()\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const form = cloneDeep(values)\n        console.log(values)\n        const start_days = values.start_days.format('YYYY-MM-DD')\n        const start_time = values.start_time.format('HH:mm')\n        const end_time = values.end_time.format('HH:mm')\n        form.start_time = start_days + ' ' + start_time\n        form.end_time = start_days + ' ' + end_time\n        form.cycle_start_date = this.smallCourseInfo.course_begin_time\n        form.cycle_end_date = this.smallCourseInfo.course_end_time\n        form.id = this.item.id\n        if (form.court_id) {\n          form.court_site_id = +form.court_id[1]\n          form.court_id = +form.court_id[0]\n        }\n        // 提交\n        console.log(form)\n        this.smallCourseScheduleService.update(form).subscribe(() => {\n          this.show = false\n          this.onScheduleChange()\n        })\n      })\n    },\n    onClick() {\n      this.show = false\n    },\n    onScheduleChange() {\n      this.$router.reload()\n    }\n  }\n}\n</script>\n"]}]}