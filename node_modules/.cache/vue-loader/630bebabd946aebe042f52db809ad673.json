{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/package/deduction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/package/deduction.vue","mtime":1596188219494},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { DeductionService } from './deduction.service.ts'\nimport { ruleOptions } from './deduction.config'\nexport default {\n  name: 'ModalSoldPackageDeduction',\n  bem: {\n    extend: 'modal-sold-package-deduction'\n  },\n  serviceInject() {\n    return {\n      service: DeductionService\n    }\n  },\n  rxState() {\n    let { packageInfo$ } = this.service\n    return {\n      packageInfo$\n    }\n  },\n  props: {\n    id: {\n      type: [String, Number],\n      default: ''\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      courseTypeOptions: [\n        { label: '团课', value: 1 },\n        { label: '私教课', value: 2 }\n      ],\n      teamCount: 0,\n      personalCount: 0,\n      show: false\n    }\n  },\n  created() {\n    this.service.getDeduction(this.id).subscribe(res => {\n      console.log(res)\n    })\n  },\n  methods: {\n    onChangeTeam(value) {\n      this.teamCount = value\n    },\n    onChangePersonal(value) {\n      this.personalCount = value\n    },\n    disabledDate(current) {\n      return (\n        moment().subtract(1, 'M') > current || moment().add(1, 'M') < current\n      )\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        values.deduction_time = moment(values.deduction_time).format(\n          'YYYY-MM-DD'\n        )\n        values.personal_num = +values.personal_num\n        values.team_num = +values.team_num\n        this.service.setDeduction({ id: this.id, ...values }).subscribe(res => {\n          this.show = false\n        })\n      })\n    }\n  }\n}\n",null]}