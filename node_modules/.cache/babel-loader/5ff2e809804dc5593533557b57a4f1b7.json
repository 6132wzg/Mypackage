{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/course/list/package.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/course/list/package.vue","mtime":1596792848083},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport { cloneDeep, filter } from 'lodash-es';\nimport { PackageService } from \"./package.service\";\nimport tableMixin from '@/mixins/table.mixin';\nimport { columns, totalColumns } from \"./package.config\";\nimport StTotal from '@/views/biz-components/st/total/total.vue';\nimport SoldCourseFreeze from '@/views/biz-modals/sold/course/freeze';\nimport SoldCourseRefund from '@/views/biz-modals/sold/course/refund';\nimport SoldCourseSurplus from '@/views/biz-modals/sold/course/surplus';\nimport SoldCourseTransfer from '@/views/biz-modals/sold/course/transfer';\nimport SoldCourseScope from '@/views/biz-modals/sold/course/scope';\nimport SoldCourseValid from '@/views/biz-modals/sold/course/valid';\nimport SoldCoursePackageReactive from '@/views/biz-modals/sold/course/package/reactive';\nimport SoldCoursePackageUpgrade from '@/views/biz-modals/sold/course/package/upgrade';\nimport SoldCoursePackageUpdateExpirationDate from '@/views/biz-modals/sold/course/package/update-expiration-date';\nimport SoldCoursePackageReactiveBatch from '@/views/biz-modals/sold/course/package/reactive-batch';\nimport SoldCoursePackageExtendDay from '@/views/biz-modals/sold/course/package/extend-day';\nimport SoldCoursePackageDeduction from '@/views/biz-modals/sold/course/package/deduction';\nimport SoldCoursePackageMembeChange from '@/views/biz-modals/sold/course/package/member-change';\nimport SoldCoursePackageExtendDayBatch from '@/views/biz-modals/sold/course/package/extend-day-batch';\nimport CommonTaskSuccessTip from '@/views/biz-modals/common/task/success-tip';\nimport DealGathering from '@/views/biz-modals/sold/deal/gathering';\nimport { PACKAGE_TYPE, IS_LIMIT } from '@/constants/sold/package';\nimport useInternalNoteActions from '@/hooks/shop/sold-internal-note-actions.hook';\nimport { PRODUCT_TYPE } from '@/constants/sold/transaction';\nexport default {\n  name: 'PageShopSoldCoursePackageList',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'page-shop-sold'\n  },\n  components: {\n    StTotal: StTotal\n  },\n  modals: {\n    SoldCourseFreeze: SoldCourseFreeze,\n    SoldCourseRefund: SoldCourseRefund,\n    SoldCourseSurplus: SoldCourseSurplus,\n    SoldCourseTransfer: SoldCourseTransfer,\n    SoldCourseValid: SoldCourseValid,\n    DealGathering: DealGathering,\n    SoldCoursePackageReactive: SoldCoursePackageReactive,\n    SoldCoursePackageExtendDay: SoldCoursePackageExtendDay,\n    SoldCoursePackageExtendDayBatch: SoldCoursePackageExtendDayBatch,\n    SoldCoursePackageDeduction: SoldCoursePackageDeduction,\n    SoldCoursePackageUpgrade: SoldCoursePackageUpgrade,\n    SoldCoursePackageUpdateExpirationDate: SoldCoursePackageUpdateExpirationDate,\n    SoldCoursePackageMembeChange: SoldCoursePackageMembeChange,\n    SoldCoursePackageReactiveBatch: SoldCoursePackageReactiveBatch,\n    SoldCourseScope: SoldCourseScope,\n    CommonTaskSuccessTip: CommonTaskSuccessTip\n  },\n  serviceInject: function serviceInject() {\n    return {\n      packageService: PackageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list: this.packageService.list$,\n      loading: this.packageService.loading$,\n      page: this.packageService.page$,\n      courseStatus: this.packageService.courseStatus$,\n      packageTypes: this.packageService.packageTypes$,\n      effectiveWay: this.packageService.effectiveWay$,\n      auth: this.packageService.auth$,\n      total: this.packageService.total$\n    };\n  },\n  data: function data() {\n    return {\n      PACKAGE_TYPE: PACKAGE_TYPE,\n      IS_LIMIT: IS_LIMIT,\n      visible: false,\n      // 结束时间面板是否显示\n      endOpen: false,\n      selectedRowKeys: [],\n      selectedRows: [],\n      diffSelectedRows: [],\n      date: [],\n      effectiveDate: [],\n      action: {\n        /**\n         * 更换上课范围\n         */\n        courseRange: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n\n        /**\n         * 延长卡有效期\n         */\n        extendDay: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n\n        /**\n         * 重新激活\n         */\n        reactive: {\n          isAvaliable: false,\n          isShowTip: false\n        }\n      }\n    };\n  },\n  hooks: function hooks() {\n    return {\n      internalNoteActions: useInternalNoteActions()\n    };\n  },\n  mounted: function mounted() {\n    this.setSearchData();\n  },\n  computed: {\n    columns: columns,\n    totalColumns: totalColumns,\n    effectiveWayOptions: function effectiveWayOptions() {\n      return [{\n        label: '全部',\n        value: -1\n      }, {\n        label: '是',\n        value: 1\n      }, {\n        label: '否',\n        value: 0\n      }];\n    }\n  },\n  methods: {\n    disabledSelect: function disabledSelect(record) {\n      return false;\n    },\n    onUpdateExpirationDate: function onUpdateExpirationDate(id) {\n      var _this = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-expiration-date',\n        props: {\n          id: id\n        },\n        on: {\n          success: function success() {\n            _this.$router.reload();\n          }\n        }\n      });\n    },\n    onMemberChange: function onMemberChange(id) {\n      var _this2 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-package-membe-change',\n        props: {\n          id: id\n        },\n        on: {\n          success: function success() {\n            _this2.$router.reload();\n          }\n        }\n      });\n    },\n    onDeduction: function onDeduction(id) {\n      var _this3 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-package-deduction',\n        props: {\n          id: id\n        },\n        on: {\n          success: function success() {\n            _this3.$router.reload();\n          }\n        }\n      });\n    },\n    onChangeRenew: function onChangeRenew() {\n      var _this4 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-package-reactive-batch',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: function success() {\n            _this4.successTip();\n          }\n        }\n      });\n    },\n    onChangeExtends: function onChangeExtends() {\n      var _this5 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-package-extend-day-batch',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: function success() {\n            _this5.successTip();\n          }\n        }\n      });\n    },\n    onValid: function onValid(record) {\n      var _this6 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-valid',\n        props: {\n          info: record\n        },\n        on: {\n          success: function success() {\n            _this6.$router.reload();\n\n            _this6.onClear();\n          }\n        }\n      });\n    },\n    onExtend: function onExtend(id) {\n      var _this7 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-package-extend-day',\n        props: {\n          id: id\n        },\n        on: {\n          success: function success() {\n            _this7.$router.reload();\n\n            _this7.onClear();\n          }\n        }\n      });\n    },\n    // 激活\n    onReactive: function onReactive(id) {\n      var _this8 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-package-reactive',\n        props: {\n          id: id\n        },\n        on: {\n          success: function success() {\n            _this8.$router.reload();\n\n            _this8.onClear();\n          }\n        }\n      });\n    },\n    // 升级\n    onUpgrade: function onUpgrade(record) {\n      var _this9 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-package-upgrade',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: function success(res) {\n            if (res.type === 'create') {\n              // 创建订单成功\n              _this9.$router.reload();\n\n              _this9.onClear();\n            } else if (res.type === 'createPay') {\n              // 创建订单成功 并且到支付页面\n              _this9.$modalRouter.push({\n                name: 'deal-gathering',\n                props: {\n                  order_id: res.orderId,\n                  type: 'package'\n                },\n                on: {\n                  success: function success() {\n                    _this9.$router.reload();\n\n                    _this9.onClear();\n                  }\n                }\n              });\n            }\n          }\n        }\n      });\n    },\n    // 清空列表选择\n    onClear: function onClear() {\n      this.selectedRowKeys = [];\n      this.selectedRows = [];\n    },\n    // 变更上课范围\n    onChangeCourse: function onChangeCourse() {\n      var _this10 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-scope',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: this.$searchQuery\n        },\n        on: {\n          success: function success() {\n            _this10.successTip();\n          }\n        }\n      });\n    },\n    successTip: function successTip() {\n      var _this11 = this;\n\n      this.$modalRouter.push({\n        name: 'common-task-success-tip',\n        on: {\n          success: function success() {\n            _this11.$router.reload();\n\n            _this11.onClear();\n          }\n        }\n      });\n    },\n    onPageChange: function onPageChange(data) {\n      this.$router.push({\n        query: _objectSpread({}, this.$searchQuery, {\n          page: data.current,\n          size: data.pageSize\n        })\n      });\n    },\n    // 修改剩余课时\n    onSurplus: function onSurplus(record) {\n      var time = record.effective_state ? \"\".concat(moment(record.course_buy_time).format('YYYY-MM-DD HH:mm'), \" \\u81F3 \").concat(moment(record.course_end_time).format('YYYY-MM-DD HH:mm')) : '--';\n      var data = {\n        id: record.id,\n        courseName: record.course_name,\n        effective_state: record.effective_state,\n        time: time\n      };\n      this.$modalRouter.push({\n        name: 'sold-course-surplus',\n        props: {\n          courseType: 'coursePackage',\n          courseData: data\n        },\n        on: {\n          success: function success() {\n            this.$router.reload();\n          }\n        }\n      });\n    },\n    // 冻结\n    onFreeze: function onFreeze(record) {\n      var _this12 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-freeze',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: function success() {\n            _this12.$router.reload();\n          }\n        }\n      });\n    },\n    // 取消冻结\n    onUnfreeze: function onUnfreeze(record) {\n      var _this13 = this;\n\n      this.$confirm({\n        title: '提示',\n        content: '是否取消冻结？',\n        maskClosable: true,\n        onOk: function onOk() {\n          _this13.packageService.unFreeze(record.id).toPromise().then(function () {\n            _this13.$router.reload();\n          });\n        }\n      });\n    },\n    // 转让\n    onTransfer: function onTransfer(record) {\n      var _this14 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-transfer',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: function success() {\n            _this14.$router.reload();\n          }\n        }\n      });\n    },\n    // 跳转合同\n    toContract: function toContract(record) {\n      var url = \"\".concat(window.location.origin, \"/common/contract-preview?id=\").concat(record.order_id);\n      window.open(url);\n    },\n    // 退款\n    onRefund: function onRefund(record) {\n      var _this15 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-course-refund',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: function success() {\n            _this15.$router.reload();\n          }\n        }\n      });\n    },\n    // 详情\n    onDetail: function onDetail(record) {\n      this.$router.push({\n        path: \"/shop/sold/course/info/package/info/operation-record\",\n        query: {\n          id: record.id\n        }\n      });\n    },\n    // 查询\n    onSearchNative: function onSearchNative() {\n      this.$searchQuery.start_time = this.date[0] ? \"\".concat(this.date[0].format('YYYY-MM-DD'), \" 00:00:00\") : '';\n      this.$searchQuery.end_time = this.date[1] ? \"\".concat(this.date[1].format('YYYY-MM-DD'), \" 23:59:59\") : '';\n      this.$searchQuery.valid_time_start = this.effectiveDate[0] ? \"\".concat(this.effectiveDate[0].format('YYYY-MM-DD'), \" 00:00:00\") : '';\n      this.$searchQuery.valid_time_end = this.effectiveDate[1] ? \"\".concat(this.effectiveDate[1].format('YYYY-MM-DD'), \" 23:59:59\") : '';\n      this.onSearch();\n    },\n    onSearchResetNative: function onSearchResetNative() {\n      this.date = [null, null];\n      this.effectiveDate = [null, null];\n      this.onSearchReset();\n    },\n    // 设置searchData\n    setSearchData: function setSearchData() {\n      var start = this.$searchQuery.start_time ? cloneDeep(moment(this.$searchQuery.start_time)) : null;\n      var end = this.$searchQuery.end_time ? cloneDeep(moment(this.$searchQuery.end_time)) : null;\n      var validStart = this.$searchQuery.valid_time_start ? cloneDeep(moment(this.$searchQuery.valid_time_start)) : null;\n      var validEnd = this.$searchQuery.valid_time_end ? cloneDeep(moment(this.$searchQuery.valid_time_end)) : null;\n      this.date = [start, end];\n      this.effectiveDate = [validStart, validEnd];\n    },\n    moment: moment,\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      var _this16 = this;\n\n      this.checkSelectedRows(selectedRows, 'course_status', 'courseRange', function () {\n        _this16.selectedRowKeys = selectedRowKeys;\n        _this16.diffSelectedRows = selectedRows.filter(function (item) {\n          return item.package_type === 2;\n        });\n        return _this16.diffSelectedRows.length;\n      });\n      this.checkSelectedRows(selectedRows, 'course_status', 'extendDay', function () {\n        return selectedRows.filter(function (item) {\n          return item.course_status === 1;\n        }).length === selectedRows.length;\n      });\n      this.checkSelectedRows(selectedRows, 'course_status', 'reactive', function () {\n        return selectedRows.filter(function (item) {\n          return item.course_status === 3 && item.is_refund.id === 0;\n        }).length === selectedRows.length;\n      });\n    },\n    checkSelectedRows: function checkSelectedRows(selectedRows, key, targetDataKey, checkFn) {\n      var _this17 = this;\n\n      this.action[targetDataKey].isShowTip = false;\n      var isAvaliable = checkFn();\n      this.action[targetDataKey].isAvaliable = selectedRows.length && isAvaliable;\n\n      if (!isAvaliable) {\n        this.action[targetDataKey].isShowTip = true;\n        var timerKey = \"timer_\".concat(targetDataKey);\n        clearTimeout(this[timerKey]);\n        this[timerKey] = setTimeout(function () {\n          _this17.action[targetDataKey].isShowTip = false;\n        }, 2000);\n      }\n    }\n  }\n};",null]}