{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/finance/flow/expenditure-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/finance/flow/expenditure-detail.vue","mtime":1596188219504},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableMixin from '@/mixins/table.mixin'\nimport { ExpenditureDetailService } from './expenditure-detail.service'\nimport { columns } from './expenditure-detail.config.ts'\nimport ShopSelect from '@/views/biz-components/shop-select'\nexport default {\n  name: 'FinanceFlowExpenditure',\n  mixins: [tableMixin],\n  bem: {\n    bPage: 'page-shop-flow-expenditure',\n    bSearch: 'search'\n  },\n  serviceInject() {\n    return {\n      service: ExpenditureDetailService\n    }\n  },\n  rxState() {\n    const { loading$, page$, list$, payType$ } = this.service\n    return {\n      loading$,\n      page$,\n      list$,\n      payType$\n    }\n  },\n  data() {\n    return {\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false,\n      date: []\n    }\n  },\n  computed: {\n    columns\n  },\n  mounted() {\n    this.setSearchData()\n  },\n  components: {\n    ShopSelect\n  },\n  methods: {\n    setSearchData() {\n      if (!this.$searchQuery.start_date) return\n      const start = moment(this.$searchQuery.start_date)\n      const end = moment(this.$searchQuery.end_date)\n      this.date = [start, end]\n      if (!this.$searchQuery.pay_channel) {\n        return\n      }\n      this.checkedList = this.$searchQuery.pay_channel.map(item => +item)\n      if (this.$searchQuery.pay_channel.length === this.payType$.length) {\n        this.checkAll = true\n      }\n    },\n    onChangePayType(checkedList) {\n      this.indeterminate =\n        checkedList.length && checkedList.length < this.payType$.length\n      this.checkAll = checkedList.length === this.payType$.length\n    },\n    onCheckAllChange(e) {\n      Object.assign(this, {\n        checkedList: e.target.checked\n          ? this.payType$.map(item => item.value)\n          : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      })\n    },\n    onSearchNative() {\n      const start_date = this.date[0]\n        ? `${this.date[0].format('YYYY-MM-DD')}`\n        : ''\n      const end_date = this.date[1]\n        ? `${this.date[1].format('YYYY-MM-DD')}`\n        : ''\n      this.$searchQuery.pay_channel = this.checkedList\n      this.$searchQuery.current_page = 1\n      this.$router.push({\n        query: { ...this.$searchQuery, start_date, end_date }\n      })\n    },\n    onReset() {\n      this.checkedList = []\n      this.checkAll = false\n      this.date = [null, null]\n      this.onSearchReset()\n    }\n  }\n}\n",null]}