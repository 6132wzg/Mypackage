{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/api/v1/sold/cards.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/api/v1/sold/cards.ts","mtime":1600926555457},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"../../api\";\nexport var CardApi = /*#__PURE__*/function (_Api) {\n  _inherits(CardApi, _Api);\n\n  var _super = _createSuper(CardApi);\n\n  function CardApi() {\n    _classCallCheck(this, CardApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CardApi, [{\n    key: \"getMemberList\",\n\n    /**\n     * 会员卡列表\n     */\n    value: function getMemberList(params, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type), {\n        query: params\n      });\n    }\n    /**\n     * 售出 储值卡 转让回显\n     */\n\n  }, {\n    key: \"getCardTransferInfo\",\n    value: function getCardTransferInfo(id, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/transfer/info/\").concat(id));\n    }\n    /*\n     * 售出 储值卡 转让\n     */\n\n  }, {\n    key: \"editCardTransfer\",\n    value: function editCardTransfer(params, id, type) {\n      return this.http.put(\"/v1/sold/cards/\".concat(type, \"/transfer/\").concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 售出 储值卡 退款回显\n     */\n\n  }, {\n    key: \"getCardRefundInfo\",\n    value: function getCardRefundInfo(id, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/refund/info/\").concat(id));\n    }\n    /*\n     * 售出 储值卡 退款\n     */\n\n  }, {\n    key: \"editCardRefund\",\n    value: function editCardRefund(params, id, type) {\n      return this.http.put(\"/v1/sold/cards/\".concat(type, \"/refund/\").concat(id), {\n        params: params\n      });\n    }\n    /*\n     * 售出 储值卡/会员卡 详情\n     */\n\n  }, {\n    key: \"getCardInfo\",\n    value: function getCardInfo(id, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/\").concat(type === 'member' ? 'info' : 'detail', \"/\").concat(id)); //  return this.http.get(`/v1/sold/cards/${type}/detail/${id}`)\n    }\n    /**\n     * 售出 会员卡 冻结回显\n     */\n\n  }, {\n    key: \"getMemberFreezeInfo\",\n    value: function getMemberFreezeInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/freeze/info/\".concat(id));\n    }\n    /**\n     * 售出 会员卡 冻结\n     */\n\n  }, {\n    key: \"editMemberFreeze\",\n    value: function editMemberFreeze(params, id) {\n      return this.http.put(\"/v1/sold/cards/member/freeze/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 取消冻结售出 会员卡/储值卡\n     */\n\n  }, {\n    key: \"unFreezeCard\",\n    value: function unFreezeCard(id, type) {\n      return this.http.put(\"/v1/sold/cards/\".concat(type, \"/cancel/freeze/\").concat(id));\n    }\n    /**\n     * 售出 会员卡/储值卡 详情消费记录\n     */\n\n  }, {\n    key: \"getCardsConsumeInfo\",\n    value: function getCardsConsumeInfo(id, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/consume/record/\").concat(id));\n    }\n    /**\n     * 售出 会员卡/储值卡 详情操作日志\n     */\n\n  }, {\n    key: \"getCardsOperationInfo\",\n    value: function getCardsOperationInfo(query, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/operation/log/\").concat(query.id), {\n        query: query\n      });\n    }\n    /**\n     * 售出 会员卡 详情使用记录\n     */\n\n  }, {\n    key: \"getCardsUsageLog\",\n    value: function getCardsUsageLog(query, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/usage/log/\").concat(query.id), {\n        query: query\n      });\n    }\n    /**\n     * 售出 储值卡 详情使用记录\n     */\n\n  }, {\n    key: \"getDepositUsageLog\",\n    value: function getDepositUsageLog(query) {\n      return this.http.get(\"/v1/cards/brand/deposit/cost\", {\n        query: query\n      });\n    }\n    /**\n     * 售出 会员卡 设置有效日期回显\n     */\n\n  }, {\n    key: \"getCardSettimeInfo\",\n    value: function getCardSettimeInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/setting/info/\".concat(id));\n    }\n    /**\n     * 售出 vip区域 列表\n     */\n\n  }, {\n    key: \"getCardVipAreaList\",\n    value: function getCardVipAreaList() {\n      return this.http.get('/v1/sold/cards/member/vip');\n    }\n    /**\n     * 售出 会员卡 vip区域\n     */\n\n  }, {\n    key: \"getCardVipArea\",\n    value: function getCardVipArea(id) {\n      return this.http.get(\"/v1/sold/cards/member/vip/info/\".concat(id));\n    }\n    /**\n     * 售出 会员卡修改vip区域\n     */\n\n  }, {\n    key: \"setCardVipArea\",\n    value: function setCardVipArea(params) {\n      return this.http.put(\"/v1/sold/cards/member/vip\", {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡批量修改vip区域\n     */\n\n  }, {\n    key: \"setCardVipAreaBatch\",\n    value: function setCardVipAreaBatch(params) {\n      return this.http.post(\"/v1/sold/cards/batch/vip_area\", {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 设置有效日期\n     */\n\n  }, {\n    key: \"setCardSettingTime\",\n    value: function setCardSettingTime(params, id) {\n      return this.http.put(\"/v1/sold/cards/member/setting/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 批量赠送\n     */\n\n  }, {\n    key: \"setCardGive\",\n    value: function setCardGive(params) {\n      return this.http.post(\"/v1/sold/cards/batch/amount\", {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 续卡回显\n     */\n\n  }, {\n    key: \"getCardRenewalInfo\",\n    value: function getCardRenewalInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/renewal/info/\".concat(id));\n    }\n    /**\n     * 售出 会员卡 续卡\n     */\n\n  }, {\n    key: \"setCardRenewal\",\n    value: function setCardRenewal(params, id) {\n      return this.http.put(\"/v1/sold/cards/member/renewal/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 升级回显\n     */\n\n  }, {\n    key: \"getCardUpgradeInfo\",\n    value: function getCardUpgradeInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/upgrade/info/\".concat(id));\n    }\n    /**\n     * 售出 会员卡 升级\n     */\n\n  }, {\n    key: \"setCardUpgrade\",\n    value: function setCardUpgrade(params, id) {\n      return this.http.put(\"/v1/sold/cards/member/upgrade/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 门店可售卖的会员卡列表\n     */\n\n  }, {\n    key: \"getCardUpgradeList\",\n    value: function getCardUpgradeList(card_name_search) {\n      var card_number_type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n      return this.http.get(\"/v1/sold/cards/shop/saled_card\", {\n        query: {\n          card_name_search: card_name_search,\n          card_number_type: card_number_type\n        }\n      });\n    }\n    /**\n     * 获取会员卡可使用条数\n     */\n\n  }, {\n    key: \"fetchSoldCardValidNum\",\n    value: function fetchSoldCardValidNum(query) {\n      return this.http.get(\"/v1/sold/cards/batch/count\", {\n        query: query\n      });\n    }\n    /**\n     * 获取会员卡 vip 区域和入场时间可使用条数\n     */\n\n  }, {\n    key: \"fetchSoldCardVIPOrTimeValidNum\",\n    value: function fetchSoldCardVIPOrTimeValidNum(query) {\n      return this.http.get(\"/v1/sold/cards/batch/num\", {\n        query: query\n      });\n    }\n    /**\n     * 售出 会员卡 批量更改入场时间\n     */\n\n  }, {\n    key: \"setCardEnterTime\",\n    value: function setCardEnterTime(params) {\n      return this.http.post(\"/v1/sold/cards/batch/admission_time\", {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 更改成员\n     */\n\n  }, {\n    key: \"changeCardMember\",\n    value: function changeCardMember(id, params) {\n      return this.http.put(\"/v1/sold/cards/member/cards/edit/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 获取批量延期会员卡查询总数\n     */\n\n  }, {\n    key: \"getRenewalTaskNum\",\n    value: function getRenewalTaskNum(query) {\n      return this.http.get('/v1/sold/cards/batch/renewal/task_num', {\n        query: query\n      });\n    }\n    /**\n     * 售出会员卡延长有效期\n     */\n\n  }, {\n    key: \"taskExtendDays\",\n    value: function taskExtendDays(params) {\n      return this.http.post('/v1/sold/cards/batch/renewal', {\n        params: params\n      });\n    }\n    /**\n     * 售出会员卡激活\n     */\n\n  }, {\n    key: \"setReactive\",\n    value: function setReactive(params) {\n      return this.http.put(\"/v1/sold/cards/member/reactive/\".concat(params.id), {\n        params: params\n      });\n    }\n    /**\n     * 售出会员卡激活\n     */\n\n  }, {\n    key: \"getReactiveInfo\",\n    value: function getReactiveInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/reactive/info/\".concat(id));\n    }\n    /**\n     * 售出会员卡激活\n     */\n\n  }, {\n    key: \"taskReactive\",\n    value: function taskReactive(params) {\n      return this.http.post('/v1/sold/cards/batch/renew', {\n        params: params\n      });\n    }\n    /**\n     * 售出会员卡激活 条数\n     */\n\n  }, {\n    key: \"getTaskReactiveNum\",\n    value: function getTaskReactiveNum(query) {\n      return this.http.get('v1/sold/cards/batch/renew-num', {\n        query: query\n      });\n    }\n  }]);\n\n  return CardApi;\n}(Api);",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/api/v1/sold/cards.ts"],"names":[],"mappings":"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","sourcesContent":["import { Api } from '../../api'\n\nexport interface GetMemberListInput {\n  search?: string\n  is_valid?: number\n  card_type?: number\n  card_status?: number\n  is_open?: number\n  start_time?: string\n  end_time?: string\n  size?: number\n  page?: number\n}\nexport interface TransferCardInput {\n  transferee_member_id?: number\n  member_name?: string\n  mobile?: number\n  remain_price: number\n  contract_number: string\n  pay_channel?: number\n  contract_type: number\n}\n\nexport interface RefundCardInput {\n  refund_price: number\n  refund_reason: number\n  refund_channel: number\n  description?: string\n}\nexport interface FreezeCardInput {\n  end_time: string\n  poundage?: number\n  pay_method?: number\n}\nexport interface CardVipInput {\n  id: Array<number | string>\n  vip_id: Array<number | string>\n}\nexport interface CardSettingTimeInput {\n  time: string\n  description?: string\n}\nexport interface CardGiveInput {\n  sold_card_ids: Array<number | string>\n  gift_quota: number\n  description?: string\n}\nexport interface RenewalCardInput {\n  contract_number: string\n  rule_id: number\n  gift_amount?: number\n  user_coupon_id?: number | string\n  advance_id?: string\n  reduce_price?: number\n  description?: string\n  staff_sale_id: number\n  contract_type: number\n  discounts_price?: number\n}\n\nexport interface GetRenewalTaskNumInput {\n  search?: string\n  card_type?: number\n  card_status?: number\n  is_open?: number\n  start_time?: string\n  end_time?: string\n}\n\nexport interface TaskExtendDaysInput {\n  sold_ids: number[]\n  extend_days: number\n  batch_type: number\n  content: string\n  conditions: object\n}\nexport class CardApi extends Api {\n  /**\n   * 会员卡列表\n   */\n  getMemberList(params: GetMemberListInput, type: string) {\n    return this.http.get(`/v1/sold/cards/${type}`, { query: params })\n  }\n  /**\n   * 售出 储值卡 转让回显\n   */\n  getCardTransferInfo(id: string, type: string) {\n    return this.http.get(`/v1/sold/cards/${type}/transfer/info/${id}`)\n  }\n  /*\n   * 售出 储值卡 转让\n   */\n  editCardTransfer(params: TransferCardInput, id: string, type: string) {\n    return this.http.put(`/v1/sold/cards/${type}/transfer/${id}`, {\n      params\n    })\n  }\n  /**\n   * 售出 储值卡 退款回显\n   */\n  getCardRefundInfo(id: string, type: string) {\n    return this.http.get(`/v1/sold/cards/${type}/refund/info/${id}`)\n  }\n  /*\n   * 售出 储值卡 退款\n   */\n  editCardRefund(params: RefundCardInput, id: string, type: string) {\n    return this.http.put(`/v1/sold/cards/${type}/refund/${id}`, {\n      params\n    })\n  }\n  /*\n   * 售出 储值卡/会员卡 详情\n   */\n  getCardInfo(id: string, type: string) {\n    return this.http.get(\n      `/v1/sold/cards/${type}/${type === 'member' ? 'info' : 'detail'}/${id}`\n    )\n    //  return this.http.get(`/v1/sold/cards/${type}/detail/${id}`)\n  }\n  /**\n   * 售出 会员卡 冻结回显\n   */\n  getMemberFreezeInfo(id: string) {\n    return this.http.get(`/v1/sold/cards/member/freeze/info/${id}`)\n  }\n  /**\n   * 售出 会员卡 冻结\n   */\n  editMemberFreeze(params: FreezeCardInput, id: string) {\n    return this.http.put(`/v1/sold/cards/member/freeze/${id}`, {\n      params\n    })\n  }\n  /**\n   * 取消冻结售出 会员卡/储值卡\n   */\n  unFreezeCard(id: string, type: string) {\n    return this.http.put(`/v1/sold/cards/${type}/cancel/freeze/${id}`)\n  }\n  /**\n   * 售出 会员卡/储值卡 详情消费记录\n   */\n  getCardsConsumeInfo(id: string, type: string) {\n    return this.http.get(`/v1/sold/cards/${type}/consume/record/${id}`)\n  }\n  /**\n   * 售出 会员卡/储值卡 详情操作日志\n   */\n  getCardsOperationInfo(query: any, type: string) {\n    return this.http.get(`/v1/sold/cards/${type}/operation/log/${query.id}`, {\n      query\n    })\n  }\n  /**\n   * 售出 会员卡 详情使用记录\n   */\n  getCardsUsageLog(query: any, type: string) {\n    return this.http.get(`/v1/sold/cards/${type}/usage/log/${query.id}`, {\n      query\n    })\n  }\n  /**\n   * 售出 储值卡 详情使用记录\n   */\n  getDepositUsageLog(query: any) {\n    return this.http.get(`/v1/cards/brand/deposit/cost`, {\n      query\n    })\n  }\n  /**\n   * 售出 会员卡 设置有效日期回显\n   */\n  getCardSettimeInfo(id: string) {\n    return this.http.get(`/v1/sold/cards/member/setting/info/${id}`)\n  }\n  /**\n   * 售出 vip区域 列表\n   */\n  getCardVipAreaList() {\n    return this.http.get('/v1/sold/cards/member/vip')\n  }\n  /**\n   * 售出 会员卡 vip区域\n   */\n  getCardVipArea(id: string) {\n    return this.http.get(`/v1/sold/cards/member/vip/info/${id}`)\n  }\n  /**\n   * 售出 会员卡修改vip区域\n   */\n  setCardVipArea(params: CardVipInput) {\n    return this.http.put(`/v1/sold/cards/member/vip`, { params })\n  }\n  /**\n   * 售出 会员卡批量修改vip区域\n   */\n  setCardVipAreaBatch(params: CardVipInput) {\n    return this.http.post(`/v1/sold/cards/batch/vip_area`, { params })\n  }\n  /**\n   * 售出 会员卡 设置有效日期\n   */\n  setCardSettingTime(params: CardSettingTimeInput, id: string) {\n    return this.http.put(`/v1/sold/cards/member/setting/${id}`, {\n      params\n    })\n  }\n  /**\n   * 售出 会员卡 批量赠送\n   */\n  setCardGive(params: any) {\n    return this.http.post(`/v1/sold/cards/batch/amount`, { params })\n  }\n  /**\n   * 售出 会员卡 续卡回显\n   */\n  getCardRenewalInfo(id: string | number) {\n    return this.http.get(`/v1/sold/cards/member/renewal/info/${id}`)\n  }\n  /**\n   * 售出 会员卡 续卡\n   */\n  setCardRenewal(params: RenewalCardInput, id: string) {\n    return this.http.put(`/v1/sold/cards/member/renewal/${id}`, {\n      params\n    })\n  }\n  /**\n   * 售出 会员卡 升级回显\n   */\n  getCardUpgradeInfo(id: string) {\n    return this.http.get(`/v1/sold/cards/member/upgrade/info/${id}`)\n  }\n  /**\n   * 售出 会员卡 升级\n   */\n  setCardUpgrade(params: any, id: string) {\n    return this.http.put(`/v1/sold/cards/member/upgrade/${id}`, {\n      params\n    })\n  }\n  /**\n   * 门店可售卖的会员卡列表\n   */\n  getCardUpgradeList(card_name_search?: string, card_number_type = -1) {\n    return this.http.get(`/v1/sold/cards/shop/saled_card`, {\n      query: { card_name_search, card_number_type }\n    })\n  }\n  /**\n   * 获取会员卡可使用条数\n   */\n  fetchSoldCardValidNum(query: any) {\n    return this.http.get(`/v1/sold/cards/batch/count`, {\n      query\n    })\n  }\n  /**\n   * 获取会员卡 vip 区域和入场时间可使用条数\n   */\n  fetchSoldCardVIPOrTimeValidNum(query: any) {\n    return this.http.get(`/v1/sold/cards/batch/num`, {\n      query\n    })\n  }\n  /**\n   * 售出 会员卡 批量更改入场时间\n   */\n  setCardEnterTime(params: any) {\n    return this.http.post(`/v1/sold/cards/batch/admission_time`, {\n      params\n    })\n  }\n  /**\n   * 售出 会员卡 更改成员\n   */\n  changeCardMember(id: number, params: any) {\n    return this.http.put(`/v1/sold/cards/member/cards/edit/${id}`, {\n      params\n    })\n  }\n  /**\n   * 获取批量延期会员卡查询总数\n   */\n  getRenewalTaskNum(query: GetRenewalTaskNumInput) {\n    return this.http.get('/v1/sold/cards/batch/renewal/task_num', {\n      query\n    })\n  }\n  /**\n   * 售出会员卡延长有效期\n   */\n  taskExtendDays(params: TaskExtendDaysInput) {\n    return this.http.post('/v1/sold/cards/batch/renewal', {\n      params\n    })\n  }\n  /**\n   * 售出会员卡激活\n   */\n  setReactive(params: any) {\n    return this.http.put(`/v1/sold/cards/member/reactive/${params.id}`, {\n      params\n    })\n  }\n  /**\n   * 售出会员卡激活\n   */\n  getReactiveInfo(id: any) {\n    return this.http.get(`/v1/sold/cards/member/reactive/info/${id}`)\n  }\n  /**\n   * 售出会员卡激活\n   */\n  taskReactive(params: TaskExtendDaysInput) {\n    return this.http.post('/v1/sold/cards/batch/renew', {\n      params\n    })\n  }\n  /**\n   * 售出会员卡激活 条数\n   */\n  getTaskReactiveNum(query: GetRenewalTaskNumInput) {\n    return this.http.get('v1/sold/cards/batch/renew-num', { query })\n  }\n}\n"],"sourceRoot":""}]}