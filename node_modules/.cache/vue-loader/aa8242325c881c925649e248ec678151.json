{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/add-card-member/add-card-member.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/add-card-member/add-card-member.vue","mtime":1597396799920},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from 'lodash-es'\nimport { AddCardMemberService } from './add-card-member.service'\nimport { MessageService } from '@/services/message.service'\nimport { PatternService } from '@/services/pattern.service'\nexport default {\n  name: 'AddCardMember',\n  bem: {\n    b: 'page-add-card-member'\n  },\n  serviceProviders() {\n    return [AddCardMemberService]\n  },\n  serviceInject() {\n    return {\n      addCardMemberService: AddCardMemberService,\n      messageService: MessageService,\n      patternService: PatternService\n    }\n  },\n  rxState() {\n    let { parentTypeOptions$, minorsTypeOptions$ } = this.addCardMemberService\n    return {\n      memberList: this.addCardMemberService.memberList$,\n      parentTypeOptions$,\n      minorsTypeOptions$\n    }\n  },\n  model: {\n    prop: 'list',\n    event: 'change'\n  },\n  props: {\n    addText: {\n      type: String,\n      default: '新增卡成员'\n    },\n    type: {\n      type: Number,\n      default: 1\n    },\n    productType: {\n      type: String\n    },\n    max: {\n      type: Number,\n      default: 10\n    },\n    list: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      visible: false,\n      memberSearchText: '',\n      searchMemberIsShow: true,\n      memberId: '',\n      searchFlag: false,\n      searchWidth: ''\n    }\n  },\n  mounted() {\n    this.$nextTick(function() {\n      this.searchWidth =\n        this.$refs.addMemberCardButton.$el.offsetWidth - 32 + 'px'\n    })\n  },\n  methods: {\n    parentUserRoleStr(value) {\n      let label = value\n      if (typeof value === 'number') {\n        this.parentTypeOptions$.forEach(element => {\n          if (element.value === value) {\n            label = element.label\n          }\n        })\n      }\n      return label\n    },\n    selectItemLabel(item) {\n      if (item.is_minors === 1) {\n        return `${item.member_name}(未成年) ${item.parent_mobile}(${item.parent_user_role})`\n      }\n      return `${item.member_name} ${item.mobile}`\n    },\n    onConfirmItem(data, index) {\n      if (!data.name) {\n        this.messageService.error({\n          content: '请填写正确成员姓名'\n        })\n        return\n      }\n      if (!data.mobile || !this.patternService.MOBILE.test(data.mobile)) {\n        this.messageService.error({\n          content: '请填写正确手机号'\n        })\n        return\n      }\n\n      const isExist = this.list.filter(\n        item => item.mobile === data.mobile && !item.isEdit\n      )\n      if (data.is_minors) {\n        data.parent_mobile = data.mobile\n      }\n      // 未成年人不校验手机重复 20200720\n      if (!data.is_minors && isExist && isExist.length > 0) {\n        this.messageService.error({\n          content: '该手机号已经存在'\n        })\n        return\n      }\n      data.isEdit = false\n      this.$emit('change', this.list)\n    },\n    onCancelItem(item, index) {\n      this.list.shift()\n      this.$emit('change', this.list)\n    },\n    onDeleteItem(item, index) {\n      this.list.splice(index, 1)\n      this.$emit('change', this.list)\n    },\n    onChangeMinors($event, item) {\n      console.log($event, item)\n      // 未成年需要关系字段\n      if ($event === 1) {\n        item.parent_mobile = item.mobile\n        this.$set(item, 'parent_user_role', 1)\n      }\n    },\n    onAddMember() {\n      this.memberSearchText = ''\n      const isExistEdit = this.list.filter(item => item.isEdit)\n      if (isExistEdit && isExistEdit.length > 0) {\n        this.messageService.error({\n          content: '还有没有新增完成的成员'\n        })\n        return\n      }\n      this.visible = false\n      this.list.unshift({\n        name: '',\n        mobile: '',\n        is_minors: 0,\n        isEdit: true\n      })\n    },\n    onMemberSearch(data) {\n      this.memberSearchText = data.target.value\n      if (data) {\n        this.addCardMemberService.memberListAction$.dispatch(\n          data.target.value,\n          this.type\n        )\n      }\n    },\n    onMemberChange(data) {\n      if (this.list.length >= this.max) return\n      const isExist = this.list.filter(\n        item => item.mobile === data.mobile && !item.isEdit\n      )\n      if (isExist && isExist.length > 0) {\n        this.messageService.error({\n          content: '该手机号已经存在'\n        })\n        return\n      }\n      const isExistEdit = this.list.filter(item => item.isEdit)\n      let insertIndex = 0\n      if (isExistEdit && isExistEdit.length > 0) {\n        insertIndex = 1\n      }\n      this.list.splice(insertIndex, 0, {\n        id: data.id,\n        name: data.member_name,\n        mobile: data.mobile,\n        is_minors: data.is_minors,\n        parent_mobile: data.parent_mobile,\n        parent_name: data.parent_name,\n        parent_user_role: data.parent_user_role\n      })\n      this.visible = false\n      this.resetSearchCondition()\n      this.$emit('change', this.list)\n    },\n    resetSearchCondition() {\n      this.memberSearchText = ''\n      this.memberList = []\n    }\n  }\n}\n",null]}