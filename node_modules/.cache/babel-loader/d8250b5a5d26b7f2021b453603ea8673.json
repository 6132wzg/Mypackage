{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/sold/transaction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/sold/transaction.vue","mtime":1594718339856},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering';\nimport SoldDealSaleCabinet from '@/views/biz-modals/sold/deal/sale-cabinet';\nimport SoldDealSaleCourse from '@/views/biz-modals/sold/deal/sale-course';\nimport SoldDealSaleDepositCard from '@/views/biz-modals/sold/deal/sale-deposit-card';\nimport SoldDealSaleMemberCard from '@/views/biz-modals/sold/deal/sale-member-card';\nimport SoldDealSalePersonalCourse from '@/views/biz-modals/sold/deal/sale-personal-course';\nimport SoldDealSaleSmallCourse from '@/views/biz-modals/sold/deal/sale-small-course';\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip';\nimport { PRODUCT_TYPE } from '@/constants/sold/transaction';\nimport { OssService } from '@/services/oss.service';\nexport default {\n  name: 'SoldTransaction',\n  props: {},\n  modals: {\n    SoldDealGathering: SoldDealGathering,\n    SoldDealSaleCabinet: SoldDealSaleCabinet,\n    SoldDealSaleCourse: SoldDealSaleCourse,\n    SoldDealSaleDepositCard: SoldDealSaleDepositCard,\n    SoldDealSaleMemberCard: SoldDealSaleMemberCard,\n    SoldDealSalePersonalCourse: SoldDealSalePersonalCourse,\n    SoldDealGatheringTip: SoldDealGatheringTip,\n    SoldDealSaleSmallCourse: SoldDealSaleSmallCourse\n  },\n  serviceInject: function serviceInject() {\n    return {\n      ossService: OssService\n    };\n  },\n  data: function data() {\n    return {\n      PRODUCT_TYPE: PRODUCT_TYPE\n    };\n  },\n  methods: {\n    // 订单收款modal\n    createdOrderPay: function createdOrderPay(props) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.$modalRouter.push({\n          name: 'sold-deal-gathering',\n          props: props,\n          on: {\n            success: resolve\n          }\n        });\n      });\n    },\n    // 订单收款回调\n    payCallBack: function () {\n      var _payCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(orderId, modalType, callBackType) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = callBackType;\n                _context.next = _context.t0 === 'cancel' ? 3 : _context.t0 === 'pay' ? 5 : 7;\n                break;\n\n              case 3:\n                this.onSearch();\n                return _context.abrupt(\"break\", 7);\n\n              case 5:\n                this.createdGatheringTip({\n                  message: '收款成功',\n                  order_id: orderId\n                }).then(function (res) {\n                  _this2.tipCallBack(orderId, modalType, res.type);\n                });\n                return _context.abrupt(\"break\", 7);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function payCallBack(_x, _x2, _x3) {\n        return _payCallBack.apply(this, arguments);\n      }\n\n      return payCallBack;\n    }(),\n    // 创建成功，提示框modal\n    createdGatheringTip: function createdGatheringTip(props) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.$modalRouter.push({\n          name: 'sold-deal-gathering-tip',\n          props: props,\n          on: {\n            success: resolve\n          }\n        });\n      });\n    },\n    // 提示框回调，gathering-tip\n    tipCallBack: function () {\n      var _tipCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(orderId, modalType, callBackType) {\n        var _this4 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = callBackType;\n                _context2.next = _context2.t0 === 'cancel' ? 3 : _context2.t0 === 'Print' ? 5 : _context2.t0 === 'ViewOrder' ? 7 : _context2.t0 === 'PrintOrder' ? 9 : _context2.t0 === 'Pay' ? 11 : 13;\n                break;\n\n              case 3:\n                this.$router.reload();\n                return _context2.abrupt(\"break\", 13);\n\n              case 5:\n                this.createdOrderPrint(orderId);\n                return _context2.abrupt(\"break\", 13);\n\n              case 7:\n                this.createdOrderViewOrder(orderId);\n                return _context2.abrupt(\"break\", 13);\n\n              case 9:\n                this.printOrder(orderId);\n                return _context2.abrupt(\"break\", 13);\n\n              case 11:\n                this.createdOrderPay({\n                  order_id: orderId,\n                  type: modalType\n                }).then(function (res) {\n                  _this4.payCallBack(orderId, modalType, res.type);\n                });\n                return _context2.abrupt(\"break\", 13);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function tipCallBack(_x4, _x5, _x6) {\n        return _tipCallBack.apply(this, arguments);\n      }\n\n      return tipCallBack;\n    }(),\n\n    /**\n     * 交易签单，签单操作\n     * @params order_id 订单id\n     * @params product_type 签单类型\n     * @params member_id 会员id\n     * @params member_name 会员姓名\n     * @params member_mobile 会员手机号\n     * @params id_card 证件号\n     * @params id_card_type 证件类型\n     * @params card_num 实体卡号\n     * @params physical_id 物理ID\n     */\n    onTransaction: function onTransaction(order_id, product_type, member_id, member_name, member_mobile, id_card, id_card_type, card_num, physical_id) {\n      var record = {\n        id: order_id,\n        product_type: product_type,\n        member_id: member_id,\n        member_name: member_name,\n        member_mobile: member_mobile,\n        id_card: id_card,\n        id_card_type: id_card_type,\n        card_num: card_num,\n        physical_id: physical_id\n      };\n      console.log('record', record);\n\n      switch (record.product_type) {\n        case this.PRODUCT_TYPE.MEMBER_CARD:\n          this.onMember(record);\n          break;\n\n        case this.PRODUCT_TYPE.DEPOSIT_CARD:\n          this.onDeposit(record);\n          break;\n\n        case this.PRODUCT_TYPE.PERSONAL_COURSE:\n          this.onPersonalCourse(record);\n          break;\n\n        case this.PRODUCT_TYPE.PACKAGE:\n          this.onPackage(record);\n          break;\n\n        case this.PRODUCT_TYPE.CABINET:\n          this.onCabinet(record);\n          break;\n\n        case this.PRODUCT_TYPE.SMALL_COURSE:\n          this.onSmallCourse(record);\n          break;\n      }\n    },\n    // 签单成功回调\n    saleCallBack: function () {\n      var _saleCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(result, type) {\n        var props, orderSuccessRes, _props, payOrderRes;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(result.type === 'create')) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                // 创建订单成功\n                props = {\n                  order_id: result.orderId,\n                  type: type,\n                  message: '订单创建成功',\n                  needPay: true\n                };\n                _context3.next = 4;\n                return this.createdGatheringTip(props);\n\n              case 4:\n                orderSuccessRes = _context3.sent;\n                this.tipCallBack(result.orderId, type, orderSuccessRes.type);\n                _context3.next = 14;\n                break;\n\n              case 8:\n                if (!(result.type === 'createPay')) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                // 创建订单成功 并且到支付页面\n                _props = {\n                  order_id: result.orderId,\n                  type: type\n                };\n                _context3.next = 12;\n                return this.createdOrderPay(_props);\n\n              case 12:\n                payOrderRes = _context3.sent;\n                this.payCallBack(result.orderId, type, payOrderRes.type);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saleCallBack(_x7, _x8) {\n        return _saleCallBack.apply(this, arguments);\n      }\n\n      return saleCallBack;\n    }(),\n    // 打印小票\n    printOrder: function printOrder(order_id) {\n      window.open('/ticket/gathering-print?id=' + order_id, '_blank', 'width=800,height=600');\n    },\n    // 会员卡签单\n    onMember: function onMember(record) {\n      var _this5 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-member-card',\n        props: {\n          id: \"\".concat(record.id),\n          memberInfo: {\n            member_id: record.member_id,\n            member_name: record.member_name,\n            member_mobile: record.member_mobile,\n            id_card: record.id_card,\n            id_card_type: record.id_card_type,\n            card_num: record.card_num,\n            physical_id: record.physical_id\n          }\n        },\n        on: {\n          success: function success(result) {\n            _this5.saleCallBack(result, 'member');\n          }\n        }\n      });\n    },\n    // 储值卡签单\n    onDeposit: function onDeposit(record) {\n      var _this6 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-deposit-card',\n        props: {\n          id: \"\".concat(record.id),\n          memberInfo: {\n            member_id: record.member_id,\n            member_name: record.member_name,\n            member_mobile: record.member_mobile,\n            id_card: record.id_card,\n            id_card_type: record.id_card_type,\n            card_num: record.card_num,\n            physical_id: record.physical_id\n          }\n        },\n        on: {\n          success: function success(result) {\n            _this6.saleCallBack(result, 'deposit');\n          }\n        }\n      });\n    },\n    // 储物柜签单\n    onCabinet: function onCabinet(record) {\n      var _this7 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-cabinet',\n        props: {\n          // 默认传0，因为没有选择具体的柜子\n          id: '0',\n          areaId: \"\".concat(record.id),\n          memberInfo: {\n            member_id: record.member_id,\n            member_name: record.member_name,\n            member_mobile: record.member_mobile,\n            id_card: record.id_card,\n            id_card_type: record.id_card_type,\n            card_num: record.card_num,\n            physical_id: record.physical_id\n          }\n        },\n        on: {\n          success: function success(result) {\n            _this7.saleCallBack(result, 'cabinet_order');\n          }\n        }\n      });\n    },\n    // 课程包签单\n    onPackage: function onPackage(record) {\n      var _this8 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-course',\n        props: {\n          id: \"\".concat(record.id),\n          memberInfo: {\n            member_id: record.member_id,\n            member_name: record.member_name,\n            member_mobile: record.member_mobile,\n            id_card: record.id_card,\n            id_card_type: record.id_card_type,\n            card_num: record.card_num,\n            physical_id: record.physical_id\n          }\n        },\n        on: {\n          success: function success(result) {\n            _this8.saleCallBack(result, 'package');\n          }\n        }\n      });\n    },\n    // 私教课签单\n    onPersonalCourse: function onPersonalCourse(record) {\n      var _this9 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-personal-course',\n        props: {\n          id: \"\".concat(record.id),\n          memberInfo: {\n            member_id: record.member_id,\n            member_name: record.member_name,\n            member_mobile: record.member_mobile,\n            id_card: record.id_card,\n            id_card_type: record.id_card_type,\n            card_num: record.card_num,\n            physical_id: record.physical_id\n          }\n        },\n        on: {\n          success: function success(result) {\n            _this9.saleCallBack(result, 'personal');\n          }\n        }\n      });\n    },\n    // 小班课签单\n    onSmallCourse: function onSmallCourse(record) {\n      var _this10 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-small-course',\n        props: {\n          id: \"\".concat(record.id),\n          memberInfo: {\n            member_id: record.member_id,\n            member_name: record.member_name,\n            member_mobile: record.member_mobile,\n            id_card: record.id_card,\n            id_card_type: record.id_card_type,\n            card_num: record.card_num,\n            physical_id: record.physical_id\n          }\n        },\n        on: {\n          success: function success(result) {\n            _this10.saleCallBack(result, 'small_course_order/detail');\n          }\n        }\n      });\n    },\n    // 打印合同\n    createdOrderPrint: function createdOrderPrint(order_id) {\n      var url = \"\".concat(window.location.origin, \"/common/contract-preview?id=\").concat(order_id);\n      this.ossService.openNewTab(url);\n    },\n    // 查看订单\n    createdOrderViewOrder: function createdOrderViewOrder(order_id) {\n      this.$router.push({\n        name: 'shop-finance-order-info-collection-details',\n        query: {\n          id: order_id\n        }\n      });\n    }\n  }\n};",null]}