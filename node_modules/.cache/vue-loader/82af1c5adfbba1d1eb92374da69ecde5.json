{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/crowd/add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/crowd/add.vue","mtime":1597396799981},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport base_info from './components#/basic-data'\nimport base_sex from './components#/base_sex'\nimport base_age from './components#/base_age'\nimport base_birthday from './components#/base_birthday'\nimport regTime from './components#/reg-time'\nimport affiliatedStore from './components#/affiliated-store'\nimport availableIntegral from './components#/available-integral'\nimport availableCoupons from './components#/available-coupons'\nimport accumulateIntegrals from './components#/accumulate-integrals'\nimport membershipExpires from './components#/membership-expires'\nimport cardRemainingNumber from './components#/card-remaining-number'\nimport privateClassNum from './components#/private-class-num'\nimport cardMount from './components#/card-mount'\nimport admissionTimes from './components#/admission-times'\nimport lastAdmissionTime from './components#/last-admission-time'\nimport sourceMode from './components#/source-mode.vue'\nimport inductionTime from './components#/induction-time.vue'\nimport userLable from './components#/user-lable.vue'\nimport baseMemberLevel from './components#/base-member-level.vue'\nimport periodExpires from './components#/period-card-expires'\nimport packageNum from './components#/package-num'\nimport packageExpiries from './components#/package-expires'\nimport isBuyPersonal from './components#/is_buy_personal'\nimport lessonsNumber from './components#/lessons-number'\nimport userRenew from './components#/user-renew.vue'\nimport lastClassTime from './components#/last-class-time'\nimport noFollowMember from './components#/no-follow-member'\nimport { AddService } from './add.service'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  serviceInject() {\n    return {\n      addService: AddService,\n      messageService: MessageService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.addService.loading$,\n      crowdInfo: this.addService.crowdInfo$\n    }\n  },\n  components: {\n    'basic-data': base_info, // 左侧组件\n    'reg-time': regTime, // 注册时间\n    'source-mode': sourceMode, // 来源方式\n    'induction-time': inductionTime, // 入会时间\n    base_birthday: base_birthday, // 生日\n    base_sex: base_sex, // 性别\n    base_age: base_age, // 年龄\n    'affiliated-store': affiliatedStore, // 所属门店\n    'available-integral': availableIntegral, // 可用积分\n    'available-coupons': availableCoupons, // 可用优惠劵\n    'accumulate-integrals': accumulateIntegrals, // 累计获取积分\n    'membership-expires': membershipExpires, // 会员卡即将到期\n    'card-remaining-number': cardRemainingNumber, // 会员卡剩余次数\n    'admission-times': admissionTimes, // 入场次数\n    'private-class-num': privateClassNum, // 私教课剩余次数\n    cardMount, // 储值卡剩余金额\n    lastAdmissionTime, // 最后一次入场时间\n    userLable, // 用户标签\n    baseMemberLevel, // 用户等级\n    periodExpires, // 期卡即将到期\n    packageNum, // 课程包剩余次数\n    packageExpiries, // 课程包即将到期\n    isBuyPersonal, //是否购买私教课\n    userRenew, // 用户续购情况\n    lessonsNumber, // 上课节数\n    lastClassTime, //最后一次上课时间\n    noFollowMember // 最近未跟进用户\n  },\n  data() {\n    return {\n      selectData: {\n        // 基础资料\n        base_info: {\n          title: '基础资料',\n          value: [\n            '性别',\n            'base_age',\n            '所属门店',\n            '生日',\n            '入会时间',\n            '注册时间',\n            '来源方式'\n          ],\n          selectionData: [],\n          width: 108\n        },\n        deal_info: {\n          title: '交易信息',\n          value: [\n            `${this.$c('member_card')}即将到期`,\n            `${this.$c('member_card')}剩余次数`,\n            '私教课剩余次数',\n            '储值卡剩余金额',\n            '期卡即将到期',\n            '课程包剩余次数',\n            '课程包即将到期',\n            '是否购买私教课',\n            '用户续费情况'\n          ],\n          selectionData: [],\n          width: 170\n        },\n        active_info: {\n          title: '活跃信息',\n          value: [\n            '入场次数',\n            '最后一次入场时间',\n            '上课节数',\n            '最后一次上课时间'\n          ],\n          selectionData: [],\n          width: 170\n        },\n        discount_info: {\n          title: '优惠奖励',\n          value: ['可用优惠券'],\n          selectionData: [],\n          width: 108\n        },\n        follow_info: {\n          title: '跟进信息',\n          value: ['最近未跟进用户'],\n          selectionData: [],\n          width: 170\n        },\n        arrData: [],\n        getData: {\n          crowd_name: '',\n          base_sex: {\n            name: '',\n            value: ''\n          },\n          base_age: {\n            min: '',\n            max: ''\n          },\n          base_birthday: {\n            min: '',\n            max: ''\n          },\n          shop: [],\n          register_time: {\n            min: '',\n            max: ''\n          },\n          source_channel: [],\n          member_time: {\n            min: '',\n            max: ''\n          },\n          available_scores: {\n            min: '',\n            max: ''\n          },\n          available_coupon_number: {\n            min: '',\n            max: ''\n          },\n          sum_scores: {\n            min: '',\n            max: ''\n          },\n          member_expiring: {\n            min: '',\n            max: ''\n          },\n          member_card_remain_times: {\n            min: '',\n            max: ''\n          },\n          personal_course_remain_times: {\n            min: '',\n            max: ''\n          },\n          deposit_remain_money: {\n            min: '',\n            max: ''\n          },\n          remain_enter_times: {\n            select_time: {\n              min: '',\n              max: ''\n            },\n            remain_times: {\n              min: '',\n              max: ''\n            }\n          },\n          final_enter_time: {\n            min: '',\n            max: ''\n          },\n          member_label: [],\n          member_level: [],\n          time_card_expiring: {\n            min: '',\n            max: ''\n          },\n          package_remain_times: {\n            min: '',\n            max: ''\n          },\n          package_expiring: {\n            min: '',\n            max: ''\n          },\n          personal_course_purchase: {\n            select_time: {\n              min: '',\n              max: ''\n            },\n            type: ''\n          },\n          member_course_times: {\n            select_time: {\n              min: '',\n              max: ''\n            },\n            range: {\n              min: '',\n              max: ''\n            }\n          },\n          user_renew: {\n            select_time: {\n              min: '',\n              max: ''\n            },\n            type: ''\n          },\n          last_course_time: {\n            min: '',\n            max: ''\n          },\n          no_follow_member: {\n            min: '',\n            max: ''\n          }\n        },\n        info: {}\n      },\n      // 状态锁\n      flag: true,\n      form: this.$form.createForm(this),\n      basicInfoRuleList: {\n        crowd_name: [\n          'crowd_name',\n          {\n            rules: [\n              {\n                required: true,\n                message: '不超过20字，且不包含“/”'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  },\n  computed: {},\n  created() {\n    if (this.$searchQuery.id) {\n      this.getCrowdBrand(this.$searchQuery.id)\n    }\n    this.getFilterData()\n  },\n  filters: {\n    componentFun(value) {\n      let obj = {\n        base_sex: 'base_sex',\n        base_age: 'base_age',\n        base_birthday: 'base_birthday',\n        base_shop: 'affiliated-store',\n        register_time: 'reg-time',\n        source_channel: 'source-mode',\n        member_time: 'induction-time',\n        available_scores: 'available-integral',\n        available_coupon_number: 'available-coupons',\n        sum_scores: 'accumulate-integrals',\n        member_expiring: 'membership-expires',\n        member_card_remain_times: 'card-remaining-number',\n        personal_course_remain_times: 'private-class-num',\n        deposit_remain_money: 'cardMount',\n        remain_enter_times: 'admission-times',\n        final_enter_time: 'lastAdmissionTime',\n        member_label: 'userLable',\n        member_level: 'base-member-level',\n        time_card_expiring: 'periodExpires',\n        package_remain_times: 'packageNum',\n        package_expiring: 'packageExpiries',\n        personal_course_purchase: 'isBuyPersonal',\n        member_course_times: 'lessonsNumber',\n        user_renew: 'userRenew',\n        last_course_time: 'lastClassTime',\n        no_follow_member: 'noFollowMember'\n      }\n      return obj[value]\n    }\n  },\n  methods: {\n    getCrowdBrand(id) {\n      this.addService.getCrowdBrand(id).subscribe(status => {\n        this.selectData.arrData = status.info.array_index\n        this.selectData.getData.crowd_name = status.info.crowd_name\n        status.info.array_index.map(item => {\n          this.selectData.getData[item] = status.info[item]\n        })\n      })\n    },\n    conserve() {\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          let obj = {}\n          this.selectData.arrData.map(item => {\n            obj[item] = this.selectData.getData[item]\n          })\n          let [arrKey, arrValue] = [[], []]\n          this.selectData.arrData.map(item => {\n            obj[item] = this.selectData.getData[item]\n            if (\n              Object.prototype.toString\n                .call(this.selectData.getData[item])\n                .slice(8, -1) === 'Object'\n            ) {\n              arrKey.push(...Object.keys(this.selectData.getData[item]))\n              arrValue.push(...Object.values(this.selectData.getData[item]))\n            } else {\n              arrKey.push(item)\n              arrValue.push(this.selectData.getData[item])\n            }\n          })\n          obj.crowd_name = values.basicInfoRuleList.crowd_name\n          obj.array_index = this.selectData.arrData\n          if (\n            obj.remain_enter_times &&\n            (!obj.remain_enter_times.remain_times.min ||\n              (!obj.remain_enter_times.select_time.name &&\n                !obj.remain_enter_times.select_time.min))\n          ) {\n            this.messageService.error({\n              content: '入场次数和时间范围必填!'\n            })\n            return\n          }\n          if (this.$searchQuery.id) {\n            this.addService\n              .updateCrowdBrandCrowd(this.$searchQuery.id, obj)\n              .subscribe(status => {\n                this.$router.push({ name: 'shop-member-crowd-index' })\n              })\n          } else {\n            this.addService.setCrowdBrandField(obj).subscribe(status => {\n              this.$router.push({ name: 'shop-member-crowd-index' })\n            })\n          }\n        }\n      })\n    },\n    getFilterData() {\n      // 俱乐部有跟进信息筛选项，工作室没有\n      if (!this.crowdInfo.info.hasOwnProperty('follow_info'))\n        delete this.selectData['follow_info']\n\n      Object.keys(this.crowdInfo.info).map(item => {\n        Object.assign(this.selectData.info, this.crowdInfo.info[item].value)\n        this.selectData[item].value = Object.keys(\n          this.crowdInfo.info[item].value\n        )\n      })\n    },\n    deleteIcon(data, item) {\n      let k = Object.keys(data)\n      k.map(item1 => {\n        if (item1 !== 'arrData' && item1 !== 'getData' && item1 !== 'info') {\n          if (data[item1].selectionData.indexOf(item) >= 0) {\n            data[item1].selectionData.splice(\n              data[item1].selectionData.indexOf(item),\n              1\n            )\n          }\n        } else {\n          if (data.arrData.indexOf(item) >= 0) {\n            data.arrData.splice(data.arrData.indexOf(item), 1)\n          }\n        }\n      })\n    },\n    save(e) {\n      e.preventDefault()\n      this.form.validateFields((err, values) => {\n        console.log(err, values)\n      })\n    },\n    // 校验格式\n    physicalId(rule, value, callback) {\n      if (value === undefined || value === '') {\n        // eslint-disable-next-line\n        callback('请填写人群名称')\n      } else if (value && /\\//.test(value)) {\n        // eslint-disable-next-line\n        callback('输入的人群名称格式错误，请重新输入')\n      } else {\n        // eslint-disable-next-line\n        callback()\n      }\n    }\n  },\n  watch: {\n    selectData: {\n      handler() {\n        let k = Object.keys(this.selectData)\n        let arr = []\n        arr.push(...this.selectData.arrData)\n        if (arr.length >= 5) {\n          this.flag = false\n        } else {\n          this.flag = true\n        }\n      },\n      deep: true\n    }\n  }\n}\n",null]}