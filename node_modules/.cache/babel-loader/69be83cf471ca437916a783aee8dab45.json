{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-store-data-revenue-ring.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-store-data-revenue-ring.vue","mtime":1591147717127},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport { Chart } from '@antv/g2';\nimport { View } from 'st-data-set';\nimport chartMixin from \"./mixin\";\nimport { decimalFilter } from \"./filters\";\nexport default {\n  name: 'BrandStatCourseRing',\n  mixins: [chartMixin],\n  data: function data() {\n    return {\n      intervalStack: {},\n      resize: -99\n    };\n  },\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: [Number, String],\n      default: 280\n    },\n    name: {\n      type: String,\n      default: '总营收'\n    },\n    tooltipId: {\n      type: String,\n      default: ''\n    },\n    total: {\n      type: [Number, String],\n      default: 0\n    },\n    padding: {\n      type: Array,\n      default: function _default() {\n        return [60, '50%', 38, 0];\n      }\n    },\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#5C57FE', '#6332D1', '#009DFF', '#00D0F0', '#00FF87', '#24A68D', '#FFE679'];\n      }\n    },\n    unit: {\n      type: String,\n      default: '元'\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {\n          height: 198,\n          totalName: '',\n          color: ['#4679F9', '#894BFF'],\n          totalCount: 0,\n          unit: ''\n        };\n      }\n    }\n  },\n  computed: {\n    dataSource: function dataSource() {\n      //传入的总计为0时，多一个环形图为0的灰色环形图\n      if (this.total === 0) {\n        return [].concat(_toConsumableArray(this.data), [{\n          name: 'empty',\n          value: 1\n        }]);\n      }\n\n      return this.data;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.dataSource);\n      this.dv.transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +row.value;\n          return row;\n        }\n      });\n    },\n    initChart: function initChart() {\n      var _this = this;\n\n      // chart初始化实例\n      this.getChartInstance(); // 加载数据\n\n      this.chart.source(this.dv, {\n        value: {\n          formatter: function formatter(v) {\n            return v + _this.unit;\n          }\n        }\n      }); // 设置坐标系\n\n      this.setCoord(); // 设置提示信息\n\n      this.setTooltip(); // 设置图例\n\n      this.setLegend(); // 设置复制元素\n\n      this.setGuideHtml(); // 设置渲染环形图\n\n      this.getintervalStack();\n    },\n    getintervalStack: function getintervalStack() {\n      // 环形图初始化\n      this.intervalStack = this.chart.intervalStack().style({\n        fillOpacity: 1,\n        cursor: 'pointer'\n      }).tooltip('name*value', function (item, percent, a) {\n        return {\n          name: item,\n          value: percent\n        };\n      }).position('value').color('name', [].concat(_toConsumableArray(this.colors), ['#e9edf2'])).select(false).active({\n        style: {\n          fillOpacity: 1,\n          lineWidth: 8\n        }\n      });\n      this.chart.render(); // 自定义监听环形图事件\n\n      this.chartEvent();\n    },\n    getChartInstance: function getChartInstance() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: this.padding,\n        height: this.height\n      });\n    },\n    setTooltip: function setTooltip() {\n      this.chart.tooltip({\n        showTitle: false,\n        itemTpl: \"<li class=\\\"tooltip-item-{name}\\\">\\n                    <span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>\\n                    {name}\\n                    <span class=\\\"st-g2-tooltip-value\\\">| {value}</span>\\n                  </li>\"\n      });\n    },\n    setCoord: function setCoord() {\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      });\n    },\n    setLegend: function setLegend() {\n      var _this2 = this;\n\n      this.chart.legend({\n        position: 'right-center',\n        clickable: false,\n        useHtml: true,\n        itemTpl: function itemTpl(name, color, checked, index) {\n          var row = _this2.dv.findRow({\n            name: name\n          });\n\n          var value = row.value;\n          return \"<li class=\\\"g2-legend-list-item item-{originValue} item-{index} {checked}\\\" data-color=\\\"{originColor}\\\" data-value=\\\"{originValue}\\\">\\n                    <i class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></i>\\n                    <span class=\\\"g2-legend-text \\\"g2-legend-text\\\">\".concat(name, \"</span>\\n                    <div class='legend-right mg-l12'>\\n                      <span class='legend-percent g2-legend-money'>\\xA5\").concat(_this2.thousandBit(value), \"</span>\\n                    </div>\\n                  </li>\");\n        },\n        onHover: function onHover(ev) {\n          // 总计为 0 是执行hover\n          // if (this.total === 0) return\n          var $s = _this2.$el.querySelector.bind(_this2.$el);\n\n          var name = ev.item.value;\n\n          var row = _this2.dv.findRow({\n            name: name\n          });\n\n          var shapes = ev.shapes;\n          var geom = ev.geom;\n          var legend = ev.currentTarget; // 选中对应单元\n\n          _this2.total !== 0 && geom.setShapesActived(shapes);\n          legend.addEventListener('mouseleave', function () {\n            _this2.resetTotal();\n          });\n          $s('.guide-value').textContent = _this2.thousandBit(row.value);\n          $s('.guide-name-text').textContent = row.name;\n        }\n      });\n    },\n    setGuideHtml: function setGuideHtml() {\n      var _this3 = this;\n\n      // 总计的自定义DOM\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: function html() {\n          _this3.resize = Math.random();\n          return \"<div class='guide'>\\n                    <div class='guide-title'>\\n                      <span class='guide-value'>\".concat(_this3.thousandBit(_this3.total), \"</span>\\n                      <span class='guide-unit'>\").concat(_this3.unit, \"</span>\\n                    </div>\\n                    <div class='guide-name'>\\n                      <span class=\\\"guide-name-text\\\">\").concat(_this3.name, \"</span>\\n                    </div>\\n                  </div>\");\n        }\n      });\n    },\n    resetTotal: function resetTotal() {\n      var $s = this.$el.querySelector.bind(this.$el);\n      $s('.guide-value').textContent = this.thousandBit(this.total);\n      $s('.guide-name-text').textContent = this.name;\n    },\n    setUnit: function setUnit(e) {\n      var $s = this.$el.querySelector.bind(this.$el); // 当环形图总计都是零的时候隐藏tooltip\n\n      if (e.data._origin.name === 'empty') {\n        $s('.g2-tooltip').setAttribute('style', 'display: none');\n        return;\n      }\n\n      var origin = e.data._origin;\n      var shapes = e.shapes;\n      var geom = e.geom;\n      $s('.guide-value').textContent = this.thousandBit(origin.value);\n      $s('.guide-name-text').textContent = origin.name;\n    },\n    chartEvent: function chartEvent() {\n      var _this4 = this;\n\n      // 鼠标进入环形显示相关的值\n      this.chart.on('interval:mouseenter', function (ev) {\n        var shape = ev.shape;\n        var origin = ev.data._origin;\n\n        if (origin.name === 'empty') {\n          _this4.intervalStack.clearActivedShapes(shape);\n        }\n\n        _this4.setUnit(ev);\n      }); // 鼠标离开显示总值\n\n      this.chart.on('interval:mouseleave', function (e) {\n        _this4.resetTotal();\n      });\n    },\n    thousandBit: function thousandBit(value) {\n      var valueArr = (value + '').split('.');\n      return \"\".concat(valueArr[0].replace(/\\d{1,3}(?=(\\d{3})+$)/g, '$&,')).concat(valueArr[1] ? '.' + valueArr[1] : '');\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      // 注销图形所有事件\n      this.chart.off();\n    }\n  }\n};",{"version":3,"sources":["shop-store-data-revenue-ring.vue"],"names":[],"mappings":";;;;;;;;;AAKA,SAAA,KAAA,QAAA,UAAA;AACA,SAAA,IAAA,QAAA,aAAA;AACA,OAAA,UAAA;AACA,SAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,CAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,CAAA;AAAA;AAFA,KArBA;AAyBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,CACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,CAAA;AAAA;AAFA,KAzBA;AAqCA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArCA;AAyCA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA;AACA,UAAA,MAAA,EAAA,GADA;AAEA,UAAA,SAAA,EAAA,EAFA;AAGA,UAAA,KAAA,EAAA,CAAA,SAAA,EAAA,SAAA,CAHA;AAIA,UAAA,UAAA,EAAA,CAJA;AAKA,UAAA,IAAA,EAAA;AALA,SAAA;AAOA;AAVA;AAzCA,GATA;AA+DA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA;AACA,UAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AACA,4CAAA,KAAA,IAAA,IAAA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA;;AACA,aAAA,KAAA,IAAA;AACA;AAPA,GA/DA;AAwEA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,EAAA,GAAA,IAAA,IAAA,EAAA;AACA,WAAA,EAAA,CAAA,MAAA,CAAA,KAAA,UAAA;AACA,WAAA,EAAA,CAAA,SAAA,CAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,QAFA,oBAEA,GAFA,EAEA;AACA,UAAA,GAAA,CAAA,KAAA,GAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBAAA,GAAA;AACA;AALA,OAAA;AAOA,KAXA;AAYA,IAAA,SAZA,uBAYA;AAAA;;AACA;AACA,WAAA,gBAAA,GAFA,CAGA;;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,SAAA,EAAA,mBAAA,CAAA;AAAA,mBAAA,CAAA,GAAA,KAAA,CAAA,IAAA;AAAA;AADA;AADA,OAAA,EAJA,CASA;;AACA,WAAA,QAAA,GAVA,CAWA;;AACA,WAAA,UAAA,GAZA,CAaA;;AACA,WAAA,SAAA,GAdA,CAeA;;AACA,WAAA,YAAA,GAhBA,CAiBA;;AACA,WAAA,gBAAA;AACA,KA/BA;AAgCA,IAAA,gBAhCA,8BAgCA;AACA;AACA,WAAA,aAAA,GAAA,KAAA,KAAA,CACA,aADA,GAEA,KAFA,CAEA;AACA,QAAA,WAAA,EAAA,CADA;AAEA,QAAA,MAAA,EAAA;AAFA,OAFA,EAMA,OANA,CAMA,YANA,EAMA,UAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA;AACA,eAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA;AAFA,SAAA;AAIA,OAXA,EAYA,QAZA,CAYA,OAZA,EAaA,KAbA,CAaA,MAbA,+BAaA,KAAA,MAbA,IAaA,SAbA,IAcA,MAdA,CAcA,KAdA,EAeA,MAfA,CAeA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,WAAA,EAAA,CADA;AAEA,UAAA,SAAA,EAAA;AAFA;AADA,OAfA,CAAA;AAqBA,WAAA,KAAA,CAAA,MAAA,GAvBA,CAwBA;;AACA,WAAA,UAAA;AACA,KA1DA;AA2DA,IAAA,gBA3DA,8BA2DA;AACA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA;AACA,QAAA,SAAA,EAAA,KAAA,GADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,OAAA,EAAA,KAAA,OAHA;AAIA,QAAA,MAAA,EAAA,KAAA;AAJA,OAAA,CAAA;AAMA,KAlEA;AAmEA,IAAA,UAnEA,wBAmEA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,OAAA;AAFA,OAAA;AAQA,KA5EA;AA6EA,IAAA,QA7EA,sBA6EA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,QAAA,WAAA,EAAA;AADA,OAAA;AAGA,KAjFA;AAkFA,IAAA,SAlFA,uBAkFA;AAAA;;AACA,WAAA,KAAA,CAAA,MAAA,CAAA;AACA,QAAA,QAAA,EAAA,cADA;AAEA,QAAA,SAAA,EAAA,KAFA;AAGA,QAAA,OAAA,EAAA,IAHA;AAIA,QAAA,OAAA,EAAA,iBAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA;AACA,cAAA,GAAA,GAAA,MAAA,CAAA,EAAA,CAAA,OAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA,CAAA;;AACA,cAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,mUAEA,IAFA,oJAIA,MAAA,CAAA,WAAA,CACA,KADA,CAJA;AASA,SAhBA;AAiBA,QAAA,OAAA,EAAA,iBAAA,EAAA,EAAA;AACA;AACA;AACA,cAAA,EAAA,GAAA,MAAA,CAAA,GAAA,CAAA,aAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA;;AACA,cAAA,IAAA,GAAA,EAAA,CAAA,IAAA,CAAA,KAAA;;AACA,cAAA,GAAA,GAAA,MAAA,CAAA,EAAA,CAAA,OAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA,CAAA;;AACA,cAAA,MAAA,GAAA,EAAA,CAAA,MAAA;AACA,cAAA,IAAA,GAAA,EAAA,CAAA,IAAA;AACA,cAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CARA,CASA;;AACA,UAAA,MAAA,CAAA,KAAA,KAAA,CAAA,IAAA,IAAA,CAAA,gBAAA,CAAA,MAAA,CAAA;AACA,UAAA,MAAA,CAAA,gBAAA,CAAA,YAAA,EAAA,YAAA;AACA,YAAA,MAAA,CAAA,UAAA;AACA,WAFA;AAGA,UAAA,EAAA,CAAA,cAAA,CAAA,CAAA,WAAA,GAAA,MAAA,CAAA,WAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AACA,UAAA,EAAA,CAAA,kBAAA,CAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA;AACA;AAjCA,OAAA;AAmCA,KAtHA;AAuHA,IAAA,YAvHA,0BAuHA;AAAA;;AACA;AACA,WAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA;AACA,QAAA,QAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,EAAA;AACA,+IAEA,MAAA,CAAA,WAAA,CACA,MAAA,CAAA,KADA,CAFA,qEAKA,MAAA,CAAA,IALA,sJAQA,MAAA,CAAA,IARA;AAWA;AAfA,OAAA;AAiBA,KA1IA;AA2IA,IAAA,UA3IA,wBA2IA;AACA,UAAA,EAAA,GAAA,KAAA,GAAA,CAAA,aAAA,CAAA,IAAA,CAAA,KAAA,GAAA,CAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,WAAA,GAAA,KAAA,WAAA,CAAA,KAAA,KAAA,CAAA;AACA,MAAA,EAAA,CAAA,kBAAA,CAAA,CAAA,WAAA,GAAA,KAAA,IAAA;AACA,KA/IA;AAgJA,IAAA,OAhJA,mBAgJA,CAhJA,EAgJA;AACA,UAAA,EAAA,GAAA,KAAA,GAAA,CAAA,aAAA,CAAA,IAAA,CAAA,KAAA,GAAA,CAAA,CADA,CAEA;;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,KAAA,OAAA,EAAA;AACA,QAAA,EAAA,CAAA,aAAA,CAAA,CAAA,YAAA,CAAA,OAAA,EAAA,eAAA;AACA;AACA;;AACA,UAAA,MAAA,GAAA,CAAA,CAAA,IAAA,CAAA,OAAA;AACA,UAAA,MAAA,GAAA,CAAA,CAAA,MAAA;AACA,UAAA,IAAA,GAAA,CAAA,CAAA,IAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,WAAA,GAAA,KAAA,WAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,MAAA,EAAA,CAAA,kBAAA,CAAA,CAAA,WAAA,GAAA,MAAA,CAAA,IAAA;AACA,KA7JA;AA8JA,IAAA,UA9JA,wBA8JA;AAAA;;AACA;AACA,WAAA,KAAA,CAAA,EAAA,CAAA,qBAAA,EAAA,UAAA,EAAA,EAAA;AACA,YAAA,KAAA,GAAA,EAAA,CAAA,KAAA;AACA,YAAA,MAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA;;AACA,YAAA,MAAA,CAAA,IAAA,KAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,KAAA;AACA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,EAAA;AACA,OAPA,EAFA,CAUA;;AACA,WAAA,KAAA,CAAA,EAAA,CAAA,qBAAA,EAAA,UAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,UAAA;AACA,OAFA;AAGA,KA5KA;AA6KA,IAAA,WA7KA,uBA6KA,KA7KA,EA6KA;AACA,UAAA,QAAA,GAAA,CAAA,KAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,CAAA;AACA,uBAAA,QAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,EAAA,KAAA,CAAA,SACA,QAAA,CAAA,CAAA,CAAA,GAAA,MAAA,QAAA,CAAA,CAAA,CAAA,GAAA,EADA;AAGA;AAlLA,GAxEA;AA4PA,EAAA,aA5PA,2BA4PA;AACA,QAAA,KAAA,KAAA,EAAA;AACA;AACA,WAAA,KAAA,CAAA,GAAA;AACA;AACA;AAjQA,CAAA","sourcesContent":["<template>\n  <div class=\"shop-store-data-revenue-ring\"></div>\n</template>\n\n<script>\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport chartMixin from './mixin'\nimport { decimalFilter } from './filters'\n\nexport default {\n  name: 'BrandStatCourseRing',\n  mixins: [chartMixin],\n  data() {\n    return {\n      intervalStack: {},\n      resize: -99\n    }\n  },\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: [Number, String],\n      default: 280\n    },\n    name: {\n      type: String,\n      default: '总营收'\n    },\n    tooltipId: {\n      type: String,\n      default: ''\n    },\n    total: {\n      type: [Number, String],\n      default: 0\n    },\n    padding: {\n      type: Array,\n      default: () => [60, '50%', 38, 0]\n    },\n    colors: {\n      type: Array,\n      default: () => [\n        '#5C57FE',\n        '#6332D1',\n        '#009DFF',\n        '#00D0F0',\n        '#00FF87',\n        '#24A68D',\n        '#FFE679'\n      ]\n    },\n    unit: {\n      type: String,\n      default: '元'\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {\n          height: 198,\n          totalName: '',\n          color: ['#4679F9', '#894BFF'],\n          totalCount: 0,\n          unit: ''\n        }\n      }\n    }\n  },\n  computed: {\n    dataSource() {\n      //传入的总计为0时，多一个环形图为0的灰色环形图\n      if (this.total === 0) {\n        return [...this.data, { name: 'empty', value: 1 }]\n      }\n      return this.data\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.dataSource)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n    },\n    initChart() {\n      // chart初始化实例\n      this.getChartInstance()\n      // 加载数据\n      this.chart.source(this.dv, {\n        value: {\n          formatter: v => v + this.unit\n        }\n      })\n      // 设置坐标系\n      this.setCoord()\n      // 设置提示信息\n      this.setTooltip()\n      // 设置图例\n      this.setLegend()\n      // 设置复制元素\n      this.setGuideHtml()\n      // 设置渲染环形图\n      this.getintervalStack()\n    },\n    getintervalStack() {\n      // 环形图初始化\n      this.intervalStack = this.chart\n        .intervalStack()\n        .style({\n          fillOpacity: 1,\n          cursor: 'pointer'\n        })\n        .tooltip('name*value', function(item, percent, a) {\n          return {\n            name: item,\n            value: percent\n          }\n        })\n        .position('value')\n        .color('name', [...this.colors, '#e9edf2'])\n        .select(false)\n        .active({\n          style: {\n            fillOpacity: 1,\n            lineWidth: 8\n          }\n        })\n      this.chart.render()\n      // 自定义监听环形图事件\n      this.chartEvent()\n    },\n    getChartInstance() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: this.padding,\n        height: this.height\n      })\n    },\n    setTooltip() {\n      this.chart.tooltip({\n        showTitle: false,\n        itemTpl: `<li class=\"tooltip-item-{name}\">\n                    <span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>\n                    {name}\n                    <span class=\"st-g2-tooltip-value\">| {value}</span>\n                  </li>`\n      })\n    },\n    setCoord() {\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      })\n    },\n    setLegend() {\n      this.chart.legend({\n        position: 'right-center',\n        clickable: false,\n        useHtml: true,\n        itemTpl: (name, color, checked, index) => {\n          const row = this.dv.findRow({ name })\n          const value = row.value\n          return `<li class=\"g2-legend-list-item item-{originValue} item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">\n                    <i class=\"g2-legend-marker\" style=\"background-color:{color};\"></i>\n                    <span class=\"g2-legend-text \"g2-legend-text\">${name}</span>\n                    <div class='legend-right mg-l12'>\n                      <span class='legend-percent g2-legend-money'>¥${this.thousandBit(\n                        value\n                      )}</span>\n                    </div>\n                  </li>`\n        },\n        onHover: ev => {\n          // 总计为 0 是执行hover\n          // if (this.total === 0) return\n          const $s = this.$el.querySelector.bind(this.$el)\n          const name = ev.item.value\n          const row = this.dv.findRow({ name })\n          const shapes = ev.shapes\n          const geom = ev.geom\n          const legend = ev.currentTarget\n          // 选中对应单元\n          this.total !== 0 && geom.setShapesActived(shapes)\n          legend.addEventListener('mouseleave', () => {\n            this.resetTotal()\n          })\n          $s('.guide-value').textContent = this.thousandBit(row.value)\n          $s('.guide-name-text').textContent = row.name\n        }\n      })\n    },\n    setGuideHtml() {\n      // 总计的自定义DOM\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: () => {\n          this.resize = Math.random()\n          return `<div class='guide'>\n                    <div class='guide-title'>\n                      <span class='guide-value'>${this.thousandBit(\n                        this.total\n                      )}</span>\n                      <span class='guide-unit'>${this.unit}</span>\n                    </div>\n                    <div class='guide-name'>\n                      <span class=\"guide-name-text\">${this.name}</span>\n                    </div>\n                  </div>`\n        }\n      })\n    },\n    resetTotal() {\n      const $s = this.$el.querySelector.bind(this.$el)\n      $s('.guide-value').textContent = this.thousandBit(this.total)\n      $s('.guide-name-text').textContent = this.name\n    },\n    setUnit(e) {\n      const $s = this.$el.querySelector.bind(this.$el)\n      // 当环形图总计都是零的时候隐藏tooltip\n      if (e.data._origin.name === 'empty') {\n        $s('.g2-tooltip').setAttribute('style', 'display: none')\n        return\n      }\n      const origin = e.data._origin\n      const shapes = e.shapes\n      const geom = e.geom\n\n      $s('.guide-value').textContent = this.thousandBit(origin.value)\n      $s('.guide-name-text').textContent = origin.name\n    },\n    chartEvent() {\n      // 鼠标进入环形显示相关的值\n      this.chart.on('interval:mouseenter', ev => {\n        const shape = ev.shape\n        const origin = ev.data._origin\n        if (origin.name === 'empty') {\n          this.intervalStack.clearActivedShapes(shape)\n        }\n        this.setUnit(ev)\n      })\n      // 鼠标离开显示总值\n      this.chart.on('interval:mouseleave', e => {\n        this.resetTotal()\n      })\n    },\n    thousandBit(value) {\n      let valueArr = (value + '').split('.')\n      return `${valueArr[0].replace(/\\d{1,3}(?=(\\d{3})+$)/g, '$&,')}${\n        valueArr[1] ? '.' + valueArr[1] : ''\n      }`\n    }\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      // 注销图形所有事件\n      this.chart.off()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}