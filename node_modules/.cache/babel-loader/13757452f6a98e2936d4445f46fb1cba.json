{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/deposit/add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/deposit/add.vue","mtime":1597396799958},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport { PatternService } from '@/services/pattern.service';\nimport SelectShop from '@/views/fragments/shop/select-shop';\nimport { cloneDeep, remove } from 'lodash-es';\nimport { AddService } from \"./add.service\";\nimport { AppConfig } from '@/constants/config';\nimport { MessageService } from '@/services/message.service';\nimport MemberCard from '@/views/biz-components/h5/pages/member-card';\nimport H5Container from '@/views/biz-components/h5/h5-container';\nimport h5mixin from \"../member/period/h5mixin\";\nimport { MEMBER_CARD } from '@/views/biz-components/h5/pages/member-card.config';\nimport CardBgRadio from '@/views/biz-components/card-bg-radio/card-bg-radio';\nimport { CONSUMPTION_RANGE, SUPPORT_SALES, UNIT, SELL_TYPE, TRANSFER_UNIT } from '@/constants/card/deposit';\nimport { ruleOptions } from \"./deposit.config\";\nimport StEditor from '@/views/biz-components/st/editor/editor.vue';\nexport default {\n  name: 'BrandDepositCardAdd',\n  mixins: [h5mixin],\n  serviceInject: function serviceInject() {\n    return {\n      pattern: PatternService,\n      addService: AddService,\n      appConfig: AppConfig,\n      messageService: MessageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      addLoading: this.addService.loading$,\n      cardBgList: this.addService.cardBgList$,\n      unit: this.addService.unit$,\n      consumerType: this.addService.consumerType$,\n      consumptionRange: this.addService.consumptionRange$,\n      transferUnit: this.addService.transferUnit$,\n      supportSales: this.addService.supportSales$,\n      sellType: this.addService.sellType$\n    };\n  },\n  bem: {\n    b: 'st-help-popover'\n  },\n  components: {\n    StEditor: StEditor,\n    SelectShop: SelectShop,\n    MemberCard: MemberCard,\n    H5Container: H5Container,\n    CardBgRadio: CardBgRadio\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      // cardData\n      CONSUMPTION_RANGE: CONSUMPTION_RANGE,\n      SUPPORT_SALES: SUPPORT_SALES,\n      UNIT: UNIT,\n      SELL_TYPE: SELL_TYPE,\n      TRANSFER_UNIT: TRANSFER_UNIT,\n      cardType: MEMBER_CARD.DEPOSIT_CARD,\n      MEMBER_CARD: MEMBER_CARD,\n      cardData: {\n        // 会员卡名称\n        card_name: '',\n        // 特殊说明\n        special_note: '',\n        // 储值金额\n        card_price: null,\n        // 售卖价格\n        sell_price: null,\n        // 期限\n        num: null,\n        // 期限单位\n        unit: UNIT.DAY,\n        // 消费类目\n        card_consumer_id: [],\n        // 支持入场范围 1-单店 2-多店 3-全店\n        consumption_range: CONSUMPTION_RANGE.ONLY_STORE,\n        // 支持入场门店\n        consumer_shop_list: [],\n        // 支持售卖场馆类型 1-全部门店 2-指定门店\n        support_sales: SUPPORT_SALES.ALL_STORE,\n        // 支持售卖门店\n        sell_shop_list: [],\n        // 支持售卖时间\n        start_time: '',\n        end_time: '',\n        // 结束时间面板是否显示\n        endOpen: false,\n        // 卡背景\n        bg_image: {\n          image_id: 0,\n          image_key: this.cardBgList[0].image_key,\n          image_url: '',\n          index: 1\n        },\n        // 是否配置了用户端\n        appConfig: true,\n        // 卡介绍\n        card_contents: '',\n        // 备注\n        description: '',\n        // 是否支持转让\n        _is_transfer: false,\n        is_transfer: 0,\n        // 转让单位\n        transfer_unit: TRANSFER_UNIT.RMB,\n        // 转让手续费\n        transfer_num: undefined,\n        // 售卖方式\n        card_sell_type: [SELL_TYPE.OFFLINE]\n      },\n      // 卡背景的help文本\n      cardBgValidatorText: '',\n      // 售卖时间\n      start_time: null,\n      end_time: null\n    };\n  },\n  mounted: function mounted() {\n    this.syncAdmission();\n    this.syncAdmissionShop();\n  },\n  methods: {\n    // 保存\n    onHandleSubmit: function onHandleSubmit(e) {\n      var _this = this;\n\n      e.preventDefault(); // 校验卡背景\n\n      this.cardBgValidator();\n      this.form.validate().then(function (values) {\n        if (_this.cardBgIsOk) {\n          // 卡名称\n          _this.cardData.card_name = values.cardData.card_name; // 特殊说明\n\n          _this.cardData.special_note = values.cardData.special_note; // 储值金额\n\n          _this.cardData.card_price = values.cardData.card_price; // 售卖价格\n\n          _this.cardData.sell_price = values.cardData.sell_price; // 期限\n\n          _this.cardData.num = values.cardData.num; // 消费类目\n\n          _this.cardData.card_consumer_id = cloneDeep(values.cardData.card_consumer_id); // 消费门店\n\n          if (_this.cardData.consumption_range !== CONSUMPTION_RANGE.GENERAL_STORE) {\n            // 不是多门店\n            _this.cardData.consumer_shop_list = [];\n          } // 售卖门店\n\n\n          if (_this.cardData.support_sales !== SUPPORT_SALES.SPECIFIED_STORE) {\n            // 不是多门店\n            _this.cardData.sell_shop_list = [];\n          } // 售卖门店\n\n\n          if (_this.cardData.consumption_range === CONSUMPTION_RANGE.GENERAL_STORE && _this.cardData.support_sales === SUPPORT_SALES.CONSUMER_STORE) {\n            // 多门店 && 支持入场门店\n            _this.cardData.sell_shop_list = cloneDeep(_this.cardData.consumer_shop_list);\n          } // 时间\n\n\n          var dateFormat = _this.appConfig.DATE_FORMAT.date;\n          _this.cardData.start_time = moment(_this.start_time).format(dateFormat);\n          _this.cardData.end_time = moment(_this.end_time).format(dateFormat); // 转让\n\n          _this.cardData.transfer_num = _this.cardData._is_transfer ? +values.cardData.transfer_num : undefined;\n\n          _this.addService.addCard(_this.cardData).subscribe(_this.onSubmitSuccess);\n        }\n      });\n    },\n    onSubmitSuccess: function onSubmitSuccess() {\n      this.messageService.success({\n        content: '新增成功'\n      });\n      this.$router.push({\n        name: 'brand-product-card-deposit-list-all'\n      });\n    },\n    // 增加入场门店\n    admission_range_change: function admission_range_change(data) {\n      this.cardData.consumer_shop_list = cloneDeep(data);\n      this.syncAdmissionShop();\n    },\n    // 入场门店支持方式change\n    consumption_range: function consumption_range(data) {\n      this.cardData.consumption_range = data.target.value; // 入场门店变化时，售卖门店同时变化\n\n      this.form.setFieldsValue({\n        'cardData.support_sales': SUPPORT_SALES.ALL_STORE\n      });\n      this.cardData.support_sales = SUPPORT_SALES.ALL_STORE;\n      this.syncAdmission();\n    },\n    // 支持售卖门店change\n    support_range: function support_range(data) {\n      this.cardData.support_sales = data.target.value;\n    },\n    // 增加售卖门店\n    sales_shop_change: function sales_shop_change(data) {\n      this.cardData.sell_shop_list = cloneDeep(data);\n    },\n    // 售卖时间-start\n    start_time_change: function start_time_change(data) {\n      this.start_time = cloneDeep(data);\n    },\n    handleStartOpenChange: function handleStartOpenChange(open) {\n      if (!open) {\n        this.cardData.endOpen = true;\n      }\n    },\n    disabledStartDate: function disabledStartDate(startValue) {\n      var endValue = this.end_time;\n\n      if (!endValue) {\n        // 结束时间未选择\n        return startValue.valueOf() < moment().startOf('day').valueOf();\n      }\n\n      var start = endValue.valueOf() > moment().add(30, 'y').valueOf() ? moment(endValue).subtract(30, 'y').valueOf() : moment().startOf('day').valueOf();\n      return startValue.valueOf() < start || startValue.valueOf() > moment(endValue).valueOf();\n    },\n    // 售卖时间-end\n    end_time_change: function end_time_change(data) {\n      this.end_time = cloneDeep(data);\n    },\n    handleEndOpenChange: function handleEndOpenChange(open) {\n      this.cardData.endOpen = open;\n    },\n    disabledEndDate: function disabledEndDate(endValue) {\n      var startValue = this.start_time;\n\n      if (!startValue) {\n        // 开始时间未选择\n        return endValue.valueOf() < moment().startOf('day').valueOf();\n      }\n\n      return endValue.valueOf() >= moment(startValue).add(30, 'y').valueOf() || endValue.valueOf() < moment(startValue).valueOf() || endValue.valueOf() < moment().startOf('day').valueOf();\n    },\n    // moment\n    moment: moment,\n    // 转让\n    transfer: function transfer(e) {\n      this.cardData._is_transfer = e.target.checked; // 重置转让费用的校验\n\n      this.form.resetFields(['cardData.transfer_num']);\n    },\n    onCardBgChange: function onCardBgChange(e) {\n      this.cardBgValidatorText = '';\n    },\n    // 卡背景校验\n    cardBgValidator: function cardBgValidator() {\n      var validata = this.cardData.bg_image.image_key !== '';\n      this.cardBgValidatorText = validata ? '' : '请上传卡背景';\n    }\n  },\n  watch: {\n    'cardData._is_transfer': {\n      deep: true,\n      handler: function handler(newVal, oldVal) {\n        this.cardData.is_transfer = +newVal;\n      }\n    },\n    'cardData.transfer_unit': {\n      deep: true,\n      handler: function handler() {\n        this.form.resetFields(['cardData.transfer_num']);\n      }\n    },\n    'cardData.consumer_shop_list': {\n      deep: true,\n      handler: function handler() {\n        var v = this.cardData.consumption_range;\n        this.cardData.consumption_range = v;\n        this.form.setFieldsValue({\n          'cardData.consumption_range': v\n        });\n      }\n    },\n    'cardData.sell_shop_list': {\n      deep: true,\n      handler: function handler() {\n        var v = this.cardData.support_sales;\n        this.cardData.support_sales = v;\n        this.form.setFieldsValue({\n          'cardData.support_sales': v\n        });\n      }\n    }\n  },\n  computed: {\n    // 支持售卖门店\n    support_sales_list: function support_sales_list() {\n      var arr = cloneDeep(this.supportSales);\n      var index = this.cardData.consumption_range === this.CONSUMPTION_RANGE.GENERAL_STORE ? 999 : 2;\n      arr.splice(index, 1);\n      return arr;\n    },\n    // 售卖方式\n    sell_type_list: function sell_type_list() {\n      var sell_type = cloneDeep(this.sellType);\n      var arr = [];\n      sell_type.forEach(function (i) {\n        arr.push({\n          value: i.value,\n          label: i.label\n        });\n      });\n\n      if (!this.cardData.appConfig) {\n        remove(arr, function (i) {\n          return i.value === SELL_TYPE.CLIENT;\n        });\n      }\n\n      return arr;\n    },\n    // 卡背景是否校验通过\n    cardBgIsOk: function cardBgIsOk() {\n      return this.cardBgValidatorText === '';\n    },\n    // 转让设置的min\n    transferMin: function transferMin() {\n      return 0;\n    },\n    // 转让设置的max\n    transferMax: function transferMax() {\n      return this.cardData.transfer_unit === TRANSFER_UNIT.PERCENT ? 100 : 999999.9;\n    }\n  }\n};",null]}