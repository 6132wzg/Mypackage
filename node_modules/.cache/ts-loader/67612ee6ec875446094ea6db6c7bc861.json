{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/lease/transfer.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/lease/transfer.service.ts","mtime":1600926555983},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { ContractApi } from '@/api/v1/setting/contract';\nimport { CabinetApi } from '@/api/v1/sold/cabinet';\nimport { OPERATION_TYPES } from '@/constants/sold/operations';\nimport { TransactionApi, MemberListInput } from '@/api/v1/sold/transaction';\n\nvar TransferService = /*#__PURE__*/function () {\n  function TransferService(contractApi, transactionApi, cabinetApi) {\n    _classCallCheck(this, TransferService);\n\n    this.contractApi = contractApi;\n    this.transactionApi = transactionApi;\n    this.cabinetApi = cabinetApi;\n    this.loading$ = new State({});\n    this.memberList$ = new State([]);\n    this.info$ = new State({});\n    this.timeScope$ = new State({});\n    this.payList$ = new State([]);\n  }\n\n  _createClass(TransferService, [{\n    key: \"getMember\",\n    value: function getMember(query) {\n      var _this = this;\n\n      return this.transactionApi.getTransactionMemeberList(query).pipe(tap(function (res) {\n        _this.memberList$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }, {\n    key: \"getDetail\",\n    value: function getDetail(id) {\n      var _this2 = this;\n\n      return this.cabinetApi.getDetail(id, 'transfer').pipe(tap(function (res) {\n        _this2.info$.commit(function () {\n          return res.info;\n        });\n      }), switchMap(function (res) {\n        return _this2.getPayList({\n          member_id: res.info.member_id,\n          product_type: res.info.product_type,\n          operation_type: OPERATION_TYPES.TRANSFORM\n        });\n      }));\n    }\n  }, {\n    key: \"setTransaction\",\n    value: function setTransaction(params, id) {\n      return this.cabinetApi.setTransaction(params, 'transfer', id);\n    }\n  }, {\n    key: \"getPayList\",\n    value: function getPayList(params) {\n      var _this3 = this;\n\n      return this.transactionApi.getMemberPaymentList(params).pipe(tap(function (res) {\n        _this3.payList$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }]);\n\n  return TransferService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof MemberListInput !== \"undefined\" && MemberListInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], TransferService.prototype, \"getMember\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object, Number]), __metadata(\"design:returntype\", void 0)], TransferService.prototype, \"setTransaction\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], TransferService.prototype, \"getPayList\", null);\n\nTransferService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof ContractApi !== \"undefined\" && ContractApi) === \"function\" ? _b : Object, typeof (_c = typeof TransactionApi !== \"undefined\" && TransactionApi) === \"function\" ? _c : Object, typeof (_d = typeof CabinetApi !== \"undefined\" && CabinetApi) === \"function\" ? _d : Object])], TransferService);\nexport { TransferService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/lease/transfer.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap, switchMap } from 'rxjs/operators'\nimport { ContractApi } from '@/api/v1/setting/contract'\nimport { CabinetApi } from '@/api/v1/sold/cabinet'\nimport { OPERATION_TYPES } from '@/constants/sold/operations'\nimport { TransactionApi, MemberListInput } from '@/api/v1/sold/transaction'\n\n@Injectable()\nexport class TransferService {\n  loading$ = new State({})\n  memberList$ = new State([])\n  info$ = new State({})\n  timeScope$ = new State({})\n  payList$ = new State([])\n  constructor(\n    private contractApi: ContractApi,\n    private transactionApi: TransactionApi,\n    private cabinetApi: CabinetApi\n  ) {}\n  @Effect()\n  getMember(query: MemberListInput) {\n    return this.transactionApi.getTransactionMemeberList(query).pipe(\n      tap((res: any) => {\n        this.memberList$.commit(() => res.list)\n      })\n    )\n  }\n  getDetail(id: number) {\n    return this.cabinetApi.getDetail(id, 'transfer').pipe(\n      tap((res: any) => {\n        this.info$.commit(() => res.info)\n      }),\n      switchMap((res: any) => {\n        return this.getPayList({\n          member_id: res.info.member_id,\n          product_type: res.info.product_type,\n          operation_type: OPERATION_TYPES.TRANSFORM\n        })\n      })\n    )\n  }\n  @Effect()\n  setTransaction(params: any, id: number) {\n    return this.cabinetApi.setTransaction(params, 'transfer', id)\n  }\n  @Effect()\n  getPayList(params: any) {\n    return this.transactionApi.getMemberPaymentList(params).pipe(\n      tap((res: any) => {\n        this.payList$.commit(() => res.list)\n      })\n    )\n  }\n}\n"],"sourceRoot":""}]}