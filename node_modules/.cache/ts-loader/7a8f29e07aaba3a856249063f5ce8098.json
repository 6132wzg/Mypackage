{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/deal/gathering.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/deal/gathering.service.ts","mtime":1600926555968},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { TransactionApi } from '@/api/v1/sold/transaction';\nimport { tap } from 'rxjs/operators';\n\nvar GatheringService = /*#__PURE__*/function () {\n  function GatheringService(transactionApi) {\n    _classCallCheck(this, GatheringService);\n\n    this.transactionApi = transactionApi;\n    this.info$ = new State({});\n    this.loading$ = new State({});\n    this.paymentMethodList$ = new State([]);\n  }\n\n  _createClass(GatheringService, [{\n    key: \"getPaymentInfo\",\n    value: function getPaymentInfo(id, type) {\n      var _this = this;\n\n      return this.transactionApi.getTransactionInfo(id, type).pipe(tap(function (res) {\n        _this.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"payTransaction\",\n    value: function payTransaction(params) {\n      var _this2 = this;\n\n      return this.transactionApi.payTransaction(params).pipe(tap(function (res) {\n        _this2.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"getPaymentMethodList\",\n    value: function getPaymentMethodList(order_id) {\n      var _this3 = this;\n\n      return this.transactionApi.getPaymentMethodList(order_id).pipe(tap(function (res) {\n        _this3.paymentMethodList$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }]);\n\n  return GatheringService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String, String]), __metadata(\"design:returntype\", void 0)], GatheringService.prototype, \"getPaymentInfo\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], GatheringService.prototype, \"payTransaction\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Number]), __metadata(\"design:returntype\", void 0)], GatheringService.prototype, \"getPaymentMethodList\", null);\n\nGatheringService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof TransactionApi !== \"undefined\" && TransactionApi) === \"function\" ? _a : Object])], GatheringService);\nexport { GatheringService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/deal/gathering.service.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,cAAT,QAA+B,2BAA/B;AACA,SAAS,GAAT,QAAoB,gBAApB;;AAWA,IAAa,gBAAb;AAIE,4BAAoB,cAApB,EAAkD;AAAA;;AAA9B,SAAA,cAAA,GAAA,cAAA;AAHpB,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,kBAAA,GAAqB,IAAI,KAAJ,CAAU,EAAV,CAArB;AACsD;;AAJxD;AAAA;AAAA,mCAMiB,EANjB,EAM6B,IAN7B,EAMyC;AAAA;;AACrC,aAAO,KAAK,cAAL,CAAoB,kBAApB,CAAuC,EAAvC,EAA2C,IAA3C,EAAiD,IAAjD,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AAZH;AAAA;AAAA,mCAciB,MAdjB,EAc2C;AAAA;;AACvC,aAAO,KAAK,cAAL,CAAoB,cAApB,CAAmC,MAAnC,EAA2C,IAA3C,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AApBH;AAAA;AAAA,yCAsBuB,QAtBvB,EAsBuC;AAAA;;AACnC,aAAO,KAAK,cAAL,CAAoB,oBAApB,CAAyC,QAAzC,EAAmD,IAAnD,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,kBAAL,CAAwB,MAAxB,CAA+B;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAA/B;AACD,OAFE,CADE,CAAP;AAKD;AA5BH;;AAAA;AAAA,GAAA;;AAME,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,iDAAA,E,uCAAA,CAAA,E,0BAAA,E,gBAAA,EAMC,IAND,CAAA;;AAQA,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,0BAAA,E,gBAAA,EAMC,IAND,CAAA;;AAQA,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,0BAAA,E,sBAAA,EAMC,IAND,CAAA;;AAtBW,gBAAgB,GAAA,UAAA,CAAA,CAD5B,UAAU,EACkB,E,qDAIS,c,KAAc,W,IAAd,c,MAAc,U,GAAA,E,GAAA,M,EAJvB,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourcesContent":["import { Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { TransactionApi } from '@/api/v1/sold/transaction'\nimport { tap } from 'rxjs/operators'\n\nexport interface OrderPaymentParams {\n  order_id: number\n  price: string\n  deposit_id: number\n  pay_channel: number\n  description: string\n}\n\n@Injectable()\nexport class GatheringService {\n  info$ = new State({})\n  loading$ = new State({})\n  paymentMethodList$ = new State([])\n  constructor(private transactionApi: TransactionApi) {}\n  @Effect()\n  getPaymentInfo(id: string, type: string) {\n    return this.transactionApi.getTransactionInfo(id, type).pipe(\n      tap((res: any) => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n  @Effect()\n  payTransaction(params: OrderPaymentParams) {\n    return this.transactionApi.payTransaction(params).pipe(\n      tap((res: any) => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n  @Effect()\n  getPaymentMethodList(order_id: number) {\n    return this.transactionApi.getPaymentMethodList(order_id).pipe(\n      tap((res: any) => {\n        this.paymentMethodList$.commit(() => res.list)\n      })\n    )\n  }\n}\n"],"sourceRoot":""}]}