{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/hardware/area.config.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/hardware/area.config.ts","mtime":1600926555857},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nexport var ruleOptions = function ruleOptions(vm) {\n  return {\n    area_id: {},\n    people_type: {\n      rules: [{\n        required: true,\n        message: '请选择人员范围'\n      }]\n    },\n    course_time: {\n      rules: [{\n        required: true,\n        message: '请输入时间'\n      }]\n    },\n    leave_limit: {// initialValue: vm.leave_limit\n    },\n    checkin: {},\n    white_list: {\n      // initialValue: vm.white_list,\n      rules: [{\n        required: true,\n        message: '请选择指定员工'\n      }]\n    },\n\n    /**\n     * 次卡扣费规则\n     */\n    charge_type: {},\n\n    /**\n     * 次卡扣费规则-时间间隔\n     */\n    charge_value: {},\n\n    /**\n     *  是否仅允许在此区域约课的用户入场\n     */\n    is_course: {}\n  };\n};\nexport var formItemSwitches = function formItemSwitches(vm) {\n  var _vm$ENTRY = vm.ENTRY,\n      NORMAL = _vm$ENTRY.NORMAL,\n      VIP = _vm$ENTRY.VIP,\n      GATE = _vm$ENTRY.GATE,\n      VENUES = _vm$ENTRY.VENUES;\n  var area_type = vm.info.area_type;\n\n  if (!area_type) {\n    return {};\n  }\n\n  return {\n    /**\n     * 进入人员范围\n     */\n    entrancePeopleType: [NORMAL, VIP, GATE, VENUES].includes(area_type.id),\n\n    /**\n     * 离场限制\n     * 普通区域、VIP区域、大门\n     */\n    exitanceRestriction: [NORMAL, VIP, GATE].includes(area_type.id),\n\n    /**\n     * 约课入场限制\n     * 普通区域、VIP区域、大门\n     */\n    courseEntranceRestriction: [NORMAL, VIP].includes(area_type.id),\n\n    /**\n     * 入场签课\n     * 普通区域、VIP区域\n     */\n    entranceCheckIn: [NORMAL, VIP].includes(area_type.id),\n\n    /**\n     * 次卡扣费规则\n     * 普通区域、VIP区域\n     */\n    timesCardRule: [NORMAL, VIP, GATE].includes(area_type.id),\n\n    /**\n     * 进入区域限制\n     * 普通区域、VIP区域\n     */\n    entranceRestriction: [NORMAL, VIP].includes(area_type.id),\n\n    /**\n     * 预约限制\n     * 大门\n     */\n    gateOrderRestriction: [GATE].includes(area_type.id),\n\n    /**\n     * 场地预约限制\n     * 场地预约\n     */\n    venueOrderRestriction: [VENUES].includes(area_type.id)\n  };\n};\nexport var alertMsg = function alertMsg(vm) {\n  var _NORMAL$VIP$GATE$VENU;\n\n  var _vm$ENTRY2 = vm.ENTRY,\n      NORMAL = _vm$ENTRY2.NORMAL,\n      VIP = _vm$ENTRY2.VIP,\n      GATE = _vm$ENTRY2.GATE,\n      VENUES = _vm$ENTRY2.VENUES;\n  var area_type = vm.info.area_type;\n\n  if (!area_type) {\n    return '';\n  }\n\n  return (_NORMAL$VIP$GATE$VENU = {}, _defineProperty(_NORMAL$VIP$GATE$VENU, NORMAL, \"1.\\u652F\\u6301\\u8FDB\\u5165\\u6B64\\u533A\\u57DF\\u7684\\u51ED\\u8BC1\\u8303\\u56F4\\uFF1A\\u9884\\u7EA6\\u56E2\\u4F53\\u8BFE\\u3001\\u9884\\u7EA6\\u5C0F\\u73ED\\u8BFE\\u3001\\u671F\\u9650\\u5361\\u3001\\u6B21\\u5361 \\uFF08\\u4EC5\\u6307\\u7528\\u6237\\uFF09\\n    2.\\u65E0\\u6CD5\\u5728\\u4F1A\\u5458\\u5361\\u5165\\u573A\\u8303\\u56F4\\u8FDB\\u884C\\u52FE\\u9009\\u9650\\u5B9A\"), _defineProperty(_NORMAL$VIP$GATE$VENU, VIP, \"1.\\u652F\\u6301\\u8FDB\\u5165\\u6B64\\u533A\\u57DF\\u7684\\u51ED\\u8BC1\\u8303\\u56F4\\uFF1A\\u9884\\u7EA6\\u56E2\\u4F53\\u8BFE\\u3001\\u9884\\u7EA6\\u5C0F\\u73ED\\u8BFE\\u3001\\u671F\\u9650\\u5361\\u3001\\u6B21\\u5361 \\uFF08\\u4EC5\\u6307\\u7528\\u6237\\uFF09\\n    2.\\u53EF\\u5728\\u3010\\u552E\\u5361\\u7BA1\\u7406\\u3011\\u6216\\u3010\\u4E0A\\u67B6\\u4F1A\\u5458\\u5361\\u3011\\u65F6\\uFF0C\\u8FDB\\u884C\\u5141\\u8BB8\\u5165\\u573AVIP\\u533A\\u57DF\\u9009\\u62E9\"), _defineProperty(_NORMAL$VIP$GATE$VENU, GATE, \"\\u652F\\u6301\\u8FDB\\u5165\\u6B64\\u533A\\u57DF\\u7684\\u51ED\\u8BC1\\u8303\\u56F4:\\u9884\\u7EA6\\u5230\\u8BBF\\u3001\\u9884\\u7EA6\\u79C1\\u6559\\u8BFE\\u3001\\u9884\\u7EA6\\u56E2\\u4F53\\u8BFE\\u3001\\u9884\\u7EA6\\u79C1\\u6559\\u5C0F\\u56E2\\u8BFE\\u3001\\u9884\\u7EA6\\u5C0F\\u73ED\\u8BFE\\u3001\\u573A\\u5730\\u9884\\u7EA6\\u3001\\u671F\\u9650\\u5361\\u3001\\u6B21\\u5361 \\uFF08\\u4EC5\\u6307\\u7528\\u6237\\uFF09\"), _defineProperty(_NORMAL$VIP$GATE$VENU, VENUES, \"\\u6B64\\u533A\\u57DF\\u7C7B\\u578B\\u6765\\u6E90\\u4E8E\\u3010\\u5E94\\u7528\\u3011-\\u3010\\u573A\\u5730\\u9884\\u7EA6\\u3011\"), _NORMAL$VIP$GATE$VENU)[area_type.id];\n};\nexport var timesCardRules = function timesCardRules(vm) {\n  var cardRules = vm.info.entrance_enum;\n  var ret = [];\n  Object.keys(cardRules).forEach(function (key) {\n    ret.push({\n      label: cardRules[key],\n      value: +key\n    });\n  });\n  return ret;\n};",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/hardware/area.config.ts"],"names":[],"mappings":"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","sourcesContent":["export const ruleOptions = (vm: any) => {\n  return {\n    area_id: {},\n    people_type: {\n      rules: [\n        {\n          required: true,\n          message: '请选择人员范围'\n        }\n      ]\n    },\n\n    course_time: {\n      rules: [\n        {\n          required: true,\n          message: '请输入时间'\n        }\n      ]\n    },\n    leave_limit: {\n      // initialValue: vm.leave_limit\n    },\n    checkin: {},\n    white_list: {\n      // initialValue: vm.white_list,\n      rules: [\n        {\n          required: true,\n          message: '请选择指定员工'\n        }\n      ]\n    },\n    /**\n     * 次卡扣费规则\n     */\n    charge_type: {},\n    /**\n     * 次卡扣费规则-时间间隔\n     */\n    charge_value: {},\n    /**\n     *  是否仅允许在此区域约课的用户入场\n     */\n    is_course: {}\n  }\n}\n\nexport const formItemSwitches = (vm: any) => {\n  const { NORMAL, VIP, GATE, VENUES } = vm.ENTRY\n  const { area_type } = vm.info\n  if (!area_type) {\n    return {}\n  }\n  return {\n    /**\n     * 进入人员范围\n     */\n    entrancePeopleType: [NORMAL, VIP, GATE, VENUES].includes(area_type.id),\n    /**\n     * 离场限制\n     * 普通区域、VIP区域、大门\n     */\n    exitanceRestriction: [NORMAL, VIP, GATE].includes(area_type.id),\n    /**\n     * 约课入场限制\n     * 普通区域、VIP区域、大门\n     */\n    courseEntranceRestriction: [NORMAL, VIP].includes(area_type.id),\n    /**\n     * 入场签课\n     * 普通区域、VIP区域\n     */\n    entranceCheckIn: [NORMAL, VIP].includes(area_type.id),\n    /**\n     * 次卡扣费规则\n     * 普通区域、VIP区域\n     */\n    timesCardRule: [NORMAL, VIP, GATE].includes(area_type.id),\n    /**\n     * 进入区域限制\n     * 普通区域、VIP区域\n     */\n    entranceRestriction: [NORMAL, VIP].includes(area_type.id),\n    /**\n     * 预约限制\n     * 大门\n     */\n    gateOrderRestriction: [GATE].includes(area_type.id),\n    /**\n     * 场地预约限制\n     * 场地预约\n     */\n    venueOrderRestriction: [VENUES].includes(area_type.id)\n  }\n}\n\nexport const alertMsg = (vm: any) => {\n  const { NORMAL, VIP, GATE, VENUES } = vm.ENTRY\n  const { area_type } = vm.info\n  if (!area_type) {\n    return ''\n  }\n  return {\n    [NORMAL]: `1.支持进入此区域的凭证范围：预约团体课、预约小班课、期限卡、次卡 （仅指用户）\n    2.无法在会员卡入场范围进行勾选限定`,\n    [VIP]: `1.支持进入此区域的凭证范围：预约团体课、预约小班课、期限卡、次卡 （仅指用户）\n    2.可在【售卡管理】或【上架会员卡】时，进行允许入场VIP区域选择`,\n    [GATE]: `支持进入此区域的凭证范围:预约到访、预约私教课、预约团体课、预约私教小团课、预约小班课、场地预约、期限卡、次卡 （仅指用户）`,\n    [VENUES]: `此区域类型来源于【应用】-【场地预约】`\n  }[area_type.id]\n}\n\nexport const timesCardRules = (vm: any) => {\n  const cardRules = vm.info.entrance_enum\n  const ret = <any>[]\n  Object.keys(cardRules).forEach(key => {\n    ret.push({\n      label: cardRules[key],\n      value: +key\n    })\n  })\n  return ret\n}\n"],"sourceRoot":""}]}