{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/deal/sale-course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/deal/sale-course.vue","mtime":1597396799945},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport { SaleCourseService } from './sale-course.service'\nimport { cloneDeep, get } from 'lodash-es'\nimport { timer } from 'rxjs'\nimport { ruleOptions } from './sale-course.config'\nimport { PatternService } from '@/services/pattern.service'\nimport AddCardMember from '@/views/biz-components/add-card-member/add-card-member'\nimport EditableContractNumber from '@/views/biz-components/contract/editable-contract-number.vue'\nimport MemberSearch from '@/views/biz-components/member-search/member-search'\nimport SelectScroll from '@/views/biz-components/select-scroll/select-scroll'\n\nexport default {\n  name: 'ModalSoldDealSaleMemberCard',\n  bem: {\n    sale: 'modal-sold-deal-sale'\n  },\n  components: {\n    EditableContractNumber,\n    MemberSearch,\n    AddCardMember,\n    SelectScroll\n  },\n  serviceProviders() {\n    return [SaleCourseService]\n  },\n  serviceInject() {\n    return {\n      saleCourseService: SaleCourseService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      page: this.saleCourseService.page$,\n      loading: this.saleCourseService.loading$,\n      finished: this.saleCourseService.finished$,\n      effectiveWayOptions: this.saleCourseService.effectiveWayOptions$,\n      info: this.saleCourseService.info$,\n      courseList: this.saleCourseService.courseList$,\n      saleList: this.saleCourseService.saleList$,\n      couponList: this.saleCourseService.couponList$,\n      currentPrice: this.saleCourseService.currentPrice$\n    }\n  },\n  props: {\n    id: {\n      type: String\n    },\n    memberInfo: {\n      type: Object\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      // 定金\n      advanceDropdownVisible: false,\n      advanceList: [],\n      advanceText: '未选择定金',\n      advanceAmount: '',\n      selectAdvance: '',\n      reduceAmount: '',\n      description: '',\n      // 优惠券\n      selectCoupon: '',\n      memberChildrenlist: [],\n      couponText: '未选择优惠券',\n      couponAmount: '',\n      couponDropdownVisible: false,\n      isExpire: 1,\n      product_id: '',\n      isFollowSalesman: 0,\n      product_name: ''\n    }\n  },\n  computed: {\n    canChoseCoupon() {\n      let len = this.couponList.length\n      return !!len\n    },\n    canChoseAdvance() {\n      let len = this.advanceList.length\n      return (this.id || this.product_id) && len\n    },\n    orderAmountText() {\n      return this.currentPrice < 0 ? '小计不能为负' : ''\n    },\n    saleRangeType() {\n      return get(this.info.sale_range, 'type', 1)\n    },\n    hasProductInfo() {\n      return JSON.stringify(this.info) !== '{}'\n    }\n  },\n  watch: {\n    selectCoupon: {\n      deep: true,\n      handler(newVal, oldVal) {\n        this.getPrice(newVal, this.selectAdvance, +this.reduceAmount)\n      }\n    },\n    selectAdvance: {\n      deep: true,\n      handler(newVal, oldVal) {\n        this.getPrice(this.selectCoupon, newVal, +this.reduceAmount)\n      }\n    },\n    reduceAmount(newVal, oldVal) {\n      this.getPrice(this.selectCoupon, this.selectAdvance, +newVal)\n    }\n  },\n  mounted() {\n    this.saleCourseService.serviceInit().subscribe(result => {\n      if (this.id) {\n        this.handleGetCourseInfo(this.id)\n      } else {\n        this.saleCourseService\n          .getCourseList({\n            app_brand_id: this.$searchQuery.app_brand_id,\n            app_shop_id: this.$searchQuery.app_shop_id,\n            product_type: 5\n          })\n          .subscribe()\n      }\n    })\n  },\n  methods: {\n    moment,\n    // 选择课,筛选\n    handleSelect(val) {\n      this.product_id = val\n      this.onResetDiscounts()\n      this.handleGetCourseInfo(val)\n    },\n    // 选择课,搜索\n    handleSearch(product_name) {\n      this.product_name = product_name\n      this.saleCourseService\n        .getCourseList({\n          product_name,\n          app_brand_id: this.$searchQuery.app_brand_id,\n          app_shop_id: this.$searchQuery.app_shop_id,\n          product_type: 5,\n          page: 1\n        })\n        .subscribe()\n    },\n    onChangeEffectiveWay(e) {\n      console.log(e.target.value)\n      this.isExpire = e.target.value\n    },\n    onResetDiscounts() {\n      console.log('onResetDiscounts')\n      // 重置优惠券及定金选择\n      this.resetCoupon()\n      this.resetAdvance()\n    },\n    // 重新获取优惠券及定金\n    onReGetDiscounts(data) {\n      console.log('onReGetDiscounts')\n      // 如果存在会员id则请求重新拉取优惠券及定金列表\n      this.fetchAdvanceList(data)\n      this.fetchCouponList(data)\n    },\n    onMemberChange(data) {\n      // 重置优惠券及定金选择\n      this.onResetDiscounts()\n      // 如果存在会员id则请求重新拉取优惠券及定金列表\n      if (data) this.onReGetDiscounts(data)\n    },\n    onSelectAdvance() {\n      timer(200).subscribe(() => {\n        this.advanceDropdownVisible = false\n      })\n    },\n    onSelectCoupon() {\n      timer(200).subscribe(() => {\n        this.couponDropdownVisible = false\n      })\n    },\n    // 重置定金选择\n    resetAdvance() {\n      this.advanceList = []\n      this.advanceText = '未选择定金'\n      this.selectAdvance = ''\n      this.advanceAmount = ''\n    },\n    // 重置优惠券选择\n    resetCoupon() {\n      this.saleCourseService.REST_COUPONLIST()\n      this.couponText = '未选择优惠券'\n      this.selectCoupon = ''\n      this.couponAmount = ''\n    },\n    onCancel() {\n      this.resetAdvance()\n    },\n    onSelectAdvanceChange(data) {\n      if (!data.target.value) {\n        this.advanceAmount = 0\n        this.advanceText = `未选择定金`\n        return\n      }\n      let price = this.advanceList.filter(o => o.id === data.target.value)[0]\n        .price\n      this.advanceAmount = price\n      this.advanceText = `${price}元`\n    },\n    onSelectCouponChange(event) {\n      let id = get(event.target.value, 'id', '')\n      if (id) {\n        let price = this.couponList.filter(o => o.id === id)[0].price\n        this.couponAmount = price\n        this.couponText = `${price}元`\n      } else {\n        this.couponText = '未选择优惠券'\n        this.couponAmount = 0\n      }\n    },\n    // 计算实付金额\n    getPrice(coupon, advance, reduce) {\n      const memberId = this.form.getFieldValue('member_id')\n      const product_id = this.form.getFieldValue('productId') || undefined\n      this.saleCourseService.currentPriceAction$.dispatch({\n        product_id,\n        product_type: this.info.contract_type,\n        coupon_id: coupon ? coupon.id : undefined,\n        member_id: memberId || undefined,\n        advance_id: advance || undefined,\n        reduce_amount: reduce || undefined\n      })\n    },\n    onCreateOrder() {\n      this.form.validate().then(values => {\n        const package_id = this.form.getFieldValue('productId') || undefined\n        this.saleCourseService\n          .setTransactionOrder({\n            effective_way: values.effective_way,\n            member_id: values.member_id,\n            member_name: values.member_name,\n            mobile: values.mobile ? values.mobile.phone : undefined,\n            package_id,\n            contract_number: this.info.contract_number,\n            coupon_id: this.selectCoupon.id,\n            advance_id: this.selectAdvance,\n            advance_amount: this.validStartTime,\n            reduce_amount: this.reduceAmount || 0,\n            sale_id: values.saleName,\n            description: this.description,\n            sale_range: this.info.sale_range.type,\n            order_amount: this.currentPrice,\n            is_minors: values.is_minors,\n            member_ids: this.memberChildrenlist\n              .filter(item => !!item.id)\n              .map(item => item.id),\n            member_info: this.memberChildrenlist\n              .filter(item => {\n                return !item.id\n              })\n              .map(item => {\n                if (item.is_minors) {\n                  let mobile = item.mobile\n                  item.mobile = ''\n                  item.parent_mobile = item.parent_mobile || mobile\n                }\n                return item\n              }),\n            parent_name: values.parent_name,\n            parent_mobile: values.parent_mobile\n              ? values.parent_mobile.phone\n              : undefined,\n            parent_country_prefix: values.parent_mobile\n              ? values.parent_mobile.code_id\n              : undefined,\n            parent_user_role: values.parent_user_role,\n            physical_id: values.physical_id,\n            card_num: values.card_num,\n            id_card: values.id_card,\n            id_card_type: values.id_card_type,\n            is_follow_salesman: this.isFollowSalesman\n          })\n          .subscribe(result => {\n            this.$emit('success', {\n              type: 'create',\n              orderId: result.info.order_id\n            })\n            this.show = false\n          })\n      })\n    },\n    onPay() {\n      this.form.validate().then(values => {\n        const package_id = this.form.getFieldValue('productId') || undefined\n        this.saleCourseService\n          .setTransactionPay({\n            effective_way: values.effective_way,\n            member_id: values.member_id,\n            member_name: values.member_name,\n            mobile: values.mobile ? values.mobile.phone : undefined,\n            package_id,\n            contract_number: this.info.contract_number,\n            coupon_id: this.selectCoupon.id,\n            advance_id: this.selectAdvance,\n            advance_amount: this.advanceAmount,\n            reduce_amount: this.reduceAmount || 0,\n            sale_id: values.saleName,\n            description: this.description,\n            sale_range: this.info.sale_range.type,\n            order_amount: this.currentPrice,\n            is_minors: values.is_minors,\n            parent_name: values.parent_name,\n            member_ids: this.memberChildrenlist\n              .filter(item => !!item.id)\n              .map(item => item.id),\n            member_info: this.memberChildrenlist\n              .filter(item => {\n                return !item.id\n              })\n              .map(item => {\n                if (item.is_minors) {\n                  let mobile = item.mobile\n                  item.mobile = ''\n                  item.parent_mobile = item.parent_mobile || mobile\n                }\n                return item\n              }),\n            parent_mobile: values.parent_mobile\n              ? values.parent_mobile.phone\n              : undefined,\n            parent_country_prefix: values.parent_mobile\n              ? values.parent_mobile.code_id\n              : undefined,\n            parent_user_role: values.parent_user_role,\n            physical_id: values.physical_id,\n            card_num: values.card_num,\n            id_card: values.id_card,\n            id_card_type: values.id_card_type,\n            is_follow_salesman: this.isFollowSalesman\n          })\n          .subscribe(result => {\n            this.$emit('success', {\n              type: 'createPay',\n              orderId: result.info.order_id\n            })\n            this.show = false\n          })\n      })\n    },\n    // 获取课程列表\n    handleGetList() {\n      if (this.finished) return false\n      this.saleCourseService\n        .getCourseList({\n          product_name: this.product_name,\n          app_brand_id: this.$searchQuery.app_brand_id,\n          app_shop_id: this.$searchQuery.app_shop_id,\n          product_type: 5,\n          page: ++this.page.current_page\n        })\n        .subscribe()\n    },\n    // 获取课程详情\n    handleGetCourseInfo(productId) {\n      this.saleCourseService.getInfo(productId).subscribe(res => {\n        if (this.id) {\n          this.saleCourseService.SET_LIST([\n            {\n              id: +this.id,\n              product_name: this.info.product_name\n            }\n          ])\n        }\n        setTimeout(() => {\n          this.form.setFieldsValue({\n            productId: +productId\n          })\n          this.onReGetDiscounts()\n          this.getPrice()\n        })\n      })\n    },\n    // 获取优惠券列表\n    fetchCouponList(id) {\n      const package_id = this.form.getFieldValue('productId') || undefined\n      const member_id = this.form.getFieldValue('member_id') || id\n      if (package_id && member_id) {\n        const params = {\n          member_id,\n          package_id\n        }\n        this.saleCourseService.getCouponList(params).subscribe()\n      }\n    },\n    // 获取定金列表\n    fetchAdvanceList(id) {\n      let member_id = this.form.getFieldValue('member_id') || id\n      if (member_id) {\n        this.saleCourseService.getAdvanceList(member_id).subscribe(res => {\n          this.advanceList = cloneDeep(res.list)\n        })\n      }\n    }\n  }\n}\n",null]}