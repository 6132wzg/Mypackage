{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/cabinet-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/cabinet-list.vue","mtime":1600926556416},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { CabinetListService as CabinetService } from './cabinet-list.service'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nimport ShopCabinetOpen from '@/views/biz-modals/shop/cabinet/open'\nimport ShopCabinetEditStatus from '@/views/biz-modals/shop/cabinet/edit-status'\nimport { CABINET, CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet'\nexport default {\n  bem: {\n    b: 'shop-reception-cabinet',\n    bItemUsing: 'shop-reception-cabinet-item--using',\n    bItemBroken: 'shop-reception-cabinet-item--broken'\n  },\n  serviceInject() {\n    return {\n      cabinetService: CabinetService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      list: cabinetService.list$,\n      auth: cabinetService.auth$\n    }\n  },\n  modals: {\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary,\n    ShopCabinetEditStatus,\n    ShopCabinetOpen\n  },\n  props: {\n    isOperationInBatch: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'temporary'\n    },\n    areaName: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    isOperationInBatch() {\n      this.checkedList = []\n      this.indeterminate = false\n      this.checkAll = false\n    }\n  },\n  computed: {\n    plainOptions() {\n      const { list } = this\n      const ret = []\n      list.forEach(item => {\n        if (!this.disabledCabinetCheck(item)) {\n          ret.push(item.id)\n        }\n      })\n      return ret\n    },\n    isCabinetType() {\n      return this.$searchQuery.type === 'long-term'\n    }\n  },\n  data() {\n    return {\n      CABINET,\n      CABINET_BUSINESS_TYPE,\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false\n    }\n  },\n  methods: {\n    disabledCabinetCheck(item) {\n      return !!(item.is_smart && !item.is_online)\n    },\n    cabinetItemAction(item) {\n      if (\n        item.is_smart && // 是否是智能柜\n        this.cabinetUsingItem(item).cabinet_business_type ===\n          this.CABINET_BUSINESS_TYPE.USING && // 是否是使用状态\n        this.auth.edit && // 是否有编辑权限\n        !this.isOperationInBatch // 是否是批量编辑状态\n      ) {\n        return 'smart-cabinet'\n      }\n      if (\n        this.cabinetUsingItem(item).cabinet_business_type !==\n          this.CABINET_BUSINESS_TYPE.USING && // 是否是使用状态\n        this.auth.edit && // 是否有编辑权限\n        !this.isOperationInBatch // 是否是批量编辑状态\n      ) {\n        return 'cabinet-edit'\n      }\n    },\n    cabinetUsingItem(item) {\n      if (this.isCabinetType && item.sale_status === 1) {\n        item.cabinet_business_type = 2\n      }\n      return item\n    },\n    openCabinetModal(item) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-open',\n        props: {\n          id: item.id,\n          userName: item.user_name,\n          userMobile: item.mobile\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    editCabinetModal(item) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-status',\n        props: {\n          id: item.id,\n          useStatus: this.cabinetUsingItem(item).cabinet_business_type\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onChange(checkedList) {\n      const { plainOptions } = this\n      this.checkedList = checkedList\n      this.indeterminate =\n        !!checkedList.length && checkedList.length < plainOptions.length\n      this.checkAll = checkedList.length === plainOptions.length\n      this.$emit('selectChange', checkedList)\n    },\n    onCheckAllChange(e) {\n      Object.assign(this, {\n        checkedList: e.target.checked ? this.plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      })\n      this.$emit('selectChange', this.checkedList)\n    },\n    change() {\n      this.$emit('change')\n    }\n  }\n}\n",{"version":3,"sources":["cabinet-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"cabinet-list.vue","sourceRoot":"src/views/pages/shop/reception/components#","sourcesContent":["<template>\n  <div>\n    <section v-if=\"list && list.length\">\n      <div v-if=\"isOperationInBatch\" class=\"mg-b12\">\n        <a-checkbox\n          :indeterminate=\"indeterminate\"\n          :checked=\"checkAll\"\n          @change=\"onCheckAllChange\"\n        />\n        <span>\n          已选\n          <span class=\"color-primary\">{{ checkedList.length }}</span>\n          / {{ list.length }}\n        </span>\n      </div>\n      <a-checkbox-group\n        :value=\"checkedList\"\n        @change=\"onChange\"\n        class=\"full-width\"\n      >\n        <div :class=\"[b()]\">\n          <div\n            :class=\"[\n              b('item'),\n              item.cabinetClass,\n              isOperationInBatch\n                ? 'shop-reception-cabinet-forbidden-hover__item'\n                : ''\n            ]\"\n            v-for=\"(item, index) in list\"\n            :key=\"index\"\n          >\n            <div :class=\"b('item-num')\">{{ item.serial_num }}</div>\n\n            <template v-if=\"item.is_smart\">\n              <div class=\"smart-cabinet-logo\" v-if=\"item.is_online\">\n                <st-icon\n                  class=\"smart-cabinet-logo__img\"\n                  type=\"cabinet-logo\"\n                  color=\"#ffffff\"\n                ></st-icon>\n              </div>\n\n              <st-help-tooltip :isCustom=\"true\" title=\"该储物柜已离线\" v-else>\n                <div class=\"smart-cabinet-logo smart-cabinet-logo--disabled\">\n                  <st-icon\n                    class=\"smart-cabinet-logo__img\"\n                    type=\"cabinet-logo\"\n                    color=\"#9BACB9\"\n                  ></st-icon>\n                </div>\n              </st-help-tooltip>\n            </template>\n            <div\n              :class=\"b('item-normal')\"\n              v-if=\"\n                cabinetUsingItem(item).cabinet_business_type ===\n                  CABINET_BUSINESS_TYPE.AVAILABLE\n              \"\n            >\n              <div :class=\"b('item-status')\">空闲</div>\n              <div :class=\"b('item-price')\" v-if=\"isCabinetType\">\n                ¥{{ item.price_num || 0 }}/天\n              </div>\n            </div>\n            <div\n              :class=\"bItemUsing()\"\n              v-if=\"\n                cabinetUsingItem(item).cabinet_business_type ===\n                  CABINET_BUSINESS_TYPE.USING\n              \"\n            >\n              <p :class=\"bItemUsing('title')\">{{ item.user_name }}</p>\n              <p :class=\"bItemUsing('time')\" v-if=\"isCabinetType\">\n                到期时间\n              </p>\n              <p :class=\"bItemUsing('time')\" v-if=\"isCabinetType\">\n                {{ item.end_time }}\n              </p>\n            </div>\n            <p\n              v-if=\"\n                cabinetUsingItem(item).cabinet_business_type ===\n                  CABINET_BUSINESS_TYPE.BROKEN\n              \"\n              :class=\"b('item-broken-text')\"\n            >\n              损坏\n            </p>\n            <p\n              v-if=\"\n                cabinetUsingItem(item).cabinet_business_type ===\n                  CABINET_BUSINESS_TYPE.REPAIR\n              \"\n              :class=\"b('item-repair-text')\"\n            >\n              维修\n            </p>\n            <div\n              :class=\"bItemUsing('action')\"\n              v-if=\"cabinetItemAction(item) === 'smart-cabinet'\"\n              @click=\"openCabinetModal(item)\"\n            >\n              <a>\n                远程开柜\n              </a>\n            </div>\n            <div\n              :class=\"bItemUsing('action')\"\n              v-if=\"cabinetItemAction(item) === 'cabinet-edit'\"\n              @click=\"editCabinetModal(item)\"\n            >\n              <a>\n                编辑\n              </a>\n            </div>\n            <div :class=\"b('action')\" v-show=\"isOperationInBatch\">\n              <a-checkbox\n                :value=\"item.id\"\n                :disabled=\"disabledCabinetCheck(item)\"\n              />\n            </div>\n          </div>\n        </div>\n      </a-checkbox-group>\n    </section>\n    <section v-else>\n      <st-no-data text=\"暂无储物柜～\" />\n    </section>\n  </div>\n</template>\n<script>\nimport { CabinetListService as CabinetService } from './cabinet-list.service'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nimport ShopCabinetOpen from '@/views/biz-modals/shop/cabinet/open'\nimport ShopCabinetEditStatus from '@/views/biz-modals/shop/cabinet/edit-status'\nimport { CABINET, CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet'\nexport default {\n  bem: {\n    b: 'shop-reception-cabinet',\n    bItemUsing: 'shop-reception-cabinet-item--using',\n    bItemBroken: 'shop-reception-cabinet-item--broken'\n  },\n  serviceInject() {\n    return {\n      cabinetService: CabinetService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      list: cabinetService.list$,\n      auth: cabinetService.auth$\n    }\n  },\n  modals: {\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary,\n    ShopCabinetEditStatus,\n    ShopCabinetOpen\n  },\n  props: {\n    isOperationInBatch: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'temporary'\n    },\n    areaName: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    isOperationInBatch() {\n      this.checkedList = []\n      this.indeterminate = false\n      this.checkAll = false\n    }\n  },\n  computed: {\n    plainOptions() {\n      const { list } = this\n      const ret = []\n      list.forEach(item => {\n        if (!this.disabledCabinetCheck(item)) {\n          ret.push(item.id)\n        }\n      })\n      return ret\n    },\n    isCabinetType() {\n      return this.$searchQuery.type === 'long-term'\n    }\n  },\n  data() {\n    return {\n      CABINET,\n      CABINET_BUSINESS_TYPE,\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false\n    }\n  },\n  methods: {\n    disabledCabinetCheck(item) {\n      return !!(item.is_smart && !item.is_online)\n    },\n    cabinetItemAction(item) {\n      if (\n        item.is_smart && // 是否是智能柜\n        this.cabinetUsingItem(item).cabinet_business_type ===\n          this.CABINET_BUSINESS_TYPE.USING && // 是否是使用状态\n        this.auth.edit && // 是否有编辑权限\n        !this.isOperationInBatch // 是否是批量编辑状态\n      ) {\n        return 'smart-cabinet'\n      }\n      if (\n        this.cabinetUsingItem(item).cabinet_business_type !==\n          this.CABINET_BUSINESS_TYPE.USING && // 是否是使用状态\n        this.auth.edit && // 是否有编辑权限\n        !this.isOperationInBatch // 是否是批量编辑状态\n      ) {\n        return 'cabinet-edit'\n      }\n    },\n    cabinetUsingItem(item) {\n      if (this.isCabinetType && item.sale_status === 1) {\n        item.cabinet_business_type = 2\n      }\n      return item\n    },\n    openCabinetModal(item) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-open',\n        props: {\n          id: item.id,\n          userName: item.user_name,\n          userMobile: item.mobile\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    editCabinetModal(item) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-status',\n        props: {\n          id: item.id,\n          useStatus: this.cabinetUsingItem(item).cabinet_business_type\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onChange(checkedList) {\n      const { plainOptions } = this\n      this.checkedList = checkedList\n      this.indeterminate =\n        !!checkedList.length && checkedList.length < plainOptions.length\n      this.checkAll = checkedList.length === plainOptions.length\n      this.$emit('selectChange', checkedList)\n    },\n    onCheckAllChange(e) {\n      Object.assign(this, {\n        checkedList: e.target.checked ? this.plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      })\n      this.$emit('selectChange', this.checkedList)\n    },\n    change() {\n      this.$emit('change')\n    }\n  }\n}\n</script>\n"]}]}