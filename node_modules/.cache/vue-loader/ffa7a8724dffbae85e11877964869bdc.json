{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/member-select/member-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/member-select/member-select.vue","mtime":1598250255720},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep, debounce, get, isEqual } from 'lodash-es'\nimport { tap } from 'rxjs/operators'\nimport { IndexService } from './member-select.service'\n// import SelectSearch from './select-search.vue'\n// import SelectScroll from './select-scroll.vue'\n\nexport default {\n  name: 'PageShopReception',\n  bem: {\n    b: 'member-select'\n  },\n  components: {\n    // SelectScroll,\n    // SelectSearch\n  },\n  serviceInject() {\n    return {\n      service: IndexService\n    }\n  },\n  rxState() {\n    const { list$, parent_types$, loading$, isEnd$ } = this.service\n    return {\n      list: list$,\n      parent_types: parent_types$,\n      loading: loading$,\n      isEnd: isEnd$\n    }\n  },\n  props: {\n    value: {\n      type: [String, Boolean, Number],\n      default: undefined\n    },\n    placeholder: String,\n    type: {\n      type: String,\n      default: ''\n    }\n  },\n  model: {\n    props: 'selected',\n    event: 'change'\n  },\n  data() {\n    return {\n      selected: undefined,\n      page: {\n        current_page: 1,\n        size: 10\n      }\n    }\n  },\n  watch: {\n    value: {\n      handler(v) {\n        this.selected = v\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    lists() {\n      return (\n        this.list.map(item => ({\n          label: this.selectItemLabel(item),\n          value: item.id\n        })) || []\n      )\n    }\n  },\n  created() {\n    this.selected &&\n      this.service\n        .getMemberList({ keyword: this.selected }, this.type)\n        .subscribe()\n  },\n  methods: {\n    selectItemLabel(item) {\n      if (item.is_minors === 1) {\n        return `${item.member_name}(未成年) ${\n          item.parent_mobile\n        }(${this.filterParentUserRole(item)})`\n      }\n      return `${item.member_name} ${item.mobile}`\n    },\n    filterParentUserRole(item) {\n      return this.parent_types[item.parent_user_role].label\n    },\n    // 搜索会员\n    onSearch(query) {\n      // 重置页数 与 数据\n      this.page.current_page = 1\n      this.service.setMemberList([])\n      this.service\n        .getMemberList({ ...query, ...this.page }, this.type)\n        .subscribe()\n    },\n    // 选择发生变化，(包括选择和取消)\n    onChange(val) {\n      console.log('选中变更')\n      this.$emit('change', val)\n    },\n    // 会员搜索框失去焦点\n    onBlur(val) {\n      console.log('清空数据')\n      this.service.setMemberList([])\n    },\n    scroll: debounce(function(query) {\n      // if (this.isEnd) return\n      this.page.current_page++\n      this.service\n        .getMemberList({ ...query, ...this.page }, this.type)\n        .subscribe()\n    }, 200)\n  }\n}\n",null]}