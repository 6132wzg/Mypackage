{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/edit-course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/edit-course.vue","mtime":1591147717193},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { cloneDeep } from 'lodash-es';\nimport { SmallCourseScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service';\nimport { SmallCourseScheduleCommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service';\nimport { ruleOptions } from \"./edit-course.config\";\nexport default {\n  name: 'AddCourseSchedule',\n  serviceInject: function serviceInject() {\n    return {\n      smallCourseScheduleService: SmallCourseScheduleService,\n      smallCourseScheduleCommonService: SmallCourseScheduleCommonService\n    };\n  },\n  rxState: function rxState() {\n    var tss = this.smallCourseScheduleCommonService;\n    return {\n      loading: this.smallCourseScheduleService.loading$,\n      coachSmallCourseOptions: tss.coachBindOptions$,\n      courtOptions: tss.courtOptions$\n    };\n  },\n  computed: {\n    compareTime: function compareTime() {\n      return this.startTime >= this.endTime ? true : '';\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false,\n      courseItem: '',\n      params: {},\n      cycle_start_date: '',\n      cycle_end_date: '',\n      startTime: '',\n      endTime: ''\n    };\n  },\n  props: {\n    item: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    cycleIndex: {\n      type: Number,\n      default: function _default() {\n        return 0;\n      }\n    },\n    cycle: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    positionIndex: {\n      type: Number,\n      default: function _default() {\n        return 0;\n      }\n    },\n    cycle_type: {\n      type: Number,\n      default: 0\n    },\n    courseInfo: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  created: function created() {\n    var cycleDate = this.cycle;\n    this.cycle_start_date = cycleDate[0].format('YYYY-MM-DD');\n    this.cycle_end_date = cycleDate[1].format('YYYY-MM-DD');\n  },\n  mounted: function mounted() {\n    var item = cloneDeep(this.item);\n    console.log(item);\n    console.log(this.cycle);\n    var court_item = [item.court_id, item.court_site_id];\n    var time = moment(item.start_date);\n    this.form.setFieldsValue({\n      current_course_name: item.current_course_name,\n      coach_id: item.coach_id,\n      court_id: court_item\n    });\n    var start_time, end_time;\n\n    if (this.cycle_type === 2) {\n      start_time = moment(this.item.start_time);\n      end_time = moment(this.item.end_time);\n      this.form.setFieldsValue({\n        start_days: time\n      });\n    } else {\n      start_time = moment(\"\".concat(this.cycle_start_date, \" \").concat(this.item.start_time));\n      end_time = moment(\"\".concat(this.cycle_start_date, \" \").concat(this.item.end_time));\n    }\n\n    this.form.setFieldsValue({\n      start_time: start_time,\n      end_time: end_time\n    });\n    this.startTime = start_time;\n    this.endTime = end_time;\n    this.onChangeCoach(item.coach_id);\n    this.onChangeCourt(court_item);\n  },\n  methods: {\n    changeStartTime: function changeStartTime(value) {\n      this.startTime = value;\n      var endTime = this.form.getFieldValue('end_time');\n    },\n    changeEndTime: function changeEndTime(value) {\n      this.endTime = value;\n    },\n    onChangeCoach: function onChangeCoach(value) {\n      var _this = this;\n\n      this.coachSmallCourseOptions.forEach(function (item, index) {\n        if (item.id === value) {\n          _this.params.coach_name = item.name;\n        }\n      });\n    },\n    onChangeCourt: function onChangeCourt(data) {\n      var _this2 = this;\n\n      this.courtOptions.forEach(function (item, index) {\n        if (item.id === data[0]) {\n          _this2.params.court_name = item.name;\n\n          if (data[1]) {\n            item.children.forEach(function (childrenItem, index) {\n              if (childrenItem.id === data[1]) {\n                _this2.params.court_site_name = childrenItem.name;\n              }\n            });\n          } else {\n            _this2.params.court_site_name = '';\n          }\n        }\n\n        return;\n      });\n    },\n    editCourse: function editCourse(cycleIndex, conflict, params, list) {\n      this.$emit('editCourse', cycleIndex, this.positionIndex, conflict, params, list);\n      this.show = false;\n    },\n    editCustomCourse: function editCustomCourse(params) {\n      this.$emit('editCustomCourse', this.positionIndex, params);\n      this.show = false;\n    },\n    editSchedule: function editSchedule(verifyParams) {\n      var _this3 = this;\n\n      this.smallCourseScheduleService.editScheduleInBatchs(verifyParams).subscribe(function (res) {\n        console.log(res);\n\n        _this3.editCourse(_this3.cycleIndex, res.conflict, verifyParams, res.list);\n      });\n    },\n    editScheduleCustom: function editScheduleCustom(verifyParams) {\n      var _this4 = this;\n\n      this.smallCourseScheduleService.editScheduleInBatchCustoms(verifyParams).subscribe(function (res) {\n        console.log(res);\n\n        if (!res.conflict) {\n          _this4.editCustomCourse(verifyParams);\n        }\n      });\n    },\n    addSchedule: function addSchedule(verifyParams) {\n      var _this5 = this;\n\n      this.smallCourseScheduleService.addScheduleInBatch(verifyParams).subscribe(function (res) {\n        console.log(res);\n\n        if (!res.conflict) {\n          verifyParams.schedule_ids = res.schedule_ids;\n        }\n\n        _this5.editCourse(_this5.cycleIndex, res.conflict, verifyParams, res.list);\n      });\n    },\n    addCourse: function addCourse(cycleIndex, conflict, params, list) {\n      this.$emit('addCourse', cycleIndex, conflict, params, list);\n      this.show = false;\n    },\n    addScheduleCustom: function addScheduleCustom(verifyParams) {\n      var _this6 = this;\n\n      this.smallCourseScheduleService.addScheduleInBatchCustom(verifyParams).subscribe(function (res) {\n        console.log(res);\n\n        if (!res.conflict) {\n          verifyParams.id = res.schedule_id;\n\n          _this6.addCustomCourse(verifyParams);\n        }\n      });\n    },\n    addCustomCourse: function addCustomCourse(params) {\n      this.$emit('addCustomCourse', params);\n      this.show = false;\n    },\n    onSubmit: function onSubmit() {\n      var _this7 = this;\n\n      this.form.validate().then(function (values) {\n        console.log(values);\n        var form = cloneDeep(values);\n\n        if (_this7.cycle_type === 2) {\n          var start_days = values.start_days.format('YYYY-MM-DD');\n          var start_time = values.start_time.format('HH:mm');\n          var end_time = values.end_time.format('HH:mm');\n          form.start_time = start_days + ' ' + start_time;\n          form.end_time = start_days + ' ' + end_time;\n        } else {\n          form.start_time = form.start_time.format('HH:mm');\n          form.end_time = form.end_time.format('HH:mm');\n        }\n\n        form.court_id = values.court_id[0];\n        form.court_site_id = values.court_id[1];\n        form.week = _this7.item.week;\n        form.cycle_start_date = _this7.cycle[0].format('YYYY-MM-DD');\n        form.cycle_end_date = _this7.cycle[1].format('YYYY-MM-DD');\n        form.id = _this7.item.id;\n        form.course_id = _this7.courseInfo.course_id;\n        form.schedule_ids = _this7.item.schedule_ids;\n        var verifyParams = Object.assign(_this7.params, form);\n        console.log('提交参数');\n        console.log(verifyParams);\n\n        if (verifyParams.schedule_ids === undefined && _this7.cycle_type === 1) {\n          _this7.addSchedule(verifyParams);\n\n          return;\n        }\n\n        if (verifyParams.id === undefined && _this7.cycle_type === 2) {\n          _this7.addScheduleCustom(verifyParams);\n\n          return;\n        }\n\n        if (_this7.cycle_type === 1) {\n          _this7.editSchedule(verifyParams);\n        } else {\n          _this7.editScheduleCustom(verifyParams);\n        }\n      });\n    },\n    onClick: function onClick() {\n      this.show = false;\n    },\n    onScheduleChange: function onScheduleChange() {\n      this.$router.reload();\n    }\n  }\n};",{"version":3,"sources":["edit-course.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <st-modal title=\"编辑课程\" v-model=\"show\" width=\"520px\">\n    <st-form :form=\"form\" labelWidth=\"72px\" labelAuto>\n      <st-form-item label=\"排课名称\">\n        <a-input\n          placeholder=\"请输入\"\n          v-decorator=\"decorators.current_course_name\"\n        />\n      </st-form-item>\n      <st-form-item label=\"日期\" required v-if=\"cycle_type === 2\">\n        <a-date-picker\n          style=\"width:100%\"\n          format=\"YYYY-MM-DD\"\n          v-decorator=\"decorators.start_days\"\n        />\n      </st-form-item>\n      <st-form-item label=\"开始时间\" required>\n        <a-time-picker\n          format=\"HH:mm\"\n          style=\"width:100%\"\n          @change=\"changeStartTime\"\n          v-decorator=\"decorators.start_time\"\n        />\n      </st-form-item>\n      <st-form-item label=\"结束时间\" required>\n        <a-time-picker\n          format=\"HH:mm\"\n          style=\"width:100%\"\n          @change=\"changeEndTime\"\n          v-decorator=\"decorators.end_time\"\n        />\n      </st-form-item>\n      <st-form-item :label=\"$c('coach')\" required>\n        <a-select\n          :placeholder=\"`请选择${$c('coach')}`\"\n          @change=\"onChangeCoach\"\n          v-decorator=\"decorators.coach_id\"\n        >\n          <a-select-option\n            v-for=\"coach in coachSmallCourseOptions\"\n            :key=\"coach.id\"\n            :value=\"coach.id\"\n          >\n            {{ coach.name }}\n          </a-select-option>\n        </a-select>\n      </st-form-item>\n      <st-form-item label=\"场地\" required class=\"mg-b0\">\n        <a-cascader\n          placeholder=\"请选择场地\"\n          :options=\"courtOptions\"\n          :fieldNames=\"{ label: 'name', value: 'id', children: 'children' }\"\n          v-decorator=\"decorators.court_id\"\n          @change=\"onChangeCourt\"\n        />\n      </st-form-item>\n    </st-form>\n    <template slot=\"footer\">\n      <st-button @click=\"onClick\">取消</st-button>\n      <st-button type=\"primary\" :loading=\"loading.add\" @click=\"onSubmit\">\n        提交\n      </st-button>\n    </template>\n  </st-modal>\n</template>\n\n<script>\nimport { cloneDeep } from 'lodash-es'\nimport { SmallCourseScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service'\nimport { SmallCourseScheduleCommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service'\nimport { ruleOptions } from './edit-course.config'\nexport default {\n  name: 'AddCourseSchedule',\n  serviceInject() {\n    return {\n      smallCourseScheduleService: SmallCourseScheduleService,\n      smallCourseScheduleCommonService: SmallCourseScheduleCommonService\n    }\n  },\n  rxState() {\n    const tss = this.smallCourseScheduleCommonService\n    return {\n      loading: this.smallCourseScheduleService.loading$,\n      coachSmallCourseOptions: tss.coachBindOptions$,\n      courtOptions: tss.courtOptions$\n    }\n  },\n  computed: {\n    compareTime() {\n      return this.startTime >= this.endTime ? true : ''\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      courseItem: '',\n      params: {},\n      cycle_start_date: '',\n      cycle_end_date: '',\n      startTime: '',\n      endTime: ''\n    }\n  },\n  props: {\n    item: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    cycleIndex: {\n      type: Number,\n      default: () => {\n        return 0\n      }\n    },\n    cycle: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    positionIndex: {\n      type: Number,\n      default: () => {\n        return 0\n      }\n    },\n    cycle_type: {\n      type: Number,\n      default: 0\n    },\n    courseInfo: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  created() {\n    const cycleDate = this.cycle\n    this.cycle_start_date = cycleDate[0].format('YYYY-MM-DD')\n    this.cycle_end_date = cycleDate[1].format('YYYY-MM-DD')\n  },\n  mounted() {\n    const item = cloneDeep(this.item)\n    console.log(item)\n    console.log(this.cycle)\n    const court_item = [item.court_id, item.court_site_id]\n    const time = moment(item.start_date)\n    this.form.setFieldsValue({\n      current_course_name: item.current_course_name,\n      coach_id: item.coach_id,\n      court_id: court_item\n    })\n    let start_time, end_time\n    if (this.cycle_type === 2) {\n      start_time = moment(this.item.start_time)\n      end_time = moment(this.item.end_time)\n      this.form.setFieldsValue({\n        start_days: time\n      })\n    } else {\n      start_time = moment(`${this.cycle_start_date} ${this.item.start_time}`)\n      end_time = moment(`${this.cycle_start_date} ${this.item.end_time}`)\n    }\n    this.form.setFieldsValue({\n      start_time: start_time,\n      end_time: end_time\n    })\n    this.startTime = start_time\n    this.endTime = end_time\n    this.onChangeCoach(item.coach_id)\n    this.onChangeCourt(court_item)\n  },\n  methods: {\n    changeStartTime(value) {\n      this.startTime = value\n      const endTime = this.form.getFieldValue('end_time')\n    },\n    changeEndTime(value) {\n      this.endTime = value\n    },\n    onChangeCoach(value) {\n      this.coachSmallCourseOptions.forEach((item, index) => {\n        if (item.id === value) {\n          this.params.coach_name = item.name\n        }\n      })\n    },\n    onChangeCourt(data) {\n      this.courtOptions.forEach((item, index) => {\n        if (item.id === data[0]) {\n          this.params.court_name = item.name\n          if (data[1]) {\n            item.children.forEach((childrenItem, index) => {\n              if (childrenItem.id === data[1]) {\n                this.params.court_site_name = childrenItem.name\n              }\n            })\n          } else {\n            this.params.court_site_name = ''\n          }\n        }\n        return\n      })\n    },\n    editCourse(cycleIndex, conflict, params, list) {\n      this.$emit(\n        'editCourse',\n        cycleIndex,\n        this.positionIndex,\n        conflict,\n        params,\n        list\n      )\n      this.show = false\n    },\n    editCustomCourse(params) {\n      this.$emit('editCustomCourse', this.positionIndex, params)\n      this.show = false\n    },\n    editSchedule(verifyParams) {\n      this.smallCourseScheduleService\n        .editScheduleInBatchs(verifyParams)\n        .subscribe(res => {\n          console.log(res)\n          this.editCourse(this.cycleIndex, res.conflict, verifyParams, res.list)\n        })\n    },\n    editScheduleCustom(verifyParams) {\n      this.smallCourseScheduleService\n        .editScheduleInBatchCustoms(verifyParams)\n        .subscribe(res => {\n          console.log(res)\n          if (!res.conflict) {\n            this.editCustomCourse(verifyParams)\n          }\n        })\n    },\n    addSchedule(verifyParams) {\n      this.smallCourseScheduleService\n        .addScheduleInBatch(verifyParams)\n        .subscribe(res => {\n          console.log(res)\n          if (!res.conflict) {\n            verifyParams.schedule_ids = res.schedule_ids\n          }\n          this.editCourse(this.cycleIndex, res.conflict, verifyParams, res.list)\n        })\n    },\n    addCourse(cycleIndex, conflict, params, list) {\n      this.$emit('addCourse', cycleIndex, conflict, params, list)\n      this.show = false\n    },\n    addScheduleCustom(verifyParams) {\n      this.smallCourseScheduleService\n        .addScheduleInBatchCustom(verifyParams)\n        .subscribe(res => {\n          console.log(res)\n          if (!res.conflict) {\n            verifyParams.id = res.schedule_id\n            this.addCustomCourse(verifyParams)\n          }\n        })\n    },\n    addCustomCourse(params) {\n      this.$emit('addCustomCourse', params)\n      this.show = false\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        console.log(values)\n        const form = cloneDeep(values)\n        if (this.cycle_type === 2) {\n          const start_days = values.start_days.format('YYYY-MM-DD')\n          const start_time = values.start_time.format('HH:mm')\n          const end_time = values.end_time.format('HH:mm')\n          form.start_time = start_days + ' ' + start_time\n          form.end_time = start_days + ' ' + end_time\n        } else {\n          form.start_time = form.start_time.format('HH:mm')\n          form.end_time = form.end_time.format('HH:mm')\n        }\n        form.court_id = values.court_id[0]\n        form.court_site_id = values.court_id[1]\n        form.week = this.item.week\n        form.cycle_start_date = this.cycle[0].format('YYYY-MM-DD')\n        form.cycle_end_date = this.cycle[1].format('YYYY-MM-DD')\n        form.id = this.item.id\n        form.course_id = this.courseInfo.course_id\n        form.schedule_ids = this.item.schedule_ids\n        const verifyParams = Object.assign(this.params, form)\n        console.log('提交参数')\n        console.log(verifyParams)\n        if (verifyParams.schedule_ids === undefined && this.cycle_type === 1) {\n          this.addSchedule(verifyParams)\n          return\n        }\n        if (verifyParams.id === undefined && this.cycle_type === 2) {\n          this.addScheduleCustom(verifyParams)\n          return\n        }\n        if (this.cycle_type === 1) {\n          this.editSchedule(verifyParams)\n        } else {\n          this.editScheduleCustom(verifyParams)\n        }\n      })\n    },\n    onClick() {\n      this.show = false\n    },\n    onScheduleChange() {\n      this.$router.reload()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/schedule/small-course"}]}