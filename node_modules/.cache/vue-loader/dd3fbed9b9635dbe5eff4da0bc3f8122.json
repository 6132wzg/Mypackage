{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/components#/cabinet-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/components#/cabinet-list.vue","mtime":1591147717441},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { CabinetListService as CabinetService } from './cabinet-list.service'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nexport default {\n  bem: {\n    b: 'st-setting-cabinet'\n  },\n  serviceInject() {\n    return {\n      cabinetService: CabinetService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      resData: cabinetService.resData$,\n      auth: cabinetService.auth$\n    }\n  },\n  modals: {\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary\n  },\n  props: {\n    isOperationInBatch: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'temporary'\n    },\n    areaName: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    isOperationInBatch() {\n      this.checkedList = []\n      this.indeterminate = false\n      this.checkAll = false\n    }\n  },\n  computed: {\n    list() {\n      return this.resData.list\n    },\n    plainOptions() {\n      const { list } = this\n      const ret = []\n      list.forEach(item => {\n        ret.push(item.id)\n      })\n      return ret\n    }\n  },\n  data() {\n    return {\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false,\n      editFlag: ''\n    }\n  },\n  methods: {\n    onChange(checkedList) {\n      const { plainOptions } = this\n      this.checkedList = checkedList\n      this.indeterminate =\n        !!checkedList.length && checkedList.length < plainOptions.length\n      this.checkAll = checkedList.length === plainOptions.length\n      this.$emit('selectChange', checkedList)\n    },\n    onCheckAllChange(e) {\n      Object.assign(this, {\n        checkedList: e.target.checked ? this.plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      })\n      this.$emit('selectChange', this.checkedList)\n    },\n    mouseEventHander(type, id) {\n      this.editFlag = `${type}-${id}`\n    },\n    change() {\n      this.$emit('change')\n    }\n  }\n}\n",null]}