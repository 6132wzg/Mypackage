{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/plugin/seckill/components#/seckill-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/plugin/seckill/components#/seckill-form.vue","mtime":1600926556103},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ProductSetting from '../../components#/product-setting.vue'\nimport FormMixin from '../../components#/form.mixin'\nimport { merge } from 'lodash'\nimport moment from 'moment'\n\nimport { ruleOptions } from './seckill-form.config'\nexport default {\n  name: 'BrandAppPluginSeckillAdd',\n  mixins: [FormMixin],\n  bem: {\n    b: 'brand-app-plugin-seckill-add'\n  },\n  components: {\n    ProductSetting\n  },\n  props: {\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {}\n  },\n  // 数据源与表单数据之间格式转换\n  computed: {\n    decorators() {\n      return this.form.decorators(ruleOptions)\n    },\n    startTime: {\n      get() {\n        return this.formValue.start_time\n          ? moment(this.formValue.start_time)\n          : undefined\n      },\n      set(value) {\n        this.formValue.start_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    endTime: {\n      get() {\n        return this.formValue.end_time\n          ? moment(this.formValue.end_time)\n          : undefined\n      },\n      set(value) {\n        this.formValue.end_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    spike_time: {\n      get() {\n        return this.formValue.virtual_spike_time\n          ? moment(this.formValue.virtual_spike_time)\n          : null\n      },\n      set(value) {\n        this.formValue.virtual_spike_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    isLimitStock: {\n      get() {\n        return this.formValue.is_limit_stock ? true : false\n      },\n      set(value) {\n        this.formValue.is_limit_stock = value ? 1 : 0\n        this.$nextTick(() => {\n          if (!value) {\n            this.form.validateFields(['stock_num'], { force: true })\n            this.form.setFieldsValue({ stock_num: 0 })\n          }\n        })\n      }\n    },\n    isLimitBuy: {\n      get() {\n        return this.formValue.is_limit_buy ? true : false\n      },\n      set(value) {\n        this.formValue.is_limit_buy = value ? 1 : 0\n        this.$nextTick(() => {\n          if (!value) {\n            this.form.validateFields(['buy_num'], { force: true })\n            this.form.setFieldsValue({ buy_num: 0 })\n          }\n        })\n      }\n    },\n    isVirtualSpike: {\n      get() {\n        return this.formValue.is_virtual_spike ? true : false\n      },\n      set(value) {\n        this.formValue.is_virtual_spike = value ? 1 : 0\n        value || this.form.validateFields(['spike_time'], { force: true })\n      }\n    },\n    dateRange: {\n      get() {\n        const start = this.formValue.start_time\n          ? moment(this.formValue.start_time)\n          : undefined\n        const end = this.formValue.end_time\n          ? moment(this.formValue.end_time)\n          : undefined\n        return [start, end]\n      },\n      set(value) {\n        console.log(value)\n        this.formValue.start_time = value[0]\n          ? value[0].format('YYYY-MM-DD HH:mm:ss')\n          : undefined\n        this.formValue.end_time = value[1]\n          ? value[1].format('YYYY-MM-DD HH:mm:ss')\n          : undefined\n      }\n    }\n  },\n  mounted() {},\n  methods: {\n    moment,\n    // 自定义的数据格式校验\n    validate() {\n      return new Promise((resolve, reject) => {\n        this.form.validateFieldsAndScroll({ force: true }, (err, values) => {\n          resolve(!err)\n        })\n      })\n    },\n    dateRangeCheck() {\n      if (!this.formValue.start_time || !this.formValue.end_time) {\n        this.messageError({ content: '请设置活动时间' })\n        return false\n      }\n      return true\n    },\n    virDateCheck() {\n      if (\n        moment(this.formValue.virtual_spike_time).valueOf() <=\n          moment(this.formValue.start_time).valueOf() ||\n        moment(this.formValue.virtual_spike_time).valueOf() >=\n          moment(this.formValue.end_time).valueOf()\n      ) {\n        this.messageError({ content: '秒杀时间必须在活动时间范围内' })\n        return false\n      }\n      return true\n    },\n    buyCheck() {\n      if (this.formValue.is_limit_buy === 1 && this.formValue.buy_num <= 0) {\n        this.messageError({ content: '请设置单人购买笔数' })\n        return false\n      }\n      return true\n    },\n    stockCheck() {\n      if (\n        this.formValue.is_limit_stock === 1 &&\n        this.formValue.stock_num <= 0\n      ) {\n        this.messageError({ content: '请设置活动库存' })\n        return false\n      }\n      return true\n    },\n    // 以下方法为 时间范围控制\n    range(start, end) {\n      const result = []\n      for (let i = start; i < end; i++) {\n        result.push(i)\n      }\n      return result\n    },\n    // disabledEndDate(newEndValue) {\n    //   return newEndValue.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')\n    // },\n    disabledEndTime() {\n      let hour = 0\n      let min = 0\n      let sec = 0\n      if (\n        moment(this.formValue.start_time).format('YYYY-MM-DD') ===\n        moment(this.formValue.end_time).format('YYYY-MM-DD')\n      ) {\n        hour = moment(this.formValue.start_time).hours()\n        if (\n          moment(this.formValue.start_time).format('YYYY-MM-DD HH') ===\n          moment(this.formValue.end_time).format('YYYY-MM-DD HH')\n        ) {\n          min = moment(this.formValue.start_time).minutes()\n        }\n        if (\n          moment(this.formValue.start_time).format('YYYY-MM-DD HH:mm') ===\n          moment(this.formValue.end_time).format('YYYY-MM-DD HH:mm')\n        ) {\n          sec = moment(this.formValue.start_time).seconds() + 1\n        }\n      }\n      return {\n        disabledHours: () => this.range(0, hour),\n        disabledMinutes: () => this.range(0, min),\n        disabledSeconds: () => this.range(0, sec)\n      }\n    },\n    disabledVirDate(current) {\n      return (\n        current.format('YYYY-MM-DD') <\n          moment(this.formValue.start_time).format('YYYY-MM-DD') ||\n        current.format('YYYY-MM-DD') >\n          moment(this.formValue.end_time).format('YYYY-MM-DD')\n      )\n    },\n    disabledVirTime() {\n      let hour = 0\n      let min = 0\n      let sec = 0\n      if (\n        moment(this.formValue.start_time).format('YYYY-MM-DD') ===\n        moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD')\n      ) {\n        hour = moment(this.formValue.start_time).hours()\n        if (\n          moment(this.formValue.start_time).format('YYYY-MM-DD HH') ===\n          moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD HH')\n        ) {\n          min = moment(this.formValue.start_time).minutes()\n        }\n        if (\n          moment(this.formValue.start_time).format('YYYY-MM-DD HH:mm') ===\n          moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD HH:mm')\n        ) {\n          sec = moment(this.formValue.start_time).seconds() + 1\n        }\n        return {\n          disabledHours: () => this.range(0, hour),\n          disabledMinutes: () => this.range(0, min),\n          disabledSeconds: () => this.range(0, sec)\n        }\n      }\n      if (\n        moment(this.formValue.end_time).format('YYYY-MM-DD') ===\n        moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD')\n      ) {\n        ;(hour = 24), (min = 60), (sec = 60)\n        hour = moment(this.formValue.end_time).hours() + 1\n        if (\n          moment(this.formValue.end_time).format('YYYY-MM-DD HH') ===\n          moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD HH')\n        ) {\n          min = moment(this.formValue.end_time).minutes() + 1\n        }\n        if (\n          moment(this.formValue.end_time).format('YYYY-MM-DD HH:mm') ===\n          moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD HH:mm')\n        ) {\n          sec = moment(this.formValue.end_time).seconds()\n        }\n        return {\n          disabledHours: () => this.range(hour, 24),\n          disabledMinutes: () => this.range(min, 60),\n          disabledSeconds: () => this.range(sec, 60)\n        }\n      }\n      return {\n        disabledHours: () => [],\n        disabledMinutes: () => [],\n        disabledSeconds: () => []\n      }\n    }\n  }\n}\n",{"version":3,"sources":["seckill-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"seckill-form.vue","sourceRoot":"src/views/pages/brand/app/plugin/seckill/components#","sourcesContent":["<template>\n  <st-form class=\"mg-t8\" :form=\"form\" labelWidth=\"125px\">\n    <st-form-item required label=\"活动名称\">\n      <st-input\n        v-decorator=\"decorators.activity_name\"\n        placeholder=\"请输入活动名称\"\n        style=\"width: 470px\"\n        @change=\"formValueChange('activity_name', $event, formValue)\"\n        :maxLength=\"30\"\n      ></st-input>\n    </st-form-item>\n    <!-- 商品选择、商品优惠设置 -->\n    <product-setting\n      discountPriceLabel=\"秒杀价(元)\"\n      v-model=\"formValue\"\n      :formCheck=\"formCheck\"\n      :decorators=\"decorators\"\n      :form=\"form\"\n      :isEdit=\"isEdit\"\n      :isSubmit=\"isSubmit\"\n      @submit=\"onSubmit\"\n    ></product-setting>\n    <st-form-item required label=\"活动时间\">\n      <st-range-picker\n        v-decorator=\"decorators.dateRange\"\n        :options=\"{\n          start: {\n            showTime: {\n              format: 'HH:mm:ss'\n            },\n            format: 'YYYY-MM-DD HH:mm:ss'\n          },\n          end: {\n            showTime: {\n              format: 'HH:mm:ss'\n            },\n            format: 'YYYY-MM-DD HH:mm:ss',\n            disabledDateTime: disabledEndTime\n          }\n        }\"\n        @change=\"formValueChange('dateRange', $event)\"\n      />\n    </st-form-item>\n    <st-form-item label=\"活动库存\">\n      <a-checkbox v-model=\"isLimitStock\">限制库存</a-checkbox>\n      <st-input-number\n        style=\"width: 150px\"\n        class=\"mg-l12\"\n        v-decorator=\"decorators.stock_num\"\n        :min=\"1\"\n        :max=\"99999\"\n        :disabled=\"!formValue.is_limit_stock\"\n        @change=\"formValueChange('stock_num', $event, formValue)\"\n      ></st-input-number>\n    </st-form-item>\n    <st-form-item label=\"单人购买限制\">\n      <a-checkbox v-model=\"isLimitBuy\">限制购买</a-checkbox>\n      <st-input-number\n        style=\"width: 150px;padding: 0;\"\n        class=\"mg-l12\"\n        v-decorator=\"decorators.buy_num\"\n        :min=\"1\"\n        :max=\"999\"\n        :disabled=\"!formValue.is_limit_buy\"\n        @change=\"formValueChange('buy_num', $event, formValue)\"\n      >\n        <span slot=\"addonAfter\">笔订单</span>\n      </st-input-number>\n    </st-form-item>\n    <st-form-item label=\"虚拟秒杀\">\n      <a-checkbox v-model=\"isVirtualSpike\">到点自动抢光</a-checkbox>\n      <a-date-picker\n        :style=\"{ padding: 0, marginLeft: '8px' }\"\n        placeholder=\"请选择时间\"\n        format=\"YYYY-MM-DD HH:mm:ss\"\n        v-decorator=\"decorators.spike_time\"\n        :disabledDate=\"disabledVirDate\"\n        :disabledTime=\"disabledVirTime\"\n        :showTime=\"true\"\n        :showToday=\"false\"\n        :disabled=\"!formValue.is_virtual_spike\"\n        @change=\"formValueChange('spike_time', $event)\"\n      />\n    </st-form-item>\n    <st-form-item label=\"备注\">\n      <st-textarea\n        style=\"min-width: 540px\"\n        placeholder=\"备注内容仅商家可见\"\n        v-model=\"formValue.description\"\n        :autosize=\"{ minRows: 2, maxRows: 3 }\"\n        :maxlength=\"200\"\n      ></st-textarea>\n    </st-form-item>\n    <slot></slot>\n  </st-form>\n</template>\n<script>\nimport ProductSetting from '../../components#/product-setting.vue'\nimport FormMixin from '../../components#/form.mixin'\nimport { merge } from 'lodash'\nimport moment from 'moment'\n\nimport { ruleOptions } from './seckill-form.config'\nexport default {\n  name: 'BrandAppPluginSeckillAdd',\n  mixins: [FormMixin],\n  bem: {\n    b: 'brand-app-plugin-seckill-add'\n  },\n  components: {\n    ProductSetting\n  },\n  props: {\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {}\n  },\n  // 数据源与表单数据之间格式转换\n  computed: {\n    decorators() {\n      return this.form.decorators(ruleOptions)\n    },\n    startTime: {\n      get() {\n        return this.formValue.start_time\n          ? moment(this.formValue.start_time)\n          : undefined\n      },\n      set(value) {\n        this.formValue.start_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    endTime: {\n      get() {\n        return this.formValue.end_time\n          ? moment(this.formValue.end_time)\n          : undefined\n      },\n      set(value) {\n        this.formValue.end_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    spike_time: {\n      get() {\n        return this.formValue.virtual_spike_time\n          ? moment(this.formValue.virtual_spike_time)\n          : null\n      },\n      set(value) {\n        this.formValue.virtual_spike_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    isLimitStock: {\n      get() {\n        return this.formValue.is_limit_stock ? true : false\n      },\n      set(value) {\n        this.formValue.is_limit_stock = value ? 1 : 0\n        this.$nextTick(() => {\n          if (!value) {\n            this.form.validateFields(['stock_num'], { force: true })\n            this.form.setFieldsValue({ stock_num: 0 })\n          }\n        })\n      }\n    },\n    isLimitBuy: {\n      get() {\n        return this.formValue.is_limit_buy ? true : false\n      },\n      set(value) {\n        this.formValue.is_limit_buy = value ? 1 : 0\n        this.$nextTick(() => {\n          if (!value) {\n            this.form.validateFields(['buy_num'], { force: true })\n            this.form.setFieldsValue({ buy_num: 0 })\n          }\n        })\n      }\n    },\n    isVirtualSpike: {\n      get() {\n        return this.formValue.is_virtual_spike ? true : false\n      },\n      set(value) {\n        this.formValue.is_virtual_spike = value ? 1 : 0\n        value || this.form.validateFields(['spike_time'], { force: true })\n      }\n    },\n    dateRange: {\n      get() {\n        const start = this.formValue.start_time\n          ? moment(this.formValue.start_time)\n          : undefined\n        const end = this.formValue.end_time\n          ? moment(this.formValue.end_time)\n          : undefined\n        return [start, end]\n      },\n      set(value) {\n        console.log(value)\n        this.formValue.start_time = value[0]\n          ? value[0].format('YYYY-MM-DD HH:mm:ss')\n          : undefined\n        this.formValue.end_time = value[1]\n          ? value[1].format('YYYY-MM-DD HH:mm:ss')\n          : undefined\n      }\n    }\n  },\n  mounted() {},\n  methods: {\n    moment,\n    // 自定义的数据格式校验\n    validate() {\n      return new Promise((resolve, reject) => {\n        this.form.validateFieldsAndScroll({ force: true }, (err, values) => {\n          resolve(!err)\n        })\n      })\n    },\n    dateRangeCheck() {\n      if (!this.formValue.start_time || !this.formValue.end_time) {\n        this.messageError({ content: '请设置活动时间' })\n        return false\n      }\n      return true\n    },\n    virDateCheck() {\n      if (\n        moment(this.formValue.virtual_spike_time).valueOf() <=\n          moment(this.formValue.start_time).valueOf() ||\n        moment(this.formValue.virtual_spike_time).valueOf() >=\n          moment(this.formValue.end_time).valueOf()\n      ) {\n        this.messageError({ content: '秒杀时间必须在活动时间范围内' })\n        return false\n      }\n      return true\n    },\n    buyCheck() {\n      if (this.formValue.is_limit_buy === 1 && this.formValue.buy_num <= 0) {\n        this.messageError({ content: '请设置单人购买笔数' })\n        return false\n      }\n      return true\n    },\n    stockCheck() {\n      if (\n        this.formValue.is_limit_stock === 1 &&\n        this.formValue.stock_num <= 0\n      ) {\n        this.messageError({ content: '请设置活动库存' })\n        return false\n      }\n      return true\n    },\n    // 以下方法为 时间范围控制\n    range(start, end) {\n      const result = []\n      for (let i = start; i < end; i++) {\n        result.push(i)\n      }\n      return result\n    },\n    // disabledEndDate(newEndValue) {\n    //   return newEndValue.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')\n    // },\n    disabledEndTime() {\n      let hour = 0\n      let min = 0\n      let sec = 0\n      if (\n        moment(this.formValue.start_time).format('YYYY-MM-DD') ===\n        moment(this.formValue.end_time).format('YYYY-MM-DD')\n      ) {\n        hour = moment(this.formValue.start_time).hours()\n        if (\n          moment(this.formValue.start_time).format('YYYY-MM-DD HH') ===\n          moment(this.formValue.end_time).format('YYYY-MM-DD HH')\n        ) {\n          min = moment(this.formValue.start_time).minutes()\n        }\n        if (\n          moment(this.formValue.start_time).format('YYYY-MM-DD HH:mm') ===\n          moment(this.formValue.end_time).format('YYYY-MM-DD HH:mm')\n        ) {\n          sec = moment(this.formValue.start_time).seconds() + 1\n        }\n      }\n      return {\n        disabledHours: () => this.range(0, hour),\n        disabledMinutes: () => this.range(0, min),\n        disabledSeconds: () => this.range(0, sec)\n      }\n    },\n    disabledVirDate(current) {\n      return (\n        current.format('YYYY-MM-DD') <\n          moment(this.formValue.start_time).format('YYYY-MM-DD') ||\n        current.format('YYYY-MM-DD') >\n          moment(this.formValue.end_time).format('YYYY-MM-DD')\n      )\n    },\n    disabledVirTime() {\n      let hour = 0\n      let min = 0\n      let sec = 0\n      if (\n        moment(this.formValue.start_time).format('YYYY-MM-DD') ===\n        moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD')\n      ) {\n        hour = moment(this.formValue.start_time).hours()\n        if (\n          moment(this.formValue.start_time).format('YYYY-MM-DD HH') ===\n          moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD HH')\n        ) {\n          min = moment(this.formValue.start_time).minutes()\n        }\n        if (\n          moment(this.formValue.start_time).format('YYYY-MM-DD HH:mm') ===\n          moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD HH:mm')\n        ) {\n          sec = moment(this.formValue.start_time).seconds() + 1\n        }\n        return {\n          disabledHours: () => this.range(0, hour),\n          disabledMinutes: () => this.range(0, min),\n          disabledSeconds: () => this.range(0, sec)\n        }\n      }\n      if (\n        moment(this.formValue.end_time).format('YYYY-MM-DD') ===\n        moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD')\n      ) {\n        ;(hour = 24), (min = 60), (sec = 60)\n        hour = moment(this.formValue.end_time).hours() + 1\n        if (\n          moment(this.formValue.end_time).format('YYYY-MM-DD HH') ===\n          moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD HH')\n        ) {\n          min = moment(this.formValue.end_time).minutes() + 1\n        }\n        if (\n          moment(this.formValue.end_time).format('YYYY-MM-DD HH:mm') ===\n          moment(this.formValue.virtual_spike_time).format('YYYY-MM-DD HH:mm')\n        ) {\n          sec = moment(this.formValue.end_time).seconds()\n        }\n        return {\n          disabledHours: () => this.range(hour, 24),\n          disabledMinutes: () => this.range(min, 60),\n          disabledSeconds: () => this.range(sec, 60)\n        }\n      }\n      return {\n        disabledHours: () => [],\n        disabledMinutes: () => [],\n        disabledSeconds: () => []\n      }\n    }\n  }\n}\n</script>\n"]}]}