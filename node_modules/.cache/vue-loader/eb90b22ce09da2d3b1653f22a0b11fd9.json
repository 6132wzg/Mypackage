{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/recent-radio-group/recent-radio-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/recent-radio-group/recent-radio-group.vue","mtime":1600926556058},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nexport default {\n  name: 'StRecentRadioGroup',\n  bem: {\n    b: 'st-recent-radio-group'\n  },\n  props: {\n    // radio的文案自定义\n    label: {\n      type: String,\n      default: '近$天'\n    },\n    /**\n     * type、unit、showBtnRangeDate 三个参数用于 当选择radio枚举时 在rangepiker里展示 当前选项的日期范围\n     * showBtnRangeDate 是否展示枚举范围\n     * type 可设置 subtract、add 分别代表 日期往前推算、日期往后推算\n     * unit 可设置 days、 months、 weeks、years 等 代表日期推算的单位\n     */\n    type: {\n      type: String,\n      default: 'subtract'\n    },\n    unit: {\n      type: String,\n      default: 'days'\n    },\n    showBtnRangeDate: {\n      type: Boolean,\n      default: true\n    },\n    // 日期选择范围限定，默认不限制日期选择范围，单位固定为 天(days)\n    range: {\n      type: [Number, Boolean],\n      default: 180\n    },\n    disabledNow: {\n      type: Boolean,\n      default: false\n    },\n    // 是否展示时间范围选择组件\n    showRangePicker: {\n      type: Boolean,\n      default: true\n    },\n    days: {\n      type: Array,\n      default: () => {\n        return [7, 30, 90]\n      }\n    },\n    value: {\n      type: Object,\n      default: () => {\n        return {\n          day: undefined,\n          start_date: undefined,\n          end_date: undefined\n        }\n      }\n    },\n    customRadioItem: {\n      type: Boolean,\n      default: false,\n      descirption: '是否自定义筛选项名称'\n    },\n    defaultRecent: {\n      type: Number,\n      default: 7\n    }\n  },\n  data() {\n    return {\n      recent: this.days[0],\n      dateRange: this.showRangePicker ? this.computeDateRange(this.days[0]) : []\n    }\n  },\n  watch: {\n    recent(newValue) {\n      if (newValue && newValue !== 0) {\n        this.$emit('change', {\n          recently_day: newValue,\n          start_date: undefined,\n          end_date: undefined\n        })\n        this.dateRange = this.computeDateRange(newValue)\n      }\n    }\n  },\n  computed: {\n    cValue() {\n      // value 字段转译 默认值如下， 可单独传参数设置\n      const {\n        _day = 'day',\n        _start_date = 'start_date',\n        _end_date = 'end_date'\n      } = this.$attrs\n      return {\n        day: this.value[_day],\n        start_date: this.value[_start_date],\n        end_date: this.value[_end_date]\n      }\n    }\n  },\n  mounted() {\n    if (this.defaultRecent) {\n      this.recent = this.defaultRecent\n    }\n    if (this.cValue.day) {\n      this.recent = this.cValue.day\n      this.dateRange = this.computeDateRange(this.recent)\n    }\n    if (this.cValue.start_date && this.cValue.end_date) {\n      this.recent = false\n      this.dateRange = [\n        moment(this.cValue.start_date),\n        moment(this.cValue.end_date)\n      ]\n    }\n  },\n  methods: {\n    moment,\n    // 当选择的是radio时 的 日期范围推算\n    computeDateRange(rangeDate) {\n      if (this.showRangePicker && this.showBtnRangeDate) {\n        let start = this.type === 'subtract' ? rangeDate : 1\n        let end = this.type === 'subtract' ? 1 : rangeDate\n        if (!this.disabledNow) {\n          start = this.type === 'subtract' ? rangeDate - 1 : 0\n          end = this.type === 'subtract' ? 0 : rangeDate - 1\n        }\n        return [\n          moment()[this.type](start, this.unit),\n          moment()[this.type](end, this.unit)\n        ]\n      }\n      return []\n    },\n    // 日期面板变化时的回调\n    calendarChange(val) {\n      this.dateRange = val\n    },\n    recentChange(date, dateString) {\n      this.recent = false\n      this.$emit('change', {\n        start_date: dateString[0],\n        end_date: dateString[1],\n        recently_day: undefined\n      })\n    },\n    disabledDate(current) {\n      const { dateRange, range, disabledNow, type } = this\n      const start = dateRange[0]\n      const end = dateRange[1]\n      if (this.$attrs.disabledDate) {\n        return this.$attrs.disabledDate(current, {\n          range,\n          dateRange,\n          disabledNow,\n          type\n        })\n      }\n      if (\n        range > 0 &&\n        start &&\n        !end &&\n        (current > moment(start).add(range, 'days') ||\n          current < moment(start).subtract(range, 'days'))\n      ) {\n        return true\n      }\n      if (\n        type === 'subtract' &&\n        current &&\n        (disabledNow\n          ? current.format('YYYY-MM-DD') >= moment().format('YYYY-MM-DD')\n          : current > moment())\n      )\n        return true\n      if (\n        type === 'add' &&\n        current &&\n        (disabledNow\n          ? current.format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD')\n          : current < moment())\n      )\n        return true\n      return current && current > moment()\n    }\n  }\n}\n",{"version":3,"sources":["recent-radio-group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"recent-radio-group.vue","sourceRoot":"src/views/components/recent-radio-group","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <a-radio-group v-model=\"recent\">\n      <a-radio-button\n        v-for=\"item in days\"\n        :value=\"item.value || item\"\n        :key=\"item.value || item\"\n      >\n        {{ item.label || label.replace('$', item) }}\n      </a-radio-button>\n    </a-radio-group>\n    <a-range-picker\n      v-if=\"showRangePicker\"\n      :class=\"[b('range'), { active: !recent }]\"\n      @change=\"recentChange\"\n      v-model=\"dateRange\"\n      v-bind=\"$attrs\"\n      :disabledDate=\"disabledDate\"\n      @calendarChange=\"calendarChange\"\n    />\n  </div>\n</template>\n<script>\nimport moment from 'moment'\nexport default {\n  name: 'StRecentRadioGroup',\n  bem: {\n    b: 'st-recent-radio-group'\n  },\n  props: {\n    // radio的文案自定义\n    label: {\n      type: String,\n      default: '近$天'\n    },\n    /**\n     * type、unit、showBtnRangeDate 三个参数用于 当选择radio枚举时 在rangepiker里展示 当前选项的日期范围\n     * showBtnRangeDate 是否展示枚举范围\n     * type 可设置 subtract、add 分别代表 日期往前推算、日期往后推算\n     * unit 可设置 days、 months、 weeks、years 等 代表日期推算的单位\n     */\n    type: {\n      type: String,\n      default: 'subtract'\n    },\n    unit: {\n      type: String,\n      default: 'days'\n    },\n    showBtnRangeDate: {\n      type: Boolean,\n      default: true\n    },\n    // 日期选择范围限定，默认不限制日期选择范围，单位固定为 天(days)\n    range: {\n      type: [Number, Boolean],\n      default: 180\n    },\n    disabledNow: {\n      type: Boolean,\n      default: false\n    },\n    // 是否展示时间范围选择组件\n    showRangePicker: {\n      type: Boolean,\n      default: true\n    },\n    days: {\n      type: Array,\n      default: () => {\n        return [7, 30, 90]\n      }\n    },\n    value: {\n      type: Object,\n      default: () => {\n        return {\n          day: undefined,\n          start_date: undefined,\n          end_date: undefined\n        }\n      }\n    },\n    customRadioItem: {\n      type: Boolean,\n      default: false,\n      descirption: '是否自定义筛选项名称'\n    },\n    defaultRecent: {\n      type: Number,\n      default: 7\n    }\n  },\n  data() {\n    return {\n      recent: this.days[0],\n      dateRange: this.showRangePicker ? this.computeDateRange(this.days[0]) : []\n    }\n  },\n  watch: {\n    recent(newValue) {\n      if (newValue && newValue !== 0) {\n        this.$emit('change', {\n          recently_day: newValue,\n          start_date: undefined,\n          end_date: undefined\n        })\n        this.dateRange = this.computeDateRange(newValue)\n      }\n    }\n  },\n  computed: {\n    cValue() {\n      // value 字段转译 默认值如下， 可单独传参数设置\n      const {\n        _day = 'day',\n        _start_date = 'start_date',\n        _end_date = 'end_date'\n      } = this.$attrs\n      return {\n        day: this.value[_day],\n        start_date: this.value[_start_date],\n        end_date: this.value[_end_date]\n      }\n    }\n  },\n  mounted() {\n    if (this.defaultRecent) {\n      this.recent = this.defaultRecent\n    }\n    if (this.cValue.day) {\n      this.recent = this.cValue.day\n      this.dateRange = this.computeDateRange(this.recent)\n    }\n    if (this.cValue.start_date && this.cValue.end_date) {\n      this.recent = false\n      this.dateRange = [\n        moment(this.cValue.start_date),\n        moment(this.cValue.end_date)\n      ]\n    }\n  },\n  methods: {\n    moment,\n    // 当选择的是radio时 的 日期范围推算\n    computeDateRange(rangeDate) {\n      if (this.showRangePicker && this.showBtnRangeDate) {\n        let start = this.type === 'subtract' ? rangeDate : 1\n        let end = this.type === 'subtract' ? 1 : rangeDate\n        if (!this.disabledNow) {\n          start = this.type === 'subtract' ? rangeDate - 1 : 0\n          end = this.type === 'subtract' ? 0 : rangeDate - 1\n        }\n        return [\n          moment()[this.type](start, this.unit),\n          moment()[this.type](end, this.unit)\n        ]\n      }\n      return []\n    },\n    // 日期面板变化时的回调\n    calendarChange(val) {\n      this.dateRange = val\n    },\n    recentChange(date, dateString) {\n      this.recent = false\n      this.$emit('change', {\n        start_date: dateString[0],\n        end_date: dateString[1],\n        recently_day: undefined\n      })\n    },\n    disabledDate(current) {\n      const { dateRange, range, disabledNow, type } = this\n      const start = dateRange[0]\n      const end = dateRange[1]\n      if (this.$attrs.disabledDate) {\n        return this.$attrs.disabledDate(current, {\n          range,\n          dateRange,\n          disabledNow,\n          type\n        })\n      }\n      if (\n        range > 0 &&\n        start &&\n        !end &&\n        (current > moment(start).add(range, 'days') ||\n          current < moment(start).subtract(range, 'days'))\n      ) {\n        return true\n      }\n      if (\n        type === 'subtract' &&\n        current &&\n        (disabledNow\n          ? current.format('YYYY-MM-DD') >= moment().format('YYYY-MM-DD')\n          : current > moment())\n      )\n        return true\n      if (\n        type === 'add' &&\n        current &&\n        (disabledNow\n          ? current.format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD')\n          : current < moment())\n      )\n        return true\n      return current && current > moment()\n    }\n  }\n}\n</script>\n"]}]}