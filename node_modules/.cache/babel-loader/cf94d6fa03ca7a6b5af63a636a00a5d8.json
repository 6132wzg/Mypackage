{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/date-component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/date-component.vue","mtime":1600926555713},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { TIME_UNIT } from '@/constants/course/team';\nexport default {\n  name: 'date',\n  data: function data() {\n    return {\n      startTime: moment().format('YYYY-MM-DD'),\n      TIME_UNIT: TIME_UNIT\n    };\n  },\n  props: {\n    end: {\n      type: String,\n      default: ''\n    }\n  },\n  created: function created() {\n    var weekOfday = moment(this.start).format('E');\n\n    if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n      this.startTime = moment(this.start).format('YYYY-MM-DD');\n    } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n      this.startTime = this.$searchQuery.start_date;\n    } else {\n      this.startTime = moment(this.start).subtract(weekOfday - 1, 'days').format('YYYY-MM-DD');\n    }\n  },\n  watch: {\n    start: function start(n, o) {\n      var weekOfday = moment(n).format('E');\n      this.startTime = this.$searchQuery.time_unit !== this.TIME_UNIT.TIME_WEEK ? moment(this.start).format('YYYY-MM-DD') : moment(this.start).subtract(weekOfday - 1, 'days').format('YYYY-MM-DD');\n    }\n  },\n  computed: {\n    isDay: function isDay() {\n      var start = this.$searchQuery.start_date;\n      var end = this.$searchQuery.end_date;\n      return start === end;\n    },\n    isCurrent: function isCurrent() {\n      var start = moment(this.$searchQuery.start_date).valueOf();\n      var end = moment(this.$searchQuery.end_date).valueOf();\n      var current = moment(moment().format('YYYY-MM-DD')).valueOf();\n      return current < start || end < current;\n    },\n    start: function start() {\n      return this.$searchQuery.start_date;\n    },\n    endTime: function endTime() {\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        return moment(this.startTime).format('YYYY-MM-DD');\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        return moment(this.startTime).endOf('month').add(1, 'days').format('YYYY-MM-DD');\n      } else {\n        return moment(this.startTime).add(6, 'days').format('YYYY-MM-DD');\n      }\n\n      return this.isDay ? moment(this.startTime).format('YYYY-MM-DD') : moment(this.startTime).add(6, 'days').format('YYYY-MM-DD');\n    },\n    rangeTime: function rangeTime() {\n      var start = moment(this.startTime).format('LL');\n      var end = moment(this.endTime).format('LL');\n      console.log(this.startTime, start, '这是开始时间');\n      return this.isDay ? moment(this.$searchQuery.start_date).format('LL') : \"\".concat(start, \" ~ \").concat(end);\n    }\n  },\n  methods: {\n    onClickPre: function onClickPre() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .subtract(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .subtract(7, 'days')\n      //       .format('YYYY-MM-DD')\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date).subtract(1, 'days').format('YYYY-MM-DD');\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime).subtract(1, 'months').format('YYYY-MM-DD');\n      } else {\n        this.startTime = moment(this.startTime).subtract(7, 'days').format('YYYY-MM-DD');\n      }\n\n      this.$emit('pre', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      });\n    },\n    onClickNext: function onClickNext() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .add(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .add(7, 'days')\n      //       .format('YYYY-MM-DD')\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date).add(1, 'days').format('YYYY-MM-DD');\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime).add(1, 'months').format('YYYY-MM-DD');\n      } else {\n        this.startTime = moment(this.startTime).add(7, 'days').format('YYYY-MM-DD');\n      }\n\n      this.$emit('next', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      });\n    },\n    onClickToday: function onClickToday() {\n      var weekOfday = moment().format('E'); // 计算今天是这周第几天\n      // this.startTime = this.isDay\n      //   ? moment().format('YYYY-MM-DD')\n      //   : moment()\n      //       .subtract(weekOfday - 1, 'days')\n      //       .format('YYYY-MM-DD') // 周一日期\n\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment().format('YYYY-MM-DD');\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment().startOf('month').format('YYYY-MM-DD');\n      } else {\n        this.startTime = moment().subtract(weekOfday - 1, 'days').format('YYYY-MM-DD'); // 周一日期\n      }\n\n      this.$emit('today', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit\n      });\n    },\n    getMatrix: function getMatrix(n) {\n      var weekOfday = moment(this.start).format('E');\n      var date = moment(this.start).subtract(weekOfday - n, 'days').format('YYYY-MM-DD');\n      var sortedList = this.cardList.filter(function (item) {\n        return item.start_date === date;\n      }).map(function (item) {\n        if (moment(item.end_date) > moment(item.start_date)) {\n          item.overload = 1;\n        }\n\n        item.start = toTen(item.start_time);\n        item.end = toTen(item.end_time);\n        return item;\n      }).sort(function (a, b) {\n        return a.start - b.start;\n      });\n      var timeMatrix = [];\n      var prevStart;\n      var prevEnd;\n      var group = [];\n      var groupIndex = 0;\n      sortedList.forEach(function (item) {\n        if (prevStart === undefined) {\n          prevStart = item.start;\n          prevEnd = item.end;\n        } else {\n          if (item.start < prevEnd) {\n            if (item.end > prevEnd) {\n              prevEnd = item.end;\n            }\n          } else {\n            // 以当前item标记开始位和结束位\n            prevStart = item.start;\n            prevEnd = item.end; // 新增分组\n\n            group = [];\n            groupIndex++;\n          }\n        }\n\n        group.push(item);\n        timeMatrix[groupIndex] = group;\n      });\n      return timeMatrix;\n    },\n    itemStyle: function itemStyle(item) {\n      return {\n        top: \"\".concat(item.start / 24 * 100, \"%\"),\n        height: \"\".concat((item.end - item.start) / 24 * 100, \"%\")\n      };\n    }\n  }\n};",{"version":3,"sources":["date-component.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"date-container\">\n    <st-button @click=\"onClickPre\">\n      <a-icon type=\"left\" />\n    </st-button>\n\n    <span class=\"text-content\">{{ rangeTime }}</span>\n\n    <st-button class=\"mg-r8\" @click=\"onClickNext\">\n      <a-icon type=\"right\" />\n    </st-button>\n    <st-button @click=\"onClickToday\" v-if=\"isCurrent\" class=\"today\">\n      今\n    </st-button>\n  </div>\n</template>\n<script>\nimport { TIME_UNIT } from '@/constants/course/team'\nexport default {\n  name: 'date',\n  data() {\n    return {\n      startTime: moment().format('YYYY-MM-DD'),\n      TIME_UNIT\n    }\n  },\n  props: {\n    end: {\n      type: String,\n      default: ''\n    }\n  },\n  created() {\n    let weekOfday = moment(this.start).format('E')\n    if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n      this.startTime = moment(this.start).format('YYYY-MM-DD')\n    } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n      this.startTime = this.$searchQuery.start_date\n    } else {\n      this.startTime = moment(this.start)\n        .subtract(weekOfday - 1, 'days')\n        .format('YYYY-MM-DD')\n    }\n  },\n  watch: {\n    start(n, o) {\n      let weekOfday = moment(n).format('E')\n      this.startTime =\n        this.$searchQuery.time_unit !== this.TIME_UNIT.TIME_WEEK\n          ? moment(this.start).format('YYYY-MM-DD')\n          : moment(this.start)\n              .subtract(weekOfday - 1, 'days')\n              .format('YYYY-MM-DD')\n    }\n  },\n  computed: {\n    isDay() {\n      const start = this.$searchQuery.start_date\n      const end = this.$searchQuery.end_date\n      return start === end\n    },\n    isCurrent() {\n      const start = moment(this.$searchQuery.start_date).valueOf()\n      const end = moment(this.$searchQuery.end_date).valueOf()\n      const current = moment(moment().format('YYYY-MM-DD')).valueOf()\n      return current < start || end < current\n    },\n    start() {\n      return this.$searchQuery.start_date\n    },\n    endTime() {\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        return moment(this.startTime).format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        return moment(this.startTime)\n          .endOf('month')\n          .add(1, 'days')\n          .format('YYYY-MM-DD')\n      } else {\n        return moment(this.startTime)\n          .add(6, 'days')\n          .format('YYYY-MM-DD')\n      }\n      return this.isDay\n        ? moment(this.startTime).format('YYYY-MM-DD')\n        : moment(this.startTime)\n            .add(6, 'days')\n            .format('YYYY-MM-DD')\n    },\n    rangeTime() {\n      let start = moment(this.startTime).format('LL')\n      let end = moment(this.endTime).format('LL')\n      console.log(this.startTime, start, '这是开始时间')\n      return this.isDay\n        ? moment(this.$searchQuery.start_date).format('LL')\n        : `${start} ~ ${end}`\n    }\n  },\n  methods: {\n    onClickPre() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .subtract(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .subtract(7, 'days')\n      //       .format('YYYY-MM-DD')\n\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date)\n          .subtract(1, 'days')\n          .format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime)\n          .subtract(1, 'months')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment(this.startTime)\n          .subtract(7, 'days')\n          .format('YYYY-MM-DD')\n      }\n      this.$emit('pre', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      })\n    },\n    onClickNext() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .add(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .add(7, 'days')\n      //       .format('YYYY-MM-DD')\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date)\n          .add(1, 'days')\n          .format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime)\n          .add(1, 'months')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment(this.startTime)\n          .add(7, 'days')\n          .format('YYYY-MM-DD')\n      }\n      this.$emit('next', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      })\n    },\n    onClickToday() {\n      let weekOfday = moment().format('E') // 计算今天是这周第几天\n      // this.startTime = this.isDay\n      //   ? moment().format('YYYY-MM-DD')\n      //   : moment()\n      //       .subtract(weekOfday - 1, 'days')\n      //       .format('YYYY-MM-DD') // 周一日期\n\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment().format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment()\n          .startOf('month')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment()\n          .subtract(weekOfday - 1, 'days')\n          .format('YYYY-MM-DD') // 周一日期\n      }\n      this.$emit('today', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit\n      })\n    },\n    getMatrix(n) {\n      let weekOfday = moment(this.start).format('E')\n      let date = moment(this.start)\n        .subtract(weekOfday - n, 'days')\n        .format('YYYY-MM-DD')\n      const sortedList = this.cardList\n        .filter(item => item.start_date === date)\n        .map(item => {\n          if (moment(item.end_date) > moment(item.start_date)) {\n            item.overload = 1\n          }\n          item.start = toTen(item.start_time)\n          item.end = toTen(item.end_time)\n          return item\n        })\n        .sort((a, b) => {\n          return a.start - b.start\n        })\n\n      const timeMatrix = []\n      let prevStart\n      let prevEnd\n      let group = []\n      let groupIndex = 0\n\n      sortedList.forEach(item => {\n        if (prevStart === undefined) {\n          prevStart = item.start\n          prevEnd = item.end\n        } else {\n          if (item.start < prevEnd) {\n            if (item.end > prevEnd) {\n              prevEnd = item.end\n            }\n          } else {\n            // 以当前item标记开始位和结束位\n            prevStart = item.start\n            prevEnd = item.end\n            // 新增分组\n            group = []\n            groupIndex++\n          }\n        }\n        group.push(item)\n\n        timeMatrix[groupIndex] = group\n      })\n      return timeMatrix\n    },\n    itemStyle(item) {\n      return {\n        top: `${(item.start / 24) * 100}%`,\n        height: `${((item.end - item.start) / 24) * 100}%`\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/schedule/date#"}]}