{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/di.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/di.js","mtime":1591147717498},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _construct from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/construct\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { isCtor, isFn } from \"./utils\";\nvar INJECTED = '__injectedTypes';\nexport var Container = /*#__PURE__*/function () {\n  function Container() {\n    _classCallCheck(this, Container);\n\n    _defineProperty(this, \"providers\", new Map());\n  }\n\n  _createClass(Container, [{\n    key: \"bindValue\",\n    value: function bindValue(token, value) {\n      this.providers.set(token, value);\n    }\n  }, {\n    key: \"get\",\n    value: function get(token) {\n      var instance = this.providers.get(token);\n\n      if (this.providers.has(token)) {\n        return instance;\n      } else {\n        // 自动实例化\n        if (isCtor(token)) {\n          var newInstance = this.getInstanceFromClass(token);\n          this.providers.set(token, newInstance);\n          return newInstance;\n        }\n\n        console.error('[vue-service-app] Invalid provide->', token);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(token) {\n      var instance = this.providers.get(token);\n\n      if (instance) {\n        this.providers.delete(token);\n      }\n    }\n  }, {\n    key: \"getInstanceFromClass\",\n    value: function getInstanceFromClass(Cls) {\n      var _this = this;\n\n      if (Cls[INJECTED]) {\n        var injects = Cls[INJECTED].map(function (childToken) {\n          return _this.get(childToken);\n        });\n        return _construct(Cls, _toConsumableArray(injects));\n      } else {\n        if (Cls.length) {\n          throw new Error(\"[vue-service-app] detect [\".concat(Cls.name, \"] has dependancy services but,but no @Injectable() or @Inject() decorate it\"));\n        }\n\n        return new Cls();\n      }\n    }\n  }]);\n\n  return Container;\n}();\nexport function Inject(token) {\n  if (!token) {\n    console && console.error('[vue-service-app] Inject() params got ->', token);\n  }\n\n  return function (target, propKey, propIndex) {\n    if (!target[INJECTED]) {\n      target[INJECTED] = [];\n    }\n\n    target[INJECTED][propIndex] = token;\n  };\n}\nexport function Injectable() {\n  return function (target) {\n    var outerInjected = Reflect.getMetadata('design:paramtypes', target);\n    var innerInjected = target[INJECTED];\n\n    if (!innerInjected) {\n      target[INJECTED] = outerInjected;\n    } else {\n      outerInjected.forEach(function (outer, index) {\n        if (!innerInjected[index]) {\n          target[INJECTED][index] = outer;\n        }\n      });\n    }\n\n    return target;\n  };\n}",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/di.js"],"names":["isCtor","isFn","INJECTED","Container","Map","token","value","providers","set","instance","get","has","newInstance","getInstanceFromClass","console","error","delete","Cls","injects","map","childToken","length","Error","name","Inject","target","propKey","propIndex","Injectable","outerInjected","Reflect","getMetadata","innerInjected","forEach","outer","index"],"mappings":"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","sourcesContent":["import { isCtor, isFn } from './utils'\nconst INJECTED = '__injectedTypes'\n\nexport class Container {\n  providers = new Map()\n  bindValue(token, value) {\n    this.providers.set(token, value)\n  }\n  get(token) {\n    const instance = this.providers.get(token)\n    if (this.providers.has(token)) {\n      return instance\n    } else {\n      // 自动实例化\n      if (isCtor(token)) {\n        const newInstance = this.getInstanceFromClass(token)\n        this.providers.set(token, newInstance)\n        return newInstance\n      }\n\n      console.error('[vue-service-app] Invalid provide->', token)\n    }\n  }\n  destroy(token) {\n    const instance = this.providers.get(token)\n    if (instance) {\n      this.providers.delete(token)\n    }\n  }\n\n  getInstanceFromClass(Cls) {\n    if (Cls[INJECTED]) {\n      const injects = Cls[INJECTED].map(childToken => this.get(childToken))\n      return new Cls(...injects)\n    } else {\n      if (Cls.length) {\n        throw new Error(\n          `[vue-service-app] detect [${\n            Cls.name\n          }] has dependancy services but,but no @Injectable() or @Inject() decorate it`\n        )\n      }\n      return new Cls()\n    }\n  }\n}\n\nexport function Inject(token) {\n  if (!token) {\n    console && console.error('[vue-service-app] Inject() params got ->', token)\n  }\n  return function(target, propKey, propIndex) {\n    if (!target[INJECTED]) {\n      target[INJECTED] = []\n    }\n    target[INJECTED][propIndex] = token\n  }\n}\nexport function Injectable() {\n  return function(target) {\n    const outerInjected = Reflect.getMetadata('design:paramtypes', target)\n    const innerInjected = target[INJECTED]\n    if (!innerInjected) {\n      target[INJECTED] = outerInjected\n    } else {\n      outerInjected.forEach((outer, index) => {\n        if (!innerInjected[index]) {\n          target[INJECTED][index] = outer\n        }\n      })\n    }\n    return target\n  }\n}\n"]}]}