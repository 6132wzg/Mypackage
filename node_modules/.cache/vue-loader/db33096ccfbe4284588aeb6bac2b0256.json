{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/components#/step2-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/components#/step2-form.vue","mtime":1600926556119},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MarketingAddTicket from '@/views/biz-modals/marketing/add-ticket'\nimport { CopyService } from '../copy.service'\nimport { clone, cloneDeep } from 'lodash-es'\nimport { MessageService } from '../../../../../../../services/message.service'\nimport { ACTIVITY_STATUS } from '@/constants/brand/marketing'\nexport default {\n  name: 'Step2Form',\n  modals: {\n    MarketingAddTicket\n  },\n  bem: {\n    b: 'step-form-signup'\n  },\n  serviceInject() {\n    return {\n      copyService: CopyService,\n      msg: MessageService\n    }\n  },\n  rxState() {\n    const { defaultForm$ } = this.copyService\n    return {\n      defaultForm$\n    }\n  },\n  props: {\n    isCopy: {\n      type: Boolean,\n      default: false\n    },\n    stepForm: {\n      type: Object,\n      default: () => {}\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean\n    }\n  },\n  created() {\n    if (!this.isCopy && !this.isEdit) return\n    this.initForm()\n  },\n  data() {\n    return {\n      ACTIVITY_STATUS,\n      checkedShopIds: [],\n      dataSource: [],\n      formDataList: [],\n      list: [],\n      // TODO: 用户人群暂未开启，前端静态填写 为全部用户 id 为 0\n      crowdIdOptions: [{ label: '全部用户', value: 0 }]\n    }\n  },\n  computed: {\n    colspanNum() {\n      return 5\n    },\n    ticketList() {\n      return cloneDeep(this.defaultForm$.ticket_list) || []\n    }\n  },\n  methods: {\n    getCrowdName(crowdId) {\n      let crowdName = ''\n      this.crowdIdOptions.forEach(item => {\n        crowdName = item.value === crowdId ? item.label : ''\n      })\n      return crowdName\n    },\n    initForm() {\n      const that = this\n      this.$nextTick().then(() => {\n        this.dataSource = cloneDeep(this.defaultForm$.ticket_list)\n        this.formDataList = cloneDeep(this.defaultForm$.ticket_list)\n        this.$emit('change', this.dataSource)\n      })\n    },\n    isTicketName(ticket) {\n      // 草稿状态都可以编辑 不是草稿状态的活动，只有新增过后的 可以编辑和删除\n      if (this.defaultForm$.activity_status === ACTIVITY_STATUS.DRAFT) {\n        return false\n      } else {\n        return this.ticketList\n          .map(item => item.ticket_name)\n          .includes(ticket.ticket_name)\n      }\n    },\n    editTicketItemRecord({ ticket, index }) {\n      this.$modalRouter.push({\n        name: 'marketing-add-ticket',\n        props: {\n          formData: this.defaultForm$,\n          dataSource: this.dataSource,\n          ticket: ticket,\n          index: index,\n          isSetting: true,\n          stepForm: this.stepForm\n        },\n        on: {\n          show: this.getTableItem,\n          submit: this.getFormItem\n        }\n      })\n    },\n    onClickBack() {\n      this.$emit('back', 0)\n    },\n    getTableItem({ ticket, index }) {\n      if (index > -1) {\n        this.dataSource = this.dataSource.map((ele, idx) => {\n          if (idx === index) {\n            ele = ticket\n          }\n          return ele\n        })\n      } else {\n        this.dataSource.push(ticket)\n      }\n      this.$emit('change', this.dataSource)\n    },\n    delTicketItemRecord(ticketName) {\n      this.$confirm({\n        title: '提示',\n        content: '是否删除该票种?',\n        okText: '是的',\n        cancelText: '再想想',\n        onOk: () => {\n          this.dataSource = this.dataSource.filter(\n            item => item.ticket_name !== ticketName\n          )\n          this.formDataList = this.formDataList.filter(\n            item => item.ticket_name !== ticketName\n          )\n          this.$emit('change', this.dataSource)\n        },\n        onCancel() {}\n      })\n    },\n    getFormItem({ ticket, index }) {\n      // 如果索引在则不是新增 则是对票种的设置\n      if (index > -1) {\n        this.formDataList = this.formDataList.map((ele, idx) => {\n          if (idx === index) {\n            ele = ticket\n          }\n          return ele\n        })\n      } else {\n        this.formDataList.push(ticket)\n      }\n    },\n    onClickAddTicketComplete() {\n      if (this.formDataList.length === 0) {\n        this.msg.error({ content: '最少新增一个票种' })\n        return\n      }\n      this.$emit('step-submit', this.formDataList)\n    }\n  }\n}\n",{"version":3,"sources":["step2-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"step2-form.vue","sourceRoot":"src/views/pages/brand/marketing/plugin/activity-registration/components#","sourcesContent":["<template>\n  <div>\n    <st-form-table>\n      <thead>\n        <tr>\n          <th>票种名称</th>\n          <th>价格(元)</th>\n          <th>票数（张）</th>\n          <th>购买用户</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td :colspan=\"colspanNum\" class=\"st-form-table__add\">\n            <st-button\n              :disabled=\"dataSource.length === 10\"\n              type=\"dashed\"\n              icon=\"add\"\n              block\n              v-modal-link=\"{\n                name: 'marketing-add-ticket',\n                props: {\n                  formData: defaultForm$,\n                  dataSource: dataSource,\n                  stepForm: stepForm\n                },\n                on: {\n                  show: getTableItem,\n                  submit: getFormItem\n                }\n              }\"\n            >\n              新增票种\n            </st-button>\n          </td>\n        </tr>\n        <template v-if=\"dataSource.length\">\n          <tr v-for=\"(item, index) in dataSource\" :key=\"index\">\n            <td>{{ item.ticket_name }}</td>\n            <td>{{ item.ticket_price }}</td>\n            <td>{{ item.ticket_total_num }}</td>\n            <td>{{ getCrowdName(item.crowd_id) }}</td>\n            <td>\n              <st-table-actions>\n                <a @click=\"editTicketItemRecord({ ticket: item, index })\">\n                  设置\n                </a>\n                <a\n                  @click=\"delTicketItemRecord(item.ticket_name)\"\n                  v-if=\"!isTicketName(item)\"\n                >\n                  删除\n                </a>\n              </st-table-actions>\n            </td>\n          </tr>\n        </template>\n        <template v-else>\n          <tr>\n            <td :colspan=\"colspanNum\">\n              <st-no-data />\n            </td>\n          </tr>\n        </template>\n      </tbody>\n    </st-form-table>\n    <portal to=\"BRAND_MARKETING_ACTIVITY_FORM_ACTIONS\" v-if=\"show\">\n      <st-button @click=\"onClickBack\">\n        上一步\n      </st-button>\n      <st-button\n        class=\"mg-l16\"\n        type=\"primary\"\n        @click=\"onClickAddTicketComplete\"\n      >\n        下一步\n      </st-button>\n    </portal>\n  </div>\n</template>\n<script>\nimport MarketingAddTicket from '@/views/biz-modals/marketing/add-ticket'\nimport { CopyService } from '../copy.service'\nimport { clone, cloneDeep } from 'lodash-es'\nimport { MessageService } from '../../../../../../../services/message.service'\nimport { ACTIVITY_STATUS } from '@/constants/brand/marketing'\nexport default {\n  name: 'Step2Form',\n  modals: {\n    MarketingAddTicket\n  },\n  bem: {\n    b: 'step-form-signup'\n  },\n  serviceInject() {\n    return {\n      copyService: CopyService,\n      msg: MessageService\n    }\n  },\n  rxState() {\n    const { defaultForm$ } = this.copyService\n    return {\n      defaultForm$\n    }\n  },\n  props: {\n    isCopy: {\n      type: Boolean,\n      default: false\n    },\n    stepForm: {\n      type: Object,\n      default: () => {}\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean\n    }\n  },\n  created() {\n    if (!this.isCopy && !this.isEdit) return\n    this.initForm()\n  },\n  data() {\n    return {\n      ACTIVITY_STATUS,\n      checkedShopIds: [],\n      dataSource: [],\n      formDataList: [],\n      list: [],\n      // TODO: 用户人群暂未开启，前端静态填写 为全部用户 id 为 0\n      crowdIdOptions: [{ label: '全部用户', value: 0 }]\n    }\n  },\n  computed: {\n    colspanNum() {\n      return 5\n    },\n    ticketList() {\n      return cloneDeep(this.defaultForm$.ticket_list) || []\n    }\n  },\n  methods: {\n    getCrowdName(crowdId) {\n      let crowdName = ''\n      this.crowdIdOptions.forEach(item => {\n        crowdName = item.value === crowdId ? item.label : ''\n      })\n      return crowdName\n    },\n    initForm() {\n      const that = this\n      this.$nextTick().then(() => {\n        this.dataSource = cloneDeep(this.defaultForm$.ticket_list)\n        this.formDataList = cloneDeep(this.defaultForm$.ticket_list)\n        this.$emit('change', this.dataSource)\n      })\n    },\n    isTicketName(ticket) {\n      // 草稿状态都可以编辑 不是草稿状态的活动，只有新增过后的 可以编辑和删除\n      if (this.defaultForm$.activity_status === ACTIVITY_STATUS.DRAFT) {\n        return false\n      } else {\n        return this.ticketList\n          .map(item => item.ticket_name)\n          .includes(ticket.ticket_name)\n      }\n    },\n    editTicketItemRecord({ ticket, index }) {\n      this.$modalRouter.push({\n        name: 'marketing-add-ticket',\n        props: {\n          formData: this.defaultForm$,\n          dataSource: this.dataSource,\n          ticket: ticket,\n          index: index,\n          isSetting: true,\n          stepForm: this.stepForm\n        },\n        on: {\n          show: this.getTableItem,\n          submit: this.getFormItem\n        }\n      })\n    },\n    onClickBack() {\n      this.$emit('back', 0)\n    },\n    getTableItem({ ticket, index }) {\n      if (index > -1) {\n        this.dataSource = this.dataSource.map((ele, idx) => {\n          if (idx === index) {\n            ele = ticket\n          }\n          return ele\n        })\n      } else {\n        this.dataSource.push(ticket)\n      }\n      this.$emit('change', this.dataSource)\n    },\n    delTicketItemRecord(ticketName) {\n      this.$confirm({\n        title: '提示',\n        content: '是否删除该票种?',\n        okText: '是的',\n        cancelText: '再想想',\n        onOk: () => {\n          this.dataSource = this.dataSource.filter(\n            item => item.ticket_name !== ticketName\n          )\n          this.formDataList = this.formDataList.filter(\n            item => item.ticket_name !== ticketName\n          )\n          this.$emit('change', this.dataSource)\n        },\n        onCancel() {}\n      })\n    },\n    getFormItem({ ticket, index }) {\n      // 如果索引在则不是新增 则是对票种的设置\n      if (index > -1) {\n        this.formDataList = this.formDataList.map((ele, idx) => {\n          if (idx === index) {\n            ele = ticket\n          }\n          return ele\n        })\n      } else {\n        this.formDataList.push(ticket)\n      }\n    },\n    onClickAddTicketComplete() {\n      if (this.formDataList.length === 0) {\n        this.msg.error({ content: '最少新增一个票种' })\n        return\n      }\n      this.$emit('step-submit', this.formDataList)\n    }\n  }\n}\n</script>\n"]}]}