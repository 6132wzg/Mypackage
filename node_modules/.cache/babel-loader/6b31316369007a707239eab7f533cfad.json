{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/app/physical-test/new-label.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/app/physical-test/new-label.vue","mtime":1600926555819},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { NewLableService } from \"./new-label.service\";\nimport { ruleOptions } from \"./new-label.config\";\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      Service: NewLableService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.Service.loading$\n    };\n  },\n  components: {},\n  name: 'newLable',\n  props: {\n    selectedRowData: {\n      type: Array\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.form.validate().then(function (values) {\n        _this.Service.addBodyLabel(values.inputLabel).subscribe(function (state) {\n          _this.show = false;\n\n          _this.$emit('success', true);\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["new-label.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,SAAA,eAAA;AACA,SAAA,WAAA;AACA,eAAA;AACA,EAAA,aADA,2BACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OANA,qBAMA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KAAA,OAAA,CAAA;AADA,KAAA;AAGA,GAVA;AAWA,EAAA,UAAA,EAAA,EAXA;AAYA,EAAA,IAAA,EAAA,UAZA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAbA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,QAAA,IAAA,GAAA,KAAA,OAAA,CAAA,MAAA,EAAA;AACA,QAAA,UAAA,GAAA,IAAA,CAAA,UAAA,CAAA,WAAA,CAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,UAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GA1BA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,YAAA,CAAA,MAAA,CAAA,UAAA,EAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,KAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,SAAA,EAAA,IAAA;AACA,SAHA;AAIA,OALA;AAMA;AARA;AA3BA,CAAA","sourcesContent":["<template>\n  <st-modal title=\"新增体态图\" v-model=\"show\" width=\"500px\">\n    <st-form :form=\"form\" labelAuto>\n      <st-form-item label=\"体态图名称\" required>\n        <a-input max=\"10\" v-decorator=\"decorators.inputLabel\" />\n      </st-form-item>\n    </st-form>\n    <template slot=\"footer\">\n      <st-button @click=\"show = false\">取消</st-button>\n      <st-button\n        @click=\"onSubmit\"\n        :loading=\"loading.addBodyLabel\"\n        type=\"primary\"\n      >\n        确定\n      </st-button>\n    </template>\n  </st-modal>\n</template>\n<script>\nimport { NewLableService } from './new-label.service'\nimport { ruleOptions } from './new-label.config'\nexport default {\n  serviceInject() {\n    return {\n      Service: NewLableService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.Service.loading$\n    }\n  },\n  components: {},\n  name: 'newLable',\n  props: {\n    selectedRowData: {\n      type: Array\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false\n    }\n  },\n  methods: {\n    onSubmit() {\n      this.form.validate().then(values => {\n        this.Service.addBodyLabel(values.inputLabel).subscribe(state => {\n          this.show = false\n          this.$emit('success', true)\n        })\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/brand/app/physical-test"}]}