{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/sell/product.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/sell/product.vue","mtime":1598250255925},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport StTotal from '@/views/biz-components/st/total/total.vue'\n\nimport { ProductService } from './product.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, totalColumns } from './product.config'\nimport moment from 'moment'\n\nexport default {\n  name: 'BrandStatSaleProduct',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      productService: ProductService\n    }\n  },\n  rxState() {\n    const {\n      list$,\n      page$,\n      total$,\n      auth$,\n      contractType$,\n      productType$,\n      updateTime$,\n      loading$\n    } = this.productService\n    return {\n      list: list$,\n      page: page$,\n      total: total$,\n      auth: auth$,\n      contractType: contractType$,\n      productType: productType$,\n      updateTime: updateTime$,\n      loading: loading$\n    }\n  },\n  bem: {\n    b: 'page-shop-stat-sale-product',\n    bHeader: 'page-brand-stat-header'\n  },\n  data() {\n    return {}\n  },\n  computed: {\n    columns,\n    totalColumns\n  },\n\n  created() {},\n\n  methods: {\n    moment,\n    refresh() {\n      return this.productService.getDataRefresh()\n    },\n    onChangeDataDays(event) {\n      this.$searchQuery.day = event.recently_day || undefined\n      this.$searchQuery.start_date = event.start_date || undefined\n      this.$searchQuery.end_date = event.end_date || undefined\n      this.onSearch()\n    }\n  },\n  components: {\n    StTotal\n  }\n}\n",null]}