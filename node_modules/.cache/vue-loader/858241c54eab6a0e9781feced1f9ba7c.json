{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/month-board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/month-board.vue","mtime":1591147717112},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\n\nexport default {\n  name: 'MonthBoard',\n  bem: {\n    basic: 'months-group-board',\n    bHeader: 'board-header',\n    boardContent: 'board-content',\n    dayContent: 'day-content',\n    popoverBox: 'popover-box',\n    addBtnContent: 'add-btn-content'\n  },\n  props: {\n    addTitle: {\n      type: String,\n      default: '新增团体课'\n    },\n    courses: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    }\n  },\n  watch: {\n    $route(val) {\n      this.init()\n    },\n    courses() {\n      this.getCoursesList()\n    }\n  },\n  data() {\n    return {\n      date: '',\n      // 星期一到星期日文字\n      weekList: moment()\n        .localeData()\n        .weekdays(),\n      // 日列表\n      dayList: []\n    }\n  },\n  created() {\n    this.init()\n    this.getCoursesList()\n  },\n  methods: {\n    onPopoverMouseEnter(day) {\n      day.popoverShow = true\n    },\n    init() {\n      this.date = this.$searchQuery.start_date\n      this.dayList = this.getCurrentMonthDayList()\n    },\n    getCurrentMonthDayList() {\n      // 当前日期的月份\n      const nowMonth = moment(this.date).month()\n      let dates = []\n      for (let i = 0; i < 42; i++) {\n        const startDate = moment(this.date).date(1)\n        startDate.startOf('week')\n        dates[i] = startDate.weekday(i - 1)\n      }\n      // 判断当前是否含有上个月7天的数据，如果有则删除\n      const startOfMonth = moment(this.date)\n        .startOf('month')\n        .format('YYYY-MM-DD')\n      const firstDay = dates.findIndex(item => {\n        return item.format('YYYY-MM-DD') === startOfMonth\n      })\n      if (firstDay > 6) {\n        dates = dates.slice(7, dates.length)\n      }\n      // 判断是否包含下个月7天的数据，如果有则删除\n      const startOfNextMonth = moment(this.date)\n        .month(moment(this.date).month() + 1)\n        .startOf('month')\n        .format('YYYY-MM-DD')\n      const nextMonthFirstDay = dates.findIndex(item => {\n        return item.format('YYYY-MM-DD') === startOfNextMonth\n      })\n      if (nextMonthFirstDay !== -1 && dates.length - nextMonthFirstDay > 6) {\n        dates = dates.slice(0, dates.length - 7)\n      }\n      return dates.map(item => {\n        return {\n          date: item.date(),\n          fullDate: item.format('YYYY-MM-DD'),\n          current: item.format('YYYY-MM-DD') === moment().format('YYYY-MM-DD'),\n          isThisMonth: item.month() === nowMonth,\n          addBtnShow: false,\n          popoverShow: false,\n          courses: []\n        }\n      })\n    },\n    onMouseMove(day, er) {\n      if (day.courses.length !== 0) {\n        day.popoverShow = true\n        return\n      }\n      this.dayList.forEach(item => {\n        item.addBtnShow = item.fullDate === day.fullDate ? true : false\n      })\n    },\n    onMouseLeave(day) {\n      day.addBtnShow = false\n    },\n    onClickAddBtn(e) {\n      this.$emit('onClickAddBtn', {\n        date: e.date,\n        fullDate: e.fullDate\n      })\n    },\n    hidePopover(e) {\n      e.popoverShow = false\n    },\n    onClickCourse(e) {\n      this.$emit('onClickCourse', {\n        ...e\n      })\n    },\n    getCoursesList() {\n      this.dayList.forEach(day => {\n        this.courses.forEach(course => {\n          if (day.fullDate === course.start_date) {\n            day.courses.push(course)\n          }\n        })\n      })\n    }\n  }\n}\n",{"version":3,"sources":["month-board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"month-board.vue","sourceRoot":"src/views/biz-components/schedule/date#","sourcesContent":["<template>\n  <div :class=\"basic()\">\n    <ul :class=\"bHeader()\">\n      <li :class=\"bHeader('item')\" v-for=\"(week, key) in weekList\" :key=\"key\">\n        {{ week }}\n      </li>\n    </ul>\n    <ul\n      :class=\"[\n        boardContent(),\n        { [boardContent('table', { small: true })]: dayList.length < 42 }\n      ]\"\n    >\n      <li\n        v-for=\"(day, key) in dayList\"\n        :key=\"key\"\n        :class=\"[\n          boardContent('day-item'),\n          { [boardContent('day-item', { current: true })]: day.current },\n          { [boardContent('day-item', { gray: true })]: !day.isThisMonth }\n        ]\"\n      >\n        <div\n          :class=\"boardContent('item-content')\"\n          @mouseover=\"onMouseMove(day)\"\n          @mouseleave=\"onMouseLeave(day)\"\n        >\n          <a-popover\n            placement=\"right\"\n            v-if=\"!day.addBtnShow\"\n            v-model=\"day.popoverShow\"\n            :class=\"boardContent('hover-content')\"\n          >\n            <!-- popover content -->\n            <span\n              slot=\"content\"\n              :class=\"popoverBox()\"\n              @mouseenter=\"onPopoverMouseEnter(day)\"\n              @click=\"hidePopover(day)\"\n            >\n              <st-button\n                :class=\"popoverBox('hover-add-btn')\"\n                type=\"default\"\n                plain\n                @click=\"onClickAddBtn(day)\"\n              >\n                <st-icon type=\"add\" size=\"12px\" color=\"#3E4D5C\"></st-icon>\n                新增排期\n              </st-button>\n              <div :class=\"popoverBox('course-list')\">\n                <div\n                  :class=\"popoverBox('list-item')\"\n                  v-for=\"course in day.courses\"\n                  :key=\"course.id\"\n                  @click=\"onClickCourse(course)\"\n                >\n                  <div\n                    :class=\"\n                      course.schedule_status <= 2\n                        ? [\n                            popoverBox('item-point'),\n                            popoverBox('item-point--active')\n                          ]\n                        : popoverBox('item-point')\n                    \"\n                  ></div>\n                  <div :class=\"popoverBox('item-text')\">\n                    {{ course.course_name }}\n                  </div>\n                </div>\n              </div>\n            </span>\n            <!-- popover element -->\n            <div\n              :class=\"dayContent()\"\n              @mouseover=\"onMouseMove(day)\"\n              @mouseleave=\"onMouseLeave(day)\"\n            >\n              <div :class=\"dayContent('popover')\">\n                <div class=\"font-number\">{{ day.date }}</div>\n                <div\n                  v-for=\"(course, key) in day.courses.slice(0, 2)\"\n                  :key=\"key\"\n                  :class=\"dayContent('course-item')\"\n                >\n                  <div\n                    :class=\"\n                      course.schedule_status <= 2\n                        ? [dayContent('point--active'), dayContent('point')]\n                        : dayContent('point')\n                    \"\n                  ></div>\n                  <div :class=\"dayContent('course-name')\">\n                    {{ course.course_name }}\n                  </div>\n                </div>\n                <div\n                  :class=\"dayContent('bottom-text')\"\n                  v-if=\"day.courses.length > 2\"\n                >\n                  还有{{ day.courses.length - 2 }}节课程\n                </div>\n              </div>\n            </div>\n          </a-popover>\n          <div\n            :class=\"addBtnContent()\"\n            @mouseover=\"onMouseMove(day)\"\n            @mouseleave=\"onMouseLeave(day)\"\n            @click=\"onClickAddBtn(day)\"\n            v-if=\"!day.courses.length && day.addBtnShow\"\n          >\n            <div :class=\"addBtnContent('add-btn')\">\n              <div class=\"mg-b8\" :class=\"addBtnContent('icon')\">\n                <st-icon type=\"add\"></st-icon>\n              </div>\n              <div :class=\"addBtnContent('text')\">{{ addTitle }}</div>\n            </div>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n<script>\nimport moment from 'moment'\n\nexport default {\n  name: 'MonthBoard',\n  bem: {\n    basic: 'months-group-board',\n    bHeader: 'board-header',\n    boardContent: 'board-content',\n    dayContent: 'day-content',\n    popoverBox: 'popover-box',\n    addBtnContent: 'add-btn-content'\n  },\n  props: {\n    addTitle: {\n      type: String,\n      default: '新增团体课'\n    },\n    courses: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    }\n  },\n  watch: {\n    $route(val) {\n      this.init()\n    },\n    courses() {\n      this.getCoursesList()\n    }\n  },\n  data() {\n    return {\n      date: '',\n      // 星期一到星期日文字\n      weekList: moment()\n        .localeData()\n        .weekdays(),\n      // 日列表\n      dayList: []\n    }\n  },\n  created() {\n    this.init()\n    this.getCoursesList()\n  },\n  methods: {\n    onPopoverMouseEnter(day) {\n      day.popoverShow = true\n    },\n    init() {\n      this.date = this.$searchQuery.start_date\n      this.dayList = this.getCurrentMonthDayList()\n    },\n    getCurrentMonthDayList() {\n      // 当前日期的月份\n      const nowMonth = moment(this.date).month()\n      let dates = []\n      for (let i = 0; i < 42; i++) {\n        const startDate = moment(this.date).date(1)\n        startDate.startOf('week')\n        dates[i] = startDate.weekday(i - 1)\n      }\n      // 判断当前是否含有上个月7天的数据，如果有则删除\n      const startOfMonth = moment(this.date)\n        .startOf('month')\n        .format('YYYY-MM-DD')\n      const firstDay = dates.findIndex(item => {\n        return item.format('YYYY-MM-DD') === startOfMonth\n      })\n      if (firstDay > 6) {\n        dates = dates.slice(7, dates.length)\n      }\n      // 判断是否包含下个月7天的数据，如果有则删除\n      const startOfNextMonth = moment(this.date)\n        .month(moment(this.date).month() + 1)\n        .startOf('month')\n        .format('YYYY-MM-DD')\n      const nextMonthFirstDay = dates.findIndex(item => {\n        return item.format('YYYY-MM-DD') === startOfNextMonth\n      })\n      if (nextMonthFirstDay !== -1 && dates.length - nextMonthFirstDay > 6) {\n        dates = dates.slice(0, dates.length - 7)\n      }\n      return dates.map(item => {\n        return {\n          date: item.date(),\n          fullDate: item.format('YYYY-MM-DD'),\n          current: item.format('YYYY-MM-DD') === moment().format('YYYY-MM-DD'),\n          isThisMonth: item.month() === nowMonth,\n          addBtnShow: false,\n          popoverShow: false,\n          courses: []\n        }\n      })\n    },\n    onMouseMove(day, er) {\n      if (day.courses.length !== 0) {\n        day.popoverShow = true\n        return\n      }\n      this.dayList.forEach(item => {\n        item.addBtnShow = item.fullDate === day.fullDate ? true : false\n      })\n    },\n    onMouseLeave(day) {\n      day.addBtnShow = false\n    },\n    onClickAddBtn(e) {\n      this.$emit('onClickAddBtn', {\n        date: e.date,\n        fullDate: e.fullDate\n      })\n    },\n    hidePopover(e) {\n      e.popoverShow = false\n    },\n    onClickCourse(e) {\n      this.$emit('onClickCourse', {\n        ...e\n      })\n    },\n    getCoursesList() {\n      this.dayList.forEach(day => {\n        this.courses.forEach(course => {\n          if (day.fullDate === course.start_date) {\n            day.courses.push(course)\n          }\n        })\n      })\n    }\n  }\n}\n</script>\n"]}]}