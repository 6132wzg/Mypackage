{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-store-data-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-store-data-line.vue","mtime":1591147717126},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport { toKFilter } from './filters'\nimport { View } from 'st-data-set'\nimport { Chart } from '@antv/g2'\nimport chartMixin from './mixin'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * 数据\n     * @example\n     * [{date:'05-28',私教预约人数:250,私教签到人数:250,团体课排课人数:20}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 343\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: () => ['amount']\n    },\n    // 使用字段提示标题\n    tooltipKey: {\n      type: String\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: () => ['#5095FC', '#6831D7', '#06DB8C', '#872333', '#98db23']\n    },\n    shadowColors: {\n      type: Array,\n      default: () => [\n        'rgba(80,149,252,.4)',\n        'rgba(104,49,215,.4)',\n        'rgba(6,219,140,.4)',\n        'rgba(135,35,51,.4)',\n        'rgba(152,219,35,.4)'\n      ]\n    },\n    unit: {\n      type: String,\n      default: '元'\n    }\n  },\n  computed: {\n    colorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.colors[idx % this.colors.length]\n        return res\n      }, {})\n    },\n    shadowColorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.shadowColors[idx % this.shadowColors.length]\n        return res\n      }, {})\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [28, 'auto', 32, 'auto'],\n        renderer: 'svg'\n      })\n\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      })\n      this.chart.scale('value', {\n        min: 0\n      })\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      })\n      this.chart\n        .line()\n        .style('name', {\n          shadowColor: name => this.shadowColorMap[name]\n          // shadowBlur: 20,\n          // shadowOffsetY: 4\n        })\n        .tooltip('name*value', (name, value) => {\n          return {\n            name: this.tooltipKey,\n            value: value + this.unit\n          }\n        })\n        .shape('smooth')\n        .size(2)\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart.render()\n    }\n  }\n}\n",{"version":3,"sources":["shop-store-data-line.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"shop-store-data-line.vue","sourceRoot":"src/views/biz-components/stat","sourcesContent":["<template>\n  <div>\n    <div class=\"shop-store-data-line\"></div>\n  </div>\n</template>\n\n<script>\nimport { toKFilter } from './filters'\nimport { View } from 'st-data-set'\nimport { Chart } from '@antv/g2'\nimport chartMixin from './mixin'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * 数据\n     * @example\n     * [{date:'05-28',私教预约人数:250,私教签到人数:250,团体课排课人数:20}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 343\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: () => ['amount']\n    },\n    // 使用字段提示标题\n    tooltipKey: {\n      type: String\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: () => ['#5095FC', '#6831D7', '#06DB8C', '#872333', '#98db23']\n    },\n    shadowColors: {\n      type: Array,\n      default: () => [\n        'rgba(80,149,252,.4)',\n        'rgba(104,49,215,.4)',\n        'rgba(6,219,140,.4)',\n        'rgba(135,35,51,.4)',\n        'rgba(152,219,35,.4)'\n      ]\n    },\n    unit: {\n      type: String,\n      default: '元'\n    }\n  },\n  computed: {\n    colorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.colors[idx % this.colors.length]\n        return res\n      }, {})\n    },\n    shadowColorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.shadowColors[idx % this.shadowColors.length]\n        return res\n      }, {})\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [28, 'auto', 32, 'auto'],\n        renderer: 'svg'\n      })\n\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      })\n      this.chart.scale('value', {\n        min: 0\n      })\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      })\n      this.chart\n        .line()\n        .style('name', {\n          shadowColor: name => this.shadowColorMap[name]\n          // shadowBlur: 20,\n          // shadowOffsetY: 4\n        })\n        .tooltip('name*value', (name, value) => {\n          return {\n            name: this.tooltipKey,\n            value: value + this.unit\n          }\n        })\n        .shape('smooth')\n        .size(2)\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"]}]}