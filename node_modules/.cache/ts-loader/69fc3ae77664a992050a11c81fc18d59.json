{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/contract/list.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/contract/list.service.ts","mtime":1591147717344},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { ContractApi } from '@/api/v1/setting/contract';\nimport { forkJoin } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { State } from 'rx-state';\nimport { AuthService } from '@/services/auth.service';\n\nvar ListService = /*#__PURE__*/function () {\n  function ListService(contractApi, authService) {\n    _classCallCheck(this, ListService);\n\n    this.contractApi = contractApi;\n    this.authService = authService;\n    this.list$ = new State([]);\n    this.auth$ = this.authService.authMap$({\n      edit: 'brand:contract:contract_tpl|edit'\n    });\n  }\n\n  _createClass(ListService, [{\n    key: \"SET_LIST\",\n    value: function SET_LIST(list) {\n      this.list$.commit(function () {\n        return list;\n      });\n    }\n  }, {\n    key: \"getList\",\n    value: function getList() {\n      var _this = this;\n\n      return this.contractApi.getList().pipe(tap(function (res) {\n        _this.SET_LIST(res.list);\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return forkJoin(this.getList());\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter() {\n      return this.init();\n    }\n  }]);\n\n  return ListService;\n}();\n\nListService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof ContractApi !== \"undefined\" && ContractApi) === \"function\" ? _a : Object, typeof (_b = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _b : Object])], ListService);\nexport { ListService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/contract/list.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAuC,iBAAvC;AACA,SAAS,WAAT,QAA4B,2BAA5B;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,KAAT,QAAsB,UAAtB;AACA,SAAS,WAAT,QAA4B,yBAA5B;;AAOA,IAAa,WAAb;AAKE,uBACU,WADV,EAEU,WAFV,EAEkC;AAAA;;AADxB,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAA,WAAA;AANV,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,QAAjB,CAA0B;AAChC,MAAA,IAAI,EAAE;AAD0B,KAA1B,CAAR;AAMI;;AARN;AAAA;AAAA,6BASW,IATX,EASsB;AAClB,WAAK,KAAL,CAAW,MAAX,CAAkB;AAAA,eAAM,IAAN;AAAA,OAAlB;AACD;AAXH;AAAA;AAAA,8BAYS;AAAA;;AACL,aAAO,KAAK,WAAL,CAAiB,OAAjB,GAA2B,IAA3B,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,KAAI,CAAC,QAAL,CAAc,GAAG,CAAC,IAAlB;AACD,OAFE,CADE,CAAP;AAKD;AAlBH;AAAA;AAAA,2BAmBM;AACF,aAAO,QAAQ,CAAC,KAAK,OAAL,EAAD,CAAf;AACD;AArBH;AAAA;AAAA,uCAsBkB;AACd,aAAO,KAAK,IAAL,EAAP;AACD;AAxBH;;AAAA;AAAA,GAAA;;AAAa,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDAMC,W,KAAW,W,IAAX,W,MAAW,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACX,WADW,KACA,WADA,IACX,WADW,MACA,UADA,GACA,EADA,GACA,M,EAPZ,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable, Controller } from 'vue-service-app'\nimport { ContractApi } from '@/api/v1/setting/contract'\nimport { forkJoin } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { State } from 'rx-state'\nimport { AuthService } from '@/services/auth.service'\n\ninterface ListState {\n  list: any[]\n}\n\n@Injectable()\nexport class ListService implements Controller {\n  list$ = new State([])\n  auth$ = this.authService.authMap$({\n    edit: 'brand:contract:contract_tpl|edit'\n  })\n  constructor(\n    private contractApi: ContractApi,\n    private authService: AuthService\n  ) {}\n  SET_LIST(list: any[]) {\n    this.list$.commit(() => list)\n  }\n  getList() {\n    return this.contractApi.getList().pipe(\n      tap(res => {\n        this.SET_LIST(res.list)\n      })\n    )\n  }\n  init() {\n    return forkJoin(this.getList())\n  }\n  beforeRouteEnter() {\n    return this.init()\n  }\n}\n"],"sourceRoot":""}]}