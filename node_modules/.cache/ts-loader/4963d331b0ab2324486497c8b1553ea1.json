{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/api/v1/venue.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/api/v1/venue.ts","mtime":1600926555474},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"../api\";\nexport var VenueApi = /*#__PURE__*/function (_Api) {\n  _inherits(VenueApi, _Api);\n\n  var _super = _createSuper(VenueApi);\n\n  function VenueApi() {\n    _classCallCheck(this, VenueApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VenueApi, [{\n    key: \"getVenueList\",\n    value: function getVenueList(query) {\n      return this.http.get(\"/v1/venues/list\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"getSiteList\",\n    value: function getSiteList(query) {\n      return this.http.get(\"/v1/venues/site\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"addVenue\",\n    value: function addVenue(params) {\n      return this.http.post(\"/v1/venues\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"getVenue\",\n    value: function getVenue(query) {\n      return this.http.get(\"/v1/venues/basic\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"editVenue\",\n    value: function editVenue(params) {\n      return this.http.put(\"/v1/venues/\".concat(params.id), {\n        params: params\n      });\n    }\n  }, {\n    key: \"delVenue\",\n    value: function delVenue(query) {\n      return this.http.put(\"/v1/venues/delete/\".concat(query.id));\n    }\n  }, {\n    key: \"switchVenue\",\n    value: function switchVenue(params) {\n      return this.http.put(\"/v1/venues/switch\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"delSites\",\n    value: function delSites(params) {\n      return this.http.post(\"/v1/venues/site/batch/delete\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"addSites\",\n    value: function addSites(params) {\n      return this.http.post(\"/v1/venues/site/batch\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"editSite\",\n    value: function editSite(params) {\n      return this.http.post(\"/v1/venues/site/edit\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"switchSite\",\n    value: function switchSite(params) {\n      return this.http.post(\"/v1/venues/site/switch\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"getSettings\",\n    value: function getSettings(query) {\n      return this.http.get(\"/v1/venues/site/settings\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"orderSettings\",\n    value: function orderSettings(params) {\n      return this.http.post(\"/v1/venues/site/order/settings\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"delSetting\",\n    value: function delSetting(query) {\n      return this.http.get(\"/v1/venues/site/settings/delete\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"addSetting\",\n    value: function addSetting(params) {\n      return this.http.post(\"/v1/venues/site/batch/settings\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"editSetting\",\n    value: function editSetting(params) {\n      return this.http.post(\"/v1/venues/site/settings/edit\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(query) {\n      return this.http.get(\"/v1/venues/site/settings/view\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"getRecord\",\n    value: function getRecord(query) {\n      return this.http.get(\"/v1/venues/reserve/list\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"getBookingList\",\n    value: function getBookingList(query) {\n      return this.http.get(\"/v1/schedule/venues/shop/reserve/list\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"calcPrice\",\n    value: function calcPrice(params) {\n      return this.http.post(\"/v1/schedule/venues/shop/reserve/price\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"createOrder\",\n    value: function createOrder(params) {\n      return this.http.post(\"/v1/schedule/venues/shop/reserve\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"cancelReserve\",\n    value: function cancelReserve(params) {\n      return this.http.put(\"/v1/venues/reserve/cancel\", {\n        params: params\n      });\n    }\n  }, {\n    key: \"getPunishList\",\n    value: function getPunishList(query) {\n      return this.http.get(\"/v1/venues/punish_list\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"punishCancel\",\n    value: function punishCancel(params) {\n      return this.http.put(\"/v1/venues/punish_cancel/\".concat(params.id), {\n        params: params\n      });\n    }\n  }]);\n\n  return VenueApi;\n}(Api);",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/api/v1/venue.ts"],"names":[],"mappings":"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","sourcesContent":["import { Api } from '../api'\nexport class VenueApi extends Api {\n  getVenueList(query?: VenueListQuery) {\n    return this.http.get(`/v1/venues/list`, { query })\n  }\n  getSiteList(query: SiteQuery) {\n    return this.http.get(`/v1/venues/site`, { query })\n  }\n  addVenue(params: VenueForm) {\n    return this.http.post(`/v1/venues`, { params })\n  }\n  getVenue(query: VenueQuery) {\n    return this.http.get(`/v1/venues/basic`, { query })\n  }\n  editVenue(params: VenueForm) {\n    return this.http.put(`/v1/venues/${params.id}`, { params })\n  }\n  delVenue(query: VenueQuery) {\n    return this.http.put(`/v1/venues/delete/${query.id}`)\n  }\n  switchVenue(params: SwitchParams) {\n    return this.http.put(`/v1/venues/switch`, { params })\n  }\n  delSites(params: SitesParams) {\n    return this.http.post(`/v1/venues/site/batch/delete`, { params })\n  }\n  addSites(params: SitesAddParams) {\n    return this.http.post(`/v1/venues/site/batch`, { params })\n  }\n  editSite(params: SiteEditParams) {\n    return this.http.post(`/v1/venues/site/edit`, { params })\n  }\n  switchSite(params: SiteSwitchParams) {\n    return this.http.post(`/v1/venues/site/switch`, {\n      params\n    })\n  }\n  getSettings(query: SettingsQuery) {\n    return this.http.get(`/v1/venues/site/settings`, { query })\n  }\n  orderSettings(params: OrderParams) {\n    return this.http.post(`/v1/venues/site/order/settings`, { params })\n  }\n  delSetting(query: SettingDelQuery) {\n    return this.http.get(`/v1/venues/site/settings/delete`, { query })\n  }\n  addSetting(params: SettingParams) {\n    return this.http.post(`/v1/venues/site/batch/settings`, { params })\n  }\n  editSetting(params: SettingParams) {\n    return this.http.post(`/v1/venues/site/settings/edit`, { params })\n  }\n  getSetting(query: SettingDelQuery) {\n    return this.http.get(`/v1/venues/site/settings/view`, { query })\n  }\n  getRecord(query: RecordQuery) {\n    return this.http.get(`/v1/venues/reserve/list`, { query })\n  }\n  getBookingList(query: BookingQuery) {\n    return this.http.get(`/v1/schedule/venues/shop/reserve/list`, {\n      query\n    })\n  }\n  calcPrice(params: PriceParams) {\n    return this.http.post(`/v1/schedule/venues/shop/reserve/price`, {\n      params\n    })\n  }\n  createOrder(params: CreateOrderParams) {\n    return this.http.post(`/v1/schedule/venues/shop/reserve`, {\n      params\n    })\n  }\n  cancelReserve(params: CancelReserveParams) {\n    return this.http.put(`/v1/venues/reserve/cancel`, { params })\n  }\n  getPunishList(query: GetPunishListParams) {\n    return this.http.get(`/v1/venues/punish_list`, {\n      query\n    })\n  }\n  punishCancel(params: PunishCancelParams) {\n    return this.http.put(`/v1/venues/punish_cancel/${params.id}`, { params })\n  }\n}\n\nexport interface RecordQuery {\n  page?: number\n  size?: number\n  keywords?: number\n}\nexport interface SiteQuery {\n  /**\n   * 页码\n   */\n  page?: number\n  /**\n   * 每页数量\n   */\n  size?: number\n  /**\n   * 场馆id\n   */\n  venues_id?: string\n}\n\nexport interface VenueForm {\n  id?: number\n  venues_name: string\n  open_time_start: string\n  open_time_end: string\n  per_time: number\n  min_reserve_num?: number\n  max_reserve_num?: number\n  price: number\n}\n\nexport interface VenueQuery {\n  id: number\n}\nexport interface SwitchParams {\n  status: number\n  id: number\n}\n\nexport interface SitesParams {\n  venues_id: number\n  site_ids: Array<number>\n}\n\nexport interface SitesAddParams {\n  venues_id: number\n  sites: Array<string>\n}\n\nexport interface SiteEditParams {\n  site_id: number\n  site_name: string\n}\n\nexport interface SiteSwitchParams {\n  site_status: number\n  site_id: number\n}\n\nexport interface SettingsQuery {\n  site_id: number\n}\n\nexport interface OrderParams {\n  site_id: number\n  settings_id: number\n}\n\nexport interface SettingDelQuery {\n  settings_id: number\n}\n\nexport interface SettingParams {\n  venues_id?: number\n  site_ids?: Array<number>\n  site_id?: number\n  settings_id?: number\n  time_limit_type: number\n  time_limit_start: string\n  time_limit_end: string\n  cyclic_type: number\n  week_day?: Array<number>\n  open_time_start: string\n  open_time_end: string\n  can_reserve: number\n  price: number\n  weight: number\n}\n\nexport interface BookingQuery {\n  venues_id: number\n  page: number\n  size: number\n  reserve_day: string\n}\n\nexport interface PriceParams {\n  venues_id: number\n  date: string\n  venues_site_time: Array<any>\n  reduce_price?: number\n}\n\nexport interface CreateOrderParams {\n  description?: string\n  venues_id: number\n  venues_name: string\n  member_id: number\n  reduce_price?: number\n  order_amount: number\n  reserve_day: string\n  venues_data: Array<any>\n}\n\nexport interface CancelReserveParams {\n  order_id?: number\n  sub_order_id?: number\n}\n\nexport interface VenueListQuery {\n  status: number\n}\nexport interface GetPunishListParams {\n  search?: string\n  current_page?: number\n  size?: number\n}\n\nexport interface PunishCancelParams {\n  id?: number\n}\n"],"sourceRoot":""}]}