{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/stat/order-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/stat/order-detail.vue","mtime":1600926555989},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { columns } from \"./order-detail.config\";\nimport tableMixin from '@/mixins/table.mixin';\nimport { OrderService } from \"./order-detail.service\";\nimport { isEqual } from 'lodash-es';\nexport default {\n  name: 'OrderDetail',\n  mixins: [tableMixin],\n  bem: {\n    b: 'modal-stat-order-detail'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      orderService: OrderService\n    };\n  },\n  rxState: function rxState() {\n    var _this$orderService = this.orderService,\n        list$ = _this$orderService.list$,\n        page$ = _this$orderService.page$,\n        auth$ = _this$orderService.auth$,\n        orderStatus$ = _this$orderService.orderStatus$,\n        productType$ = _this$orderService.productType$,\n        refundReason$ = _this$orderService.refundReason$,\n        loading$ = _this$orderService.loading$;\n    return {\n      list: list$,\n      page: page$,\n      auth: auth$,\n      orderStatus: orderStatus$,\n      productType: productType$,\n      refundReason: refundReason$,\n      loading: loading$\n    };\n  },\n  props: {\n    query: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    title: String,\n    type: String\n  },\n  data: function data() {\n    return {\n      show: false,\n      modalQuery: {\n        current_page: 1,\n        size: 10\n      }\n    };\n  },\n  // watch: {\n  //   searchQuery: {\n  //     deep: true,\n  //     handler(newVal, oldVal) {\n  //       if (isEqual(newVal, oldVal)) return\n  //       this.getList()\n  //     }\n  //   }\n  // },\n  computed: {\n    columns: columns,\n    authExport: function authExport() {\n      return this.type.includes('brand') ? this.auth.brandExport : this.auth.shopExport;\n    },\n    exportParams: function exportParams() {\n      var exportUrlMap = {\n        'brand-revenue-gather': 'brand/revenue-order',\n        'brand-revenue-product': 'brand/revenue-order',\n        'shop-revenue-gather': 'shop/revenue-order',\n        'shop-revenue-product': 'shop/revenue-order',\n        'brand-orders-gather': 'brand/order_collect_order_list_export',\n        'shop-orders-gather': 'shop/order_collect_export',\n        'brand-orders-analyse': 'brand/order_analysis_order_list_export',\n        'shop-orders-analyse': 'shop/order_analysis_order_list_export',\n        'brand-plugin-discount': '',\n        'brand-plugin-seckill': ''\n      };\n      var type = exportUrlMap[this.type] || '';\n      return {\n        type: type,\n        query: this.query\n      };\n    },\n    searchQuery: function searchQuery() {\n      return _objectSpread({}, this.query, {}, this.modalQuery);\n    }\n  },\n  methods: {\n    getList: function getList() {\n      this.orderService.getOrderList(this.searchQuery, this.type).subscribe();\n    },\n    onModalTableChange: function onModalTableChange(pagination) {\n      for (var _len = arguments.length, ret = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        ret[_key - 1] = arguments[_key];\n      }\n\n      this.modalQuery = _objectSpread({}, this.modalQuery, {}, this.getTableQuery.apply(this, [pagination].concat(ret)));\n      this.getList();\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n  }\n};",{"version":3,"sources":["order-detail.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 数据统计--营收、订单模块--订单明细 -->\n<template>\n  <st-modal\n    :class=\"b()\"\n    wrapClassName=\"modal-stat-order-detail\"\n    :title=\"title\"\n    width=\"1140px\"\n    v-model=\"show\"\n    :loading=\"loading.getOrderList\"\n    :footer=\"false\"\n  >\n    <st-table\n      :rowKey=\"(record, idx) => record.order_id || record.id || Math.random()\"\n      :scroll=\"{ x: 1600, y: 340 }\"\n      :columns=\"columns\"\n      :loading=\"loading.getOrderList\"\n      :dataSource=\"list\"\n      :pagination=\"{ simple: true }\"\n      :page=\"page\"\n      @change=\"onModalTableChange\"\n    >\n      <span slot=\"product_type\" slot-scope=\"text\">\n        {{ productType[text] }}\n      </span>\n      <span slot=\"pay_finished_time\" slot-scope=\"text\">\n        {{ text || '--' }}\n      </span>\n      <span slot=\"discount_price\" slot-scope=\"text\">\n        {{ text || '--' }}\n      </span>\n      <span slot=\"refund_price\" slot-scope=\"text\">\n        {{ text || '--' }}\n      </span>\n      <span slot=\"staff_sale_name\" slot-scope=\"text\">\n        {{ text || '--' }}\n      </span>\n      <span slot=\"order_id\" slot-scope=\"text\">\n        {{ text || '--' }}\n      </span>\n      <a-badge\n        slot=\"order_status\"\n        slot-scope=\"text, record\"\n        :status=\"record.order_status === 2 ? 'success' : 'default'\"\n        :text=\"\n          orderStatus[text] +\n            (refundReason[record.refund_reason]\n              ? `(${refundReason[record.refund_reason]})`\n              : ' ')\n        \"\n      />\n      <span slot=\"member_mobile\" slot-scope=\"text, record\">\n        {{\n          record.parent_id > 0\n            ? `${record.parent_mobile}(${record.parent_user_role})`\n            : text\n        }}\n      </span>\n    </st-table>\n    <st-button\n      style=\"position: absolute; bottom: 0; left: 0;\"\n      :disabled=\"!list.length\"\n      type=\"primary\"\n      v-if=\"authExport && exportParams.type\"\n      v-export-excel=\"exportParams\"\n    >\n      全部导出\n    </st-button>\n  </st-modal>\n</template>\n<script>\nimport { columns } from './order-detail.config'\nimport tableMixin from '@/mixins/table.mixin'\nimport { OrderService } from './order-detail.service'\nimport { isEqual } from 'lodash-es'\nexport default {\n  name: 'OrderDetail',\n  mixins: [tableMixin],\n  bem: {\n    b: 'modal-stat-order-detail'\n  },\n  serviceInject() {\n    return {\n      orderService: OrderService\n    }\n  },\n  rxState() {\n    let {\n      list$,\n      page$,\n      auth$,\n      orderStatus$,\n      productType$,\n      refundReason$,\n      loading$\n    } = this.orderService\n    return {\n      list: list$,\n      page: page$,\n      auth: auth$,\n      orderStatus: orderStatus$,\n      productType: productType$,\n      refundReason: refundReason$,\n      loading: loading$\n    }\n  },\n  props: {\n    query: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    title: String,\n    type: String\n  },\n  data() {\n    return {\n      show: false,\n      modalQuery: {\n        current_page: 1,\n        size: 10\n      }\n    }\n  },\n  // watch: {\n  //   searchQuery: {\n  //     deep: true,\n  //     handler(newVal, oldVal) {\n  //       if (isEqual(newVal, oldVal)) return\n  //       this.getList()\n  //     }\n  //   }\n  // },\n  computed: {\n    columns,\n    authExport() {\n      return this.type.includes('brand')\n        ? this.auth.brandExport\n        : this.auth.shopExport\n    },\n    exportParams() {\n      const exportUrlMap = {\n        'brand-revenue-gather': 'brand/revenue-order',\n        'brand-revenue-product': 'brand/revenue-order',\n        'shop-revenue-gather': 'shop/revenue-order',\n        'shop-revenue-product': 'shop/revenue-order',\n        'brand-orders-gather': 'brand/order_collect_order_list_export',\n        'shop-orders-gather': 'shop/order_collect_export',\n        'brand-orders-analyse': 'brand/order_analysis_order_list_export',\n        'shop-orders-analyse': 'shop/order_analysis_order_list_export',\n        'brand-plugin-discount': '',\n        'brand-plugin-seckill': ''\n      }\n      const type = exportUrlMap[this.type] || ''\n      return { type, query: this.query }\n    },\n    searchQuery() {\n      return {\n        ...this.query,\n        ...this.modalQuery\n      }\n    }\n  },\n  methods: {\n    getList() {\n      this.orderService.getOrderList(this.searchQuery, this.type).subscribe()\n    },\n    onModalTableChange(pagination, ...ret) {\n      this.modalQuery = {\n        ...this.modalQuery,\n        ...this.getTableQuery(pagination, ...ret)\n      }\n      this.getList()\n    }\n  },\n  mounted() {\n    this.getList()\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/stat"}]}