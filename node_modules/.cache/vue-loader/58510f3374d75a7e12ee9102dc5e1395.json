{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/package/add-range-package.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/package/add-range-package.vue","mtime":1597396799989},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport ReserveIsLimit from './components#/reserveIsLimit'\nimport StImageUpload from '@/views/biz-components/st/image-upload/image-upload.vue'\nimport { cloneDeep, remove, every, filter, reduce, forEach } from 'lodash-es'\nimport { AddRangePackageService } from './add-range-package.service'\nimport CourseSelectCourse from '@/views/biz-modals/course/select-course'\nexport default {\n  name: 'ShopRangePackageAdd',\n  serviceInject() {\n    return {\n      addPackageService: AddRangePackageService\n    }\n  },\n  rxState() {\n    return {\n      transferUnitList: this.addPackageService.transferUnitList$,\n      sellTypeList: this.addPackageService.sellTypeList$,\n      unitList: this.addPackageService.unitList$,\n      addLoading: this.addPackageService.loading$,\n      coachList: this.addPackageService.coachList$,\n      limitType: this.addPackageService.limitType$\n    }\n  },\n  components: {\n    StImageUpload,\n    ReserveIsLimit\n  },\n  modals: {\n    CourseSelectCourse\n  },\n  bem: {\n    add: 'page-shop-add-range-package',\n    basic: 'page-shop-add-basic-package'\n  },\n  data() {\n    return {\n      packageData: {\n        // 课程包名称\n        course_name: '',\n        // 售价\n        price: undefined,\n        // 总节数 0为不限次 1为限次\n        is_limit: 1,\n        // 是否支持团体课 0为不支持 1为支持\n        is_team: 0,\n        // 团体课总节数\n        team_times: undefined,\n        // 团体课单价\n        team_unit_price: undefined,\n        // 团体课上课范围课程id\n        team_range: [],\n        // 是否支持私教课 0为不支持 1为支持\n        is_personal: 0,\n        // 私教课总节数\n        personal_times: undefined,\n        // 私教课单价\n        personal_unit_price: undefined,\n        // 私教课上课范围课程id course_id私教课课程id coach_level私教课支持预约的教练等级\n        personal_range: [],\n        // 售卖开始时间\n        start_time: '',\n        // 售卖截止时间\n        end_time: '',\n        // 有效时间值\n        valid_time: undefined,\n        // 有效时间单位 1:天 2:月 3:年\n        valid_time_unit: 1,\n        // 允许冻结天数\n        frozen_days: undefined,\n        // 售卖方式\n        sale_mode: [2],\n        // 是否可以转让: 0 不可以 1 可以\n        is_allow_transfer: 0,\n        // 转让费率\n        transfer_rate: undefined,\n        // 转让单位 1:百分比 2:元\n        transfer_unit: 1,\n        // 封面对象\n        image: {\n          image_id: null,\n          image_key: ''\n        },\n        // 课程包介绍\n        intro: '',\n        // 备注\n        remarks: ''\n      },\n      // 课程范围是否未输入过\n      courseIsFirstInput: true,\n      // team course\n      teamCourseList: [],\n      teamCourseListIsShow: false,\n      teamIndeterminate: false,\n      teamCheckAll: false,\n      // personal course\n      personalCourseList: [],\n      personalCoachTotalList: {},\n      personalCoachListHistory: [],\n      personalAllOperationCoachList: [],\n      personalAllOperationCoachTotal: 0,\n      personalCourseListIsShow: false,\n      personalIndeterminate: false,\n      personalCheckAll: false,\n      coachAllOperationDropdownIsShow: false,\n      // 课程范围是否未配置\n      courseIsNone: false,\n      courseErrorText: '',\n      form: this.$form.createForm(this),\n      start_time: null,\n      end_time: null,\n      endOpen: false,\n      // 是否配置了用户端\n      appConfig: true,\n      // 是否未传了封面\n      imageIsNone: false,\n      imageErrorText: '',\n      fileList: [],\n      cropperModal: {},\n      reserveIsLimitOptions: [\n        { label: '不限制', value: 0 },\n        { label: '限制', value: 1 }\n      ]\n    }\n  },\n  methods: {\n    limitChange(e) {\n      console.log(e)\n      let value = e.target.value\n      this.packageData.is_limit = +value\n      if (value) {\n        this.packageData.team_times = undefined\n        this.packageData.personal_times = undefined\n        this.form.setFieldsValue({\n          team_times: undefined,\n          personal_times: undefined\n        })\n      } else {\n        this.packageData.team_times = 1\n        this.packageData.personal_times = 1\n        this.form.setFieldsValue({\n          team_times: 1,\n          personal_times: 1\n        })\n      }\n    },\n    // 保存\n    save() {\n      this.course_validator()\n      this.image_validator()\n      this.form.validateFieldsAndScroll(\n        { scroll: { offsetTop: 80 } },\n        (err, values) => {\n          if (!err && !this.courseIsNone && !this.imageIsNone) {\n            this.packageData.course_name = values.course_name\n            this.packageData.price = values.price\n            this.packageData.valid_time = values.valid_time\n            this.packageData.support_num = values.support_num\n            this.packageData.frozen_days = values.frozen_days\n            this.packageData.transfer_rate = this.packageData.is_allow_transfer\n              ? +values.transfer_rate\n              : undefined\n            this.packageData.start_time = `${this.start_time.format(\n              'YYYY-MM-DD'\n            )}`\n            // 约课限制 5.22 start\n            this.packageData.reserve_is_limit = values.reserve_is_limit\n            this.packageData.reserve_limit_day = values.reserve_limit_day\n            this.packageData.reserve_limit_times = +values.reserve_limit_times\n            // 约课限制 5.22 end\n            this.packageData.end_time = `${this.end_time.format('YYYY-MM-DD')}`\n            this.packageData.team_range = []\n            this.teamCourseList.forEach(i => {\n              this.packageData.team_range.push(i.course_id)\n            })\n            this.packageData.personal_range = []\n            this.personalCourseList.forEach(i => {\n              this.packageData.personal_range.push({\n                course_id: i.course_id,\n                coach_level: cloneDeep(i.coachGradeList)\n              })\n            })\n            this.addPackageService.add(this.packageData).subscribe(res => {\n              this.$router.push({\n                path: '/shop/product/course/manage/package/list'\n              })\n            })\n          }\n        }\n      )\n    },\n    // 保存并上架\n    onsale() {\n      this.course_validator()\n      this.image_validator()\n      this.form.validateFieldsAndScroll((err, values) => {\n        if (!err && !this.courseIsNone && !this.imageIsNone) {\n          this.packageData.course_name = values.course_name\n          this.packageData.price = values.price\n          this.packageData.valid_time = values.valid_time\n          this.packageData.support_num = values.support_num\n          this.packageData.frozen_days = values.frozen_days\n          this.packageData.transfer_rate = this.packageData.is_allow_transfer\n            ? +values.transfer_rate\n            : undefined\n          this.packageData.start_time = `${this.start_time.format(\n            'YYYY-MM-DD'\n          )}`\n          this.packageData.end_time = `${this.end_time.format('YYYY-MM-DD')}`\n          // 约课限制 5.22 start\n          this.packageData.reserve_is_limit = values.reserve_is_limit\n          this.packageData.reserve_limit_day = values.reserve_limit_day\n          this.packageData.reserve_limit_times = +values.reserve_limit_times\n          // 约课限制 5.22 end\n          this.packageData.team_range = []\n          this.teamCourseList.forEach(i => {\n            this.packageData.team_range.push(i.course_id)\n          })\n          this.packageData.personal_range = []\n          this.personalCourseList.forEach(i => {\n            this.packageData.personal_range.push({\n              course_id: i.course_id,\n              coach_level: cloneDeep(i.coachGradeList)\n            })\n          })\n          this.addPackageService\n            .addAndOnsale(this.packageData)\n            .subscribe(res => {\n              this.$router.push({\n                path: '/shop/product/course/manage/package/list'\n              })\n            })\n        }\n      })\n    },\n    // checkboxChange\n    teamCheckboxChange(e) {\n      this.packageData.is_team = +e.target.checked\n      this.courseIsFirstInput = false\n      this.teamCourseListIsShow = +e.target.checked\n    },\n    personalCheckboxChange(e) {\n      this.packageData.is_personal = +e.target.checked\n      this.courseIsFirstInput = false\n      this.personalCourseListIsShow = +e.target.checked\n    },\n    // team\n    teamCourseListShow() {\n      this.teamCourseListIsShow = !this.teamCourseListIsShow\n    },\n    // personal\n    personalCourseListShow() {\n      this.personalCourseListIsShow = !this.personalCourseListIsShow\n    },\n    // 新增课程\n    addCourse(type) {\n      let that = this\n      if (type === 'team') {\n        this.$modalRouter.push({\n          name: 'course-select-course',\n          props: {\n            type,\n            use_range: 1,\n            courses: this.teamCourseList\n          },\n          on: {\n            ok(data) {\n              data.list.forEach(i => {\n                i.courseChecked = false\n              })\n              that.teamCourseList = cloneDeep(data.list)\n            }\n          }\n        })\n      } else if (type === 'personal') {\n        this.$modalRouter.push({\n          name: 'course-select-course',\n          props: {\n            type,\n            courses: this.personalCourseList\n          },\n          on: {\n            ok(data) {\n              let coachGradeList = []\n              forEach(that.coachList, i => {\n                coachGradeList.push(i.id)\n              })\n              let total = reduce(\n                that.coachList,\n                (sum, o) => sum + o.coach_number,\n                0\n              )\n              data.list.forEach(i => {\n                i.courseChecked = false\n                i.coachGradeList = coachGradeList\n                i.coach = total\n              })\n              forEach(that.personalCoachTotalList, (value, key) => {\n                forEach(data.list, innerValue => {\n                  if (+innerValue.course_id === +key) {\n                    innerValue.coachGradeList = cloneDeep(value.list)\n                    innerValue.coach = cloneDeep(value.total)\n                  }\n                })\n                // 删除personalCoachTotalList里不存在的course_id项\n                if (!data.list.some(o => +o.course_id === +key)) {\n                  delete that.personalCoachTotalList[key]\n                }\n              })\n              that.personalCoachListHistory = []\n              // 缓存选择的教练等级\n              data.list.forEach(i => {\n                that.personalCoachListHistory.push(i.coachGradeList)\n              })\n              that.personalCourseList = cloneDeep(data.list)\n            }\n          }\n        })\n      }\n    },\n    // 移除课程\n    removeCourseItem(type, id) {\n      if (type === 'team') {\n        let arr = cloneDeep(this.teamCourseList)\n        remove(arr, o => o.course_id === id)\n        this.teamCourseList = arr\n      } else if (type === 'personal') {\n        let arr = cloneDeep(this.personalCourseList)\n        remove(arr, o => o.course_id === id)\n        this.personalCourseList = arr\n        // 移除备份选择的教练list\n        let coachList = cloneDeep(this.personalCoachTotalList)\n        delete coachList[id]\n        this.personalCoachTotalList = coachList\n      }\n    },\n    // 移除选择的课程\n    removeCourseItems(type) {\n      if (type === 'team') {\n        let arr = cloneDeep(this.teamCourseList)\n        remove(arr, o => o.courseChecked)\n        this.teamCourseList = arr\n      } else if (type === 'personal') {\n        let arr = cloneDeep(this.personalCourseList)\n        let removeList = remove(arr, o => o.courseChecked)\n        this.personalCourseList = arr\n        // 移除备份选择的教练list\n        let coachList = cloneDeep(this.personalCoachTotalList)\n        removeList.forEach(i => {\n          delete coachList[i.course_id]\n        })\n        this.personalCoachTotalList = coachList\n      }\n    },\n    // 选择课程\n    courseItemCheckedChange(e, type, index) {\n      if (type === 'team') {\n        this.teamCourseList[index].courseChecked = e.target.checked\n      } else if (type === 'personal') {\n        this.personalCourseList[index].courseChecked = e.target.checked\n      }\n    },\n    // 全选\n    checkAllChange(type) {\n      if (type === 'team') {\n        this.teamCourseList.forEach(i => {\n          i.courseChecked = !this.teamCheckAll\n        })\n      } else if (type === 'personal') {\n        this.personalCourseList.forEach(i => {\n          i.courseChecked = !this.personalCheckAll\n        })\n      }\n    },\n    // item coach checkboxGroup changeEvent\n    coachItemChange(e, id, index) {\n      if (!e.length) {\n        this.personalCourseList[\n          index\n        ].coachGradeList = this.personalCoachListHistory[index]\n        return\n      } else {\n        this.personalCoachListHistory[index] = cloneDeep(e)\n      }\n      this.personalCoachTotalList[id] = {}\n      this.personalCoachTotalList[id].list = cloneDeep(e)\n      let selectCoach = filter(this.coachList, o => e.includes(o.id))\n      let total = reduce(selectCoach, (sum, o) => sum + o.coach_number, 0)\n      this.personalCoachTotalList[id].total = total\n      // 设置教练总数\n      this.personalCourseList.forEach(i => {\n        if (i.course_id === id) {\n          i.coach = total\n        }\n      })\n    },\n    coachAllChange(e) {\n      let selectCoach = filter(this.coachList, o => e.includes(o.id))\n      this.personalAllOperationCoachTotal = reduce(\n        selectCoach,\n        (sum, o) => sum + o.coach_number,\n        0\n      )\n    },\n    coachAllOperationOk() {\n      // 批量设置\n      forEach(this.personalCourseList, value => {\n        if (value.courseChecked) {\n          value.coachGradeList = cloneDeep(this.personalAllOperationCoachList)\n          value.coach = this.personalAllOperationCoachTotal\n          this.personalCoachTotalList[value.course_id] = {}\n          this.personalCoachTotalList[value.course_id].list = cloneDeep(\n            this.personalAllOperationCoachList\n          )\n          this.personalCoachTotalList[\n            value.course_id\n          ].total = this.personalAllOperationCoachTotal\n        }\n      })\n      // 缓存选择的教练等级\n      this.personalCoachListHistory = []\n      forEach(this.personalCourseList, i => {\n        this.personalCoachListHistory.push(i.coachGradeList)\n      })\n      // 清空\n      this.personalAllOperationCoachList = []\n      this.personalAllOperationCoachTotal = 0\n      // 收起\n      this.coachAllOperationDropdownIsShow = false\n    },\n    // course validatorFn\n    course_validator() {\n      this.courseIsFirstInput = false\n      let teamIsOk = false\n      let personalIsOk = false\n      if (this.packageData.is_team) {\n        teamIsOk = this.team_total && this.teamCourseList.length\n      } else {\n        teamIsOk = true\n      }\n      if (this.packageData.is_personal) {\n        personalIsOk = this.personal_total && this.personalCourseList.length\n      } else {\n        personalIsOk = true\n      }\n      if (\n        teamIsOk &&\n        personalIsOk &&\n        !(!this.packageData.is_team && !this.packageData.is_personal)\n      ) {\n        // 校验通过\n        this.courseIsNone = false\n        this.courseErrorText = ''\n      } else {\n        // 校验未通过\n        this.courseIsNone = true\n        this.courseErrorText = '请输入上课范围'\n      }\n    },\n    // image validatorFn\n    image_validator() {\n      if (this.packageData.image.image_key !== '') {\n        // 校验通过\n        this.imageIsNone = false\n        this.imageErrorText = ''\n      } else {\n        // 校验未通过\n        this.imageIsNone = true\n        this.imageErrorText = '请上传封面'\n      }\n    },\n    // 转让\n    transfer(e) {\n      this.packageData.is_allow_transfer = +e.target.checked\n      // 重置转让费用的校验\n      this.packageData.transfer_rate = undefined\n      this.form.resetFields(['transfer_rate'])\n    },\n    fileChange(data) {\n      if (data.length) {\n        // 上传\n        this.packageData.image.image_id = data[0].image_id\n        this.packageData.image.image_key = data[0].image_key\n        this.imageIsNone = false\n        this.imageErrorText = ''\n      } else {\n        // 删除\n        this.packageData.image.image_id = null\n        this.packageData.image.image_key = ''\n        this.imageIsNone = true\n        this.imageErrorText = '请上传封面'\n      }\n    },\n    transferUnitChange() {\n      this.packageData.transfer_rate = undefined\n      this.form.setFieldsValue({\n        transfer_rate: undefined\n      })\n    },\n    // start_time validatorFn\n    start_time_validator(rule, value, callback) {\n      if (!value) {\n        // eslint-disable-next-line\n        callback('请选择开始售卖时间')\n      } else {\n        // eslint-disable-next-line\n        callback()\n      }\n    },\n    // end_time validatorFn\n    end_time_validator(rule, value, callback) {\n      if (!value) {\n        // eslint-disable-next-line\n        callback('请选择结束售卖时间')\n      } else {\n        // eslint-disable-next-line\n        callback()\n      }\n    },\n    // 售卖时间-start\n    start_time_change(data) {\n      this.start_time = cloneDeep(data)\n    },\n    handleStartOpenChange(open) {\n      if (!open) {\n        this.endOpen = true\n      }\n    },\n    disabledStartDate(startValue) {\n      const endValue = this.end_time\n      if (!endValue) {\n        // 结束时间未选择\n        return (\n          startValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      let start =\n        endValue.valueOf() >\n        moment()\n          .add(30, 'y')\n          .valueOf()\n          ? moment(endValue)\n              .subtract(30, 'y')\n              .valueOf()\n          : moment()\n              .startOf('day')\n              .valueOf()\n      return (\n        startValue.valueOf() < start ||\n        startValue.valueOf() > moment(endValue).valueOf()\n      )\n    },\n    // 售卖时间-end\n    end_time_change(data) {\n      this.end_time = cloneDeep(data)\n    },\n    handleEndOpenChange(open) {\n      this.endOpen = open\n    },\n    disabledEndDate(endValue) {\n      const startValue = this.start_time\n      if (!startValue) {\n        // 开始时间未选择\n        return (\n          endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      return (\n        endValue.valueOf() >=\n          moment(startValue)\n            .add(30, 'y')\n            .valueOf() ||\n        endValue.valueOf() < moment(startValue).valueOf() ||\n        endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n      )\n    },\n    // moment\n    moment\n  },\n  watch: {\n    teamCourseList: {\n      deep: true,\n      handler(newVal) {\n        let allSelect = false\n        let allNotSelect = false\n        allSelect = every(newVal, o => o.courseChecked)\n        allNotSelect = every(newVal, o => !o.courseChecked)\n        this.teamIndeterminate = !allSelect && !allNotSelect\n        this.teamCheckAll = newVal.length ? allSelect : false\n      }\n    },\n    personalCourseList: {\n      deep: true,\n      handler(newVal) {\n        let allSelect = false\n        let allNotSelect = false\n        allSelect = every(newVal, o => o.courseChecked)\n        allNotSelect = every(newVal, o => !o.courseChecked)\n        this.personalIndeterminate = !allSelect && !allNotSelect\n        this.personalCheckAll = newVal.length ? allSelect : false\n      }\n    }\n  },\n  computed: {\n    // 团课小计\n    team_total() {\n      if (+this.packageData.team_times && +this.packageData.team_unit_price) {\n        return (\n          (this.packageData.team_times *\n            (this.packageData.team_unit_price * 10)) /\n          10\n        )\n      } else {\n        return 0\n      }\n    },\n    // 私教小计\n    personal_total() {\n      if (\n        +this.packageData.personal_times &&\n        +this.packageData.personal_unit_price\n      ) {\n        return (\n          (this.packageData.personal_times *\n            (this.packageData.personal_unit_price * 10)) /\n          10\n        )\n      } else {\n        return 0\n      }\n    },\n    all_total() {\n      let teamTotal = this.packageData.is_team ? this.team_total : 0\n      let personalTotal = this.packageData.is_personal ? this.personal_total : 0\n      return teamTotal + personalTotal\n    }\n  }\n}\n",null]}