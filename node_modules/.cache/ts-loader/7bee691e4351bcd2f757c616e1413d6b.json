{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/list/shelves.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/list/shelves.service.ts","mtime":1591147717330},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d, _e;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { CardsApi, BrandCardShelfDownInput } from '@/api/v1/cards';\nimport { tap, map } from 'rxjs/operators';\nimport { ShopApi } from '@/api/v1/shop';\nimport { forkJoin } from 'rxjs';\nimport { AuthService } from '@/services/auth.service';\nimport { UserService } from '@/services/user.service';\n\nvar ShelvesService = /*#__PURE__*/function () {\n  function ShelvesService(cardApi, shopApi, authService, userService) {\n    _classCallCheck(this, ShelvesService);\n\n    this.cardApi = cardApi;\n    this.shopApi = shopApi;\n    this.authService = authService;\n    this.userService = userService;\n    this.shopList$ = new State([]);\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.loading$ = new State({});\n    this.auth$ = this.authService.authMap$({\n      batchDown: 'brand_shop:product:member_card|batch_down'\n    });\n    this.publishChannel$ = this.userService.getOptions$('member_card.publish_channel').pipe(map(function (options) {\n      return [{\n        value: -1,\n        label: '所有渠道'\n      }].concat(options);\n    }));\n    this.cardType$ = this.userService.getOptions$('member_card.card_type').pipe(map(function (options) {\n      return [{\n        value: -1,\n        label: '所有类型'\n      }].concat(options);\n    }));\n  }\n\n  _createClass(ShelvesService, [{\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      return this.cardApi.getCardShelfList(query, 'brand', 'member').pipe(tap(function (res) {\n        _this.page$.commit(function () {\n          return res.page;\n        });\n\n        _this.list$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }, {\n    key: \"getShopList\",\n    value: function getShopList() {\n      var _this2 = this;\n\n      return this.shopApi.getShopListForSelect().pipe(tap(function (res) {\n        _this2.shopList$.commit(function () {\n          return res.shops;\n        });\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init(query) {\n      return forkJoin(this.getList(query), this.getShopList());\n    }\n  }, {\n    key: \"setCardShelfDown\",\n    value: function setCardShelfDown(params) {\n      return this.cardApi.setBrandCardsShelfDown(params);\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to) {\n      return this.init(to.meta.query);\n    }\n  }]);\n\n  return ShelvesService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], ShelvesService.prototype, \"getShopList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof BrandCardShelfDownInput !== \"undefined\" && BrandCardShelfDownInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], ShelvesService.prototype, \"setCardShelfDown\", null);\n\nShelvesService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof CardsApi !== \"undefined\" && CardsApi) === \"function\" ? _b : Object, typeof (_c = typeof ShopApi !== \"undefined\" && ShopApi) === \"function\" ? _c : Object, typeof (_d = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _d : Object, typeof (_e = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _e : Object])], ShelvesService);\nexport { ShelvesService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/list/shelves.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SACE,QADF,EAGE,uBAHF,QAIO,gBAJP;AAKA,SAAS,GAAT,EAAc,GAAd,QAAyB,gBAAzB;AACA,SAAS,OAAT,QAAwB,eAAxB;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAS,WAAT,QAA4B,yBAA5B;;AAGA,IAAa,cAAb;AAeE,0BACU,OADV,EAEU,OAFV,EAGU,WAHV,EAIU,WAJV,EAIkC;AAAA;;AAHxB,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAA,WAAA;AAlBV,SAAA,SAAA,GAAY,IAAI,KAAJ,CAAU,EAAV,CAAZ;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,QAAjB,CAA0B;AAChC,MAAA,SAAS,EAAE;AADqB,KAA1B,CAAR;AAGA,SAAA,eAAA,GAAkB,KAAK,WAAL,CACf,WADe,CACH,6BADG,EAEf,IAFe,CAEV,GAAG,CAAC,UAAA,OAAO;AAAA,aAAI,CAAC;AAAE,QAAA,KAAK,EAAE,CAAC,CAAV;AAAa,QAAA,KAAK,EAAE;AAApB,OAAD,EAA+B,MAA/B,CAAsC,OAAtC,CAAJ;AAAA,KAAR,CAFO,CAAlB;AAGA,SAAA,SAAA,GAAY,KAAK,WAAL,CACT,WADS,CACG,uBADH,EAET,IAFS,CAEJ,GAAG,CAAC,UAAA,OAAO;AAAA,aAAI,CAAC;AAAE,QAAA,KAAK,EAAE,CAAC,CAAV;AAAa,QAAA,KAAK,EAAE;AAApB,OAAD,EAA+B,MAA/B,CAAsC,OAAtC,CAAJ;AAAA,KAAR,CAFC,CAAZ;AASI;;AApBN;AAAA;AAAA,4BAqBU,KArBV,EAqBmC;AAAA;;AAC/B,aAAO,KAAK,OAAL,CAAa,gBAAb,CAA8B,KAA9B,EAAqC,OAArC,EAA8C,QAA9C,EAAwD,IAAxD,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAHE,CADE,CAAP;AAMD;AA5BH;AAAA;AAAA,kCA8Ba;AAAA;;AACT,aAAO,KAAK,OAAL,CAAa,oBAAb,GAAoC,IAApC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,SAAL,CAAe,MAAf,CAAsB;AAAA,iBAAM,GAAG,CAAC,KAAV;AAAA,SAAtB;AACD,OAFE,CADE,CAAP;AAKD;AApCH;AAAA;AAAA,yBAqCO,KArCP,EAqCgC;AAC5B,aAAO,QAAQ,CAAC,KAAK,OAAL,CAAa,KAAb,CAAD,EAAsB,KAAK,WAAL,EAAtB,CAAf;AACD;AAvCH;AAAA;AAAA,qCAyCmB,MAzCnB,EAyCkD;AAC9C,aAAO,KAAK,OAAL,CAAa,sBAAb,CAAoC,MAApC,CAAP;AACD;AA3CH;AAAA;AAAA,+BA4Ca,EA5Cb,EA4C6B;AACzB,aAAO,KAAK,IAAL,CAAU,EAAE,CAAC,IAAH,CAAQ,KAAlB,CAAP;AACD;AA9CH;;AAAA;AAAA,GAAA;;AA8BE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,wBAAA,E,aAAA,EAMC,IAND,CAAA;;AAWA,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAyB,uB,KAAuB,W,IAAvB,uB,MAAuB,U,GAAA,E,GAAA,M,EAAhD,E,uCAAA,CAAA,E,wBAAA,E,kBAAA,EAEC,IAFD,CAAA;;AAzCW,cAAc,GAAA,UAAA,CAAA,CAD1B,UAAU,EACgB,E,qDAgBN,Q,KAAQ,W,IAAR,Q,MAAQ,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACR,OADQ,KACD,WADC,IACR,OADQ,MACD,UADC,GACD,EADC,GACD,M,EAAA,QAAA,EAAA,GAAA,OACH,WADG,KACQ,WADR,IACH,WADG,MACQ,UADR,GACQ,EADR,GACQ,M,EAAA,QAAA,EAAA,GAAA,OACX,WADW,KACA,WADA,IACX,WADW,MACA,UADA,GACA,EADA,GACA,M,EAnBT,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport {\n  CardsApi,\n  CardShelfListInput,\n  BrandCardShelfDownInput\n} from '@/api/v1/cards'\nimport { tap, map } from 'rxjs/operators'\nimport { ShopApi } from '@/api/v1/shop'\nimport { forkJoin } from 'rxjs'\nimport { AuthService } from '@/services/auth.service'\nimport { UserService } from '@/services/user.service'\n\n@Injectable()\nexport class ShelvesService implements Controller {\n  shopList$ = new State([])\n  list$ = new State([])\n  page$ = new State({})\n  loading$ = new State({})\n  auth$ = this.authService.authMap$({\n    batchDown: 'brand_shop:product:member_card|batch_down'\n  })\n  publishChannel$ = this.userService\n    .getOptions$('member_card.publish_channel')\n    .pipe(map(options => [{ value: -1, label: '所有渠道' }].concat(options)))\n  cardType$ = this.userService\n    .getOptions$('member_card.card_type')\n    .pipe(map(options => [{ value: -1, label: '所有类型' }].concat(options)))\n\n  constructor(\n    private cardApi: CardsApi,\n    private shopApi: ShopApi,\n    private authService: AuthService,\n    private userService: UserService\n  ) {}\n  getList(query: CardShelfListInput) {\n    return this.cardApi.getCardShelfList(query, 'brand', 'member').pipe(\n      tap((res: any) => {\n        this.page$.commit(() => res.page)\n        this.list$.commit(() => res.list)\n      })\n    )\n  }\n  @Effect()\n  getShopList() {\n    return this.shopApi.getShopListForSelect().pipe(\n      tap((res: any) => {\n        this.shopList$.commit(() => res.shops)\n      })\n    )\n  }\n  init(query: CardShelfListInput) {\n    return forkJoin(this.getList(query), this.getShopList())\n  }\n  @Effect()\n  setCardShelfDown(params: BrandCardShelfDownInput) {\n    return this.cardApi.setBrandCardsShelfDown(params)\n  }\n  beforeEach(to: ServiceRoute) {\n    return this.init(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}