{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/small-course/edit#/create-group-course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/small-course/edit#/create-group-course.vue","mtime":1597396799992},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { EditService } from '../edit.service'\nimport { MessageService } from '@/services/message.service'\nimport { UserService } from '@/services/user.service'\nimport { ruleOptions } from '../form.config'\nimport { PatternService } from '@/services/pattern.service'\nimport CardBgRadio from '@/views/biz-components/card-bg-radio/card-bg-radio'\nimport StEditor from '@/views/biz-components/st/editor/editor.vue'\nimport { CLASS_STATUS } from '@/constants/course/small-course'\n\nexport default {\n  name: 'create-group-course',\n  serviceInject() {\n    return {\n      editService: EditService,\n      messageService: MessageService,\n      userService: UserService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.editService.loading$,\n      rangeList: this.editService.rangeList$,\n      isAllowLeave: this.editService.isAllowLeave$\n    }\n  },\n  props: {\n    info: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  bem: {\n    b: 'create-group-course'\n  },\n  components: { CardBgRadio, StEditor },\n  computed: {\n    isDisabled() {\n      return (\n        this.CLASS_STATUS.SIGNING_UNCLASSED === this.info.info.class_status ||\n        this.CLASS_STATUS.SIGNING_CLASSED === this.info.info.class_status ||\n        this.CLASS_STATUS.CLASSED === this.info.info.class_status\n      )\n    }\n  },\n  mounted() {\n    this.isShowLimitContent = this.$route.query.type === '1'\n    this.$emit('onCourseNameChange', this.info.info.course_name)\n    this.$emit('onCourseIdChange', this.info.info.course_id)\n  },\n  data(vm) {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      bg_image: {\n        image_id: 0,\n        image_key: '',\n        image_url: '',\n        index: 1\n      },\n      isShowLeaveContent: false,\n      isShowLimitContent: false,\n      CLASS_STATUS\n    }\n  },\n  methods: {\n    onInitEditor() {\n      this.$nextTick(this.setFieldsValue())\n    },\n    setFieldsValue() {\n      const info = this.info.info\n      this.form.setFieldsValue({\n        course_name: info.course_name,\n        scope_application: info.scope_application,\n        date: info.course_begin_time\n          ? [moment(info.course_begin_time), moment(info.course_end_time)]\n          : [],\n        num_min: info.num_min,\n        num_max: info.num_max,\n        course_times: info.course_times,\n        is_leave: this.isShowLimitContent ? info.is_leave : undefined,\n        leave_hours: this.isShowLimitContent ? info.leave_hours : undefined,\n        leave_limit: this.isShowLimitContent ? info.leave_limit : undefined,\n        appointment_rights: !this.isShowLimitContent\n          ? info.appointment_rights\n          : undefined,\n        image: info.image\n      })\n      this.bg_image.index = info.img_type\n      if (info.img_type === 3) {\n        this.bg_image = info.image\n        this.bg_image.index = 0\n      }\n      this.isShowLeaveContent = this.isShowLimitContent && info.is_leave === 1\n    },\n    save(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        values.id = this.info.info.course_id\n        values.course_begin_time = values.date[0].format('YYYY-MM-DD')\n        values.course_end_time = values.date[1].format('YYYY-MM-DD')\n        values.small_course_type = this.$route.query.type\n        values.image = this.bg_image\n        values.img_type = this.bg_image.index\n        if (!this.isShowLeaveContent) {\n          delete values.leave_hours\n          delete values.leave_limit\n        }\n        if (this.bg_image.index === 0) {\n          values.img_type = 3\n          if (!this.bg_image.image_url) {\n            this.messageService.error({\n              content: '请上传图片'\n            })\n            return\n          }\n        }\n        delete values.date\n        this.editService.editGroup(values).subscribe(res => {\n          this.messageService.success({\n            content: '提交成功'\n          })\n          this.$emit('goNext', res.course_id)\n        })\n      })\n    },\n    onLimitChange(e) {\n      this.isShowLeaveContent = e.target.value === 1\n    },\n    onCourseTypeChange(category_id) {\n      this.form.setFieldsValue({\n        category_id\n      })\n    },\n    onCourseNameChange(e) {\n      this.$emit('onCourseNameChange', e.target.value)\n    },\n    disabledDate(current) {\n      return (\n        current &&\n        current.format('YYYY-MM-DD') <\n          moment()\n            .add(1, 'day')\n            .format('YYYY-MM-DD')\n      )\n    }\n  }\n}\n",null]}