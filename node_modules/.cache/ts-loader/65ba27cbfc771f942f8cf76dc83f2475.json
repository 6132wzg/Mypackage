{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/package/shop-list.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/package/shop-list.service.ts","mtime":1600926555875},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { UserService } from '@/services/user.service';\nimport { BrandPackageApi } from '@/api/v1/package/brand';\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\n\nvar ShopListService = /*#__PURE__*/function () {\n  function ShopListService(api, userService) {\n    _classCallCheck(this, ShopListService);\n\n    this.api = api;\n    this.userService = userService;\n    this.loading$ = new State({});\n    this.list$ = new State([]);\n  }\n\n  _createClass(ShopListService, [{\n    key: \"SET_LIST\",\n    value: function SET_LIST(list) {\n      var shelfStatus = this.userService.getOptions$('package_course.shelf_status').snapshot();\n      var isPermanentSale = this.userService.getEnumValue$('package_course.sale_time_is_forever').snapshot();\n      list = list.map(function (item, index) {\n        item.shelfDate = item.is_permanent_sale ? isPermanentSale[item.is_permanent_sale] : \"\".concat(item.start_time, \" ~ \").concat(item.end_time);\n        shelfStatus.forEach(function (ele) {\n          if (ele.value === item.shelf_status) {\n            item.shelfStatusName = ele.label;\n          }\n        });\n        item.id = index;\n        return item;\n      });\n      this.list$.commit(function () {\n        return list;\n      });\n    }\n  }, {\n    key: \"getShelfStatusList\",\n    value: function getShelfStatusList(id) {\n      var _this = this;\n\n      return this.api.getShelfStatusList(id).pipe(tap(function (res) {\n        _this.SET_LIST(res.list);\n      }));\n    }\n  }]);\n\n  return ShopListService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], ShopListService.prototype, \"getShelfStatusList\", null);\n\nShopListService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof BrandPackageApi !== \"undefined\" && BrandPackageApi) === \"function\" ? _a : Object, typeof (_b = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _b : Object])], ShopListService);\nexport { ShopListService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/package/shop-list.service.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAS,eAAT,QAA4C,wBAA5C;AACA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;;AAGA,IAAa,eAAb;AAGE,2BAAoB,GAApB,EAAkD,WAAlD,EAA0E;AAAA;;AAAtD,SAAA,GAAA,GAAA,GAAA;AAA8B,SAAA,WAAA,GAAA,WAAA;AAFlD,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AAC8E;;AAHhF;AAAA;AAAA,6BAIW,IAJX,EAIe;AACX,UAAI,WAAW,GAAG,KAAK,WAAL,CACf,WADe,CACH,6BADG,EAEf,QAFe,EAAlB;AAGA,UAAI,eAAe,GAAQ,KAAK,WAAL,CACxB,aADwB,CACV,qCADU,EAExB,QAFwB,EAA3B;AAGA,MAAA,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,UAAC,IAAD,EAAO,KAAP,EAAgB;AAC9B,QAAA,IAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,iBAAL,GACb,eAAe,CAAC,IAAI,CAAC,iBAAN,CADF,aAEV,IAAI,CAAC,UAFK,gBAEW,IAAI,CAAC,QAFhB,CAAjB;AAGA,QAAA,WAAW,CAAC,OAAZ,CAAoB,UAAA,GAAG,EAAG;AACxB,cAAI,GAAG,CAAC,KAAJ,KAAc,IAAI,CAAC,YAAvB,EAAqC;AACnC,YAAA,IAAI,CAAC,eAAL,GAAuB,GAAG,CAAC,KAA3B;AACD;AACF,SAJD;AAKA,QAAA,IAAI,CAAC,EAAL,GAAU,KAAV;AACA,eAAO,IAAP;AACD,OAXM,CAAP;AAYA,WAAK,KAAL,CAAW,MAAX,CAAkB;AAAA,eAAM,IAAN;AAAA,OAAlB;AACD;AAxBH;AAAA;AAAA,uCA0BqB,EA1BrB,EA0BwC;AAAA;;AACpC,aAAO,KAAK,GAAL,CAAS,kBAAT,CAA4B,EAA5B,EAAgC,IAAhC,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,KAAI,CAAC,QAAL,CAAc,GAAG,CAAC,IAAlB;AACD,OAFE,CADE,CAAP;AAKD;AAhCH;;AAAA;AAAA,GAAA;;AA0BE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,yBAAA,E,oBAAA,EAMC,IAND,CAAA;;AA1BW,eAAe,GAAA,UAAA,CAAA,CAD3B,UAAU,EACiB,E,qDAGD,e,KAAe,W,IAAf,e,MAAe,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAuB,WAAvB,KAAkC,WAAlC,IAAuB,WAAvB,MAAkC,UAAlC,GAAkC,EAAlC,GAAkC,M,EAHhD,CAAA,EAAf,eAAe,CAAf;SAAA,e","sourcesContent":["import { UserService } from '@/services/user.service'\nimport { BrandPackageApi, QueryInput } from '@/api/v1/package/brand'\nimport { Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\n\n@Injectable()\nexport class ShopListService {\n  loading$ = new State({})\n  list$ = new State([])\n  constructor(private api: BrandPackageApi, private userService: UserService) {}\n  SET_LIST(list) {\n    let shelfStatus = this.userService\n      .getOptions$('package_course.shelf_status')\n      .snapshot()\n    let isPermanentSale: any = this.userService\n      .getEnumValue$('package_course.sale_time_is_forever')\n      .snapshot()\n    list = list.map((item, index) => {\n      item.shelfDate = item.is_permanent_sale\n        ? isPermanentSale[item.is_permanent_sale]\n        : `${item.start_time} ~ ${item.end_time}`\n      shelfStatus.forEach(ele => {\n        if (ele.value === item.shelf_status) {\n          item.shelfStatusName = ele.label\n        }\n      })\n      item.id = index\n      return item\n    })\n    this.list$.commit(() => list)\n  }\n  @Effect()\n  getShelfStatusList(id: string | number) {\n    return this.api.getShelfStatusList(id).pipe(\n      tap(res => {\n        this.SET_LIST(res.list)\n      })\n    )\n  }\n}\n"],"sourceRoot":""}]}