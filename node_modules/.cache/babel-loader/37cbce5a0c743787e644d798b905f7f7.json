{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify/inform.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify/inform.vue","mtime":1601345845267},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ShopSelect from '@/views/biz-components/shop/shop-select';\nimport { columns } from \"./inform.config\";\nimport { InformService } from \"./inform.service\";\nimport { TEMPERATURE_TYPE } from '@/constants/common/notify';\nimport tableMixin from '@/mixins/table.mixin';\nexport default {\n  name: 'NotifyInform',\n  mixins: [tableMixin],\n  bem: {\n    b: 'page-notify-inform'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      service: InformService\n    };\n  },\n  watch: {\n    // 当一级类型变化则二级分类重置\n    '$searchQuery.notify_type': function $searchQueryNotify_type(oldValue, newValue) {\n      if (oldValue !== newValue) {\n        this.$searchQuery.sub_notify_type = -1;\n      }\n    }\n  },\n  components: {\n    ShopSelect: ShopSelect\n  },\n  rxState: function rxState() {\n    var _this$service = this.service,\n        list$ = _this$service.list$,\n        page$ = _this$service.page$,\n        loading$ = _this$service.loading$,\n        informTypeOptions$ = _this$service.informTypeOptions$;\n    return {\n      list$: list$,\n      page$: page$,\n      loading$: loading$,\n      informTypeOptions$: informTypeOptions$\n    };\n  },\n  data: function data() {\n    return {\n      date: null,\n      TEMPERATURE_TYPE: TEMPERATURE_TYPE\n    };\n  },\n  computed: {\n    columns: columns,\n    routerNameSet: function routerNameSet() {\n      return {\n        'shop-reception-entrance': [1, 2],\n        'shop-reception-reserve': [3, 4, 5],\n        'shop-finance-order-list': [6, 7, 8, 9],\n        'shop-member-list-studio': [10, 11, 12, 13, 14, 15, 16]\n      };\n    },\n    noticeTypeLevel1Options: function noticeTypeLevel1Options() {\n      return this.informTypeOptions$.map(function (item) {\n        return {\n          label: item.name,\n          value: item.id\n        };\n      });\n    },\n    noticeTypeLevel2Options: function noticeTypeLevel2Options() {\n      var options = [];\n\n      var _iterator = _createForOfIteratorHelper(this.informTypeOptions$),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          if (item.id === this.$searchQuery.notify_type) {\n            options = [{\n              label: '全部',\n              value: -1\n            }].concat(_toConsumableArray(item.children.map(function (item) {\n              return {\n                label: item.name,\n                value: item.id\n              };\n            })));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return options;\n    }\n  },\n  methods: {\n    contentText: function contentText(record) {\n      var notifyType = this.$searchQuery.notify_type;\n      return notifyType === 3 ? \"<div class=\\\"page-notify-inform__content\\\"><img src='\".concat(record.image_url, \"'><span>\").concat(record.content, \"</span></div>\") : record.content;\n    },\n    onClickDetail: function onClickDetail(record) {\n      console.log(record);\n\n      for (var key in this.routerNameSet) {\n        console.log(key);\n        console.log(this.routerNameSet[key].includes(record.sub_notify_type.key));\n        console.log('this.routerNameSet[key]', this.routerNameSet[key]);\n\n        if (this.routerNameSet[key].includes(record.sub_notify_type.key)) {\n          this.$router.push({\n            name: key\n          });\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["inform.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <st-search-panel @search=\"onSearch\" @reset=\"onSearchReset\">\n      <st-search-panel-item label=\"通知类型：\">\n        <st-search-radio\n          v-model=\"$searchQuery.notify_type\"\n          :options=\"noticeTypeLevel1Options\"\n        />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"二级分类：\">\n        <st-search-radio\n          v-model=\"$searchQuery.sub_notify_type\"\n          :options=\"noticeTypeLevel2Options\"\n        />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"通知门店：\">\n        <shop-select\n          class=\"mg-r8\"\n          style=\"width: 160px\"\n          :defaultValue=\"-1\"\n          v-model=\"$searchQuery.shop_id\"\n        ></shop-select>\n      </st-search-panel-item>\n    </st-search-panel>\n\n    <st-table\n      class=\"pd-24\"\n      @change=\"onTableChange\"\n      rowKey=\"id\"\n      :columns=\"columns\"\n      :dataSource=\"list$\"\n      :loading=\"loading$.getList\"\n      :page=\"page$\"\n    >\n      <template slot=\"notify_type\" slot-scope=\"text, record\">\n        {{ record.notify_type.name }}\n      </template>\n      <template slot=\"sub_notify_type\" slot-scope=\"text, record\">\n        {{ record.sub_notify_type.name }}\n      </template>\n      <template slot=\"content\" slot-scope=\"text, record\">\n        <st-overflow-text maxWidth=\"450px\" :value=\"contentText(record)\">\n          <span v-html=\"text\"></span>\n          <div\n            v-if=\"record.content_detail\"\n            class=\"page-inform-table-member\"\n            slot=\"content\"\n          >\n            <div class=\"page-inform-table__member-img\">\n              <img :src=\"record.image_url\" alt=\"会员图片\" />\n            </div>\n\n            <div class=\"page-inform-table__member-info\">\n              <div class=\"content\">\n                <st-t3>\n                  {{\n                    `${record.content_detail.member_name}(${record.content_detail.level_name})`\n                  }}\n                </st-t3>\n\n                <div class=\"pass\">\n                  <span>{{ record.content_detail.entrance_time }}</span>\n                  使用\n                  <span>{{ record.content_detail.proof_name }}</span>\n                  通过\n                  <span>{{ record.content_detail.hardware_name }}</span>\n                  进入\n                  <span>{{ record.content_detail.area_name }}</span>\n                </div>\n                <div class=\"tip\">\n                  <span>上次入场：</span>\n                  <span>{{ record.content_detail.last_entrance_time }}</span>\n                  <span>跟进会籍：</span>\n                  <span>{{ record.content_detail.sale_name }}</span>\n                  <span>跟进{{ $c('coach') }}：</span>\n                  <span>{{ record.content_detail.coach_name }}</span>\n                </div>\n              </div>\n              <div\n                v-if=\"\n                  record.content_detail.temperature_type_value !==\n                    TEMPERATURE_TYPE.NOTHING\n                \"\n                class=\"page-inform-table__member-temperature-tag\"\n              >\n                <a-tag\n                  :color=\"\n                    record.content_detail.temperature_type_value ===\n                    TEMPERATURE_TYPE.SAFETY\n                      ? '#23D9AD'\n                      : '#FF4B2B'\n                  \"\n                >\n                  {{ record.content_detail.temperature_type_text }}\n                  {{ record.content_detail.temperature }}\n                </a-tag>\n              </div>\n            </div>\n          </div>\n        </st-overflow-text>\n      </template>\n      <template slot=\"actions\" slot-scope=\"text, record\">\n        <st-table-actions>\n          <a @click=\"onClickDetail(record)\">\n            查看\n          </a>\n        </st-table-actions>\n      </template>\n    </st-table>\n  </div>\n</template>\n\n<script>\nimport ShopSelect from '@/views/biz-components/shop/shop-select'\nimport { columns } from './inform.config'\nimport { InformService } from './inform.service'\nimport { TEMPERATURE_TYPE } from '@/constants/common/notify'\nimport tableMixin from '@/mixins/table.mixin'\n\nexport default {\n  name: 'NotifyInform',\n  mixins: [tableMixin],\n  bem: {\n    b: 'page-notify-inform'\n  },\n  serviceInject() {\n    return {\n      service: InformService\n    }\n  },\n  watch: {\n    // 当一级类型变化则二级分类重置\n    '$searchQuery.notify_type'(oldValue, newValue) {\n      if (oldValue !== newValue) {\n        this.$searchQuery.sub_notify_type = -1\n      }\n    }\n  },\n  components: {\n    ShopSelect\n  },\n  rxState() {\n    const { list$, page$, loading$, informTypeOptions$ } = this.service\n    return { list$, page$, loading$, informTypeOptions$ }\n  },\n  data() {\n    return {\n      date: null,\n      TEMPERATURE_TYPE\n    }\n  },\n  computed: {\n    columns,\n    routerNameSet() {\n      return {\n        'shop-reception-entrance': [1, 2],\n        'shop-reception-reserve': [3, 4, 5],\n        'shop-finance-order-list': [6, 7, 8, 9],\n        'shop-member-list-studio': [10, 11, 12, 13, 14, 15, 16]\n      }\n    },\n    noticeTypeLevel1Options() {\n      return this.informTypeOptions$.map(item => {\n        return {\n          label: item.name,\n          value: item.id\n        }\n      })\n    },\n    noticeTypeLevel2Options() {\n      let options = []\n      for (let item of this.informTypeOptions$) {\n        if (item.id === this.$searchQuery.notify_type) {\n          options = [\n            { label: '全部', value: -1 },\n            ...item.children.map(item => {\n              return {\n                label: item.name,\n                value: item.id\n              }\n            })\n          ]\n        }\n      }\n      return options\n    }\n  },\n  methods: {\n    contentText(record) {\n      const notifyType = this.$searchQuery.notify_type\n      return notifyType === 3\n        ? `<div class=\"page-notify-inform__content\"><img src='${record.image_url}'><span>${record.content}</span></div>`\n        : record.content\n    },\n    onClickDetail(record) {\n      console.log(record)\n      for (let key in this.routerNameSet) {\n        console.log(key)\n        console.log(\n          this.routerNameSet[key].includes(record.sub_notify_type.key)\n        )\n        console.log('this.routerNameSet[key]', this.routerNameSet[key])\n        if (this.routerNameSet[key].includes(record.sub_notify_type.key)) {\n          this.$router.push({ name: key })\n        }\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/pages/common/notify"}]}