{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/package/onSales.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/package/onSales.vue","mtime":1600926555868},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { OnSalesService } from './on-sales.service'\nimport { ruleOptions } from './onSales.config'\nexport default {\n  name: 'ModalPackageOnSale',\n  bem: {\n    bModal: 'modal-package-on-sale'\n  },\n  serviceInject() {\n    return {\n      service: OnSalesService\n    }\n  },\n  serviceProviders() {\n    return [OnSalesService]\n  },\n  rxState() {\n    const { info$, loading$ } = this.service\n    return { info$, loading$ }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      sale_start_time: '',\n      sale_end_time: ''\n    }\n  },\n  props: {\n    id: {\n      type: [String, Number]\n    },\n    channel: {\n      type: String\n    },\n    pageType: [String]\n  },\n  computed: {\n    saleDate() {\n      return `${moment(this.sale_start_time).format('YYYY-MM-DD')} ~ ${moment(\n        this.sale_end_time\n      ).format('YYYY-MM-DD')}`\n    }\n  },\n  methods: {\n    onOnsale() {\n      this.form.validate().then(values => {\n        let { id, channel, pageType, sale_start_time, sale_end_time } = this\n        let form = { id }\n        if (channel === 'shop') {\n          form = {\n            ...form,\n            sale_start_time,\n            sale_end_time\n          }\n        }\n        this.service.setUpShelf({ ...form, pageType }).subscribe(res => {\n          this.$emit('success')\n          this.show = false\n        })\n      })\n    },\n    onSaleDate(value) {\n      this.sale_start_time = moment(value[0]).format('YYYY-MM-DD')\n      this.sale_end_time = moment(value[1]).format('YYYY-MM-DD')\n    }\n  },\n  created() {\n    const { id, pageType } = this\n    this.service.getUpShelfInfo({ id, pageType }).subscribe(res => {\n      this.$nextTick().then(() => {\n        this.form.setFieldsValue({\n          sale_date: [res.info.sale_start_time, res.info.sale_end_time]\n        })\n        this.sale_start_time = moment(res.info.sale_start_time).format(\n          'YYYY-MM-DD'\n        )\n        this.sale_end_time = moment(res.info.sale_end_time).format('YYYY-MM-DD')\n      })\n    })\n  }\n}\n",{"version":3,"sources":["onSales.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"onSales.vue","sourceRoot":"src/views/biz-modals/package","sourcesContent":["<template>\n  <st-modal\n    title=\"上架课程包\"\n    okText=\"确认上架\"\n    @ok=\"onOnsale\"\n    :confirmLoading=\"loading$.getUpShelfInfo\"\n    wrapClassName=\"modal-shop-product-course-package\"\n    v-model=\"show\"\n  >\n    <st-form :form=\"form\">\n      <st-form-item label=\"课程包名称\" labelWidth=\"128px\">\n        {{ info$.course_name }}\n      </st-form-item>\n      <st-form-item\n        v-if=\"pageType === 'brand'\"\n        label=\"当前上架门店\"\n        labelWidth=\"128px\"\n      >\n        {{ info$.upshelf_shop_num }}\n      </st-form-item>\n      <st-form-item\n        v-if=\"pageType === 'brand'\"\n        label=\"支持售卖门店数\"\n        labelWidth=\"128px\"\n      >\n        {{ info$.support_shop_num }}\n      </st-form-item>\n      <st-form-item label=\"支持售卖时间\" labelWidth=\"128px\" required>\n        <div v-if=\"info$.is_permanent_sale\">永久售卖</div>\n        <div v-else>\n          <!-- <st-range-picker\n            v-show=\"channel === 'shop'\"\n            v-decorator=\"decorators.sale_date\"\n            :disabledDays=\"180\"\n            disabled\n            @change=\"onSaleDate\"\n          /> -->\n          <span>{{ saleDate }}</span>\n        </div>\n      </st-form-item>\n    </st-form>\n  </st-modal>\n</template>\n<script>\nimport { OnSalesService } from './on-sales.service'\nimport { ruleOptions } from './onSales.config'\nexport default {\n  name: 'ModalPackageOnSale',\n  bem: {\n    bModal: 'modal-package-on-sale'\n  },\n  serviceInject() {\n    return {\n      service: OnSalesService\n    }\n  },\n  serviceProviders() {\n    return [OnSalesService]\n  },\n  rxState() {\n    const { info$, loading$ } = this.service\n    return { info$, loading$ }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      sale_start_time: '',\n      sale_end_time: ''\n    }\n  },\n  props: {\n    id: {\n      type: [String, Number]\n    },\n    channel: {\n      type: String\n    },\n    pageType: [String]\n  },\n  computed: {\n    saleDate() {\n      return `${moment(this.sale_start_time).format('YYYY-MM-DD')} ~ ${moment(\n        this.sale_end_time\n      ).format('YYYY-MM-DD')}`\n    }\n  },\n  methods: {\n    onOnsale() {\n      this.form.validate().then(values => {\n        let { id, channel, pageType, sale_start_time, sale_end_time } = this\n        let form = { id }\n        if (channel === 'shop') {\n          form = {\n            ...form,\n            sale_start_time,\n            sale_end_time\n          }\n        }\n        this.service.setUpShelf({ ...form, pageType }).subscribe(res => {\n          this.$emit('success')\n          this.show = false\n        })\n      })\n    },\n    onSaleDate(value) {\n      this.sale_start_time = moment(value[0]).format('YYYY-MM-DD')\n      this.sale_end_time = moment(value[1]).format('YYYY-MM-DD')\n    }\n  },\n  created() {\n    const { id, pageType } = this\n    this.service.getUpShelfInfo({ id, pageType }).subscribe(res => {\n      this.$nextTick().then(() => {\n        this.form.setFieldsValue({\n          sale_date: [res.info.sale_start_time, res.info.sale_end_time]\n        })\n        this.sale_start_time = moment(res.info.sale_start_time).format(\n          'YYYY-MM-DD'\n        )\n        this.sale_end_time = moment(res.info.sale_end_time).format('YYYY-MM-DD')\n      })\n    })\n  }\n}\n</script>\n"]}]}