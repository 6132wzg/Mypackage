{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/cabinet/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/cabinet/list.vue","mtime":1601345845213},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ListService } from './list.service'\nimport { MessageService } from '@/services/message.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { CABINET, CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet'\nimport { Temporarycolumns, LongTermcolumns, Recordcolumns } from './list.config'\nimport StStatus from '@/views/biz-components/status/status'\nimport ShopCabinetEditPrice from '@/views/biz-modals/shop/cabinet/edit-price'\nimport ShopCabinetAddLongTerm from '@/views/biz-modals/shop/cabinet/add-long-term'\nimport ShopCabinetAddTemporary from '@/views/biz-modals/shop/cabinet/add-temporary'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nimport ShopCabinetUseRecord from '@/views/biz-modals/shop/cabinet/use-record'\nimport ShopCabinetEditStatus from '@/views/biz-modals/shop/cabinet/edit-status'\nimport ShopCabinetOpen from '@/views/biz-modals/shop/cabinet/open'\nimport ShopCabinetBatch from '@/views/biz-modals/shop/cabinet/batch'\nexport default {\n  bem: {\n    b: 'st-cabinet-list',\n    bBattrey: 'st-cabinet-list-battery-status'\n  },\n  mixins: [tableMixin],\n  components: { StStatus },\n  modals: {\n    ShopCabinetEditPrice,\n    ShopCabinetAddLongTerm,\n    ShopCabinetAddTemporary,\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary,\n    ShopCabinetEditStatus,\n    ShopCabinetUseRecord,\n    ShopCabinetOpen,\n    ShopCabinetBatch\n  },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: ListService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      auth: cabinetService.auth$,\n      cabinetTypeOption: cabinetService.cabinetTypeOption$,\n      cabinetBusinessOption: cabinetService.cabinetBusinessOption$,\n      actionTypeOption: cabinetService.actionTypeOption$\n    }\n  },\n  props: {\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    list: {\n      type: Array,\n      default: () => []\n    },\n    page: {\n      type: Object,\n      default: () => {}\n    },\n    areaName: {\n      type: String,\n      default: ''\n    },\n    channel: {\n      type: String,\n      default: 'use'\n    }\n  },\n  data() {\n    return { CABINET_BUSINESS_TYPE }\n  },\n  computed: {\n    Temporarycolumns,\n    LongTermcolumns,\n    Recordcolumns,\n    columns() {\n      const Map = {\n        temporary: this.Temporarycolumns,\n        'long-term': this.LongTermcolumns,\n        record: this.Recordcolumns\n      }\n      return Map[this.type]\n    },\n    type() {\n      return this.$searchQuery.type || 'temporary'\n    }\n  },\n  methods: {\n    onDateOk(date, str) {\n      this.$searchQuery.date_start = date[0].format('YYYY-MM-DD HH:mm')\n      this.$searchQuery.date_end = date[1].format('YYYY-MM-DD HH:mm')\n      this.refresh()\n    },\n    disabledDate(current) {\n      if (!current) return false\n      return (\n        moment().subtract(6, 'M') > current || moment().add(6, 'M') < current\n      )\n    },\n    refresh() {\n      this.onSelectionReset()\n      this.$emit('refresh')\n    },\n    /**\n     * 批量新增储物柜\n     */\n    onCabinetBatchAdd() {\n      const { id, type } = this.$searchQuery\n      const areaName = this.areaName\n      if (!+id) {\n        this.messageService.error({\n          content: '请先新增区域'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: `shop-cabinet-add-${type}`,\n        props: {\n          id,\n          type,\n          areaName\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量删除储物柜\n     */\n    onCabinetBatchDel() {\n      // 判断是否有智能柜\n      const flagText = this.onGetCabinetType()\n      if (flagText === 'smart') {\n        this.$error({\n          title: '当前选中柜子有智能储物柜，若需删除，请联系三体工作人员',\n          okText: '知道了'\n        })\n        return\n      }\n      // 判断是否有使用中的柜子\n      if (flagText === 'using') {\n        this.$error({\n          title: '选择的储物柜正在使用中，无法删除',\n          okText: '知道了'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: 'shop-cabinet-batch',\n        props: {\n          title: '批量删除储物柜',\n          ids: this.selectedRowKeys,\n          total: this.page.total_counts,\n          useType: 'del',\n          searchQuery: {\n            cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n            cabinet_area_id: this.$searchQuery.id,\n            keywords: this.$searchQuery.keywords,\n            battery: this.$searchQuery.battery,\n            cabinet_business_type: this.$searchQuery.cabinet_business_type\n          }\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量清柜\n     */\n    onCabinetBatchClean() {\n      let OfflineCabinetNum = this.getSmartOfflineNum()\n      if (OfflineCabinetNum > 0) {\n        this.messageService.error({\n          content: '已离线的储物柜无法清柜，请重新选择'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: 'shop-cabinet-batch',\n        props: {\n          title: '批量清柜',\n          ids: this.selectedRowKeys,\n          total: this.page.total_counts,\n          useType: 'clear',\n          searchQuery: {\n            cabinet_area_id: this.$searchQuery.id,\n            cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n            keywords: this.$searchQuery.keywords,\n            battery: this.$searchQuery.battery,\n            cabinet_business_type: this.$searchQuery.cabinet_business_type\n          }\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量改价\n     */\n    onCabinetBatchChangePrice() {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-price',\n        props: {\n          ids: this.selectedRowKeys,\n          cabinet_area_id: this.$searchQuery.id,\n          keywords: this.$searchQuery.keywords,\n          battery: this.$searchQuery.battery,\n          cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n          cabinet_business_type: this.$searchQuery.cabinet_business_type,\n          total: this.page.total_counts\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 开启储物柜\n     */\n    onCabinetOpen(cabinet) {\n      // 选择的柜子中有维修状态的智能柜\n      this.$modalRouter.push({\n        name: 'shop-cabinet-open',\n        props: {\n          id: cabinet.id,\n          userName: cabinet.user_name,\n          userMobile: cabinet.mobile\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 修改储物柜信息\n     */\n    onCabinetEditInfo(id) {\n      this.$modalRouter.push({\n        name: `shop-cabinet-edit-${this.$searchQuery.type}`,\n        props: {\n          id,\n          areaName: this.areaName\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 修改储物柜状态\n     */\n    onCabinetEditStatus(record) {\n      let cabinet = this.getCabinetUsingItem(record)\n      let id = cabinet.id\n      let useStatus = cabinet.cabinet_business_type\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-status',\n        props: {\n          id,\n          useStatus\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 查看储物柜使用记录\n     */\n    onCabinetShowRecord(cabinet_id) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-use-record',\n        props: {\n          cabinet_id\n        }\n      })\n    },\n    /**\n     * 获取储物柜类型\n     */\n    onGetCabinetType() {\n      const type = this.$searchQuery.type\n      for (let i = 0; i < this.selectedRows.length; i++) {\n        const temp = this.selectedRows[i]\n        if (temp.is_smart) {\n          return 'smart'\n        }\n        // 使用中的柜子无法删除\n        if (type === 'long-term' && temp.sale_status === 1) {\n          return 'using'\n        }\n        // 损坏的柜子无法删除\n        if (type === 'temporary' && temp.cabinet_business_type === 2) {\n          return 'using'\n        }\n      }\n      return 'none'\n    },\n    /**\n     * 获取选中储物柜中离线的数量\n     */\n    getSmartOfflineNum() {\n      const checkedOfflineCabinets = this.selectedRows.filter(\n        item => item.is_smart && !item.is_online\n      )\n      return checkedOfflineCabinets.length\n    },\n    /**\n     * 获取选中储物柜中已使用的数量\n     */\n    getUsingCabinetNum() {\n      const checkedUsingCabinets = this.selectedRows.filter(\n        item => item.cabinet_business_type === this.CABINET_BUSINESS_TYPE.USING\n      )\n      return checkedUsingCabinets.length\n    },\n    /**\n     * 获取选中储物柜中已使用的数量\n     */\n    getSmartCabinetNum() {\n      const checkedSmartCabinets = this.selectRows.filter(item => item.is_smart)\n      return checkedSmartCabinets.length\n    },\n    getCabinetUsingItem(item) {\n      if (this.type === 'long-term' && item.sale_status === 1) {\n        item.cabinet_business_type = 2\n      }\n      return item\n    }\n  }\n}\n",{"version":3,"sources":["list.vue"],"names":[],"mappingsfile":"list.vue","sourceRoot":"src/views/biz-components/shop/cabinet","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div :class=\"b('actions')\">\n      <div :class=\"b('actions-left')\">\n        <st-button\n          v-if=\"auth.batchAdd && type !== 'record' && channel === 'manage'\"\n          type=\"primary\"\n          class=\"mg-r8\"\n          @click=\"onCabinetBatchAdd\"\n        >\n          批量新增\n        </st-button>\n        <st-button\n          v-if=\"auth.batchDel && type !== 'record' && channel === 'manage'\"\n          class=\"mg-r8\"\n          @click=\"onCabinetBatchDel\"\n          :disabled=\"isSelectedDisabled\"\n          :loading=\"loading.del\"\n        >\n          批量删除\n        </st-button>\n        <st-button\n          v-if=\"type === 'temporary' && channel === 'use'\"\n          class=\"mg-r8\"\n          type=\"primary\"\n          @click=\"onCabinetBatchClean\"\n          :disabled=\"isSelectedDisabled\"\n          :loading=\"loading.del\"\n        >\n          批量清柜\n        </st-button>\n        <st-button\n          v-if=\"type === 'long-term' && auth.batchPrice && channel === 'manage'\"\n          class=\"mg-r8\"\n          :disabled=\"isSelectedDisabled\"\n          @click=\"onCabinetBatchChangePrice\"\n        >\n          批量改价\n        </st-button>\n      </div>\n      <div :class=\"b('actions-right')\" v-if=\"type !== 'record'\">\n        <a-select\n          class=\"mg-r8\"\n          v-model=\"$searchQuery.battery\"\n          style=\"width: 140px\"\n          @change=\"refresh\"\n        >\n          <a-select-option value=\"all\">\n            全部电量\n          </a-select-option>\n          <a-select-option value=\"low\">\n            低电量\n          </a-select-option>\n        </a-select>\n        <a-select\n          v-model=\"$searchQuery.cabinet_business_type\"\n          style=\"width: 140px\"\n          @change=\"refresh\"\n        >\n          <a-select-option\n            v-for=\"(item, index) in cabinetBusinessOption\"\n            :key=\"index\"\n            :value=\"item.value\"\n          >\n            {{ item.label }}\n          </a-select-option>\n        </a-select>\n      </div>\n      <div :class=\"b('actions-right')\" v-else>\n        <a-range-picker\n          :disabledDate=\"disabledDate\"\n          class=\"mg-r8\"\n          format=\"YYYY-MM-DD HH:mm\"\n          :showTime=\"{ formate: 'HH:mm' }\"\n          @ok=\"onDateOk\"\n        ></a-range-picker>\n        <a-select\n          v-model=\"$searchQuery.cabinet_type\"\n          style=\"width: 140px\"\n          class=\"mg-r8\"\n          @change=\"refresh\"\n        >\n          <a-select-option\n            v-for=\"(item, index) in cabinetTypeOption\"\n            :key=\"index\"\n            :value=\"item.value\"\n          >\n            {{ item.label }}\n          </a-select-option>\n        </a-select>\n        <a-select\n          v-model=\"$searchQuery.action_type\"\n          style=\"width: 140px\"\n          class=\"mg-r8\"\n          @change=\"refresh\"\n        >\n          <a-select-option\n            v-for=\"(item, index) in actionTypeOption\"\n            :key=\"index\"\n            :value=\"item.value\"\n          >\n            {{ item.label }}\n          </a-select-option>\n        </a-select>\n      </div>\n    </div>\n    <div :class=\"b('list')\" v-if=\"type !== 'record'\">\n      <st-table\n        rowKey=\"id\"\n        :loading=\"loading\"\n        :alertSelection=\"{ onReset: onSelectionReset }\"\n        :rowSelection=\"{\n          fixed: true,\n          selectedRowKeys: selectedRowKeys,\n          onChange: onSelectionChange\n        }\"\n        :dataSource=\"list\"\n        :page=\"page\"\n        :columns=\"columns\"\n        :scroll=\"{ x: 1200 }\"\n        @change=\"onTableChange\"\n      >\n        <template slot=\"is_smart\" slot-scope=\"text\">\n          {{ text === 1 ? '是' : '否' }}\n        </template>\n        <template slot=\"battery\" slot-scope=\"text, record\">\n          <span\n            :class=\"bBattrey({ active: !record.battery.status })\"\n            v-if=\"record.is_smart\"\n          >\n            {{ record.battery.status ? '正常' : '低电压' }}({{\n              record.battery.value\n            }})\n          </span>\n          <span v-else>--</span>\n        </template>\n        <template slot=\"price\" slot-scope=\"text, record\">\n          {{ record.price_num }}\n        </template>\n        <template slot=\"cabinet_business_type\" slot-scope=\"text\">\n          <st-status :type=\"text\"></st-status>\n        </template>\n        <div slot=\"action\" slot-scope=\"text, record\">\n          <st-table-actions>\n            <a\n              @click=\"onCabinetEditInfo(record.id)\"\n              v-if=\"auth.edit && channel === 'manage'\"\n            >\n              编辑\n            </a>\n            <a\n              @click=\"onCabinetEditStatus(record)\"\n              v-if=\"auth.edit && channel === 'use'\"\n            >\n              编辑\n            </a>\n            <a @click=\"onCabinetShowRecord(record.id)\" v-if=\"channel === 'use'\">\n              使用记录\n            </a>\n            <a @click=\"onCabinetOpen(record)\" v-if=\"channel === 'use'\">\n              远程开柜\n            </a>\n          </st-table-actions>\n        </div>\n      </st-table>\n    </div>\n    <div :class=\"b('list')\" v-else>\n      <st-table\n        rowKey=\"id\"\n        :loading=\"loading\"\n        :dataSource=\"list\"\n        :columns=\"columns\"\n        :scroll=\"{ x: 1200 }\"\n        @change=\"onTableChange\"\n        :page=\"page\"\n      >\n        <template slot=\"cabinet_type\" slot-scope=\"text\">\n          {{ text | enumFilter('cabinet.cabinet_type') }}\n        </template>\n        <template slot=\"action_type\" slot-scope=\"text\">\n          {{ text | enumFilter('cabinet.action_type') }}\n        </template>\n      </st-table>\n    </div>\n  </div>\n</template>\n<script>\nimport { ListService } from './list.service'\nimport { MessageService } from '@/services/message.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { CABINET, CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet'\nimport { Temporarycolumns, LongTermcolumns, Recordcolumns } from './list.config'\nimport StStatus from '@/views/biz-components/status/status'\nimport ShopCabinetEditPrice from '@/views/biz-modals/shop/cabinet/edit-price'\nimport ShopCabinetAddLongTerm from '@/views/biz-modals/shop/cabinet/add-long-term'\nimport ShopCabinetAddTemporary from '@/views/biz-modals/shop/cabinet/add-temporary'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nimport ShopCabinetUseRecord from '@/views/biz-modals/shop/cabinet/use-record'\nimport ShopCabinetEditStatus from '@/views/biz-modals/shop/cabinet/edit-status'\nimport ShopCabinetOpen from '@/views/biz-modals/shop/cabinet/open'\nimport ShopCabinetBatch from '@/views/biz-modals/shop/cabinet/batch'\nexport default {\n  bem: {\n    b: 'st-cabinet-list',\n    bBattrey: 'st-cabinet-list-battery-status'\n  },\n  mixins: [tableMixin],\n  components: { StStatus },\n  modals: {\n    ShopCabinetEditPrice,\n    ShopCabinetAddLongTerm,\n    ShopCabinetAddTemporary,\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary,\n    ShopCabinetEditStatus,\n    ShopCabinetUseRecord,\n    ShopCabinetOpen,\n    ShopCabinetBatch\n  },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: ListService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      auth: cabinetService.auth$,\n      cabinetTypeOption: cabinetService.cabinetTypeOption$,\n      cabinetBusinessOption: cabinetService.cabinetBusinessOption$,\n      actionTypeOption: cabinetService.actionTypeOption$\n    }\n  },\n  props: {\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    list: {\n      type: Array,\n      default: () => []\n    },\n    page: {\n      type: Object,\n      default: () => {}\n    },\n    areaName: {\n      type: String,\n      default: ''\n    },\n    channel: {\n      type: String,\n      default: 'use'\n    }\n  },\n  data() {\n    return { CABINET_BUSINESS_TYPE }\n  },\n  computed: {\n    Temporarycolumns,\n    LongTermcolumns,\n    Recordcolumns,\n    columns() {\n      const Map = {\n        temporary: this.Temporarycolumns,\n        'long-term': this.LongTermcolumns,\n        record: this.Recordcolumns\n      }\n      return Map[this.type]\n    },\n    type() {\n      return this.$searchQuery.type || 'temporary'\n    }\n  },\n  methods: {\n    onDateOk(date, str) {\n      this.$searchQuery.date_start = date[0].format('YYYY-MM-DD HH:mm')\n      this.$searchQuery.date_end = date[1].format('YYYY-MM-DD HH:mm')\n      this.refresh()\n    },\n    disabledDate(current) {\n      if (!current) return false\n      return (\n        moment().subtract(6, 'M') > current || moment().add(6, 'M') < current\n      )\n    },\n    refresh() {\n      this.onSelectionReset()\n      this.$emit('refresh')\n    },\n    /**\n     * 批量新增储物柜\n     */\n    onCabinetBatchAdd() {\n      const { id, type } = this.$searchQuery\n      const areaName = this.areaName\n      if (!+id) {\n        this.messageService.error({\n          content: '请先新增区域'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: `shop-cabinet-add-${type}`,\n        props: {\n          id,\n          type,\n          areaName\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量删除储物柜\n     */\n    onCabinetBatchDel() {\n      // 判断是否有智能柜\n      const flagText = this.onGetCabinetType()\n      if (flagText === 'smart') {\n        this.$error({\n          title: '当前选中柜子有智能储物柜，若需删除，请联系三体工作人员',\n          okText: '知道了'\n        })\n        return\n      }\n      // 判断是否有使用中的柜子\n      if (flagText === 'using') {\n        this.$error({\n          title: '选择的储物柜正在使用中，无法删除',\n          okText: '知道了'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: 'shop-cabinet-batch',\n        props: {\n          title: '批量删除储物柜',\n          ids: this.selectedRowKeys,\n          total: this.page.total_counts,\n          useType: 'del',\n          searchQuery: {\n            cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n            cabinet_area_id: this.$searchQuery.id,\n            keywords: this.$searchQuery.keywords,\n            battery: this.$searchQuery.battery,\n            cabinet_business_type: this.$searchQuery.cabinet_business_type\n          }\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量清柜\n     */\n    onCabinetBatchClean() {\n      let OfflineCabinetNum = this.getSmartOfflineNum()\n      if (OfflineCabinetNum > 0) {\n        this.messageService.error({\n          content: '已离线的储物柜无法清柜，请重新选择'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: 'shop-cabinet-batch',\n        props: {\n          title: '批量清柜',\n          ids: this.selectedRowKeys,\n          total: this.page.total_counts,\n          useType: 'clear',\n          searchQuery: {\n            cabinet_area_id: this.$searchQuery.id,\n            cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n            keywords: this.$searchQuery.keywords,\n            battery: this.$searchQuery.battery,\n            cabinet_business_type: this.$searchQuery.cabinet_business_type\n          }\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量改价\n     */\n    onCabinetBatchChangePrice() {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-price',\n        props: {\n          ids: this.selectedRowKeys,\n          cabinet_area_id: this.$searchQuery.id,\n          keywords: this.$searchQuery.keywords,\n          battery: this.$searchQuery.battery,\n          cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n          cabinet_business_type: this.$searchQuery.cabinet_business_type,\n          total: this.page.total_counts\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 开启储物柜\n     */\n    onCabinetOpen(cabinet) {\n      // 选择的柜子中有维修状态的智能柜\n      this.$modalRouter.push({\n        name: 'shop-cabinet-open',\n        props: {\n          id: cabinet.id,\n          userName: cabinet.user_name,\n          userMobile: cabinet.mobile\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 修改储物柜信息\n     */\n    onCabinetEditInfo(id) {\n      this.$modalRouter.push({\n        name: `shop-cabinet-edit-${this.$searchQuery.type}`,\n        props: {\n          id,\n          areaName: this.areaName\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 修改储物柜状态\n     */\n    onCabinetEditStatus(record) {\n      let cabinet = this.getCabinetUsingItem(record)\n      let id = cabinet.id\n      let useStatus = cabinet.cabinet_business_type\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-status',\n        props: {\n          id,\n          useStatus\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 查看储物柜使用记录\n     */\n    onCabinetShowRecord(cabinet_id) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-use-record',\n        props: {\n          cabinet_id\n        }\n      })\n    },\n    /**\n     * 获取储物柜类型\n     */\n    onGetCabinetType() {\n      const type = this.$searchQuery.type\n      for (let i = 0; i < this.selectedRows.length; i++) {\n        const temp = this.selectedRows[i]\n        if (temp.is_smart) {\n          return 'smart'\n        }\n        // 使用中的柜子无法删除\n        if (type === 'long-term' && temp.sale_status === 1) {\n          return 'using'\n        }\n        // 损坏的柜子无法删除\n        if (type === 'temporary' && temp.cabinet_business_type === 2) {\n          return 'using'\n        }\n      }\n      return 'none'\n    },\n    /**\n     * 获取选中储物柜中离线的数量\n     */\n    getSmartOfflineNum() {\n      const checkedOfflineCabinets = this.selectedRows.filter(\n        item => item.is_smart && !item.is_online\n      )\n      return checkedOfflineCabinets.length\n    },\n    /**\n     * 获取选中储物柜中已使用的数量\n     */\n    getUsingCabinetNum() {\n      const checkedUsingCabinets = this.selectedRows.filter(\n        item => item.cabinet_business_type === this.CABINET_BUSINESS_TYPE.USING\n      )\n      return checkedUsingCabinets.length\n    },\n    /**\n     * 获取选中储物柜中已使用的数量\n     */\n    getSmartCabinetNum() {\n      const checkedSmartCabinets = this.selectRows.filter(item => item.is_smart)\n      return checkedSmartCabinets.length\n    },\n    getCabinetUsingItem(item) {\n      if (this.type === 'long-term' && item.sale_status === 1) {\n        item.cabinet_business_type = 2\n      }\n      return item\n    }\n  }\n}\n</script>\n"]}]}