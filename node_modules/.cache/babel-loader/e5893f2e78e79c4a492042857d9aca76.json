{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-course-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-course-line.vue","mtime":1600926555767},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport { toKFilter } from \"./filters\";\nimport { View } from 'st-data-set';\nimport { Chart } from '@antv/g2';\nimport chartMixin from \"./mixin\";\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * 数据\n     * @example\n     * [{date:'05-28',私教预约人数:250,私教签到人数:250,团体课排课人数:20}]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 280\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: function _default() {\n        var smallCourse = this.$c('small_course');\n        return ['团体课可预约人数', '团体课签到人数', '团体课预约人数', '私教课签到人数', '私教课预约人数', \"\".concat(smallCourse, \"\\u7B7E\\u5230\\u4EBA\\u6570\"), \"\".concat(smallCourse, \"\\u9884\\u7EA6\\u4EBA\\u6570\")];\n      }\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#5095FC', '#6831D7', '#06DB8C', '#872333', '#98db23', '#8f23f3', '#9ddf33'];\n      }\n    },\n    shadowColors: {\n      type: Array,\n      default: function _default() {\n        return ['rgba(80,149,252,.4)', 'rgba(104,49,215,.4)', 'rgba(6,219,140,.4)', 'rgba(135,35,51,.4)', 'rgba(152,219,35,.4)'];\n      }\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data: function data() {\n    return {// MAX: 0\n    };\n  },\n  computed: {\n    colorMap: function colorMap() {\n      var _this = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this.colors[idx % _this.colors.length];\n        return res;\n      }, {});\n    },\n    shadowColorMap: function shadowColorMap() {\n      var _this2 = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this2.shadowColors[idx % _this2.shadowColors.length];\n        return res;\n      }, {});\n    },\n    MAX: function MAX() {\n      var maxValue = this.dv.max('value');\n      return maxValue > this.max ? maxValue : this.max;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      });\n    },\n    changeData: function changeData() {\n      this.chart.destroy();\n      this.initChart();\n    },\n    initChart: function initChart() {\n      var _this3 = this;\n\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [80, 16, 32, 'auto'],\n        renderer: 'svg'\n      });\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          max: +this.MAX,\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      });\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      });\n      this.chart.legend('name', {\n        position: 'top-left',\n        useHtml: true,\n        offsetY: -16,\n        // offsetX: -22,\n        textStyle: {\n          fill: '#3E4D5C'\n        },\n        itemTpl: function itemTpl() {\n          return '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + \"<span class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></span>\" + \" <span class=\\\"g2-legend-text\\\">{value}</span>\" + '</li>';\n        }\n      });\n      this.chart.line().style('name', {\n        shadowColor: function shadowColor(name) {\n          return _this3.shadowColorMap[name];\n        },\n        shadowBlur: 20,\n        shadowOffsetY: 4\n      }).tooltip('name*value', function (name, value) {\n        return {\n          name: name,\n          value: value + '人'\n        };\n      }).shape('smooth').size(2).position('date*value').color('name', this.colors);\n      this.chart.render();\n    }\n  }\n};",{"version":3,"sources":["shop-course-line.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"stat-shop-course-line\"></div>\n</template>\n\n<script>\nimport { toKFilter } from './filters'\nimport { View } from 'st-data-set'\nimport { Chart } from '@antv/g2'\nimport chartMixin from './mixin'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * 数据\n     * @example\n     * [{date:'05-28',私教预约人数:250,私教签到人数:250,团体课排课人数:20}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 280\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default() {\n        const smallCourse = this.$c('small_course')\n        return [\n          '团体课可预约人数',\n          '团体课签到人数',\n          '团体课预约人数',\n          '私教课签到人数',\n          '私教课预约人数',\n          `${smallCourse}签到人数`,\n          `${smallCourse}预约人数`\n        ]\n      }\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: () => [\n        '#5095FC',\n        '#6831D7',\n        '#06DB8C',\n        '#872333',\n        '#98db23',\n        '#8f23f3',\n        '#9ddf33'\n      ]\n    },\n    shadowColors: {\n      type: Array,\n      default: () => [\n        'rgba(80,149,252,.4)',\n        'rgba(104,49,215,.4)',\n        'rgba(6,219,140,.4)',\n        'rgba(135,35,51,.4)',\n        'rgba(152,219,35,.4)'\n      ]\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data() {\n    return {\n      // MAX: 0\n    }\n  },\n  computed: {\n    colorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.colors[idx % this.colors.length]\n        return res\n      }, {})\n    },\n    shadowColorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.shadowColors[idx % this.shadowColors.length]\n        return res\n      }, {})\n    },\n    MAX() {\n      const maxValue = this.dv.max('value')\n      return maxValue > this.max ? maxValue : this.max\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      })\n    },\n    changeData() {\n      this.chart.destroy()\n      this.initChart()\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [80, 16, 32, 'auto'],\n        renderer: 'svg'\n      })\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          max: +this.MAX,\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      })\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      })\n      this.chart.legend('name', {\n        position: 'top-left',\n        useHtml: true,\n        offsetY: -16,\n        // offsetX: -22,\n        textStyle: {\n          fill: '#3E4D5C'\n        },\n        itemTpl: () => {\n          return (\n            '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' +\n            `<span class=\"g2-legend-marker\" style=\"background-color:{color};\"></span>` +\n            ` <span class=\"g2-legend-text\">{value}</span>` +\n            '</li>'\n          )\n        }\n      })\n      this.chart\n        .line()\n        .style('name', {\n          shadowColor: name => this.shadowColorMap[name],\n          shadowBlur: 20,\n          shadowOffsetY: 4\n        })\n        .tooltip('name*value', (name, value) => {\n          return {\n            name,\n            value: value + '人'\n          }\n        })\n        .shape('smooth')\n        .size(2)\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}