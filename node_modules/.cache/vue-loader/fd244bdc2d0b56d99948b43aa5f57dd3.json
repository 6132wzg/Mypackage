{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/attendance/setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/attendance/setting.vue","mtime":1600926556081},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SettingService } from './setting.service'\nimport { cloneDeep, omit } from 'lodash-es'\nimport { BasicSettingService } from '@/views/biz-modals/brand/app/venue/basic-setting.service'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  name: 'brand-app-attendance-setting',\n  bem: {\n    module: 'brand-app-attendance-setting'\n  },\n\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      settingService: SettingService\n    }\n  },\n\n  rxState() {\n    return {\n      auth: this.settingService.auth$,\n      list: this.settingService.list$,\n      loading: this.settingService.loading$,\n      timeMap: this.settingService.timeMap$\n    }\n  },\n\n  props: {},\n\n  data() {\n    return {\n      startTime: [],\n      // 用于记录开始时间\n      startTimeTemp: '',\n      endTime: [],\n      placeholder: '最早上班时间',\n      isEdit: false\n    }\n  },\n\n  mounted() {\n    // let startLocal = -1\n    let endLocal = -1\n    for (let i = 0; i < this.timeMap.length; i++) {\n      if (this.timeMap[i].label === this.list.rules.start) {\n        endLocal = i\n      }\n      if (this.timeMap[i].label === this.list.rules.start) {\n        const timeMap = cloneDeep(this.timeMap)\n        const startBeforeTime = timeMap.filter((v, index) => {\n          return index < i\n        })\n        startBeforeTime.forEach(val => {\n          val.label = '次日' + val.label\n        })\n        const startAfterTime = timeMap.filter((v, index) => {\n          return index > i\n        })\n        this.endTime = [...startAfterTime, ...startBeforeTime]\n      }\n    }\n    this.startTime = this.timeMap\n  },\n  computed: {},\n  watch: {\n    list: {\n      handler(val) {\n        if (this.startTimeTemp !== val.rules.start) {\n          this.startTimeTemp = val.rules.start\n          let endLocal = -1\n          for (let i = 0; i < this.timeMap.length; i++) {\n            if (this.timeMap[i].label === val.rules.start) {\n              endLocal = i\n            }\n            if (this.timeMap[i].label === val.rules.start) {\n              const timeMap = cloneDeep(this.timeMap)\n              const startBeforeTime = timeMap.filter((v, index) => {\n                return index < i\n              })\n              startBeforeTime.forEach(val => {\n                val.label = '次日' + val.label\n              })\n              const startAfterTime = timeMap.filter((v, index) => {\n                return index > i\n              })\n              this.endTime = [...startAfterTime, ...startBeforeTime]\n            }\n          }\n          this.startTime = this.timeMap\n        }\n      },\n      deep: true\n    }\n  },\n  components: {},\n  methods: {\n    onChange(time, par) {\n      console.log(time)\n      if (par === 'start') {\n        this.list.rules.start = time\n        // 判断是否清除下班时间\n        if (this.isStratMoreEnd(this.list.rules.start, this.list.rules.end)) {\n          this.list.rules.end = ''\n        }\n      } else if (par === 'end') {\n        this.list.rules.end = time\n      }\n    },\n    isStratMoreEnd(start, end) {\n      return end && end >= this.startTime[0].value && end <= start\n    },\n    editHandle() {\n      this.isEdit = true\n      console.log(this.isEdit)\n    },\n    cancelSetting() {\n      this.isEdit = false\n    },\n    saveSetting() {\n      // 处理支持方式数据用于接口入参\n      const list = omit(this.list.rules, 'types')\n      list.types = []\n      list.types_way.forEach((val, i) => {\n        if (val) {\n          list.types.push(i + 1)\n        }\n      })\n      const queryList = omit(list, 'types_way')\n      console.log(queryList)\n      if (!queryList.start) {\n        this.messageService.warn({\n          content: '请选择最早上班时间'\n        })\n        return\n      }\n      if (!queryList.end) {\n        this.messageService.warn({\n          content: '请选择最早下班时间'\n        })\n        return\n      }\n      if (isNaN(queryList.range)) {\n        this.messageService.warn({\n          content: '范围请输入数字'\n        })\n        return\n      }\n      if (queryList.range < 100) {\n        this.messageService.warn({\n          content: '范围不能小于100米'\n        })\n        return\n      }\n      if (queryList.range > 99999) {\n        this.messageService.warn({\n          content: '范围不能大于99999米'\n        })\n        return\n      }\n      this.settingService\n        .putAttendanceSettingHandle(queryList)\n        .subscribe(res => {\n          this.isEdit = false\n          this.messageService.success({\n            content: '保存成功'\n          })\n        })\n    },\n    jumpShopList() {\n      this.$router.push({\n        name: 'brand-setting-shop-list'\n      })\n    }\n  }\n}\n",{"version":3,"sources":["setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"setting.vue","sourceRoot":"src/views/pages/brand/app/attendance","sourcesContent":["<template>\n  <div :class=\"module()\">\n    <div :class=\"module('main')\">\n      <div :class=\"module('wrap')\" class=\"mg-t32 mg-b24\">\n        <div :class=\"module('main-title')\">设置打卡时间范围</div>\n        <div\n          :class=\"module('main-icon')\"\n          v-if=\"auth['authSetting'] && !isEdit\"\n          @click=\"editHandle\"\n        >\n          <st-icon type=\"edit\" size=\"16px\" color=\"#3F66F6\" />\n          编辑\n        </div>\n      </div>\n      <div :class=\"module('main-time-frame-wrap')\">\n        <div :class=\"module('main-time-frame')\">\n          <span :class=\"module('main-time-frame-label')\">最早上班时间</span>\n          <a-select\n            allowClear\n            :value=\"list.rules.start\"\n            style=\"width: 212px;\"\n            :disabled=\"!isEdit\"\n            @change=\"onChange($event, 'start')\"\n          >\n            <a-select-option v-for=\"setting in startTime\" :key=\"setting.value\">\n              {{ setting.label }}\n            </a-select-option>\n          </a-select>\n        </div>\n        <div :class=\"module('main-time-frame')\">\n          <span :class=\"module('main-time-frame-label')\">最晚下班时间</span>\n          <a-select\n            allowClear\n            :value=\"list.rules.end\"\n            @change=\"onChange($event, 'end')\"\n            style=\"width: 212px\"\n            :disabled=\"!isEdit\"\n          >\n            <a-select-option v-for=\"setting in endTime\" :key=\"setting.value\">\n              {{ setting.label }}\n            </a-select-option>\n          </a-select>\n        </div>\n        <div :class=\"module('main-time-frame-desc')\">\n          最晚时间不能超过次日最早上班时间\n        </div>\n      </div>\n      <div :class=\"module('main-rules')\">\n        打卡规则：在打卡时间范围内，员工默认第一次打卡时间，记录为上班打卡；最后一次打卡时间，记录为下班打卡，重复打卡会覆盖更新下班打卡时间\n      </div>\n      <div :class=\"module('main-title')\" class=\"mg-y24\">其他设置</div>\n      <div :class=\"module('main-other')\">\n        <div :class=\"module('main-other-way')\" class=\"mg-b24\">\n          <span class=\"mg-r16 other-title\">支持方式</span>\n          <st-checkbox v-model=\"list.rules.types_way[0]\" :disabled=\"!isEdit\">\n            智慧前台\n          </st-checkbox>\n          <st-checkbox\n            v-model=\"list.rules.types_way[1]\"\n            :disabled=\"!isEdit\"\n            class=\"mg-l16\"\n          >\n            三体云管家\n          </st-checkbox>\n        </div>\n        <div :class=\"module('main-other-range')\">\n          <div class=\"mg-r16 other-title\">定位距离</div>\n          <div :class=\"module('main-other-range-content')\">\n            距离门店地址位置\n            <st-input\n              width=\"65px\"\n              v-model=\"list.rules.range\"\n              :disabled=\"!isEdit\"\n            />\n            米内，可进行范围内打卡，超出范围则无法打卡（仅作用于三体云管家）\n            <span class=\"setting-shop-adress\" @click=\"jumpShopList\">\n              去设置门店地址\n            </span>\n          </div>\n        </div>\n        <div :class=\"module('main-other-save')\" class=\"mg-t24\" v-if=\"isEdit\">\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :loading=\"loading.putAttendanceSettingHandle\"\n            @click=\"saveSetting\"\n          >\n            保 存\n          </st-button>\n          <st-button @click=\"cancelSetting\">取 消</st-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { SettingService } from './setting.service'\nimport { cloneDeep, omit } from 'lodash-es'\nimport { BasicSettingService } from '@/views/biz-modals/brand/app/venue/basic-setting.service'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  name: 'brand-app-attendance-setting',\n  bem: {\n    module: 'brand-app-attendance-setting'\n  },\n\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      settingService: SettingService\n    }\n  },\n\n  rxState() {\n    return {\n      auth: this.settingService.auth$,\n      list: this.settingService.list$,\n      loading: this.settingService.loading$,\n      timeMap: this.settingService.timeMap$\n    }\n  },\n\n  props: {},\n\n  data() {\n    return {\n      startTime: [],\n      // 用于记录开始时间\n      startTimeTemp: '',\n      endTime: [],\n      placeholder: '最早上班时间',\n      isEdit: false\n    }\n  },\n\n  mounted() {\n    // let startLocal = -1\n    let endLocal = -1\n    for (let i = 0; i < this.timeMap.length; i++) {\n      if (this.timeMap[i].label === this.list.rules.start) {\n        endLocal = i\n      }\n      if (this.timeMap[i].label === this.list.rules.start) {\n        const timeMap = cloneDeep(this.timeMap)\n        const startBeforeTime = timeMap.filter((v, index) => {\n          return index < i\n        })\n        startBeforeTime.forEach(val => {\n          val.label = '次日' + val.label\n        })\n        const startAfterTime = timeMap.filter((v, index) => {\n          return index > i\n        })\n        this.endTime = [...startAfterTime, ...startBeforeTime]\n      }\n    }\n    this.startTime = this.timeMap\n  },\n  computed: {},\n  watch: {\n    list: {\n      handler(val) {\n        if (this.startTimeTemp !== val.rules.start) {\n          this.startTimeTemp = val.rules.start\n          let endLocal = -1\n          for (let i = 0; i < this.timeMap.length; i++) {\n            if (this.timeMap[i].label === val.rules.start) {\n              endLocal = i\n            }\n            if (this.timeMap[i].label === val.rules.start) {\n              const timeMap = cloneDeep(this.timeMap)\n              const startBeforeTime = timeMap.filter((v, index) => {\n                return index < i\n              })\n              startBeforeTime.forEach(val => {\n                val.label = '次日' + val.label\n              })\n              const startAfterTime = timeMap.filter((v, index) => {\n                return index > i\n              })\n              this.endTime = [...startAfterTime, ...startBeforeTime]\n            }\n          }\n          this.startTime = this.timeMap\n        }\n      },\n      deep: true\n    }\n  },\n  components: {},\n  methods: {\n    onChange(time, par) {\n      console.log(time)\n      if (par === 'start') {\n        this.list.rules.start = time\n        // 判断是否清除下班时间\n        if (this.isStratMoreEnd(this.list.rules.start, this.list.rules.end)) {\n          this.list.rules.end = ''\n        }\n      } else if (par === 'end') {\n        this.list.rules.end = time\n      }\n    },\n    isStratMoreEnd(start, end) {\n      return end && end >= this.startTime[0].value && end <= start\n    },\n    editHandle() {\n      this.isEdit = true\n      console.log(this.isEdit)\n    },\n    cancelSetting() {\n      this.isEdit = false\n    },\n    saveSetting() {\n      // 处理支持方式数据用于接口入参\n      const list = omit(this.list.rules, 'types')\n      list.types = []\n      list.types_way.forEach((val, i) => {\n        if (val) {\n          list.types.push(i + 1)\n        }\n      })\n      const queryList = omit(list, 'types_way')\n      console.log(queryList)\n      if (!queryList.start) {\n        this.messageService.warn({\n          content: '请选择最早上班时间'\n        })\n        return\n      }\n      if (!queryList.end) {\n        this.messageService.warn({\n          content: '请选择最早下班时间'\n        })\n        return\n      }\n      if (isNaN(queryList.range)) {\n        this.messageService.warn({\n          content: '范围请输入数字'\n        })\n        return\n      }\n      if (queryList.range < 100) {\n        this.messageService.warn({\n          content: '范围不能小于100米'\n        })\n        return\n      }\n      if (queryList.range > 99999) {\n        this.messageService.warn({\n          content: '范围不能大于99999米'\n        })\n        return\n      }\n      this.settingService\n        .putAttendanceSettingHandle(queryList)\n        .subscribe(res => {\n          this.isEdit = false\n          this.messageService.success({\n            content: '保存成功'\n          })\n        })\n    },\n    jumpShopList() {\n      this.$router.push({\n        name: 'brand-setting-shop-list'\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}