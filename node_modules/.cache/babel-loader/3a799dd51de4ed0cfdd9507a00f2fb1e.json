{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/card/member-card-course-interests/member-card-course-interests.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/card/member-card-course-interests/member-card-course-interests.vue","mtime":1597895241977},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { CourseIntersetsService } from \"./member-card-course-interests.service\";\nimport { ruleOptions } from \"./member-card-course-interests.config\";\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      courseInterestsService: CourseIntersetsService\n    };\n  },\n  rxState: function rxState() {\n    var _this$courseInterests = this.courseInterestsService,\n        loading$ = _this$courseInterests.loading$,\n        types$ = _this$courseInterests.types$,\n        courseList$ = _this$courseInterests.courseList$;\n    return {\n      loading: loading$,\n      types: types$,\n      courseList: courseList$\n    };\n  },\n  decorators: function decorators() {\n    return this.form.addDecorators(this.ruleOptions);\n  },\n  props: {\n    /**\n     * 约课权益类型 1无 2全部团体课 3指定团体课\n     */\n    type: {\n      type: Number,\n      default: 1\n    },\n    courseIds: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    form: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    label: {\n      type: String,\n      default: '约课权益'\n    },\n    labelWidth: {\n      type: String,\n      default: '88px'\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    },\n    required: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      currentType: 1,\n\n      /**\n       * 多门店\n       */\n      TYPE_CUSTOM: 3\n    };\n  },\n  computed: {\n    ruleOptions: ruleOptions,\n    decorators: function decorators() {\n      return this.form.addDecorators(this.ruleOptions);\n    },\n    isShowCourseList: function isShowCourseList() {\n      /**\n       * 多店\n       */\n      return this.currentType === this.TYPE_CUSTOM;\n    },\n\n    /**\n     * 是否校验门店\n     */\n    isRequired: function isRequired() {\n      return this.required && this.currentType === this.TYPE_CUSTOM;\n    }\n  },\n  watch: {\n    type: function type(val) {\n      this.currentType = val;\n    },\n    courseIds: {\n      handler: function handler(val) {\n        this.getCourseListByCourseIds(val);\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      var type = this.type,\n          courseIds = this.courseIds;\n      this.currentType = type;\n      this.$nextTick(function () {\n        _this.getCourseListByCourseIds(courseIds);\n      });\n    },\n    getCourseListByCourseIds: function getCourseListByCourseIds(courseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds: courseIds\n      });\n\n      if (courseIds.length) {\n        this.getCourseList({\n          course_ids: courseIds\n        });\n      }\n    },\n    onCourseIdsChange: function onCourseIdsChange(currentCourseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds: currentCourseIds\n      });\n      this.onChange();\n    },\n    onTypeChange: function onTypeChange(e) {\n      var _this2 = this;\n\n      this.currentType = e.target.value;\n      this.$nextTick(function () {\n        _this2.form.validateFields(['currentCourseIds'], {\n          force: true\n        });\n      });\n      this.onChange();\n    },\n    onChange: function onChange() {\n      var currentType = this.currentType;\n      var currentCourseIds = this.form.getFieldValue('currentCourseIds');\n      this.$emit('change', currentType, currentCourseIds);\n    },\n    onSearch: function onSearch(keyword) {\n      this.getCourseList({\n        course_name: keyword\n      });\n    },\n    getCourseList: function getCourseList(query) {\n      this.courseInterestsService.courseListAction$.dispatch(query);\n    }\n  }\n};",null]}