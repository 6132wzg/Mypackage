{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/layouts/default#/sider-menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/layouts/default#/sider-menu.vue","mtime":1591147717283},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { UserService } from '@/services/user.service';\nimport { treeToMap } from '@/utils/tree-to-map';\nimport { find, remove, constant } from 'lodash-es';\nimport { iconMap } from \"./sider-menu.config\";\nexport default {\n  name: 'DefaultBrandSiderMenu',\n  serviceInject: function serviceInject() {\n    return {\n      userService: UserService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      menuData: this.userService.menuData$\n    };\n  },\n  data: function data() {\n    return {\n      openKeys: []\n    };\n  },\n  computed: {\n    menus: function menus() {\n      return this.menuData.menus || [];\n    },\n    favorite: function favorite() {\n      return this.menuData.favorite || [];\n    },\n    menuMap: function menuMap() {\n      return treeToMap(this.menus);\n    },\n    rootSubmenuKeys: function rootSubmenuKeys() {\n      return this.getRootSubmenuKeys();\n    },\n    currentSiderMenu: function currentSiderMenu() {\n      return this.findCurrentSiderMenu();\n    },\n    selectedKeys: function selectedKeys() {\n      var selectedKey = this.findSelectedKey(this.currentSiderMenu);\n      this.$emit('change', {\n        selectedKey: selectedKey,\n        currentSiderMenu: this.currentSiderMenu,\n        menus: this.menus\n      });\n      return selectedKey ? [selectedKey] : [];\n    }\n  },\n  watch: {\n    selectedKeys: function selectedKeys() {\n      this.setOpenKeys();\n    }\n  },\n  created: function created() {\n    this.init(); // this.$nextTick().then(() => {\n    //   document.querySelectorAll('.ant-menu-submenu-title').forEach(item =>\n    //     item.addEventListener('click', () => {\n    //       console.log('ddss')\n    //       document.querySelectorAll('.ant-menu-item.st-menu-item-selected').forEach(ele => {\n    //         ele.setAttribute('class', '.ant-menu-item')\n    //       })\n    //     })\n    //   )\n    // })\n  },\n  methods: {\n    init: function init() {\n      this.setOpenKeys();\n    },\n    isHasSubmenu: function isHasSubmenu(menu) {\n      return menu.children && menu.children.length;\n    },\n    onOpenChange: function onOpenChange(openKeys) {\n      var _this = this;\n\n      var latestOpenKey = openKeys.find(function (key) {\n        return _this.openKeys.indexOf(key) === -1;\n      });\n\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n        this.openKeys = openKeys;\n      } else {\n        this.openKeys = latestOpenKey ? [latestOpenKey] : [];\n      }\n    },\n    findCurrentSiderMenu: function findCurrentSiderMenu() {\n      var _this2 = this;\n\n      var currentSiderMenu;\n      this.menus.forEach(function (menu) {\n        var matchRule = _this2.getMatchRule(menu);\n\n        if (matchRule.test(_this2.$route.name)) {\n          currentSiderMenu = menu;\n        }\n      });\n      return currentSiderMenu || {};\n    },\n    getMatchRule: function getMatchRule(menu) {\n      var icon = menu.icon;\n\n      if (!icon) {\n        return /^The menu config is error\\.The icon field of the menu api should not be empty!/;\n      }\n      /**\n       * 对一些特殊的 icon 做处理，比如 dashboard 用的是 home, 建立起菜单 icon 与路由的映射关系\n       */\n\n\n      if (iconMap.hasOwnProperty(icon)) {\n        icon = iconMap[icon];\n      }\n\n      return new RegExp(\"^((brand|shop)-)?\".concat(icon));\n    },\n    findSelectedKey: function findSelectedKey() {\n      var _this3 = this;\n\n      var selectedKey;\n      (this.currentSiderMenu.children || []).forEach(function (item) {\n        if (item.url && _this3.$route.name.indexOf(item.url) !== -1) {\n          selectedKey = item.id;\n        }\n      });\n      return selectedKey;\n    },\n    setOpenKeys: function setOpenKeys() {\n      var openKey = this.currentSiderMenu.id;\n      this.openKeys = openKey ? [openKey] : [];\n    },\n    setSelectedKeys: function setSelectedKeys() {\n      var selectedKey = this.findSelectedKey(this.currentSiderMenu);\n      this.selectedKeys = selectedKey ? [selectedKey] : [];\n    },\n    onClickMenuItem: function onClickMenuItem(menu) {\n      var _this$$router$resolve = this.$router.resolve({\n        name: menu.url\n      }),\n          resolved = _this$$router$resolve.resolved;\n\n      if (!resolved.matched.length) {\n        location.href = '/404';\n      } else {\n        this.$router.push({\n          name: menu.url\n        });\n      }\n    },\n    addFavorite: function addFavorite(id, subMenu) {\n      var _this4 = this;\n\n      this.userService.addFavorite(id).subscribe(function () {\n        var findMenu = find(_this4.menuData.favorite, function (item) {\n          return item.id === id;\n        });\n\n        if (!findMenu) {\n          _this4.menuData.favorite.push(subMenu);\n        }\n      });\n    },\n    delFavorite: function delFavorite(id) {\n      var _this5 = this;\n\n      var favorite = this.menuData.favorite;\n      remove(favorite, function (item) {\n        return item.id === id;\n      });\n      this.userService.delFavorite(id).subscribe(function () {\n        _this5.menuData.favorite = _toConsumableArray(favorite);\n      });\n    },\n    getRootSubmenuKeys: function getRootSubmenuKeys() {\n      var menus = this.menus;\n      var rootSubmenuKeys = [];\n      menus.forEach(function (item) {\n        rootSubmenuKeys.push(item.id);\n      });\n      return rootSubmenuKeys;\n    },\n    isfavorite: function isfavorite(id) {\n      return find(this.favorite, {\n        id: id\n      });\n    }\n  }\n};",null]}