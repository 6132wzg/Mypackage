{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/calendar.vue","mtime":1597396799923},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DateComponent from './date#/date-component'\nimport AddButton from './date#/add-button'\nimport ScheduleUnit from './date#/schedule-unit'\nimport ScheduleCard from './date#/schedule-card'\nimport MonthBoard from './date#/month-board'\nimport moment from 'moment'\nimport { cloneDeep } from 'lodash-es'\nimport { TIME_UNIT } from '@/constants/course/team'\n\nexport default {\n  name: 'ScheduleCalendar',\n  bem: {\n    bSchedule: 'schedule-calendar',\n    bToolbar: 'toolbar',\n    bContent: 'content'\n  },\n  data() {\n    return {\n      start: '',\n      currentWeek: '',\n      weeks: [],\n      pageBtnFocusState: 'calendar',\n      TIME_UNIT\n    }\n  },\n  props: {\n    addTitle: {\n      type: String,\n      default: '新增课程排期'\n    },\n    authAdd: {\n      type: Boolean,\n      default: true\n    },\n    startDate: {\n      type: String,\n      default: moment().format('YYYY-MM-DD')\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    },\n    rangeTime: {\n      type: Array,\n      default: () => [8, 24]\n    },\n    cardList: {\n      type: Array,\n      default: () => []\n    },\n    smallCourseType: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    isDay() {\n      const start = this.$searchQuery.start_date\n      const end = this.$searchQuery.end_date\n      return start === end\n    },\n    currentTime() {\n      return moment().format('HH:mm')\n    },\n    itemStyle() {\n      const hour = +moment().format('HH')\n      const minute = +moment().format('mm')\n      return {\n        top: `calc(${(hour / 24) * 100}% + 16px + ${(minute / (60 * 24)) *\n          100}%)`\n      }\n    }\n  },\n  watch: {\n    $route(newValue, oldValue) {\n      // this.isDay = this.$searchQuery.start_date === this.$searchQuery.end_date\n      this.start = this.$searchQuery.start_date\n      this.getWeeks()\n    }\n  },\n  filters: {\n    timeStr(val) {\n      const time = val - 1\n      return time <= 9 ? `0${time}:00` : `${time}:00`\n    },\n    dateString(val) {\n      let weekOfday = moment(val.date).format('E')\n      let week = !val.week\n        ? moment(val.date).format('ddd')\n        : moment(val.date)\n            .subtract(weekOfday - val.week, 'days')\n            .format('ddd')\n      let date = !val.week\n        ? moment(val.date).format('DD')\n        : moment(val.date)\n            .subtract(weekOfday - val.week, 'days')\n            .format('DD')\n      return `${date} ${week}`\n    }\n  },\n  methods: {\n    handleSizeChange(evt, type) {\n      if (type === 'date') {\n        if (evt.target.value === this.TIME_UNIT.TIME_DAY) {\n          this.onClickGetCurrent()\n        } else if (evt.target.value === this.TIME_UNIT.TIME_MONTH) {\n          this.onClickGetMonth()\n        } else {\n          this.onClickGetWeek()\n        }\n        this.$searchQuery.time_unit = evt.target.value\n      } else {\n        this.pageBtnFocusState = evt.target.valuevalue\n      }\n    },\n    onClickAdd() {\n      this.$emit('add')\n    },\n    currentDay(val) {\n      let weekOfday = moment(val.date).format('E')\n      let date =\n        val.week === 0\n          ? val.date\n          : moment(val.date)\n              .subtract(weekOfday - val.week, 'days')\n              .format('YYYY-MM-DD')\n      let current = moment().format('YYYY-MM-DD')\n      return date === current ? 'active' : ''\n    },\n    oChangeDate(date) {\n      this.start = date.start_date\n      this.$router.push({ query: { ...date } })\n      this.isDay ? this.getWeeks() : this.getWeeks('week')\n    },\n    onClickGetTable() {\n      this.$emit('get-table')\n    },\n    onClickGetDay(item) {\n      this.weeks = [item]\n      const date = this.isDay\n        ? item.date\n        : moment(item.date)\n            .add(item.week - 1, 'days')\n            .format('YYYY-MM-DD')\n      this.$router.push({\n        query: {\n          start_date: date,\n          end_date: date\n        }\n      })\n    },\n    onDetail(info) {\n      this.$emit('detail', info)\n    },\n    onClickGetCurrent() {\n      this.weeks = []\n      this.weeks.push({ week: 0, date: this.start })\n      this.$searchQuery.time_unit = this.TIME_UNIT.TIME_DAY\n      // let current = moment().format('YYYY-MM-DD')\n      this.getWeeks()\n      this.$router.push({\n        query: {\n          start_date: this.start,\n          end_date: this.start,\n          time_unit: this.TIME_UNIT.TIME_DAY,\n          date: this.start\n        }\n      })\n    },\n    onClickGetMonth() {\n      const startDate = moment(this.start)\n        .startOf('month')\n        .format('YYYY-MM-DD')\n      const endDate = moment(this.start)\n        .endOf('month')\n        .format('YYYY-MM-DD')\n      this.getWeeks()\n      this.$router.push({\n        query: {\n          start_date: startDate,\n          end_date: endDate,\n          time_unit: this.TIME_UNIT.TIME_MONTH\n        }\n      })\n    },\n    getWeeks(val) {\n      console.log('start', this.start)\n      if (val !== 'week' && this.isDay) {\n        this.weeks = []\n        this.weeks.push({ week: 0, date: this.$searchQuery.start_date })\n        this.$nextTick().then(() => {\n          // 减去232固定高度\n          window.scrollTo({\n            top: this.heightToTop(document.querySelector('#timer-9')) - 232\n          })\n        })\n        this.dataBtnFocusState = 'day'\n        return\n      }\n      if (val === 'week') {\n        this.weeks = []\n        for (let i = 1; i < 8; i++) {\n          this.weeks.push({ week: i, date: this.start })\n        }\n        this.dataBtnFocusState = 'week'\n      }\n    },\n    onClickGetWeek() {\n      let weekOfday = moment(this.start).format('E')\n      this.currentWeek.start_date = moment(this.start)\n        .subtract(weekOfday - 1, 'days')\n        .format('YYYY-MM-DD')\n      this.currentWeek.end_date = moment(this.start)\n        .add(7 - weekOfday, 'days')\n        .format('YYYY-MM-DD')\n      this.$router.push({\n        query: { ...this.currentWeek, time_unit: this.TIME_UNIT.TIME_WEEK }\n      })\n      this.getWeeks('week')\n    },\n    onChangeGetDate(date) {\n      this.$emit('add', date)\n    },\n    heightToTop(ele) {\n      //ele为指定跳转到该位置的DOM节点\n      let root = document.body\n      let height = 0\n      do {\n        height += ele.offsetTop\n        ele = ele.offsetParent\n      } while (ele !== root)\n      return height\n    },\n    addTeamCourse(e) {\n      console.log('点击新增团体课按钮', e)\n      this.$emit('add', moment(e.fullDate))\n    },\n    onClickCourse(e) {\n      console.log('点击某个课程', e)\n      this.$emit('detail', e)\n    }\n  },\n  created() {\n    this.currentWeek = cloneDeep(this.$searchQuery)\n    console.log('created', this.currentWeek, this.$searchQuery)\n    this.start = this.startDate || moment().format('YYYY-MM-DD')\n    if (this.isDay) {\n      this.getWeeks()\n    } else {\n      this.getWeeks('week')\n    }\n    this.$nextTick().then(() => {\n      // 减去232固定高度\n      if (this.$searchQuery.time_unit !== TIME_UNIT.TIME_MONTH) {\n        window.scrollTo({\n          top: this.heightToTop(document.querySelector('#timer-9')) - 232\n        })\n      }\n    })\n  },\n  components: {\n    DateComponent,\n    AddButton,\n    ScheduleUnit,\n    ScheduleCard,\n    MonthBoard\n  }\n}\n",null]}