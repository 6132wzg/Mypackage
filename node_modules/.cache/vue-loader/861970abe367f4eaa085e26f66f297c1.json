{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/info.vue","mtime":1601345845257},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { InfoService } from './info.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport ShopList from '@/views/biz-modals/package/shop-list'\nimport Synchronize from '@/views/biz-modals/package/synchronize'\nimport SuccessTip from '@/views/biz-modals/package/success-tip'\nimport SoldCoursePackageUpdateRights from '@/views/biz-modals/sold/course/package/update-rights'\nimport userPackageActions from '@/hooks/package/package-actions.hook'\n\nimport BizPackageInfo from '@/views/biz-components/package/info/info.vue'\nimport { ListService } from './list.service'\nexport default {\n  name: 'BrandPackageInfo',\n  components: { BizPackageInfo },\n  mixins: [tableMixin],\n  modals: {\n    Synchronize,\n    SoldCoursePackageUpdateRights\n  },\n  serviceInject() {\n    return {\n      service: InfoService,\n      listService: ListService\n    }\n  },\n  rxState() {\n    const { info$, auth$ } = this.service\n    return {\n      info$,\n      auth$\n    }\n  },\n  hooks() {\n    return {\n      userPackageActions: userPackageActions(this)\n    }\n  },\n  data() {\n    return {\n      pageType: 'brand'\n    }\n  },\n  computed: {\n    btnOptions() {\n      return [\n        {\n          text: '编辑',\n          click: this.onEdit,\n          if: this.auth$['brand:product:package_course|edit']\n        },\n        {\n          text: '删除',\n          click: this.deletePackage,\n          if: this.auth$['brand:product:package_course|del']\n        },\n        {\n          text: '下架',\n          click: this.onDownShelf,\n          if: this.auth$['brand:product:package_course|down']\n        },\n        {\n          text: '上架',\n          click: this.onUpShelf,\n          if: this.auth$['brand:product:package_course|up']\n        },\n        {\n          text: '应用至售出',\n          click: this.batchOperate,\n          if: this.auth$['brand:product:package_course|batch_operate']\n        },\n        {\n          text: '修改售出权益',\n          click: this.updateRight,\n          if: this.auth$['brand:product:package_course|sync_rights']\n        }\n      ]\n    }\n  },\n  methods: {\n    onUpShelf() {\n      let id = this.info$.id\n      let channel = this.info$.publish_channel\n      this.userPackageActions.onUpShelf({\n        id,\n        channel,\n        pageType: this.pageType\n      })\n    },\n    onDownShelf() {\n      let id = this.info$.id\n      this.userPackageActions.onDownShelf({ id, pageType: this.pageType })\n    },\n    batchOperate() {\n      let id = this.info$.id\n      this.$modalRouter.push({\n        name: 'Synchronize',\n        on: {\n          success: () => {\n            this.$confirm({\n              title: '提示',\n              content: `请再次确认是否同步，同步后会覆盖售出课程包，将会有2～5s无法正常使用`,\n              onOk: () => {\n                this.listService.setSyncSold(id).subscribe(res => {\n                  this.$modalRouter.push({\n                    name: 'success-tip'\n                  })\n                  this.$router.reload()\n                })\n              },\n              onCancel() {}\n            })\n          }\n        }\n      })\n    },\n    deletePackage() {\n      let id = this.info$.id\n      let name = this.info$.course_name\n      this.userPackageActions\n        .deletePackage(\n          id,\n          name,\n          this.listService.deletePackage.bind(this.listService)\n        )\n        .then(res => {\n          this.$router.push({ path: 'list' })\n          console.log(res)\n        })\n    },\n    onEdit() {\n      let id = this.info$.id\n      this.userPackageActions.onEdit({ pageType: this.pageType, id })\n    },\n    updateRight() {\n      let id = this.info$.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-rights',\n        props: {\n          id,\n          isSync: true,\n          isShowLink: true,\n          isBrandTaskLink: true\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["info.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"info.vue","sourceRoot":"src/views/pages/brand/product/package","sourcesContent":["<template>\n  <div class=\"page-brand-package-info\">\n    <biz-package-info :info=\"info$\" :btn-options=\"btnOptions\">\n      <div slot=\"actions\">\n        <st-btn-actions :options=\"btnOptions\"></st-btn-actions>\n      </div>\n    </biz-package-info>\n  </div>\n</template>\n\n<script>\nimport { InfoService } from './info.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport ShopList from '@/views/biz-modals/package/shop-list'\nimport Synchronize from '@/views/biz-modals/package/synchronize'\nimport SuccessTip from '@/views/biz-modals/package/success-tip'\nimport SoldCoursePackageUpdateRights from '@/views/biz-modals/sold/course/package/update-rights'\nimport userPackageActions from '@/hooks/package/package-actions.hook'\n\nimport BizPackageInfo from '@/views/biz-components/package/info/info.vue'\nimport { ListService } from './list.service'\nexport default {\n  name: 'BrandPackageInfo',\n  components: { BizPackageInfo },\n  mixins: [tableMixin],\n  modals: {\n    Synchronize,\n    SoldCoursePackageUpdateRights\n  },\n  serviceInject() {\n    return {\n      service: InfoService,\n      listService: ListService\n    }\n  },\n  rxState() {\n    const { info$, auth$ } = this.service\n    return {\n      info$,\n      auth$\n    }\n  },\n  hooks() {\n    return {\n      userPackageActions: userPackageActions(this)\n    }\n  },\n  data() {\n    return {\n      pageType: 'brand'\n    }\n  },\n  computed: {\n    btnOptions() {\n      return [\n        {\n          text: '编辑',\n          click: this.onEdit,\n          if: this.auth$['brand:product:package_course|edit']\n        },\n        {\n          text: '删除',\n          click: this.deletePackage,\n          if: this.auth$['brand:product:package_course|del']\n        },\n        {\n          text: '下架',\n          click: this.onDownShelf,\n          if: this.auth$['brand:product:package_course|down']\n        },\n        {\n          text: '上架',\n          click: this.onUpShelf,\n          if: this.auth$['brand:product:package_course|up']\n        },\n        {\n          text: '应用至售出',\n          click: this.batchOperate,\n          if: this.auth$['brand:product:package_course|batch_operate']\n        },\n        {\n          text: '修改售出权益',\n          click: this.updateRight,\n          if: this.auth$['brand:product:package_course|sync_rights']\n        }\n      ]\n    }\n  },\n  methods: {\n    onUpShelf() {\n      let id = this.info$.id\n      let channel = this.info$.publish_channel\n      this.userPackageActions.onUpShelf({\n        id,\n        channel,\n        pageType: this.pageType\n      })\n    },\n    onDownShelf() {\n      let id = this.info$.id\n      this.userPackageActions.onDownShelf({ id, pageType: this.pageType })\n    },\n    batchOperate() {\n      let id = this.info$.id\n      this.$modalRouter.push({\n        name: 'Synchronize',\n        on: {\n          success: () => {\n            this.$confirm({\n              title: '提示',\n              content: `请再次确认是否同步，同步后会覆盖售出课程包，将会有2～5s无法正常使用`,\n              onOk: () => {\n                this.listService.setSyncSold(id).subscribe(res => {\n                  this.$modalRouter.push({\n                    name: 'success-tip'\n                  })\n                  this.$router.reload()\n                })\n              },\n              onCancel() {}\n            })\n          }\n        }\n      })\n    },\n    deletePackage() {\n      let id = this.info$.id\n      let name = this.info$.course_name\n      this.userPackageActions\n        .deletePackage(\n          id,\n          name,\n          this.listService.deletePackage.bind(this.listService)\n        )\n        .then(res => {\n          this.$router.push({ path: 'list' })\n          console.log(res)\n        })\n    },\n    onEdit() {\n      let id = this.info$.id\n      this.userPackageActions.onEdit({ pageType: this.pageType, id })\n    },\n    updateRight() {\n      let id = this.info$.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-rights',\n        props: {\n          id,\n          isSync: true,\n          isShowLink: true,\n          isBrandTaskLink: true\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}