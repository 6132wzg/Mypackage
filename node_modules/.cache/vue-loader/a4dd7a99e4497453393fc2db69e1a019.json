{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/schedule-card.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/schedule-card.vue","mtime":1597396799925},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst toTen = time => {\n  return time\n    .split(':')\n    .map((n, i) => {\n      return {\n        0: +n,\n        1: +n / 60\n      }[i]\n    })\n    .reduce((res, n) => res + n, 0)\n}\nexport default {\n  name: 'Card',\n  bem: {\n    bCard: 'schedule-card'\n  },\n  props: {\n    cardList: {\n      type: Array,\n      default: () => {}\n    },\n    week: {\n      type: Number,\n      default: 99\n    }\n  },\n  computed: {\n    start() {\n      return this.$searchQuery.start_date\n    }\n  },\n  filters: {\n    barClass(item) {\n      const date = moment(`${item.start_date} ${item.start_time}`)\n      const current = moment()\n      if (date > current) {\n        return 'after'\n      } else if (date === current) {\n        return 'current'\n      } else if (date < current) {\n        return 'before'\n      }\n    }\n  },\n  methods: {\n    dealCourtName(courseName, currentCourseName) {\n      return currentCourseName\n        ? courseName + '.' + currentCourseName\n        : courseName\n    },\n    mbarClass(item) {\n      const date = moment(`${item.start_date} ${item.start_time}`)\n      const current = moment()\n      if (date > current) {\n        return 'after'\n      } else if (date === current) {\n        return 'current'\n      } else if (date < current) {\n        return 'before'\n      }\n    },\n    onClick(val) {\n      this.$emit('detail', val)\n    },\n    getMatrix(n) {\n      let weekOfday = moment(this.start).format('E')\n      let date = moment(this.start)\n        .subtract(weekOfday - n, 'days')\n        .format('YYYY-MM-DD')\n      n === 0 && (date = this.start)\n      const sortedList = this.cardList\n        .filter(item => item.start_date === date)\n        .map(item => {\n          if (moment(item.end_date) > moment(item.start_date)) {\n            item.overload = 1\n          }\n          item.start = toTen(item.start_time)\n          item.end = toTen(item.end_time)\n          return item\n        })\n        .sort((a, b) => {\n          return a.start - b.start\n        })\n\n      const timeMatrix = []\n      let prevStart\n      let prevEnd\n      let group = []\n      let groupIndex = 0\n\n      sortedList.forEach(item => {\n        if (prevStart === undefined) {\n          prevStart = item.start\n          prevEnd = item.end\n        } else {\n          if (item.start < prevEnd) {\n            if (item.end > prevEnd) {\n              prevEnd = item.end\n            }\n          } else {\n            // 以当前item标记开始位和结束位\n            prevStart = item.start\n            prevEnd = item.end\n            // 新增分组\n            group = []\n            groupIndex++\n          }\n        }\n        group.push(item)\n\n        timeMatrix[groupIndex] = group\n      })\n      return timeMatrix\n    },\n    itemStyle(item) {\n      return {\n        top: `calc((100% - 40px) * ${item.start / 24} + 40px)`,\n        height: `${((item.end - item.start) / 24) * 100}%`\n      }\n    }\n  }\n}\n",{"version":3,"sources":["schedule-card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"schedule-card.vue","sourceRoot":"src/views/biz-components/schedule/date#","sourcesContent":["<template>\n  <div :class=\"bCard()\">\n    <section\n      v-for=\"group in getMatrix(week)\"\n      :key=\"group.id\"\n      :class=\"[bCard('item-group'), bCard(`item-group--has-${group.length}`)]\"\n    >\n      <div\n        class=\"con-item\"\n        :class=\"[`item-${i}`, `${mbarClass(item)}`]\"\n        v-for=\"(item, i) in group\"\n        :key=\"i\"\n        @click=\"onClick(item)\"\n        :style=\"itemStyle(item)\"\n      >\n        <div class=\"schedule-card__bar\" :class=\"item | barClass\"></div>\n\n        <div :class=\"bCard('content')\">\n          <span class=\"time\">\n            <st-icon type=\"timer\"></st-icon>\n            {{ item.start_time }}-{{ item.end_time }}\n          </span>\n          <st-t3 class=\"course__name\">\n            {{ dealCourtName(item.course_name, item.current_course_name) }}\n          </st-t3>\n          <p class=\"course__coach\">{{ $c('coach') }}：{{ item.coach_name }}</p>\n        </div>\n\n        <div class=\"item__extra\" :class=\"item | barClass\">\n          <div :class=\"bCard('content')\">\n            <div class=\"mg-b8 time\">\n              <st-icon type=\"timer\"></st-icon>\n              {{ item.start_time }}-{{ item.end_time }}\n            </div>\n            <st-t3 class=\"mg-b8 course__name\">\n              {{ dealCourtName(item.course_name, item.current_course_name) }}\n            </st-t3>\n            <p class=\"mg-b8 course__item\">\n              <span class=\"label\">{{ $c('coach') }}：</span>\n              <span class=\"value\">{{ item.coach_name }}</span>\n            </p>\n            <p v-if=\"item.court_name\" class=\"mg-b8 course__item\">\n              <span class=\"label\">场地：</span>\n              <span class=\"value\">{{ item.court_name }}</span>\n            </p>\n            <p v-if=\"item.member_name\" class=\"course__item\">\n              <span class=\"label\">会员：</span>\n              <span class=\"value\">{{ item.member_name }}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nconst toTen = time => {\n  return time\n    .split(':')\n    .map((n, i) => {\n      return {\n        0: +n,\n        1: +n / 60\n      }[i]\n    })\n    .reduce((res, n) => res + n, 0)\n}\nexport default {\n  name: 'Card',\n  bem: {\n    bCard: 'schedule-card'\n  },\n  props: {\n    cardList: {\n      type: Array,\n      default: () => {}\n    },\n    week: {\n      type: Number,\n      default: 99\n    }\n  },\n  computed: {\n    start() {\n      return this.$searchQuery.start_date\n    }\n  },\n  filters: {\n    barClass(item) {\n      const date = moment(`${item.start_date} ${item.start_time}`)\n      const current = moment()\n      if (date > current) {\n        return 'after'\n      } else if (date === current) {\n        return 'current'\n      } else if (date < current) {\n        return 'before'\n      }\n    }\n  },\n  methods: {\n    dealCourtName(courseName, currentCourseName) {\n      return currentCourseName\n        ? courseName + '.' + currentCourseName\n        : courseName\n    },\n    mbarClass(item) {\n      const date = moment(`${item.start_date} ${item.start_time}`)\n      const current = moment()\n      if (date > current) {\n        return 'after'\n      } else if (date === current) {\n        return 'current'\n      } else if (date < current) {\n        return 'before'\n      }\n    },\n    onClick(val) {\n      this.$emit('detail', val)\n    },\n    getMatrix(n) {\n      let weekOfday = moment(this.start).format('E')\n      let date = moment(this.start)\n        .subtract(weekOfday - n, 'days')\n        .format('YYYY-MM-DD')\n      n === 0 && (date = this.start)\n      const sortedList = this.cardList\n        .filter(item => item.start_date === date)\n        .map(item => {\n          if (moment(item.end_date) > moment(item.start_date)) {\n            item.overload = 1\n          }\n          item.start = toTen(item.start_time)\n          item.end = toTen(item.end_time)\n          return item\n        })\n        .sort((a, b) => {\n          return a.start - b.start\n        })\n\n      const timeMatrix = []\n      let prevStart\n      let prevEnd\n      let group = []\n      let groupIndex = 0\n\n      sortedList.forEach(item => {\n        if (prevStart === undefined) {\n          prevStart = item.start\n          prevEnd = item.end\n        } else {\n          if (item.start < prevEnd) {\n            if (item.end > prevEnd) {\n              prevEnd = item.end\n            }\n          } else {\n            // 以当前item标记开始位和结束位\n            prevStart = item.start\n            prevEnd = item.end\n            // 新增分组\n            group = []\n            groupIndex++\n          }\n        }\n        group.push(item)\n\n        timeMatrix[groupIndex] = group\n      })\n      return timeMatrix\n    },\n    itemStyle(item) {\n      return {\n        top: `calc((100% - 40px) * ${item.start / 24} + 40px)`,\n        height: `${((item.end - item.start) / 24) * 100}%`\n      }\n    }\n  }\n}\n</script>\n"]}]}