{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/sms/group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/sms/group.vue","mtime":1597396799929},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ruleOptions } from \"./group.config\";\nimport { GroupService } from \"./group.service\";\nimport { USER_TYPES, SEND_TYPES, TMPL_TYPES } from '@/constants/setting/sms';\nimport { MessageService } from '@/services/message.service';\nimport { PatternService } from '@/services/pattern.service';\nexport default {\n  name: 'SettingSmsGroup',\n  bem: {\n    bModal: 'setting-sms-group'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      groupService: GroupService,\n      messageService: MessageService,\n      pattern: PatternService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.groupService.loading$,\n      templateList: this.groupService.templateList$,\n      userType: this.groupService.userType$,\n      tmplType: this.groupService.tmplType$,\n      sendType: this.groupService.sendType$,\n      crowdList: this.groupService.crowdList$,\n      sign: this.groupService.sign$\n    };\n  },\n  props: {\n    id: {\n      type: Number\n    },\n    tmpl: {\n      type: Object\n    },\n    crowd: {\n      type: Object\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      USER_TYPES: USER_TYPES,\n      SEND_TYPES: SEND_TYPES,\n      TMPL_TYPES: TMPL_TYPES,\n      show: false,\n      curUser: USER_TYPES.USER,\n      curTem: TMPL_TYPES.PERSONAL,\n      curTime: SEND_TYPES.NOW,\n      temContent: '',\n      tel: '',\n      info: {},\n      time: '',\n      isSaveChecked: false,\n      singleSmsLength: 67,\n      // 短信限制，如果大于70个字按照67字截取一条短信，否则就是一条短信\n      smsNumber: 1\n    };\n  },\n  created: function created() {\n    this.getCrowdList();\n    this.getTemplateOptionList();\n    this.getSmsSign();\n  },\n  computed: {\n    tempSmsNum: function tempSmsNum() {\n      var signLength = this.sign.length + 2; // 签名加上\"【】\"的长度\n\n      if (this.temContent.length + signLength > 70) {\n        return Math.ceil((this.temContent.length + signLength) / this.singleSmsLength);\n      } else {\n        return 1;\n      }\n    }\n  },\n  mounted: function mounted() {\n    // 编辑\n    if (this.id) {\n      this.getEditInfo(this.id);\n    } // 从短信模版跳出来\n\n\n    if (this.tmpl) {\n      this.form.setFieldsValue({\n        tmpl_type: 2,\n        tmpl_id: this.tmpl.tmpl_id\n      });\n      this.curTem = 2;\n      this.temContent = this.tmpl.content;\n      this.calcSmsNum(this.temContent);\n    }\n\n    if (this.crowd) {\n      this.form.setFieldsValue({\n        user_type: 2,\n        send_value: this.crowd.send_value\n      });\n      this.curUser = 2;\n    }\n  },\n  methods: {\n    cancel: function cancel() {},\n    // 获取人群列表\n    getCrowdList: function getCrowdList() {\n      return this.groupService.getCrowdList().subscribe();\n    },\n    getSmsSign: function getSmsSign() {\n      return this.groupService.getSmsSign().subscribe();\n    },\n    getTemplateOptionList: function getTemplateOptionList() {\n      return this.groupService.getTemplateOptionList().subscribe();\n    },\n    getCurPrizUserType: function getCurPrizUserType(e) {\n      this.curUser = e.target.value;\n    },\n    getCurTemType: function getCurTemType(e) {\n      this.curTem = e.target.value;\n    },\n    getCurTimeType: function getCurTimeType(e) {\n      this.curTime = e.target.value;\n    },\n    calcSmsNum: function calcSmsNum(value) {\n      var signLength = this.sign.length + 2; // 签名加上\"【】\"的长度\n\n      this.smsNumber = value.length + signLength > 70 ? Math.ceil((value.length + signLength) / this.singleSmsLength) : 1;\n    },\n    getCurTemContent: function getCurTemContent(e) {\n      var _this = this;\n\n      this.templateList.map(function (item) {\n        if (item.tmpl_id === e) {\n          _this.temContent = item.content;\n        }\n      });\n    },\n    isSave: function isSave(e) {\n      this.isSaveChecked = !e.target.value;\n    },\n    getEditInfo: function getEditInfo(id) {\n      var _this2 = this;\n\n      return this.groupService.getEditInfo(id).subscribe(function (res) {\n        _this2.form.setFieldsValue({\n          user_type: res.info.user_type,\n          send_value: res.info.send_value,\n          send_type: res.info.send_type,\n          send_time: moment(res.info.send_time),\n          title: res.info.title,\n          content: res.info.content,\n          tmpl_id: res.info.tmpl_id,\n          is_save: 0,\n          tmpl_type: res.info.tmpl_type\n        });\n\n        _this2.curUser = res.info.user_type;\n        _this2.curTime = res.info.send_type;\n        _this2.curTem = res.info.tmpl_type;\n        _this2.temContent = res.info.content;\n\n        if (res.info.user_type === _this2.USER_TYPES.USER) {\n          _this2.tel = res.info.send_value;\n        }\n\n        if (res.info.tmpl_type === _this2.TMPL_TYPES.CUSTOM) {\n          _this2.getCurTemContent(res.info.tmpl_id);\n        }\n      });\n    },\n    // 跳转到新增人群\n    goCrowd: function goCrowd() {\n      this.$router.push('/brand/marketing/plugin/crowd/index?type=100003\"');\n      this.show = false;\n    },\n    // 日期禁用\n    disabledStartDate: function disabledStartDate(current) {\n      return current && current.format('YYYY-MM-DD') < moment().add(0, 'days').format('YYYY-MM-DD');\n    },\n    save: function save() {\n      var _this3 = this;\n\n      this.form.validate(function (error, values) {\n        if (values.send_time) {\n          values.send_time = values.send_time.format('YYYY-MM-DD HH:mm');\n        }\n\n        if (_this3.curUser === _this3.USER_TYPES.USER) {\n          if (!_this3.tel) {\n            _this3.messageService.warn({\n              content: '请输入手机号'\n            });\n\n            return;\n          } else {\n            var telArr = _this3.tel.split(/[\\n]/);\n\n            for (var i = 0; i < telArr.length; i++) {\n              if (!_this3.pattern.MOBILE.test(telArr[i].trim())) {\n                _this3.messageService.warn({\n                  content: '请输入正确格式手机号'\n                });\n\n                return;\n              }\n            }\n          }\n\n          values.send_value = _this3.tel;\n        }\n\n        if (_this3.curUser === _this3.USER_TYPES.CROWD) {\n          if (!values.send_value) {\n            _this3.messageService.warn({\n              content: '请选择人群'\n            });\n\n            return;\n          }\n        }\n\n        if (_this3.curTem === _this3.TMPL_TYPES.PERSONAL) {\n          if (_this3.isSaveChecked && !values.title) {\n            _this3.messageService.warn({\n              content: '请输入模板标题'\n            });\n\n            return;\n          }\n\n          if (!values.content) {\n            _this3.messageService.warn({\n              content: '请输入模板内容'\n            });\n\n            return;\n          }\n        } else {\n          if (!_this3.temContent) {\n            _this3.messageService.warn({\n              content: '请填写模板内容'\n            });\n\n            return;\n          }\n\n          values.content = _this3.temContent;\n        }\n\n        if (_this3.id) {\n          values.group_id = _this3.id;\n          return _this3.groupService.editGroup(_objectSpread({}, values)).subscribe(function (res) {\n            _this3.messageService.success({\n              content: '编辑成功'\n            });\n\n            _this3.$emit('success');\n\n            _this3.show = false;\n          });\n        } else {\n          return _this3.groupService.addGroup(_objectSpread({}, values)).subscribe(function (res) {\n            _this3.messageService.success({\n              content: '新增成功'\n            });\n\n            _this3.$emit('success');\n\n            _this3.show = false;\n          });\n        }\n      });\n    }\n  }\n};",null]}