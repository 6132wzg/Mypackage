{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-3!/Users/wangzhigang/Desktop/styd/web/src/services/user.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/services/user.service.ts","mtime":1598250255711},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d, _e, _f;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Computed, computed } from 'rx-state';\nimport { tap, pluck, map } from 'rxjs/operators';\nimport { ConstApi } from '@/api/const';\nimport { MenuApi } from '@/api/v1/common/menu';\nimport { StaffApi } from '@/api/v1/staff';\nimport { TooltipApi } from '@/api/v1/admin/tooltip';\nimport { get, reduce, isPlainObject, mapValues } from 'lodash-es';\nimport { ShopApi } from '@/api/v1/shop';\nimport { StatApi } from '@/api/v1/stat/shop';\nimport Vue from 'vue';\n/**\n * 用户的全局初始信息\n */\n\nvar UserService = /*#__PURE__*/function () {\n  function UserService(constApi, menuApi, staffApi, tooltipApi, shopApi, statApi) {\n    _classCallCheck(this, UserService);\n\n    this.constApi = constApi;\n    this.menuApi = menuApi;\n    this.staffApi = staffApi;\n    this.tooltipApi = tooltipApi;\n    this.shopApi = shopApi;\n    this.statApi = statApi;\n    this.firstInited$ = new State(false);\n    this.user$ = new State({});\n    this.brand$ = new State({});\n    this.shop$ = new State({});\n    this.shopList$ = new State([]);\n    this.staffList$ = new State([]);\n    this.menuData$ = new State({\n      favorite: [],\n      menus: [],\n      first_url: ''\n    });\n    this.config$ = new State({});\n    this.isShop$ = new Computed(this.shop$.pipe(map(function (shop) {\n      return !!shop.id;\n    })));\n    this.menus$ = new Computed(this.menuData$.pipe(pluck('menus')));\n    this.firstMenuUrl$ = new Computed(this.menuData$.pipe(pluck('first_url')));\n    this.favoriteMenu$ = new Computed(this.menuData$.pipe(pluck('favorite')));\n    /**\n     * 使用版本 club 俱乐部 studio\n     */\n\n    this.useVersion$ = new Computed(this.brand$.pipe(map(function (brand) {\n      return {\n        club: 'club',\n        old_studio: 'studio',\n        studio: 'studio'\n      }[brand.version];\n    })));\n    /**\n     * 标准工作室版本\n     */\n\n    this.isBrandStudio$ = new Computed(this.brand$.pipe(map(function (brand) {\n      return !!(brand.version === 'studio');\n    })));\n    this.isThemeClub$ = new Computed(this.useVersion$.pipe(map(function (useVersion) {\n      return useVersion === 'club';\n    })));\n    this.isThemeStudio$ = new Computed(this.useVersion$.pipe(map(function (useVersion) {\n      return useVersion === 'studio';\n    })));\n    this.theme$ = new Computed(this.useVersion$.pipe(map(function (useVersion) {\n      return \"theme-\".concat(useVersion);\n    }))); // 枚举对象\n\n    this.enums$ = new State({}); // 禁用的 tooltips\n\n    this.invalidTooltips$ = new State([]);\n    this.urlData$ = new State({});\n  }\n\n  _createClass(UserService, [{\n    key: \"SET_USER\",\n    value: function SET_USER(staff) {\n      var info = staff.info;\n      this.user$.commit(function (user) {\n        user.id = info.staff_id;\n        user.name = info.staff_name;\n        user.avatar = info.staff_avatar;\n        user.mobile = info.mobile;\n      });\n    }\n  }, {\n    key: \"SET_BRAND\",\n    value: function SET_BRAND(staff) {\n      var info = staff.info;\n      this.brand$.commit(function (brand) {\n        brand.id = info.brand_id;\n        brand.name = info.brand_name;\n        brand.logo = info.brand_logo;\n        brand.priceModel = info.price_model;\n        brand.saleModel = info.sale_model;\n        brand.version = info.brand_version;\n      });\n    }\n  }, {\n    key: \"SET_SHOP\",\n    value: function SET_SHOP(staff) {\n      var info = staff.info;\n      this.shop$.commit(function (shop) {\n        shop.id = info.shop_id;\n        shop.name = info.shop_name;\n        shop.logo = info.shop_logo;\n      });\n    }\n  }, {\n    key: \"SET_ENUMS\",\n    value: function SET_ENUMS(enums) {\n      this.enums$.commit(function () {\n        return enums;\n      });\n    }\n  }, {\n    key: \"SET_CONFIG\",\n    value: function SET_CONFIG(config) {\n      this.config$.commit(function () {\n        return config;\n      });\n    }\n  }, {\n    key: \"SET_MENU_DATA\",\n    value: function SET_MENU_DATA(menuData) {\n      this.menuData$.commit(function () {\n        return menuData;\n      });\n    }\n  }, {\n    key: \"SET_INVALID_TOOLTIP\",\n    value: function SET_INVALID_TOOLTIP(res) {\n      this.invalidTooltips$.commit(function () {\n        return res.list;\n      });\n    }\n  }, {\n    key: \"SET_SHOP_LIST\",\n    value: function SET_SHOP_LIST(res) {\n      this.shopList$.commit(function () {\n        return res.list;\n      });\n    }\n  }, {\n    key: \"SET_STAFF_LIST\",\n    value: function SET_STAFF_LIST(res) {\n      this.staffList$.commit(function () {\n        return res.list;\n      });\n    }\n  }, {\n    key: \"fetchStaffInfo\",\n    value: function fetchStaffInfo() {\n      var _this = this;\n\n      return this.staffApi.getGlobalStaffInfo().pipe(tap(function (res) {\n        _this.SET_BRAND(res);\n\n        _this.SET_USER(res);\n\n        _this.SET_SHOP(res);\n      }));\n    }\n  }, {\n    key: \"fetchEnums\",\n    value: function fetchEnums() {\n      var _this2 = this;\n\n      return this.constApi.getEnum().pipe(tap(function (res) {\n        _this2.SET_ENUMS(res);\n\n        _this2.SET_CONFIG(get(res, 'version_conf.documents.value', {}));\n      }));\n    }\n  }, {\n    key: \"fetchMenuData\",\n    value: function fetchMenuData() {\n      var _this3 = this;\n\n      return this.menuApi.getList().pipe(tap(function (res) {\n        _this3.SET_MENU_DATA(res);\n      }));\n    }\n  }, {\n    key: \"fetchInvalidTooltips\",\n    value: function fetchInvalidTooltips() {\n      var _this4 = this;\n\n      return this.tooltipApi.getInvalid().pipe(tap(function (res) {\n        _this4.SET_INVALID_TOOLTIP(res);\n      }));\n    }\n  }, {\n    key: \"fetchShopList\",\n    value: function fetchShopList() {\n      var _this5 = this;\n\n      return this.shopApi.getShopList().pipe(tap(function (res) {\n        _this5.SET_SHOP_LIST(res);\n      }));\n    }\n  }, {\n    key: \"fetchStaffList\",\n    value: function fetchStaffList(query) {\n      var _this6 = this;\n\n      return this.statApi.getStaffList(query).pipe(tap(function (res) {\n        _this6.SET_STAFF_LIST(res);\n      }));\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions(enums, key) {\n      var labelField = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n      var enumObj = get(enums, key);\n\n      if (!enumObj) {\n        return [];\n      } else {\n        return reduce(enumObj.value, function (res, item, index) {\n          var _ref;\n\n          if (isPlainObject(item)) {\n            return res.concat([item]);\n          }\n\n          return res.concat([(_ref = {}, _defineProperty(_ref, labelField, item), _defineProperty(_ref, \"value\", +index), _ref)]);\n        }, []);\n      }\n    }\n    /**\n     * 通过key名获取下拉选项\n     * @example\n     * getOptions$('member.card_consume_type') => Observable([{label:'次卡',value:1},{label:'期限卡',2}])\n     */\n\n  }, {\n    key: \"getOptions$\",\n    value: function getOptions$(key) {\n      var _this7 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return computed(function (enums) {\n        var opts = _this7.getOptions(enums, key, options.labelField);\n\n        if (options.addAll) {\n          var allLabel = options.addAll === true ? '全部' : options.addAll;\n          opts = [_defineProperty({\n            value: -1\n          }, options.labelField || 'label', allLabel)].concat(opts);\n        }\n\n        console.log(opts);\n        return opts;\n      }, [this.enums$]);\n    }\n    /**\n     * 通过对象获取一组枚举值\n     * @param map\n     */\n\n  }, {\n    key: \"getOptionsMap$\",\n    value: function getOptionsMap$(map) {\n      var _this8 = this;\n\n      return computed(function (enums) {\n        return mapValues(map, function (enumKey) {\n          return _this8.getOptions(enums, enumKey);\n        });\n      }, [this.enums$]);\n    }\n    /**\n     * 获取set对象\n     * @param path\n     */\n\n  }, {\n    key: \"getEnumValue$\",\n    value: function getEnumValue$(path) {\n      return new State(get(this.enums$.snapshot(), \"\".concat(path, \".value\")));\n    }\n    /**\n     * 新增到常用菜单\n     * @param id\n     */\n\n  }, {\n    key: \"addFavorite\",\n    value: function addFavorite(id) {\n      return this.menuApi.addFavorite(id);\n    }\n    /**\n     * 删除常用菜单\n     * @param id\n     */\n\n  }, {\n    key: \"delFavorite\",\n    value: function delFavorite(id) {\n      return this.menuApi.delFavorite(id);\n    }\n  }, {\n    key: \"c\",\n    value: function c(key) {\n      return get(this.config$.snapshot(), key, key);\n    }\n  }, {\n    key: \"interpolation\",\n    value: function interpolation(title) {\n      if (!title) {\n        return '';\n      }\n\n      var vm = new Vue({\n        template: '<span>' + title + '</span>'\n      }).$mount();\n      return vm.$el.innerText;\n    }\n  }]);\n\n  return UserService;\n}();\n\nUserService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof ConstApi !== \"undefined\" && ConstApi) === \"function\" ? _a : Object, typeof (_b = typeof MenuApi !== \"undefined\" && MenuApi) === \"function\" ? _b : Object, typeof (_c = typeof StaffApi !== \"undefined\" && StaffApi) === \"function\" ? _c : Object, typeof (_d = typeof TooltipApi !== \"undefined\" && TooltipApi) === \"function\" ? _d : Object, typeof (_e = typeof ShopApi !== \"undefined\" && ShopApi) === \"function\" ? _e : Object, typeof (_f = typeof StatApi !== \"undefined\" && StatApi) === \"function\" ? _f : Object])], UserService);\nexport { UserService };",null]}