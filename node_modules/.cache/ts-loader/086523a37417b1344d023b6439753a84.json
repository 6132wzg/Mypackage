{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/import/record.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/import/record.service.ts","mtime":1600912068151},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { ImportApi, ListParams } from '@/api/v1/setting/import/import';\n\nvar RecordService = /*#__PURE__*/function () {\n  function RecordService(importApi) {\n    _classCallCheck(this, RecordService);\n\n    this.importApi = importApi;\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.loading$ = new State({});\n  }\n\n  _createClass(RecordService, [{\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      return this.importApi.excelList(query).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return this.getList(to.meta.query);\n    }\n  }]);\n\n  return RecordService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof ListParams !== \"undefined\" && ListParams) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], RecordService.prototype, \"getList\", null);\n\nRecordService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof ImportApi !== \"undefined\" && ImportApi) === \"function\" ? _b : Object])], RecordService);\nexport { RecordService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/import/record.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,SAAT,EAAoB,UAApB,QAAsC,gCAAtC;;AAGA,IAAa,aAAb;AAIE,yBAAoB,SAApB,EAAwC;AAAA;;AAApB,SAAA,SAAA,GAAA,SAAA;AAHpB,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AAC4C;;AAJ9C;AAAA;AAAA,4BAMU,KANV,EAM2B;AAAA;;AACvB,aAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,KAAzB,EAAgC,IAAhC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAHE,CADE,CAAP;AAMD;AAbH;AAAA;AAAA,+BAca,EAdb,EAc+B,IAd/B,EAciD;AAC7C,aAAO,KAAK,OAAL,CAAa,EAAE,CAAC,IAAH,CAAQ,KAArB,CAAP;AACD;AAhBH;;AAAA;AAAA,GAAA;;AAME,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAe,U,KAAU,W,IAAV,U,MAAU,U,GAAA,E,GAAA,M,EAAzB,E,uCAAA,CAAA,E,uBAAA,E,SAAA,EAOC,IAPD,CAAA;;AANW,aAAa,GAAA,UAAA,CAAA,CADzB,UAAU,EACe,E,qDAIO,S,KAAS,W,IAAT,S,MAAS,U,GAAA,E,GAAA,M,EAJhB,CAAA,EAAb,aAAa,CAAb;SAAA,a","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { ImportApi, ListParams } from '@/api/v1/setting/import/import'\n\n@Injectable()\nexport class RecordService implements Controller {\n  list$ = new State([])\n  page$ = new State({})\n  loading$ = new State({})\n  constructor(private importApi: ImportApi) {}\n  @Effect()\n  getList(query: ListParams) {\n    return this.importApi.excelList(query).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return this.getList(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}