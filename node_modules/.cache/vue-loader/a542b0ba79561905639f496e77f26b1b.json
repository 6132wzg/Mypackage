{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/components#/slider.component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/components#/slider.component.vue","mtime":1597396799952},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport StImageUpload from '@/views/biz-components/st/image-upload/image-upload.vue'\nimport { H5WrapperService } from '@/views/pages/brand/setting/mina/components#/h5/h5-wrapper.service'\nimport { cloneDeep, find as _find, values } from 'lodash-es'\nimport draggable from 'vuedraggable'\nimport { ActivityService } from '../activity.service'\nimport overImg from '@/assets/img/brand/setting/mina/over.png'\nimport { Tree } from '@/utils/tree'\n\nexport default {\n  bem: {\n    slider: 'activity-slider-component'\n  },\n  components: {\n    draggable,\n    StImageUpload\n  },\n  serviceInject() {\n    return {\n      h5WrapperService: H5WrapperService,\n      activityService: ActivityService\n    }\n  },\n  rxState() {\n    return {\n      sliderInfo: this.h5WrapperService.sliderInfo$,\n      activityList: this.activityService.actList$\n    }\n  },\n  data() {\n    return {\n      info: {},\n      list: [],\n      selected: [],\n      filelist: [],\n      actList: [],\n      activity_id: '',\n      addItem: {\n        image_url: '',\n        activity_id: [],\n        activity_type: '',\n        activity_name: '',\n        is_default: 0,\n        is_over: 0\n      },\n      actFilterList: [],\n      overImg\n    }\n  },\n  mounted() {\n    let list = cloneDeep(this.sliderInfo)\n    let actList = cloneDeep(this.activityList.list)\n    list.forEach((item, index) => {\n      item.activity_id = [item.activity_type, item.activity_id]\n      const tree = new Tree(actList)\n      if (index !== 0 && !tree.findNodeById(item.activity_id[1])) {\n        const node =\n          actList.filter(act => act.id === item.activity_type)[0] || {}\n        let tmpArrChild = {\n          activity_name: item.activity_name,\n          activity_type: item.activity_type,\n          id: item.activity_id[1],\n          isover: true\n        }\n        let tmpProduct = {\n          product_type: item.product_type,\n          product_template_id: item.product_template_id\n        }\n        if (node.children) {\n          item.activity_type === 5\n            ? node.children.push(Object.assign(tmpArrChild, tmpProduct))\n            : node.children.push(tmpArrChild)\n        }\n      }\n    })\n    actList.forEach(item => {\n      if (!item.children.length) {\n        item.disabled = true\n      }\n    })\n    this.actList = cloneDeep(actList)\n    this.list = cloneDeep(list)\n    console.log(actList, '这是actList')\n  },\n  watch: {\n    list: {\n      deep: true,\n      handler(newVal) {\n        this.h5WrapperService.SET_H5INFO(newVal, 1)\n      }\n    }\n  },\n  methods: {\n    filterActList(id) {\n      return !!_find(this.list, o => o.activity_id[0] === id)\n    },\n    imageUploadChange(img) {\n      let addItem = Object.assign({}, this.addItem)\n      if (img.length) {\n        addItem.image_key = img[0].image_key\n        addItem.image_url = img[0].image_url\n      }\n      if (addItem.image_url) {\n        this.list.push(addItem)\n        this.addItem.activity_id = []\n        this.addItem.activity_type = ''\n        this.addItem.activity_name = ''\n      }\n    },\n    delSlider(index) {\n      this.list.splice(index, 1)\n    },\n    onActSelect(item, value) {\n      let selected = {}\n      let selecttedParent = this.actList.filter(it => it.id === value[0])[0]\n      selected = selecttedParent.children.filter(it => it.id === value[1])[0]\n      item.activity_type = selected.activity_type\n      item.activity_name = selected.activity_name\n      if (item.activity_type === 5) {\n        item.product_type = selected.product_type || -1\n        item.product_template_id = selected.product_template_id || -1\n      }\n      item.is_over = 0\n    },\n    onAddSelect(value) {\n      let selected = {}\n      let selecttedParent = this.actList.filter(it => it.id === value[0])[0]\n      selected = selecttedParent.children.filter(it => it.id === value[1])[0]\n      this.addItem.activity_type = selected.activity_type\n      this.addItem.activity_name = selected.activity_name\n      if (item.activity_type === 5) {\n        this.addItem.product_type = selected.product_type || -1\n        this.addItem.product_template_id = selected.product_template_id || -1\n      }\n    }\n  }\n}\n",null]}