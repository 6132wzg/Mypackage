{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/layouts/default#/sider-menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/layouts/default#/sider-menu.vue","mtime":1600926556072},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.string.sub\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { UserService } from '@/services/user.service';\nimport { treeToMap } from '@/utils/tree-to-map';\nimport { find, remove, constant } from 'lodash-es';\nimport { walkTree } from '@/utils/walk-tree';\nimport { extraMenuPatterns } from \"./sider-menu.config\";\nexport default {\n  name: 'DefaultBrandSiderMenu',\n  serviceInject: function serviceInject() {\n    return {\n      userService: UserService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      menuData: this.userService.menuData$\n    };\n  },\n  data: function data() {\n    return {\n      openKeys: []\n    };\n  },\n  computed: {\n    extraMenuPatterns: extraMenuPatterns,\n    menus: function menus() {\n      return this.menuData.menus || [];\n    },\n    favorite: function favorite() {\n      return this.menuData.favorite || [];\n    },\n    menuMap: function menuMap() {\n      return treeToMap(this.menus);\n    },\n    rootSubmenuKeys: function rootSubmenuKeys() {\n      return this.getRootSubmenuKeys();\n    },\n    currentSiderMenu: function currentSiderMenu() {\n      return this.findCurrentSiderMenu();\n    },\n    selectedKeys: function selectedKeys() {\n      var selectedKey = this.findSelectedKey(this.currentSiderMenu);\n      this.$emit('change', {\n        selectedKey: selectedKey,\n        currentSiderMenu: this.currentSiderMenu,\n        menus: this.menus\n      });\n      return selectedKey ? [selectedKey] : [];\n    }\n  },\n  watch: {\n    selectedKeys: function selectedKeys() {\n      this.setOpenKeys();\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.setOpenKeys();\n    },\n    isHasSubmenu: function isHasSubmenu(menu) {\n      return menu.children && menu.children.length;\n    },\n    onOpenChange: function onOpenChange(openKeys) {\n      var _this = this;\n\n      var latestOpenKey = openKeys.find(function (key) {\n        return _this.openKeys.indexOf(key) === -1;\n      });\n\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n        this.openKeys = openKeys;\n      } else {\n        this.openKeys = latestOpenKey ? [latestOpenKey] : [];\n      }\n    },\n    findCurrentSiderMenu: function findCurrentSiderMenu() {\n      var _this2 = this;\n\n      var currentSiderMenu;\n      var currentSiderMenuId;\n      var extraMenuPatterns = this.extraMenuPatterns;\n      walkTree(this.menuData.menus, function (menu) {\n        /**\n         * 一般情况根据 route name 匹配\n         * 特殊情况根据 pattern name 匹配，比如应用中心\n         */\n        var $routeName = _this2.$route.name;\n        var patternName = $routeName;\n        Object.keys(extraMenuPatterns.main).forEach(function (key) {\n          if (extraMenuPatterns.main[key].test($routeName)) {\n            patternName = key;\n          }\n        });\n\n        if (menu.url && patternName.startsWith(menu.url)) {\n          if (menu.parent_id === 0) {\n            currentSiderMenuId = menu.id;\n          } else {\n            currentSiderMenuId = menu.parent_id;\n          }\n        }\n      });\n      this.menus.forEach(function (menu) {\n        if (currentSiderMenuId === menu.id) {\n          currentSiderMenu = menu;\n        }\n      });\n      return currentSiderMenu || {};\n    },\n    findSelectedKey: function findSelectedKey() {\n      var selectedKey;\n      var $routeName = this.$route.name;\n      var patternName = $routeName;\n      var extraMenuPatterns = this.extraMenuPatterns;\n      (this.currentSiderMenu.children || []).forEach(function (item) {\n        Object.keys(extraMenuPatterns.sub).forEach(function (key) {\n          if (extraMenuPatterns.sub[key].test($routeName)) {\n            patternName = key;\n          }\n        });\n\n        if (item.url && patternName.startsWith(item.url)) {\n          selectedKey = item.id;\n        }\n      });\n      return selectedKey;\n    },\n    setOpenKeys: function setOpenKeys() {\n      var openKey = this.currentSiderMenu.id;\n      this.openKeys = openKey ? [openKey] : [];\n    },\n    setSelectedKeys: function setSelectedKeys() {\n      var selectedKey = this.findSelectedKey(this.currentSiderMenu);\n      this.selectedKeys = selectedKey ? [selectedKey] : [];\n    },\n    onClickMenuItem: function onClickMenuItem(menu) {\n      var _this$$router$resolve = this.$router.resolve({\n        name: menu.url\n      }),\n          resolved = _this$$router$resolve.resolved;\n\n      if (!resolved.matched.length) {\n        location.href = '/404';\n      } else {\n        this.$router.push({\n          name: menu.url\n        });\n      }\n    },\n    addFavorite: function addFavorite(id, subMenu) {\n      var _this3 = this;\n\n      this.userService.addFavorite(id).subscribe(function () {\n        var findMenu = find(_this3.menuData.favorite, function (item) {\n          return item.id === id;\n        });\n\n        if (!findMenu) {\n          _this3.menuData.favorite.push(subMenu);\n        }\n      });\n    },\n    delFavorite: function delFavorite(id) {\n      var _this4 = this;\n\n      var favorite = this.menuData.favorite;\n      remove(favorite, function (item) {\n        return item.id === id;\n      });\n      this.userService.delFavorite(id).subscribe(function () {\n        _this4.menuData.favorite = _toConsumableArray(favorite);\n      });\n    },\n    getRootSubmenuKeys: function getRootSubmenuKeys() {\n      var menus = this.menus;\n      var rootSubmenuKeys = [];\n      menus.forEach(function (item) {\n        rootSubmenuKeys.push(item.id);\n      });\n      return rootSubmenuKeys;\n    },\n    isfavorite: function isfavorite(id) {\n      return find(this.favorite, {\n        id: id\n      });\n    }\n  }\n};",{"version":3,"sources":["sider-menu.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"layout-default-sider__both\">\n    <div v-if=\"favorite.length\" class=\"layout-default-sider__often\">\n      <h2 class=\"layout-default-sider__often-title\">常用</h2>\n      <ul class=\"layout-default-sider__often-list\">\n        <li\n          v-for=\"(item, index) in favorite\"\n          :key=\"index\"\n          class=\"layout-default-sider__often-item\"\n        >\n          <st-icon type=\"star\" @click.native=\"delFavorite(item.id)\" />\n          <router-link\n            :to=\"{ name: item.url }\"\n            class=\"layout-default-sider__favorite-title\"\n          >\n            {{ item.name }}\n          </router-link>\n        </li>\n      </ul>\n    </div>\n    <a-menu\n      class=\"layout-default-sider__menu\"\n      :openKeys=\"openKeys\"\n      :selectedKeys=\"selectedKeys\"\n      @openChange=\"onOpenChange\"\n      mode=\"inline\"\n    >\n      <template v-for=\"menu in menus\">\n        <a-sub-menu\n          v-if=\"isHasSubmenu(menu)\"\n          :key=\"menu.id\"\n          class=\"layout-default-sider__submenu\"\n        >\n          <span slot=\"title\">\n            <st-icon :type=\"menu.icon\" />\n            <span>{{ menu.name }}</span>\n            <st-icon\n              class=\"layout-default-sider__menu-arrow open\"\n              type=\"add\"\n              size=\"8px\"\n            />\n            <st-icon\n              class=\"layout-default-sider__menu-arrow fold-up\"\n              type=\"minus\"\n              size=\"8px\"\n            />\n          </span>\n          <a-menu-item\n            v-for=\"subMenu in menu.children\"\n            :key=\"subMenu.id\"\n            class=\"layout-default-sider__menu-item sub\"\n          >\n            <st-icon\n              v-if=\"isfavorite(subMenu.id)\"\n              type=\"star\"\n              size=\"8px\"\n              class=\"layout-default-sider__menu-star active\"\n              @click.native=\"delFavorite(subMenu.id)\"\n            />\n            <st-icon\n              v-else\n              type=\"star-line\"\n              size=\"8px\"\n              class=\"layout-default-sider__menu-star\"\n              @click.native=\"addFavorite(subMenu.id, subMenu)\"\n            />\n            <span\n              @click=\"onClickMenuItem(subMenu)\"\n              class=\"layout-default-sider__menu-title\"\n            >\n              {{ subMenu.name }}\n            </span>\n          </a-menu-item>\n        </a-sub-menu>\n        <a-menu-item\n          v-else\n          :class=\"{\n            'st-menu-item-selected': menu.id === currentSiderMenu.id\n          }\"\n          class=\"ant-menu-item__only-one\"\n          :key=\"menu.id\"\n        >\n          <router-link :to=\"{ name: menu.url }\">\n            <st-icon :type=\"menu.icon\" />\n            <span>{{ menu.name }}</span>\n          </router-link>\n        </a-menu-item>\n      </template>\n    </a-menu>\n  </div>\n</template>\n<script>\nimport { UserService } from '@/services/user.service'\nimport { treeToMap } from '@/utils/tree-to-map'\nimport { find, remove, constant } from 'lodash-es'\nimport { walkTree } from '@/utils/walk-tree'\nimport { extraMenuPatterns } from './sider-menu.config'\nexport default {\n  name: 'DefaultBrandSiderMenu',\n  serviceInject() {\n    return {\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      menuData: this.userService.menuData$\n    }\n  },\n  data() {\n    return {\n      openKeys: []\n    }\n  },\n  computed: {\n    extraMenuPatterns,\n    menus() {\n      return this.menuData.menus || []\n    },\n    favorite() {\n      return this.menuData.favorite || []\n    },\n    menuMap() {\n      return treeToMap(this.menus)\n    },\n    rootSubmenuKeys() {\n      return this.getRootSubmenuKeys()\n    },\n    currentSiderMenu() {\n      return this.findCurrentSiderMenu()\n    },\n    selectedKeys() {\n      const selectedKey = this.findSelectedKey(this.currentSiderMenu)\n      this.$emit('change', {\n        selectedKey,\n        currentSiderMenu: this.currentSiderMenu,\n        menus: this.menus\n      })\n      return selectedKey ? [selectedKey] : []\n    }\n  },\n  watch: {\n    selectedKeys() {\n      this.setOpenKeys()\n    }\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    init() {\n      this.setOpenKeys()\n    },\n    isHasSubmenu(menu) {\n      return menu.children && menu.children.length\n    },\n    onOpenChange(openKeys) {\n      const latestOpenKey = openKeys.find(\n        key => this.openKeys.indexOf(key) === -1\n      )\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n        this.openKeys = openKeys\n      } else {\n        this.openKeys = latestOpenKey ? [latestOpenKey] : []\n      }\n    },\n    findCurrentSiderMenu() {\n      let currentSiderMenu\n      let currentSiderMenuId\n      const { extraMenuPatterns } = this\n      walkTree(this.menuData.menus, menu => {\n        /**\n         * 一般情况根据 route name 匹配\n         * 特殊情况根据 pattern name 匹配，比如应用中心\n         */\n        const $routeName = this.$route.name\n        let patternName = $routeName\n        Object.keys(extraMenuPatterns.main).forEach(key => {\n          if (extraMenuPatterns.main[key].test($routeName)) {\n            patternName = key\n          }\n        })\n        if (menu.url && patternName.startsWith(menu.url)) {\n          if (menu.parent_id === 0) {\n            currentSiderMenuId = menu.id\n          } else {\n            currentSiderMenuId = menu.parent_id\n          }\n        }\n      })\n      this.menus.forEach(menu => {\n        if (currentSiderMenuId === menu.id) {\n          currentSiderMenu = menu\n        }\n      })\n      return currentSiderMenu || {}\n    },\n    findSelectedKey() {\n      let selectedKey\n      const $routeName = this.$route.name\n      let patternName = $routeName\n      const { extraMenuPatterns } = this\n      ;(this.currentSiderMenu.children || []).forEach(item => {\n        Object.keys(extraMenuPatterns.sub).forEach(key => {\n          if (extraMenuPatterns.sub[key].test($routeName)) {\n            patternName = key\n          }\n        })\n        if (item.url && patternName.startsWith(item.url)) {\n          selectedKey = item.id\n        }\n      })\n      return selectedKey\n    },\n    setOpenKeys() {\n      const openKey = this.currentSiderMenu.id\n      this.openKeys = openKey ? [openKey] : []\n    },\n    setSelectedKeys() {\n      const selectedKey = this.findSelectedKey(this.currentSiderMenu)\n      this.selectedKeys = selectedKey ? [selectedKey] : []\n    },\n    onClickMenuItem(menu) {\n      const { resolved } = this.$router.resolve({\n        name: menu.url\n      })\n      if (!resolved.matched.length) {\n        location.href = '/404'\n      } else {\n        this.$router.push({\n          name: menu.url\n        })\n      }\n    },\n    addFavorite(id, subMenu) {\n      this.userService.addFavorite(id).subscribe(() => {\n        const findMenu = find(this.menuData.favorite, item => {\n          return item.id === id\n        })\n        if (!findMenu) {\n          this.menuData.favorite.push(subMenu)\n        }\n      })\n    },\n    delFavorite(id) {\n      const { favorite } = this.menuData\n      remove(favorite, item => {\n        return item.id === id\n      })\n      this.userService.delFavorite(id).subscribe(() => {\n        this.menuData.favorite = [...favorite]\n      })\n    },\n    getRootSubmenuKeys() {\n      const { menus } = this\n      const rootSubmenuKeys = []\n      menus.forEach(item => {\n        rootSubmenuKeys.push(item.id)\n      })\n      return rootSubmenuKeys\n    },\n    isfavorite(id) {\n      return find(this.favorite, { id })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/layouts/default#"}]}