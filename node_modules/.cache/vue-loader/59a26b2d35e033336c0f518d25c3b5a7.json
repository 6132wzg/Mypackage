{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/cabinet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/cabinet.vue","mtime":1597396800002},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { MessageService } from '@/services/message.service'\nimport { CabinetService } from './cabinet.service'\nimport AddCabinetArea from './components#/add-area'\nimport EditCabinetArea from './components#/edit-area'\nimport { CabinetAreaService as AreaService } from './components#/area.service'\nimport CabinetList from './components#/cabinet-list'\nimport ShopCabinetEditPrice from '@/views/biz-modals/shop/cabinet/edit-price'\nimport ShopCabinetAddLongTerm from '@/views/biz-modals/shop/cabinet/add-long-term'\nimport ShopCabinetAddTemporary from '@/views/biz-modals/shop/cabinet/add-temporary'\nimport Draggable from 'vuedraggable'\nimport { CabinetListService } from './components#/cabinet-list.service'\n\nexport default {\n  bem: {\n    b: 'page-setting-cabinet'\n  },\n  modals: {\n    ShopCabinetEditPrice,\n    ShopCabinetAddLongTerm,\n    ShopCabinetAddTemporary\n  },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: CabinetService,\n      cabinetListService: CabinetListService,\n      areaService: AreaService\n    }\n  },\n  rxState() {\n    return {\n      list: this.areaService.list$,\n      auth: this.cabinetService.auth$,\n      loading: this.cabinetService.loading$,\n      resData: this.cabinetListService.resData$\n    }\n  },\n  data() {\n    return {\n      isActive: '',\n      editId: 0,\n      isShowAddAreaBtn: false,\n      checked: [],\n      isOperationInBatch: false\n    }\n  },\n  components: {\n    AddCabinetArea,\n    EditCabinetArea,\n    CabinetList,\n    Draggable\n  },\n  computed: {\n    type() {\n      return this.$searchQuery.type || 'temporary'\n    },\n    defaultActiveKey() {\n      return +this.$searchQuery.id || 0\n    },\n    currentArea() {\n      const { list } = this\n      const id = this.$searchQuery.id\n      let currentArea = {}\n      list.forEach(item => {\n        if (item.id === +id) {\n          currentArea = item\n        }\n      })\n      return currentArea\n    },\n    areaName() {\n      return this.currentArea.area_name\n    },\n    listMap() {\n      const list = this.resData.list\n      const map = new Map()\n      list.map(item => {\n        map.set(item.id, item)\n      })\n      return map\n    }\n  },\n  created() {\n    this.initQueryId()\n  },\n  methods: {\n    initQueryId() {\n      const list = this.list\n      const queryId = this.$searchQuery.id\n      const id = (list[0] && list[0].id) || 0\n      this.queryHandler({ id })\n    },\n    addArea() {\n      this.isShowAddAreaBtn = true\n    },\n    editArea(id) {\n      this.editId = id\n    },\n    delArea(item) {\n      if (item.bind_device > 0) {\n        this.$error({\n          title: '当前区域内有配置智能储物柜，若需删除，请联系三体工作人员',\n          okText: '知道了'\n        })\n        return\n      }\n      if (item.cabinet_num > 0) {\n        this.$error({\n          title: '当前区域内有配置储值柜，无法删除',\n          okText: '知道了'\n        })\n        return\n      }\n      this.$confirm({\n        title: '请问是否确认删除该区域？',\n        onOk: () => {\n          this.areaService.del(item.id).subscribe(this.onDelAreaSuccess)\n        },\n        onCancel() {}\n      })\n    },\n    onDelAreaSuccess() {\n      this.messageService.success({\n        content: '删除成功'\n      })\n      this.onAreaListChange()\n    },\n    onAreaListChange(type) {\n      this.editId = 0\n      this.isShowAddAreaBtn = false\n      if (type === 'cancel') {\n        return\n      }\n      this.areaService.getList().subscribe(() => {\n        if (this.list.length <= 1) {\n          this.initQueryId()\n        }\n      })\n    },\n    onAreaChange(id) {\n      this.queryHandler({ id })\n    },\n    onAreaSortChange(e) {\n      this.cabinetService.sort(this.list).subscribe()\n    },\n    onCabinetTabChange(key) {\n      this.queryHandler({ type: key })\n      this.checked = []\n      this.isOperationInBatch = false\n    },\n    queryHandler(query) {\n      this.$router.push({\n        query: Object.assign({ ...this.$searchQuery }, query)\n      })\n    },\n    onCabinetListChange() {\n      this.$router.push({\n        query: this.$searchQuery\n      })\n      this.onAreaListChange()\n    },\n    onCabinetSelectChange(checked) {\n      this.checked = checked\n    },\n    onDelCabinet() {\n      const flagText = this.validSelectedData()\n      if (flagText === 'smart') {\n        this.$error({\n          title: '当前选中柜子有智能储物柜，若需删除，请联系三体工作人员',\n          okText: '知道了'\n        })\n        return\n      }\n      if (flagText === 'using') {\n        this.$error({\n          title: '选择的储物柜正在使用中，无法删除',\n          okText: '知道了'\n        })\n        return\n      }\n      this.$confirm({\n        title: '确认删除选择的储物柜？',\n        onOk: () => {\n          this.cabinetService\n            .del({\n              ids: this.checked\n            })\n            .subscribe(this.onDelCabinetSuccess)\n        },\n        onCancel() {}\n      })\n    },\n    onDelCabinetSuccess() {\n      this.messageService.success({\n        content: '删除成功'\n      })\n      this.checked = []\n      this.isOperationInBatch = false\n      this.onCabinetListChange()\n    },\n    changeOperationMode() {\n      this.isOperationInBatch = !this.isOperationInBatch\n    },\n    openBatchAdd() {\n      const { id } = this.$searchQuery\n      const { type, areaName } = this\n      if (!+id) {\n        this.messageService.error({\n          content: '请先新增区域'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: `shop-cabinet-add-${type}`,\n        props: {\n          id,\n          type,\n          areaName\n        },\n        on: {\n          change: this.onCabinetListChange\n        }\n      })\n    },\n    validSelectedData() {\n      const type = this.$searchQuery.type\n      for (let i = 0; i < this.checked.length; i++) {\n        const temp = this.listMap.get(this.checked[i])\n        if (temp.is_smart) {\n          return 'smart'\n        }\n        if (type === 'long-term' && temp.sale_status === 1) {\n          return 'using'\n        }\n        if (type === 'temporary' && temp.cabinet_business_type === 2) {\n          return 'using'\n        }\n      }\n      return 'none'\n    }\n  }\n}\n",null]}