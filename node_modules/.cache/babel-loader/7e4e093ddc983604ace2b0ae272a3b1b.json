{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-store-data-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-store-data-line.vue","mtime":1591147717126},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport { toKFilter } from \"./filters\";\nimport { View } from 'st-data-set';\nimport { Chart } from '@antv/g2';\nimport chartMixin from \"./mixin\";\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * 数据\n     * @example\n     * [{date:'05-28',私教预约人数:250,私教签到人数:250,团体课排课人数:20}]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 343\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: function _default() {\n        return ['amount'];\n      }\n    },\n    // 使用字段提示标题\n    tooltipKey: {\n      type: String\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#5095FC', '#6831D7', '#06DB8C', '#872333', '#98db23'];\n      }\n    },\n    shadowColors: {\n      type: Array,\n      default: function _default() {\n        return ['rgba(80,149,252,.4)', 'rgba(104,49,215,.4)', 'rgba(6,219,140,.4)', 'rgba(135,35,51,.4)', 'rgba(152,219,35,.4)'];\n      }\n    },\n    unit: {\n      type: String,\n      default: '元'\n    }\n  },\n  computed: {\n    colorMap: function colorMap() {\n      var _this = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this.colors[idx % _this.colors.length];\n        return res;\n      }, {});\n    },\n    shadowColorMap: function shadowColorMap() {\n      var _this2 = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this2.shadowColors[idx % _this2.shadowColors.length];\n        return res;\n      }, {});\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      });\n    },\n    initChart: function initChart() {\n      var _this3 = this;\n\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [28, 'auto', 32, 'auto'],\n        renderer: 'svg'\n      });\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      });\n      this.chart.scale('value', {\n        min: 0\n      });\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      });\n      this.chart.line().style('name', {\n        shadowColor: function shadowColor(name) {\n          return _this3.shadowColorMap[name];\n        } // shadowBlur: 20,\n        // shadowOffsetY: 4\n\n      }).tooltip('name*value', function (name, value) {\n        return {\n          name: _this3.tooltipKey,\n          value: value + _this3.unit\n        };\n      }).shape('smooth').size(2).position('date*value').color('name', this.colors);\n      this.chart.render();\n    }\n  }\n};",null]}