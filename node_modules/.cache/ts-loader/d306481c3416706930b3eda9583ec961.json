{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/mina/index.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/mina/index.service.ts","mtime":1591147717356},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { SettingMinaApi } from '@/api/v1/setting/mina';\nimport { tap } from 'rxjs/operators';\nimport { State, Effect } from 'rx-state';\n\nvar IndexService = /*#__PURE__*/function () {\n  function IndexService(settingMinaApi) {\n    _classCallCheck(this, IndexService);\n\n    this.settingMinaApi = settingMinaApi;\n    this.info$ = new State({});\n    this.loading$ = new State({});\n  }\n\n  _createClass(IndexService, [{\n    key: \"getInfo\",\n    value: function getInfo() {\n      var _this = this;\n\n      return this.settingMinaApi.getInfo().pipe(tap(function (res) {\n        _this.info$.commit(function () {\n          return res;\n        });\n      }));\n    }\n  }, {\n    key: \"subAudit\",\n    value: function subAudit() {\n      return this.settingMinaApi.subAudit();\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter(to, from) {\n      return this.getInfo();\n    }\n  }]);\n\n  return IndexService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], IndexService.prototype, \"getInfo\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], IndexService.prototype, \"subAudit\", null);\n\nIndexService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof SettingMinaApi !== \"undefined\" && SettingMinaApi) === \"function\" ? _a : Object])], IndexService);\nexport { IndexService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/mina/index.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,cAAT,QAA+B,uBAA/B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;;AAGA,IAAa,YAAb;AAGE,wBAAoB,cAApB,EAAkD;AAAA;;AAA9B,SAAA,cAAA,GAAA,cAAA;AAFpB,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACsD;;AAHxD;AAAA;AAAA,8BAKS;AAAA;;AACL,aAAO,KAAK,cAAL,CAAoB,OAApB,GAA8B,IAA9B,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAN;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AAXH;AAAA;AAAA,+BAaU;AACN,aAAO,KAAK,cAAL,CAAoB,QAApB,EAAP;AACD;AAfH;AAAA;AAAA,qCAgBmB,EAhBnB,EAgBqC,IAhBrC,EAgBuD;AACnD,aAAO,KAAK,OAAL,EAAP;AACD;AAlBH;;AAAA;AAAA,GAAA;;AAKE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,sBAAA,E,SAAA,EAMC,IAND,CAAA;;AAQA,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,sBAAA,E,UAAA,EAEC,IAFD,CAAA;;AAbW,YAAY,GAAA,UAAA,CAAA,CADxB,UAAU,EACc,E,qDAGa,c,KAAc,W,IAAd,c,MAAc,U,GAAA,E,GAAA,M,EAH3B,CAAA,EAAZ,YAAY,CAAZ;SAAA,Y","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { SettingMinaApi } from '@/api/v1/setting/mina'\nimport { tap } from 'rxjs/operators'\nimport { State, Effect } from 'rx-state'\n\n@Injectable()\nexport class IndexService {\n  info$ = new State({})\n  loading$ = new State({})\n  constructor(private settingMinaApi: SettingMinaApi) {}\n  @Effect()\n  getInfo() {\n    return this.settingMinaApi.getInfo().pipe(\n      tap(res => {\n        this.info$.commit(() => res)\n      })\n    )\n  }\n  @Effect()\n  subAudit() {\n    return this.settingMinaApi.subAudit()\n  }\n  beforeRouteEnter(to: ServiceRoute, from: ServiceRoute) {\n    return this.getInfo()\n  }\n}\n"],"sourceRoot":""}]}