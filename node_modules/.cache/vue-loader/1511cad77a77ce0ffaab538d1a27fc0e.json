{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/shortcut-model.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/shortcut-model.vue","mtime":1597396800000},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ShortcutModelService } from './shortcut-model.service'\n\nimport FrontAddReserve from '@/views/biz-modals/front/add-reserve'\nimport ShopFinanceGatheringEarnestAdd from '@/views/biz-modals/shop/finance/gathering/earnest/add'\nimport SoldDealSaleCabinet from '@/views/biz-modals/sold/deal/sale-cabinet'\nimport SoldDealSaleCourse from '@/views/biz-modals/sold/deal/sale-course'\nimport SoldDealSaleDepositCard from '@/views/biz-modals/sold/deal/sale-deposit-card'\nimport SoldDealSaleMemberCard from '@/views/biz-modals/sold/deal/sale-member-card'\nimport SoldDealSalePersonalCourse from '@/views/biz-modals/sold/deal/sale-personal-course'\nimport SoldDealSaleSmallCourse from '@/views/biz-modals/sold/deal/sale-small-course'\nimport ShopReceptionEditShortcuts from '@/views/biz-modals/shop/reception/edit-shortcuts'\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip'\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: '',\n\n  bem: {},\n\n  components: {},\n\n  serviceInject() {\n    return {\n      shortcutModelService: ShortcutModelService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.shortcutModelService.auth$,\n      list: this.shortcutModelService.list$,\n      loading: this.shortcutModelService.loading$\n    }\n  },\n\n  modals: {\n    SoldDealSaleMemberCard,\n    SoldDealSaleDepositCard,\n    SoldDealSalePersonalCourse,\n    SoldDealSaleSmallCourse,\n    SoldDealSaleCabinet,\n    SoldDealSaleCourse,\n    FrontAddReserve,\n    ShopFinanceGatheringEarnestAdd,\n    ShopReceptionEditShortcuts,\n    SoldDealGatheringTip,\n    SoldDealGathering\n  },\n\n  props: {},\n\n  data() {\n    return {\n      // 根据权限处理后的快捷操作列表\n      filterShortcutList: []\n    }\n  },\n\n  computed: {\n    isAllShow() {\n      const len = this.list.length\n      const fLen = this.filterShortcutList.length\n      return len === fLen\n    }\n  },\n\n  async: {},\n\n  mounted() {\n    this.getShortCutList()\n  },\n\n  methods: {\n    getShortCutList() {\n      this.shortcutModelService.getIcons().subscribe(res => {\n        this.formatShortcutList()\n      })\n    },\n    handleRemoveModels(id) {\n      let icons = this.list.map(i => {\n        if (i.id === id) i.is_show = 0\n        return i\n      })\n      console.log('icons', icons)\n      this.shortcutModelService\n        .setIcons({\n          icons\n        })\n        .subscribe(res => {\n          this.show = false\n          this.getShortCutList()\n        })\n    },\n    // 快捷操作\n    onShortcut(data) {\n      switch (data) {\n        case 'memberBill':\n          this.$modalRouter.push({\n            name: 'sold-deal-sale-member-card',\n            on: {\n              success: result => {\n                this.saleCallBack(result, 'member')\n              }\n            }\n          })\n          break\n        case 'depositBill':\n          this.$modalRouter.push({\n            name: 'sold-deal-sale-deposit-card',\n            on: {\n              success: result => {\n                this.saleCallBack(result, 'deposit')\n              }\n            }\n          })\n          break\n        case 'personalBill':\n          this.$modalRouter.push({\n            name: 'sold-deal-sale-personal-course',\n            on: {\n              success: result => {\n                this.saleCallBack(result, 'personal')\n              }\n            }\n          })\n          break\n        case 'packageBill':\n          this.$modalRouter.push({\n            name: 'sold-deal-sale-course',\n            on: {\n              success: result => {\n                this.saleCallBack(result, 'package')\n              }\n            }\n          })\n          break\n        case 'smallCourseBill':\n          this.$modalRouter.push({\n            name: 'sold-deal-sale-small-course',\n            on: {\n              success: result => {\n                this.saleCallBack(result, 'small_course_order/detail')\n              }\n            }\n          })\n          break\n        case 'cabinetBill':\n          this.$modalRouter.push({\n            name: 'sold-deal-sale-cabinet',\n            on: {\n              success: result => {\n                this.saleCallBack(result, 'cabinet_order')\n              }\n            }\n          })\n          break\n        case 'reserveAdd':\n          this.$modalRouter.push({\n            name: 'front-add-reserve',\n            on: {\n              success: result => {\n                this.$router.reload()\n              }\n            }\n          })\n          break\n        case 'earnestAdd':\n          this.$modalRouter.push({\n            name: 'shop-finance-gathering-earnest-add',\n            props: {},\n            on: {\n              success: res => {\n                this.$router.reload()\n                this.payCallBack(res.orderId, res.type, 'pay')\n              }\n            }\n          })\n          break\n        default:\n          this.$modalRouter.push({\n            name: 'shop-reception-edit-shortcuts',\n            on: {\n              success: res => {\n                this.$router.reload()\n              }\n            }\n          })\n          break\n      }\n    },\n    // 签单成功回调\n    async saleCallBack(result, type) {\n      if (result.type === 'create') {\n        // 创建订单成功\n        let props = {\n          order_id: result.orderId,\n          type,\n          message: '订单创建成功',\n          needPay: true\n        }\n        let orderSuccessRes = await this.createdGatheringTip(props)\n        this.tipCallBack(result.orderId, type, orderSuccessRes.type)\n      } else if (result.type === 'createPay') {\n        // 创建订单成功 并且到支付页面\n        let props = {\n          order_id: result.orderId,\n          type\n        }\n        let payOrderRes = await this.createdOrderPay(props)\n        this.payCallBack(result.orderId, type, payOrderRes.type)\n      }\n    },\n    // 订单收款回调\n    async payCallBack(orderId, modalType, callBackType) {\n      switch (callBackType) {\n        case 'pay':\n          this.createdGatheringTip({\n            message: '收款成功',\n            order_id: orderId\n          }).then(res => {\n            this.tipCallBack(orderId, modalType, res.type)\n          })\n          break\n      }\n    },\n    // 订单支付\n    createdOrderPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 创建成功，提示框modal\n    createdGatheringTip(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering-tip',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 提示框回调，gathering-tip\n    async tipCallBack(orderId, modalType, callBackType) {\n      switch (callBackType) {\n        case 'cancel':\n          break\n        case 'Print':\n          this.createdOrderPrint(orderId)\n          break\n        case 'ViewOrder':\n          this.createdOrderViewOrder(orderId)\n          break\n        case 'PrintOrder':\n          this.printOrder(orderId)\n          break\n        case 'Pay':\n          this.createdOrderPay({ order_id: orderId, type: modalType }).then(\n            res => {\n              this.payCallBack(orderId, modalType, res.type)\n            }\n          )\n          break\n      }\n    },\n    // 打印合同\n    createdOrderPrint(order_id) {\n      let url = `${window.location.origin}/common/contract-preview?id=${order_id}`\n      window.open(url)\n    },\n    // 查看订单\n    createdOrderViewOrder(order_id) {\n      this.$router.push({\n        name: 'shop-finance-order-info-collection-details',\n        query: {\n          id: order_id\n        }\n      })\n    },\n    // 打印小票\n    printOrder(order_id) {\n      window.open(\n        '/ticket/gathering-print?id=' + order_id,\n        '_blank',\n        'width=800,height=600'\n      )\n    },\n    formatShortcutList() {\n      console.log('list', this.list)\n      this.filterShortcutList = this.list\n        .map(i => {\n          i.auth = this.auth[i.id]\n          return i\n        })\n        .filter(i => i.auth && i.is_show)\n    },\n    onAddShortcut() {\n      this.$modalRouter.push({\n        name: 'shop-reception-edit-shortcuts',\n        on: {\n          done: () => {\n            this.getShortCutList()\n          }\n        }\n      })\n    }\n  }\n}\n",null]}