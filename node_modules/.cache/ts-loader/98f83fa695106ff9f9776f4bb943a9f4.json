{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/shop/info.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/shop/info.service.ts","mtime":1591147717357},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State } from 'rx-state/src';\nimport { ShopApi } from '@/api/v1/shop';\nimport { tap } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nvar InfoService = /*#__PURE__*/function () {\n  function InfoService(shopApi) {\n    _classCallCheck(this, InfoService);\n\n    this.shopApi = shopApi;\n    this.info$ = new State({});\n    this.serviceList$ = new State([]);\n  }\n\n  _createClass(InfoService, [{\n    key: \"getInfo\",\n    value: function getInfo(id) {\n      var _this = this;\n\n      return this.shopApi.getInfo(id).pipe(tap(function (res) {\n        _this.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"getServiceList\",\n    value: function getServiceList() {\n      var _this2 = this;\n\n      return this.shopApi.getServiceList().pipe(tap(function (res) {\n        _this2.serviceList$.commit(function () {\n          return res.services;\n        });\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init(id) {\n      return forkJoin(this.getInfo(id), this.getServiceList());\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to) {\n      return this.init(to.meta.query.id);\n    }\n  }]);\n\n  return InfoService;\n}();\n\nInfoService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof ShopApi !== \"undefined\" && ShopApi) === \"function\" ? _a : Object])], InfoService);\nexport { InfoService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/shop/info.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,QAAsB,cAAtB;AACA,SAAS,OAAT,QAAwB,eAAxB;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,QAAT,QAAyB,MAAzB;;AAGA,IAAa,WAAb;AAGE,uBAAoB,OAApB,EAAoC;AAAA;;AAAhB,SAAA,OAAA,GAAA,OAAA;AAFpB,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,YAAA,GAAe,IAAI,KAAJ,CAAU,EAAV,CAAf;AACwC;;AAH1C;AAAA;AAAA,4BAIU,EAJV,EAIoB;AAAA;;AAChB,aAAO,KAAK,OAAL,CAAa,OAAb,CAAqB,EAArB,EAAyB,IAAzB,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AAVH;AAAA;AAAA,qCAWgB;AAAA;;AACZ,aAAO,KAAK,OAAL,CAAa,cAAb,GAA8B,IAA9B,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,YAAL,CAAkB,MAAlB,CAAyB;AAAA,iBAAM,GAAG,CAAC,QAAV;AAAA,SAAzB;AACD,OAFE,CADE,CAAP;AAKD;AAjBH;AAAA;AAAA,yBAkBO,EAlBP,EAkBiB;AACb,aAAO,QAAQ,CAAC,KAAK,OAAL,CAAa,EAAb,CAAD,EAAmB,KAAK,cAAL,EAAnB,CAAf;AACD;AApBH;AAAA;AAAA,+BAqBa,EArBb,EAqB6B;AACzB,aAAO,KAAK,IAAL,CAAU,EAAE,CAAC,IAAH,CAAQ,KAAR,CAAc,EAAxB,CAAP;AACD;AAvBH;;AAAA;AAAA,GAAA;;AAAa,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDAGO,O,KAAO,W,IAAP,O,MAAO,U,GAAA,E,GAAA,M,EAHd,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { State } from 'rx-state/src'\nimport { ShopApi } from '@/api/v1/shop'\nimport { tap } from 'rxjs/operators'\nimport { forkJoin } from 'rxjs'\n\n@Injectable()\nexport class InfoService implements Controller {\n  info$ = new State({})\n  serviceList$ = new State([])\n  constructor(private shopApi: ShopApi) {}\n  getInfo(id: string) {\n    return this.shopApi.getInfo(id).pipe(\n      tap((res: any) => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n  getServiceList() {\n    return this.shopApi.getServiceList().pipe(\n      tap((res: any) => {\n        this.serviceList$.commit(() => res.services)\n      })\n    )\n  }\n  init(id: string) {\n    return forkJoin(this.getInfo(id), this.getServiceList())\n  }\n  beforeEach(to: ServiceRoute) {\n    return this.init(to.meta.query.id)\n  }\n}\n"],"sourceRoot":""}]}