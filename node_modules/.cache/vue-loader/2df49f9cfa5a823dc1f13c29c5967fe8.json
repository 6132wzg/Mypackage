{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/components#/step1-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/components#/step1-form.vue","mtime":1596188219509},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ruleOptions } from './form.config'\nimport { PatternService } from '@/services/pattern.service'\nimport StImageUpload from '@/views/biz-components/st/image-upload/image-upload.vue'\nimport MapButton from '@/views/biz-components/map-button/map-button'\nimport StEditor from '@/views/biz-components/st/editor/editor.vue'\nimport moment from 'moment'\nimport { ACTIVITY_STATUS } from '@/constants/brand/marketing'\nimport { cloneDeep } from 'lodash-es'\nimport { CopyService } from '../copy.service'\nimport { EditService } from '../edit.service'\n\nexport default {\n  name: 'Step1Form',\n  bem: {\n    b: 'step-form-activity'\n  },\n  serviceInject() {\n    return {\n      copyService: CopyService,\n      editService: EditService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    const { defaultForm$ } = this.copyService\n    return {\n      defaultForm$\n    }\n  },\n  data() {\n    const that = this\n    const form = this.$stForm.create({\n      onValuesChange(props, values) {\n        that.$nextTick().then(() => {\n          that.formInfo = { ...that.formInfo, ...that.form.getFieldsValue() }\n          that.$emit('change', that.formInfo)\n        })\n      }\n    })\n    const decorators = form.decorators(ruleOptions)\n    return {\n      ACTIVITY_STATUS,\n      isEditor: false,\n      isPoster: false,\n      isAddress: false,\n      form,\n      formInfo: {},\n      decorators,\n      fileShareList: [],\n      address: {},\n      content: ''\n    }\n  },\n  props: {\n    isCopy: {\n      type: Boolean,\n      default: false\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    isMemberNumDisabled() {\n      return (\n        this.isEdit &&\n        this.defaultForm$.activity_status === ACTIVITY_STATUS.PUBLISHED &&\n        this.defaultForm$.member_limit_num === 0\n      )\n    }\n  },\n  created() {\n    if (!this.isCopy && !this.isEdit) return\n    this.initForm()\n  },\n  components: {\n    MapButton,\n    StEditor,\n    StImageUpload\n  },\n  watch: {\n    content(newValue, oldValue) {\n      this.$set(this.formInfo, 'content', newValue)\n      this.$emit('change', this.formInfo)\n    }\n  },\n  methods: {\n    moment,\n    onChangeEditor() {\n      this.isEditor = this.content.length === 0\n      return this.content.length === 0\n    },\n    onChangePoster() {\n      this.isPoster = this.fileShareList.length === 0\n      return this.fileShareList.length === 0\n    },\n    onChangeAddress() {\n      this.isAddress = !!!this.address.address\n      return !!!this.address.address\n    },\n    initForm() {\n      this.$nextTick().then(() => {\n        const date = [\n          moment(this.defaultForm$.start_time),\n          moment(this.defaultForm$.end_time)\n        ]\n        this.content = this.defaultForm$.description\n        this.fileShareList.push(this.defaultForm$.image)\n        this.$set(this.formInfo, 'imageUrl', this.defaultForm$.image.image_url)\n        const {\n          address,\n          lat,\n          lng,\n          district,\n          province,\n          city\n        } = this.defaultForm$\n        this.address = {\n          address,\n          lat,\n          lng,\n          district,\n          province,\n          city\n        }\n        this.$set(this.formInfo, 'address', address)\n        this.$emit('change', this.formInfo)\n        this.form.setFieldsValue({\n          activity_name: this.defaultForm$.activity_name,\n          date,\n          member_limit_num: this.defaultForm$.member_limit_num\n        })\n      })\n    },\n    onShareChangeGetImage(imageFiles) {\n      // 如果是编辑应该把原来image_id传过去\n      if (this.defaultForm$.image && this.isEdit) {\n        imageFiles[0].image_id = this.defaultForm$.image.image_id\n      }\n      this.$set(this.formInfo, 'imageUrl', imageFiles[0].image_url)\n      this.$emit('change', this.formInfo)\n      this.fileShareList = cloneDeep(imageFiles)\n      this.onChangePoster()\n    },\n    onSelectGetAddress(address) {\n      this.$set(this.formInfo, 'address', address.address)\n      this.$emit('change', this.formInfo)\n      this.address = address\n      this.onChangeAddress()\n    },\n    disabledDate(current) {\n      return (\n        current && current.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')\n      )\n    },\n    onSubmit() {\n      this.form\n        .validate()\n        .then(values => {\n          if (\n            this.onChangeEditor() ||\n            this.onChangePoster() ||\n            this.onChangeAddress()\n          )\n            return\n          let { activity_name, member_limit_num } = values\n          const start_time = values.date[0].format('YYYY-MM-DD HH:mm')\n          const end_time = values.date[1].format('YYYY-MM-DD HH:mm')\n          const image = this.file\n          const { address, province, city, district, lat, lng } = this.address\n          const activity_id = this.isEdit\n            ? this.defaultForm$.activity_id\n            : undefined\n          const form = {\n            activity_id,\n            address,\n            province,\n            city,\n            district,\n            lat,\n            lng,\n            end_time,\n            start_time,\n            activity_name,\n            member_limit_num: +member_limit_num,\n            description: this.content,\n            image: this.fileShareList[0]\n          }\n          this.$emit('step-submit', form)\n        })\n        .catch(() => {\n          if (\n            this.onChangeEditor() &&\n            this.onChangePoster() &&\n            this.onChangeAddress()\n          )\n            return\n        })\n    }\n  }\n}\n",null]}