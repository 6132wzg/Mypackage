{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/plugin/plugin-title/index.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/plugin/plugin-title/index.service.ts","mtime":1600926555711},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { MarketingApi } from '@/api/v1/marketing/marketing';\nimport { PluginService } from '@/services/plugin.service';\nimport { tap } from 'rxjs/operators';\n\nvar PluginTitleService = /*#__PURE__*/function () {\n  function PluginTitleService(marketingApi, pluginService) {\n    _classCallCheck(this, PluginTitleService);\n\n    this.marketingApi = marketingApi;\n    this.pluginService = pluginService;\n    this.info$ = new State({});\n    this.loading$ = new State({});\n  }\n\n  _createClass(PluginTitleService, [{\n    key: \"getPluginInfo\",\n    value: function getPluginInfo(pathName) {\n      var _this = this;\n\n      var pluginSn = this.pluginService.getPluginSnByPathName(pathName).snapshot();\n      return this.marketingApi.getPluginInfo(pluginSn).pipe(tap(function (res) {\n        _this.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }]);\n\n  return PluginTitleService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String]), __metadata(\"design:returntype\", void 0)], PluginTitleService.prototype, \"getPluginInfo\", null);\n\nPluginTitleService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof MarketingApi !== \"undefined\" && MarketingApi) === \"function\" ? _a : Object, typeof (_b = typeof PluginService !== \"undefined\" && PluginService) === \"function\" ? _b : Object])], PluginTitleService);\nexport { PluginTitleService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/plugin/plugin-title/index.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,YAAT,QAA6B,8BAA7B;AACA,SAAS,aAAT,QAA8B,2BAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;;AAGA,IAAa,kBAAb;AAGE,8BACU,YADV,EAEU,aAFV,EAEsC;AAAA;;AAD5B,SAAA,YAAA,GAAA,YAAA;AACA,SAAA,aAAA,GAAA,aAAA;AAJV,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AAII;;AANN;AAAA;AAAA,kCAQgB,QARhB,EAQgC;AAAA;;AAC5B,UAAM,QAAQ,GAAG,KAAK,aAAL,CACd,qBADc,CACQ,QADR,EAEd,QAFc,EAAjB;AAIA,aAAO,KAAK,YAAL,CAAkB,aAAlB,CAAgC,QAAhC,EAA0C,IAA1C,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AAlBH;;AAAA;AAAA,GAAA;;AAQE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,4BAAA,E,eAAA,EAUC,IAVD,CAAA;;AARW,kBAAkB,GAAA,UAAA,CAAA,CAD9B,UAAU,EACoB,E,qDAIL,Y,KAAY,W,IAAZ,Y,MAAY,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACX,aADW,KACE,WADF,IACX,aADW,MACE,UADF,GACE,EADF,GACE,M,EALT,CAAA,EAAlB,kBAAkB,CAAlB;SAAA,kB","sourcesContent":["import { Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { MarketingApi } from '@/api/v1/marketing/marketing'\nimport { PluginService } from '@/services/plugin.service'\nimport { tap } from 'rxjs/operators'\n\n@Injectable()\nexport class PluginTitleService {\n  info$ = new State({})\n  loading$ = new State({})\n  constructor(\n    private marketingApi: MarketingApi,\n    private pluginService: PluginService\n  ) {}\n  @Effect()\n  getPluginInfo(pathName: string) {\n    const pluginSn = this.pluginService\n      .getPluginSnByPathName(pathName)\n      .snapshot()\n\n    return this.marketingApi.getPluginInfo(pluginSn).pipe(\n      tap((res: any) => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n}\n"],"sourceRoot":""}]}