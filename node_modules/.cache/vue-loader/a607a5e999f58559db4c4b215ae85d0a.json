{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/edit-shortcuts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/edit-shortcuts.vue","mtime":1597396799942},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable'\nimport { EditShortcutService } from './edit-shortcuts.service'\nimport { cloneDeep } from 'lodash-es'\n\nexport default {\n  serviceInject() {\n    return {\n      editShortcutService: EditShortcutService\n    }\n  },\n  rxState() {\n    return {\n      list: this.editShortcutService.list$,\n      auth: this.editShortcutService.auth$\n    }\n  },\n  components: { draggable },\n  name: '',\n  props: {},\n  data() {\n    return {\n      show: false,\n      cloneList: [],\n      showList: [],\n      noshowList: []\n    }\n  },\n  created() {\n    this.editShortcutService.getIcons().subscribe(res => {\n      let list = cloneDeep(this.list)\n      this.cloneList = list.map(i => {\n        i.auth = this.auth[i.id]\n        return i\n      })\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    })\n  },\n  methods: {\n    save(e) {\n      let self = this\n      e.preventDefault()\n      console.log('showList', this.showList)\n      console.log('noshowList', this.noshowList)\n      this.editShortcutService\n        .setIcons({\n          icons: [...this.showList, ...this.noshowList]\n        })\n        .subscribe(res => {\n          this.show = false\n          this.$emit('done')\n        })\n    },\n    checkMove(evt) {\n      const { draggedContext, dragged, from, to } = evt\n      const draggedElement = draggedContext.element\n      const fromClassList = from.classList\n      const toClassList = to.classList\n      if (fromClassList.contains('show') && toClassList.contains('hidden')) {\n        draggedElement.is_show = 0\n      } else if (\n        fromClassList.contains('hidden') &&\n        toClassList.contains('show')\n      ) {\n        draggedElement.is_show = 1\n      }\n    },\n    handleRemoveShortcut(item) {\n      item.is_show = 0\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    },\n    handleAddShortcut(item) {\n      item.is_show = 1\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    },\n    dragStart(ev) {\n      ev.item.classList.add('dragged')\n    },\n    dragEnd(ev) {\n      ev.item.classList.remove('dragged')\n    }\n  }\n}\n",{"version":3,"sources":["edit-shortcuts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-shortcuts.vue","sourceRoot":"src/views/biz-modals/shop/reception","sourcesContent":["<template>\n  <st-modal\n    title=\"新增常用功能\"\n    @ok=\"save\"\n    v-model=\"show\"\n    width=\"464px\"\n    wrapClassName=\"edit-shortcuts\"\n  >\n    <div class=\"content\">\n      <div class=\"section\">\n        <div class=\"label\">不展示功能：</div>\n        <draggable\n          v-model=\"noshowList\"\n          :animation=\"200\"\n          group=\"shortcuts\"\n          class=\"shortcuts hidden\"\n          :move=\"checkMove\"\n          @start=\"dragStart\"\n          @end=\"dragEnd\"\n        >\n          <div\n            v-for=\"item in noshowList\"\n            :key=\"item.id\"\n            class=\"shortcut\"\n            @click=\"handleAddShortcut(item)\"\n          >\n            <span class=\"name\">{{ item.name }}</span>\n            <a-icon class=\"icon\" type=\"plus\" />\n          </div>\n        </draggable>\n      </div>\n      <div class=\"section\">\n        <div class=\"label\">展示功能：</div>\n        <draggable\n          v-model=\"showList\"\n          :animation=\"200\"\n          group=\"shortcuts\"\n          class=\"shortcuts show\"\n          :move=\"checkMove\"\n          @start=\"dragStart\"\n          @end=\"dragEnd\"\n        >\n          <div\n            v-for=\"item in showList\"\n            :key=\"item.id\"\n            class=\"shortcut\"\n            :class=\"{ hidden: !item.auth }\"\n            @click=\"handleRemoveShortcut(item)\"\n          >\n            <span class=\"name\">{{ item.name }}</span>\n            <a-icon class=\"icon\" type=\"close\" />\n          </div>\n        </draggable>\n      </div>\n    </div>\n  </st-modal>\n</template>\n<script>\nimport draggable from 'vuedraggable'\nimport { EditShortcutService } from './edit-shortcuts.service'\nimport { cloneDeep } from 'lodash-es'\n\nexport default {\n  serviceInject() {\n    return {\n      editShortcutService: EditShortcutService\n    }\n  },\n  rxState() {\n    return {\n      list: this.editShortcutService.list$,\n      auth: this.editShortcutService.auth$\n    }\n  },\n  components: { draggable },\n  name: '',\n  props: {},\n  data() {\n    return {\n      show: false,\n      cloneList: [],\n      showList: [],\n      noshowList: []\n    }\n  },\n  created() {\n    this.editShortcutService.getIcons().subscribe(res => {\n      let list = cloneDeep(this.list)\n      this.cloneList = list.map(i => {\n        i.auth = this.auth[i.id]\n        return i\n      })\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    })\n  },\n  methods: {\n    save(e) {\n      let self = this\n      e.preventDefault()\n      console.log('showList', this.showList)\n      console.log('noshowList', this.noshowList)\n      this.editShortcutService\n        .setIcons({\n          icons: [...this.showList, ...this.noshowList]\n        })\n        .subscribe(res => {\n          this.show = false\n          this.$emit('done')\n        })\n    },\n    checkMove(evt) {\n      const { draggedContext, dragged, from, to } = evt\n      const draggedElement = draggedContext.element\n      const fromClassList = from.classList\n      const toClassList = to.classList\n      if (fromClassList.contains('show') && toClassList.contains('hidden')) {\n        draggedElement.is_show = 0\n      } else if (\n        fromClassList.contains('hidden') &&\n        toClassList.contains('show')\n      ) {\n        draggedElement.is_show = 1\n      }\n    },\n    handleRemoveShortcut(item) {\n      item.is_show = 0\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    },\n    handleAddShortcut(item) {\n      item.is_show = 1\n      this.showList = this.cloneList.filter(i => i.is_show)\n      this.noshowList = this.cloneList.filter(i => !i.is_show)\n    },\n    dragStart(ev) {\n      ev.item.classList.add('dragged')\n    },\n    dragEnd(ev) {\n      ev.item.classList.remove('dragged')\n    }\n  }\n}\n</script>\n"]}]}