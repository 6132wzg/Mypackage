{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/store/order/components#/row-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/store/order/components#/row-table.vue","mtime":1591147717474},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableMixin from '@/mixins/table.mixin'\nimport { RowTableService } from './row-table.service'\nexport default {\n  name: 'rowtable',\n  mixins: [tableMixin],\n  serviceInject() {\n    return { rowTableService: RowTableService }\n  },\n  rxState() {\n    return {\n      tableData: this.rowTableService.list$,\n      page: this.rowTableService.page$,\n      loading: this.rowTableService.loading$\n    }\n  },\n  bem: {\n    basic: 'page-order-row-table'\n  },\n  data() {\n    return {\n      list: []\n    }\n  },\n  props: {\n    listData: {\n      type: Array\n    },\n    columns: {\n      type: Array\n    },\n    actionText: {\n      type: String\n    },\n    type: {\n      type: Number,\n      default: 1\n    }\n  },\n  created() {\n    this.tableData = []\n  },\n  methods: {\n    clickFn(val) {\n      this.$emit('clicks', val)\n    },\n    onTableChange(pagination) {\n      this.$searchQuery.current_page = pagination.current\n      this.$searchQuery.size = pagination.pageSize\n      switch (this.type) {\n        case 1:\n          this.rowTableService.getList(this.$searchQuery).subscribe()\n          break\n        case 2:\n          this.rowTableService.getDeliverList(this.$searchQuery).subscribe()\n          break\n        case 3:\n          this.rowTableService.getLogisticsList(this.$searchQuery).subscribe()\n          break\n      }\n    }\n  }\n}\n",{"version":3,"sources":["row-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"row-table.vue","sourceRoot":"src/views/pages/shop/store/order/components#","sourcesContent":["<template>\n  <div :class=\"basic()\">\n    <st-table\n      :page=\"page\"\n      :class=\"basic('table')\"\n      rowKey=\"id\"\n      :loading=\"\n        type === 1\n          ? loading.getList\n          : type === 2\n          ? loading.getDeliverList\n          : loading.getLogisticsList\n      \"\n      :columns=\"columns\"\n      @change=\"onTableChange\"\n      :dataSource=\"tableData\"\n    >\n      <ul\n        slot=\"product\"\n        slot-scope=\"customRender, record\"\n        :class=\"basic('sku')\"\n      >\n        <li v-for=\"(item, index) in record.product\" :key=\"index\">\n          <span :class=\"basic('product-name')\">{{ item.product_name }}</span>\n          <span :class=\"basic('product-count')\">x{{ item.product_count }}</span>\n          <span :class=\"basic('unit-price')\">ï¿¥{{ item.unit_price }}</span>\n        </li>\n      </ul>\n      <div slot=\"action\" slot-scope=\"customRender, record\" v-if=\"type !== 3\">\n        <st-table-actions>\n          <a\n            @click=\"clickFn(record)\"\n            v-if=\"type === 1 && record.auth['shop:cloud_store:order|write_off']\"\n          >\n            {{ actionText }}\n          </a>\n          <a\n            @click=\"clickFn(record)\"\n            v-if=\"\n              type === 2 && record.auth['shop:cloud_store:order|deliver_goods']\n            \"\n          >\n            {{ actionText }}\n          </a>\n        </st-table-actions>\n      </div>\n    </st-table>\n  </div>\n</template>\n<script>\nimport tableMixin from '@/mixins/table.mixin'\nimport { RowTableService } from './row-table.service'\nexport default {\n  name: 'rowtable',\n  mixins: [tableMixin],\n  serviceInject() {\n    return { rowTableService: RowTableService }\n  },\n  rxState() {\n    return {\n      tableData: this.rowTableService.list$,\n      page: this.rowTableService.page$,\n      loading: this.rowTableService.loading$\n    }\n  },\n  bem: {\n    basic: 'page-order-row-table'\n  },\n  data() {\n    return {\n      list: []\n    }\n  },\n  props: {\n    listData: {\n      type: Array\n    },\n    columns: {\n      type: Array\n    },\n    actionText: {\n      type: String\n    },\n    type: {\n      type: Number,\n      default: 1\n    }\n  },\n  created() {\n    this.tableData = []\n  },\n  methods: {\n    clickFn(val) {\n      this.$emit('clicks', val)\n    },\n    onTableChange(pagination) {\n      this.$searchQuery.current_page = pagination.current\n      this.$searchQuery.size = pagination.pageSize\n      switch (this.type) {\n        case 1:\n          this.rowTableService.getList(this.$searchQuery).subscribe()\n          break\n        case 2:\n          this.rowTableService.getDeliverList(this.$searchQuery).subscribe()\n          break\n        case 3:\n          this.rowTableService.getLogisticsList(this.$searchQuery).subscribe()\n          break\n      }\n    }\n  }\n}\n</script>\n"]}]}