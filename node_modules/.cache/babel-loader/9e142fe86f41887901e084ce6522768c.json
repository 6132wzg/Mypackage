{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/personal-team/copy.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/personal-team/copy.vue","mtime":1591147717188},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MessageService } from '@/services/message.service';\nimport { PersonalTeamScheduleScheduleService as ScheduleService } from '@/views/pages/shop/product/course/schedule/personal-team/service#/schedule.service';\nexport default {\n  name: 'CopySchedule',\n  serviceInject: function serviceInject() {\n    return {\n      messageService: MessageService,\n      scheduleService: ScheduleService\n    };\n  },\n  data: function data() {\n    return {\n      timeType: 'week',\n      moment: moment,\n      show: false,\n      disabled: true,\n      form: this.$form.createForm(this),\n      applyStartDate: moment(),\n      applyEndDate: moment(),\n      addTime: 0,\n      copyDefaulValue: []\n    };\n  },\n  created: function created() {\n    this.init('week');\n  },\n  methods: {\n    onChangeTimeType: function onChangeTimeType(e) {\n      this.init(e.target.value);\n    },\n    init: function init(type) {\n      switch (type) {\n        case 'month':\n          this.disabled = true;\n          this.copyDefaulValue[0] = moment().month(moment().month() - 1).startOf('month');\n          this.copyDefaulValue[1] = moment().month(moment().month() - 1).endOf('month');\n          this.applyEndDate = moment(this.applyStartDate.valueOf() + (this.copyDefaulValue[1].valueOf() - this.copyDefaulValue[0].valueOf()));\n          break;\n\n        case 'week':\n          this.disabled = true;\n          this.copyDefaulValue[0] = moment().week(moment().week() - 1).startOf('week');\n          this.copyDefaulValue[1] = moment().week(moment().week() - 1).endOf('week');\n          this.applyEndDate = moment(this.applyStartDate.valueOf() + (this.copyDefaulValue[1].valueOf() - this.copyDefaulValue[0].valueOf()));\n          break;\n\n        case 'custom':\n        default:\n          this.disabled = false;\n          break;\n      }\n    },\n    onChangeCopyTime: function onChangeCopyTime(val) {\n      this.applyEndDate = moment(this.applyStartDate.valueOf() + (this.copyDefaulValue[1].valueOf() - this.copyDefaulValue[0].valueOf()));\n    },\n    onChangeApplyStartDate: function onChangeApplyStartDate(val) {\n      this.applyEndDate = moment(val.valueOf() + (this.copyDefaulValue[1].valueOf() - this.copyDefaulValue[0].valueOf()));\n    },\n    onSubmit: function onSubmit() {\n      var form = {\n        copy_start_time: this.copyDefaulValue[0].format('YYYY-MM-DD'),\n        copy_end_time: this.copyDefaulValue[1].format('YYYY-MM-DD'),\n        apply_start_time: this.applyStartDate.format('YYYY-MM-DD'),\n        apply_end_time: this.applyEndDate.format('YYYY-MM-DD')\n      };\n      this.scheduleService.copy(form).subscribe(this.onCopyScheduleSuccess);\n    },\n    onCopyScheduleSuccess: function onCopyScheduleSuccess() {\n      this.show = false;\n      this.messageService.success({\n        content: '复制成功'\n      });\n      this.$emit('ok');\n    }\n  }\n};",null]}