{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/marketing/add-ticket.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/marketing/add-ticket.vue","mtime":1591147717184},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ruleOptions } from \"./add-ticket.config\";\nimport { PatternService } from '@/services/pattern.service';\nimport { MessageService } from '@/services/message.service';\nimport moment from 'moment';\nimport { cloneDeep } from 'lodash-es';\nimport { ACTIVITY_STATUS } from \"../../../constants/brand/marketing\";\nimport { UserService } from \"../../../services/user.service\";\nexport default {\n  name: 'ModalAddTicket',\n  bem: {\n    bModal: 'modal-marketing-add-ticket'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      pattern: PatternService,\n      userService: UserService,\n      messageService: MessageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      ticketTypeList: this.userService.getOptions$('plugin.ticket_type')\n    };\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false,\n      ticketType: this.ticketTypeList[1].value,\n      isBulk: 1,\n      // TODO: 用户人群暂未开启，前端静态填写 为全部用户 id 为 0\n      crowdIdOptions: [{\n        label: '全部用户',\n        value: 0\n      }],\n      radioStyle: {\n        display: 'block'\n      },\n      isShowSaleDatePicker: false\n    };\n  },\n  props: {\n    modalTitle: {\n      type: String,\n      default: '票种信息设置'\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    stepForm: {\n      type: Object,\n      default: function _default() {}\n    },\n    formData: {\n      type: Object,\n      default: function _default() {}\n    },\n    index: Number,\n    isSetting: {\n      type: Boolean,\n      default: false\n    },\n    ticket: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  computed: {\n    freeTicket: function freeTicket() {\n      return this.ticketType === 1;\n    },\n    isDisabled: function isDisabled() {\n      return !!(this.ticket && this.ticket.ticket_id && this.formData.activity_status === ACTIVITY_STATUS.PUBLISHED);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.form.setFieldsValue({\n      crowd_id: 0\n    });\n    if (!this.ticket) return;\n    this.$nextTick().then(function () {\n      var _this$ticket = _this.ticket,\n          ticket_name = _this$ticket.ticket_name,\n          ticket_price = _this$ticket.ticket_price,\n          ticket_total_num = _this$ticket.ticket_total_num,\n          buy_limit_min = _this$ticket.buy_limit_min,\n          buy_limit_max = _this$ticket.buy_limit_max,\n          group_buy_min = _this$ticket.group_buy_min,\n          buy_time_limit = _this$ticket.buy_time_limit,\n          is_group_buy = _this$ticket.is_group_buy,\n          buy_start_time = _this$ticket.buy_start_time,\n          buy_end_time = _this$ticket.buy_end_time,\n          reduce_price = _this$ticket.reduce_price,\n          ticket_remark = _this$ticket.ticket_remark;\n      _this.ticketType = ticket_price > 0 ? 2 : 1;\n      var buy_time = [_this.moment(buy_start_time), _this.moment(buy_end_time)];\n\n      _this.form.setFieldsValue({\n        ticket_name: ticket_name,\n        ticket_price: ticket_price,\n        ticket_total_num: ticket_total_num,\n        buy_limit_min: buy_limit_min,\n        buy_limit_max: buy_limit_max,\n        buy_time_limit: buy_time_limit,\n        ticket_remark: ticket_remark\n      }); // 不为免费票种时才编辑回显\n\n\n      console.log(reduce_price);\n\n      if (ticket_price !== 0) {\n        _this.form.setFieldsValue({\n          group_buy_min: group_buy_min,\n          reduce_price: reduce_price\n        });\n      } // 初始化是否自定义时间\n\n\n      _this.isShowSaleDatePicker = buy_time_limit;\n\n      if (_this.isShowSaleDatePicker === 1) {\n        _this.form.setFieldsValue({\n          buy_time: buy_time\n        });\n      }\n\n      _this.isBulk = is_group_buy;\n    });\n  },\n  methods: {\n    moment: moment,\n    formatData: function formatData(values) {\n      var ticket_name = values.ticket_name,\n          ticket_price = values.ticket_price,\n          crowd_id = values.crowd_id,\n          ticket_total_num = values.ticket_total_num,\n          buy_limit_min = values.buy_limit_min,\n          buy_limit_max = values.buy_limit_max,\n          group_buy_min = values.group_buy_min,\n          reduce_price = values.reduce_price,\n          buy_time_limit = values.buy_time_limit,\n          buy_time = values.buy_time,\n          ticket_remark = values.ticket_remark;\n      var buy_start_time = '';\n      var buy_end_time = '';\n\n      if (buy_time_limit === 1 && buy_time) {\n        buy_start_time = buy_time[0].format('YYYY-MM-DD HH:mm');\n        buy_end_time = buy_time[1].format('YYYY-MM-DD HH:mm');\n      }\n\n      var form = {\n        ticket_name: ticket_name,\n        ticket_price: ticket_price,\n        crowd_id: crowd_id,\n        ticket_total_num: ticket_total_num,\n        buy_limit_min: buy_limit_min,\n        buy_limit_max: buy_limit_max,\n        is_group_buy: this.isBulk,\n        group_buy_min: group_buy_min,\n        reduce_price: reduce_price,\n        buy_time_limit: buy_time_limit,\n        buy_start_time: buy_start_time,\n        buy_end_time: buy_end_time,\n        ticket_remark: ticket_remark\n      };\n      return form;\n    },\n    getShowData: function getShowData(values) {\n      var ticket_name = values.ticket_name,\n          ticket_price = values.ticket_price,\n          crowd_id = values.crowd_id,\n          ticket_total_num = values.ticket_total_num,\n          group_buy_min = values.group_buy_min,\n          buy_limit_min = values.buy_limit_min,\n          buy_limit_max = values.buy_limit_max,\n          reduce_price = values.reduce_price,\n          buy_time_limit = values.buy_time_limit,\n          ticket_remark = values.ticket_remark,\n          buy_time = values.buy_time;\n      var buy_start_time = '';\n      var buy_end_time = '';\n\n      if (buy_time_limit === 1) {\n        buy_start_time = buy_time[0].format('YYYY-MM-DD HH:mm');\n        buy_end_time = buy_time[1].format('YYYY-MM-DD HH:mm');\n      } else {\n        buy_start_time = this.stepForm.start_time;\n        buy_end_time = this.stepForm.end_time;\n      }\n\n      return {\n        ticket_name: ticket_name,\n        ticket_price: ticket_price,\n        ticket_total_num: ticket_total_num,\n        crowd_id: crowd_id,\n        group_buy_min: group_buy_min,\n        buy_limit_min: buy_limit_min,\n        buy_limit_max: buy_limit_max,\n        ticket_remark: ticket_remark,\n        buy_time_limit: buy_time_limit,\n        is_group_buy: this.isBulk,\n        buy_start_time: buy_start_time,\n        buy_end_time: buy_end_time,\n        reduce_price: reduce_price\n      };\n    },\n    onChangeGetTicketTotalNum: function onChangeGetTicketTotalNum() {\n      if (this.isDisabled) return;\n      this.form.setFieldsValue({\n        buy_limit_min: 1,\n        buy_limit_max: 1\n      });\n\n      if (this.isBulk) {\n        this.form.setFieldsValue({\n          group_buy_min: 1,\n          reduce_price: 1\n        });\n      }\n    },\n    onChangeGetTicketPrice: function onChangeGetTicketPrice() {\n      if (this.isBulk) {\n        this.form.setFieldsValue({\n          group_buy_min: 1,\n          reduce_price: 1\n        });\n      }\n    },\n    onSubmit: function onSubmit() {\n      var _this2 = this;\n\n      this.form.validate().then(function (values) {\n        if (values.buy_time_limit === 1 && !values.buy_time) {\n          _this2.messageService.success({\n            content: '请选择时间'\n          });\n\n          return;\n        }\n\n        var showData = _this2.getShowData(values);\n\n        var form = _this2.formatData(values);\n\n        if (_this2.ticket && _this2.ticket.ticket_id) {\n          var ticket_id = _this2.ticket.ticket_id;\n          showData = _objectSpread({\n            ticket_id: ticket_id\n          }, showData);\n          form = _objectSpread({\n            ticket_id: ticket_id\n          }, form);\n        }\n\n        _this2.show = false; // 返回表格显示数据\n\n        _this2.$emit('show', {\n          ticket: showData,\n          index: _this2.index\n        }); // 提交给后台字段\n\n\n        _this2.$emit('submit', {\n          ticket: form,\n          index: _this2.index\n        });\n      });\n    },\n    onChangeGetTicketType: function onChangeGetTicketType(e) {\n      if (this.freeTicket) {\n        this.form.setFieldsValue({\n          ticket_price: 0,\n          is_group_buy: 0\n        });\n        this.isBulk = 0;\n      }\n    },\n    getCurSaleTimeType: function getCurSaleTimeType(e) {\n      this.isShowSaleDatePicker = e.target.value;\n    },\n    disabledDate: function disabledDate(current) {\n      return current && current.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD');\n    }\n  }\n};",null]}