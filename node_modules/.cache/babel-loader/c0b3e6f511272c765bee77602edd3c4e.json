{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/cabinet/batch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/cabinet/batch.vue","mtime":1601345845217},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Modal } from 'ant-design-vue';\nimport { BATCH_TYPE } from '@/constants/common/batch-operation';\nimport { BatchService } from \"./batch.service\";\nimport { MessageService } from '@/services/message.service';\nexport default {\n  name: 'cabinet-batch',\n  serviceInject: function serviceInject() {\n    return {\n      cabinetService: BatchService,\n      messageService: MessageService\n    };\n  },\n  data: function data() {\n    return {\n      show: false,\n      BATCH_TYPE: BATCH_TYPE,\n      batch_type: BATCH_TYPE.SELECTED\n    };\n  },\n  props: {\n    ids: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    searchQuery: {\n      type: Object,\n      default: function _default() {}\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    title: {\n      type: String,\n      default: '批量操作'\n    },\n    useType: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    /**\n     * 批量删除储物柜\n     */\n    onCabinetBatchDel: function onCabinetBatchDel() {\n      var _this = this;\n\n      // 删除柜子的二次确认\n      var count = this.ids.length;\n\n      if (this.batch_type === 2) {\n        count = this.total;\n      }\n\n      this.$confirm({\n        title: '确认删柜',\n        content: \"\\u5F53\\u524D\\u9009\\u4E2D\\u5171\".concat(count, \"\\u4E2A\\u67DC\\u5B50\\uFF0C\\u8BF7\\u95EE\\u786E\\u8BA4\\u8FDB\\u884C\\u5220\\u67DC\\u64CD\\u4F5C\\uFF1F\"),\n        icon: function icon(h) {\n          return h('st-icon', {\n            attrs: {\n              type: 'question',\n              size: '22px'\n            },\n            style: {\n              display: 'inline-block',\n              float: 'left',\n              marginRight: '16px'\n            }\n          });\n        },\n        onOk: function onOk() {\n          _this.cabinetService.del({\n            ids: _this.batch_type === 2 ? [] : _this.ids,\n            batch_type: _this.batch_type,\n            cabinet_type: _this.$searchQuery.type === 'temporary' ? 2 : 1,\n            cabinet_area_id: _this.$searchQuery.id,\n            keywords: _this.$searchQuery.keywords,\n            battery: _this.$searchQuery.battery,\n            cabinet_business_type: _this.$searchQuery.cabinet_business_type\n          }).subscribe(function (res) {\n            Modal.destroyAll();\n            _this.show = false;\n\n            _this.messageService.success({\n              content: '删除成功'\n            });\n\n            _this.$emit('success');\n          });\n        }\n      });\n    },\n\n    /**\n     * 批量清柜\n     */\n    onCabinetBatchClean: function onCabinetBatchClean() {\n      var _this2 = this;\n\n      var count = this.ids.length;\n\n      if (this.batch_type === 2) {\n        count = this.total;\n      }\n\n      this.$confirm({\n        title: '确认清柜',\n        content: \"\\u5F53\\u524D\\u9009\\u4E2D\\u5171\".concat(count, \"\\u4E2A\\u67DC\\u5B50\\uFF0C\\u8BF7\\u95EE\\u786E\\u8BA4\\u8FDB\\u884C\\u6E05\\u67DC\\u64CD\\u4F5C\\uFF1F\"),\n        icon: function icon(h) {\n          return h('st-icon', {\n            attrs: {\n              type: 'question',\n              size: '22px'\n            },\n            style: {\n              display: 'inline-block',\n              float: 'left',\n              marginRight: '16px'\n            }\n          });\n        },\n        onOk: function onOk(res) {\n          _this2.cabinetService.clearCabinet(_objectSpread({\n            cabinet_ids: _this2.batch_type === 2 ? [] : _this2.ids,\n            batch_type: _this2.batch_type\n          }, _this2.searchQuery)).subscribe(function (res) {\n            Modal.destroyAll();\n            _this2.show = false;\n\n            _this2.messageService.success({\n              content: '批量清柜成功!'\n            });\n\n            _this2.$emit('success');\n          });\n        }\n      });\n    },\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n\n      switch (this.useType) {\n        case 'del':\n          this.onCabinetBatchDel();\n          break;\n\n        case 'clear':\n          this.onCabinetBatchClean();\n          break;\n      }\n    },\n    onCancel: function onCancel() {\n      this.show = false;\n    }\n  }\n};",{"version":3,"sources":["batch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAA,KAAA,QAAA,gBAAA;AACA,SAAA,UAAA,QAAA,oCAAA;AACA,SAAA,YAAA;AACA,SAAA,cAAA,QAAA,4BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,aAFA,2BAEA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,YADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,UAFA;AAGA,MAAA,UAAA,EAAA,UAAA,CAAA;AAHA,KAAA;AAKA,GAdA;AAeA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KALA;AASA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GAfA;AAqCA,EAAA,OAAA,EAAA;AACA;;;AAGA,IAAA,iBAJA,+BAIA;AAAA;;AACA;AACA,UAAA,KAAA,GAAA,KAAA,GAAA,CAAA,MAAA;;AACA,UAAA,KAAA,UAAA,KAAA,CAAA,EAAA;AACA,QAAA,KAAA,GAAA,KAAA,KAAA;AACA;;AACA,WAAA,QAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,0CAAA,KAAA,+FAFA;AAGA,QAAA,IAAA,EAAA,cAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,SAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,UADA;AAEA,cAAA,IAAA,EAAA;AAFA,aADA;AAKA,YAAA,KAAA,EAAA;AACA,cAAA,OAAA,EAAA,cADA;AAEA,cAAA,KAAA,EAAA,MAFA;AAGA,cAAA,WAAA,EAAA;AAHA;AALA,WAAA,CAAA;AAWA,SAfA;AAgBA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,KAAA,CAAA,cAAA,CACA,GADA,CACA;AACA,YAAA,GAAA,EAAA,KAAA,CAAA,UAAA,KAAA,CAAA,GAAA,EAAA,GAAA,KAAA,CAAA,GADA;AAEA,YAAA,UAAA,EAAA,KAAA,CAAA,UAFA;AAGA,YAAA,YAAA,EAAA,KAAA,CAAA,YAAA,CAAA,IAAA,KAAA,WAAA,GAAA,CAAA,GAAA,CAHA;AAIA,YAAA,eAAA,EAAA,KAAA,CAAA,YAAA,CAAA,EAJA;AAKA,YAAA,QAAA,EAAA,KAAA,CAAA,YAAA,CAAA,QALA;AAMA,YAAA,OAAA,EAAA,KAAA,CAAA,YAAA,CAAA,OANA;AAOA,YAAA,qBAAA,EAAA,KAAA,CAAA,YAAA,CAAA;AAPA,WADA,EAUA,SAVA,CAUA,UAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,UAAA;AACA,YAAA,KAAA,CAAA,IAAA,GAAA,KAAA;;AACA,YAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA;AACA,cAAA,OAAA,EAAA;AADA,aAAA;;AAGA,YAAA,KAAA,CAAA,KAAA,CAAA,SAAA;AACA,WAjBA;AAkBA;AAnCA,OAAA;AAqCA,KA/CA;;AAgDA;;;AAGA,IAAA,mBAnDA,iCAmDA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,GAAA,CAAA,MAAA;;AACA,UAAA,KAAA,UAAA,KAAA,CAAA,EAAA;AACA,QAAA,KAAA,GAAA,KAAA,KAAA;AACA;;AACA,WAAA,QAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,0CAAA,KAAA,+FAFA;AAGA,QAAA,IAAA,EAAA,cAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,SAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,UADA;AAEA,cAAA,IAAA,EAAA;AAFA,aADA;AAKA,YAAA,KAAA,EAAA;AACA,cAAA,OAAA,EAAA,cADA;AAEA,cAAA,KAAA,EAAA,MAFA;AAGA,cAAA,WAAA,EAAA;AAHA;AALA,WAAA,CAAA;AAWA,SAfA;AAgBA,QAAA,IAAA,EAAA,cAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,cAAA,CACA,YADA;AAEA,YAAA,WAAA,EAAA,MAAA,CAAA,UAAA,KAAA,CAAA,GAAA,EAAA,GAAA,MAAA,CAAA,GAFA;AAGA,YAAA,UAAA,EAAA,MAAA,CAAA;AAHA,aAIA,MAAA,CAAA,WAJA,GAMA,SANA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,UAAA;AACA,YAAA,MAAA,CAAA,IAAA,GAAA,KAAA;;AACA,YAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA;AACA,cAAA,OAAA,EAAA;AADA,aAAA;;AAGA,YAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,WAbA;AAcA;AA/BA,OAAA;AAiCA,KAzFA;AA0FA,IAAA,QA1FA,oBA0FA,CA1FA,EA0FA;AACA,MAAA,CAAA,CAAA,cAAA;;AACA,cAAA,KAAA,OAAA;AACA,aAAA,KAAA;AACA,eAAA,iBAAA;AACA;;AACA,aAAA,OAAA;AACA,eAAA,mBAAA;AACA;AANA;AAQA,KApGA;AAqGA,IAAA,QArGA,sBAqGA;AACA,WAAA,IAAA,GAAA,KAAA;AACA;AAvGA;AArCA,CAAA","sourcesContent":["<template>\n  <st-modal\n    :title=\"title\"\n    size=\"small\"\n    v-model=\"show\"\n    @ok=\"onSubmit\"\n    @cancel=\"onCancel\"\n  >\n    <st-form labelWidth=\"80px\">\n      <st-form-item label=\"选择\" required>\n        <st-batch-select-radio\n          :ids=\"ids\"\n          v-model=\"batch_type\"\n          :total=\"total\"\n        ></st-batch-select-radio>\n      </st-form-item>\n    </st-form>\n  </st-modal>\n</template>\n<script>\nimport { Modal } from 'ant-design-vue'\nimport { BATCH_TYPE } from '@/constants/common/batch-operation'\nimport { BatchService } from './batch.service'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  name: 'cabinet-batch',\n  serviceInject() {\n    return {\n      cabinetService: BatchService,\n      messageService: MessageService\n    }\n  },\n  data() {\n    return {\n      show: false,\n      BATCH_TYPE,\n      batch_type: BATCH_TYPE.SELECTED\n    }\n  },\n  props: {\n    ids: {\n      type: Array,\n      default: () => []\n    },\n    searchQuery: {\n      type: Object,\n      default: () => {}\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    title: {\n      type: String,\n      default: '批量操作'\n    },\n    useType: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    /**\n     * 批量删除储物柜\n     */\n    onCabinetBatchDel() {\n      // 删除柜子的二次确认\n      let count = this.ids.length\n      if (this.batch_type === 2) {\n        count = this.total\n      }\n      this.$confirm({\n        title: '确认删柜',\n        content: `当前选中共${count}个柜子，请问确认进行删柜操作？`,\n        icon: h => {\n          return h('st-icon', {\n            attrs: {\n              type: 'question',\n              size: '22px'\n            },\n            style: {\n              display: 'inline-block',\n              float: 'left',\n              marginRight: '16px'\n            }\n          })\n        },\n        onOk: () => {\n          this.cabinetService\n            .del({\n              ids: this.batch_type === 2 ? [] : this.ids,\n              batch_type: this.batch_type,\n              cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n              cabinet_area_id: this.$searchQuery.id,\n              keywords: this.$searchQuery.keywords,\n              battery: this.$searchQuery.battery,\n              cabinet_business_type: this.$searchQuery.cabinet_business_type\n            })\n            .subscribe(res => {\n              Modal.destroyAll()\n              this.show = false\n              this.messageService.success({\n                content: '删除成功'\n              })\n              this.$emit('success')\n            })\n        }\n      })\n    },\n    /**\n     * 批量清柜\n     */\n    onCabinetBatchClean() {\n      let count = this.ids.length\n      if (this.batch_type === 2) {\n        count = this.total\n      }\n      this.$confirm({\n        title: '确认清柜',\n        content: `当前选中共${count}个柜子，请问确认进行清柜操作？`,\n        icon: h => {\n          return h('st-icon', {\n            attrs: {\n              type: 'question',\n              size: '22px'\n            },\n            style: {\n              display: 'inline-block',\n              float: 'left',\n              marginRight: '16px'\n            }\n          })\n        },\n        onOk: res => {\n          this.cabinetService\n            .clearCabinet({\n              cabinet_ids: this.batch_type === 2 ? [] : this.ids,\n              batch_type: this.batch_type,\n              ...this.searchQuery\n            })\n            .subscribe(res => {\n              Modal.destroyAll()\n              this.show = false\n              this.messageService.success({\n                content: '批量清柜成功!'\n              })\n              this.$emit('success')\n            })\n        }\n      })\n    },\n    onSubmit(e) {\n      e.preventDefault()\n      switch (this.useType) {\n        case 'del':\n          this.onCabinetBatchDel()\n          break\n        case 'clear':\n          this.onCabinetBatchClean()\n          break\n      }\n    },\n    onCancel() {\n      this.show = false\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/shop/cabinet"}]}