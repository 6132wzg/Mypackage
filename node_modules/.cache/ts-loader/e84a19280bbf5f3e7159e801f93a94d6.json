{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-3!/Users/wangzhigang/Desktop/styd/web/src/api/v1/marketing/coupon.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/api/v1/marketing/coupon.ts","mtime":1591147717018},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"../../api\";\nexport var CouponApi = /*#__PURE__*/function (_Api) {\n  _inherits(CouponApi, _Api);\n\n  var _super = _createSuper(CouponApi);\n\n  function CouponApi() {\n    _classCallCheck(this, CouponApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CouponApi, [{\n    key: \"getList\",\n\n    /**\n     * 优惠券列表\n     */\n    value: function getList(query) {\n      return this.http.get(\"/v1/plugin/coupon\", {\n        query: query\n      });\n    }\n    /**\n     * 签单详情\n     */\n\n  }, {\n    key: \"getTransactionInfo\",\n    value: function getTransactionInfo(id, type) {\n      return this.http.get(\"/v1/order/transaction/\".concat(type, \"/\").concat(id));\n    }\n    /**\n     * 签单\n     */\n\n  }, {\n    key: \"setTransaction\",\n    value: function setTransaction(params, type) {\n      return this.http.post(\"/v1/order/transaction/\".concat(type), {\n        params: params\n      });\n    }\n    /**\n     * 获取签单的支付列表\n     * @param order_id 订单id\n     */\n\n  }, {\n    key: \"getPaymentMethodList\",\n    value: function getPaymentMethodList(order_id) {\n      return this.http.get(\"/v1/order/transaction/payment/method\", {\n        query: {\n          order_id: order_id\n        }\n      });\n    }\n    /**\n     * 订单详情\n     */\n\n  }, {\n    key: \"getTransactionPaymentInfo\",\n    value: function getTransactionPaymentInfo(id) {\n      return this.http.get(\"/v1/order/transaction/payment/\".concat(id));\n    }\n    /**\n     * 订单支付\n     */\n\n  }, {\n    key: \"payTransaction\",\n    value: function payTransaction(params) {\n      return this.http.post(\"/v1/order/transaction/payment/\".concat(params.order_id), {\n        params: params\n      });\n    }\n    /**\n     * 定金列表\n     */\n\n  }, {\n    key: \"getTransactionAdvanceList\",\n    value: function getTransactionAdvanceList(member_id) {\n      return this.http.get(\"/v1/order/transaction/advance\", {\n        query: {\n          member_id: member_id\n        }\n      });\n    }\n    /**\n     * 销售员列表\n     */\n\n  }, {\n    key: \"getTransactionSaleList\",\n    value: function getTransactionSaleList() {\n      return this.http.get(\"/v1/order/transaction/sale\");\n    }\n    /**\n     * 签单系列优惠券列表\n     * @param params 请求参数，对象传递\n     * @param type 具体的签单类型\n     */\n\n  }, {\n    key: \"getTransactionCouponList\",\n    value: function getTransactionCouponList(params, type) {\n      return this.http.get(\"/v1/order/transaction/\".concat(type, \"/coupon\"), {\n        query: _objectSpread({}, params)\n      });\n    }\n    /**\n     * 私课教练列表\n     * @param level 教练级别\n     */\n\n  }, {\n    key: \"getTransactionCoachList\",\n    value: function getTransactionCoachList(level) {\n      return this.http.get(\"/v1/order/transaction/personal/course/coach\", {\n        query: {\n          coach_level_id: level\n        }\n      });\n    }\n    /**\n     * 私教课价格梯度\n     * @param params\n     */\n\n  }, {\n    key: \"getPersonalCoursePrice\",\n    value: function getPersonalCoursePrice(params) {\n      return this.http.get(\"/v1/order/transaction/personal/course/price\", {\n        query: _objectSpread({}, params)\n      });\n    }\n    /**\n     * 根据会员手机号或名称搜索会员信息\n     */\n\n  }, {\n    key: \"getTransactionMemeberList\",\n    value: function getTransactionMemeberList(query) {\n      return this.http.get(\"/v1/order/transaction/sale/range/member\", {\n        query: query\n      });\n    }\n    /**\n     * 获取商品应付金额\n     */\n\n  }, {\n    key: \"getTransactionPrice\",\n    value: function getTransactionPrice(params) {\n      return this.http.post(\"/v1/order/transaction/price\", {\n        params: params\n      });\n    }\n    /**\n     * 增加定金，调试用，后续移除\n     */\n\n  }, {\n    key: \"setAdvance\",\n    value: function setAdvance(params) {\n      return this.http.post(\"/v1/order/transaction/advance\", {\n        params: params\n      });\n    }\n    /**\n     * 签单的会员名称检索\n     */\n\n  }, {\n    key: \"getMemberList\",\n    value: function getMemberList(member, type) {\n      return this.http.get(\"/v1/order/transaction/sale/range/member\", {\n        query: {\n          member: member,\n          type: type\n        }\n      });\n    }\n    /**\n     * 获取优惠券海报信息\n     */\n\n  }, {\n    key: \"getPosterInfo\",\n    value: function getPosterInfo(id) {\n      return this.http.get(\"/v1/plugin/coupon/poster/\".concat(id));\n    }\n    /**\n     * 获取优惠券小程序码\n     */\n\n  }, {\n    key: \"getQrcode\",\n    value: function getQrcode() {\n      return this.http.get(\"/v1/plugin/coupon/qrcode\");\n    }\n    /**\n     *  优惠券可用门店列表\n     */\n\n  }, {\n    key: \"getPluginCouponShop\",\n    value: function getPluginCouponShop(query, id) {\n      return this.http.get(\"/v1/plugin/coupon/shop/\".concat(id), {\n        query: query\n      });\n    }\n  }]);\n\n  return CouponApi;\n}(Api);",null]}