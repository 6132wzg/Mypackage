{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/change-user-type.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/change-user-type.vue","mtime":1597396799941},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ChangeUserTypeService } from './change-user-type.service'\nimport { ruleOptions } from './change-user-type.config'\nimport { PatternService } from '@/services/pattern.service'\n\nexport default {\n  serviceInject() {\n    return {\n      service: ChangeUserTypeService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      minorsType: this.service.minorsType$,\n      parentType: this.service.parentType$\n    }\n  },\n  bem: {\n    b: 'shop-binding-card'\n  },\n  props: {\n    info: {\n      type: Object\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isShowParent: false,\n      isEditParent: false\n    }\n  },\n  methods: {\n    save(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        let para = {}\n        this.changeUserType(values)\n      })\n    },\n    changeUserType(values) {\n      values.id = this.info.member_id\n      this.service.changeUserType(values).subscribe(state => {\n        this.show = false\n        this.$emit('success')\n      })\n    },\n    minorsChange(val) {\n      this.isShowParent = val\n    },\n    getParentInfo(e) {\n      if (e.target.value.length === 11) {\n        this.getParentInfoByPhone(e.target.value)\n      }\n    },\n    getParentInfoByPhone(phone) {\n      let query = {\n        mobile: phone\n      }\n      return this.service.getParentInfoByPhone(query).subscribe(res => {\n        if (res.exists) {\n          this.isEditParent = true\n          this.form.setFieldsValue({\n            parent_username: res.info.member_name\n          })\n        } else {\n          this.isEditParent = false\n          this.form.setFieldsValue({\n            parent_username: ''\n          })\n        }\n      })\n    }\n  }\n}\n",null]}