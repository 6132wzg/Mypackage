{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/editor/editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/editor/editor.vue","mtime":1591147717115},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport { AppConfig } from '@/constants/config';\nimport { ImportService } from '@/services/import.service.ts';\nimport EditorImage from \"./editor-image\";\nimport Vue from 'vue';\nvar editorEvents = ['activate', 'addUndo', 'beforeAddUndo', 'beforeExecCommand', 'beforeGetContent', 'beforeRenderUI', 'beforeSetContent', 'beforePaste', 'blur', 'change', 'clearUndos', 'click', 'contextMenu', 'copy', 'cut', 'dblclick', 'deactivate', 'dirty', 'drag', 'dragDrop', 'dragEnd', 'dragGesture', 'dragOver', 'drop', 'execCommand', 'focus', 'focusIn', 'focusOut', 'getContent', 'hide', 'init', 'keyDown', 'keyPress', 'keyUp', 'loadContent', 'mouseDown', 'mouseEnter', 'mouseLeave', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'nodeChange', 'objectResizeStart', 'objectResized', 'objectSelected', 'paste', 'postProcess', 'postRender', 'preProcess', 'progressState', 'redo', 'remove', 'reset', 'saveContent', 'selectionChange', 'setAttrib', 'setContent', 'show', 'submit', 'undo', 'visualAid'];\nexport default {\n  name: 'StEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      appConfig: AppConfig,\n      importService: ImportService\n    };\n  },\n  computed: {\n    editorId: function editorId() {\n      return 'st-editor-' + this._uid;\n    }\n  },\n  methods: {\n    onChangeGetFile: function onChangeGetFile(_ref) {\n      var image = _ref.image,\n          editor = _ref.editor;\n      editor.insertContent(\"<img src=\\\"\".concat(image.url, \"\\\">\"));\n      this.$emit('ready', editor);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var h = this.$createElement;\n    this.importService.load(['tinymce/5.0.3/tinymce.min.js']).then(function () {\n      return _this.importService.load(['tinymce/5.0.3/themes/silver/theme.min.js']);\n    }).then(function () {\n      var ctx = _this;\n      window.tinyMCE.remove();\n      window.tinyMCE.init({\n        selector: '.' + _this.editorId,\n        language: 'zh_CN',\n        // 右键菜单\n        contextmenu: ['paste'],\n        // 隐藏右下角技术支持\n        branding: false,\n        // 隐藏底栏的元素路径\n        elementpath: false,\n        menubar: false,\n        body_class: 'st-editor',\n        plugins: ['link', 'image'],\n        min_height: 153,\n        toolbar: 'undo redo | styleselect bold italic forecolor backcolor | bullist numlist | alignleft aligncenter alignright',\n        language_url: _this.appConfig.BASE_URL + 'tinymce/5.0.3/zh_CN.js',\n        // 图片上传\n        images_upload_handler: function images_upload_handler(blobInfo, success, failure) {\n          var formData = new FormData();\n          formData.append('img', blobInfo.blob());\n          ctx.$modalRouter.push({\n            name: 'face-recognition'\n          });\n        },\n        setup: function setup(editor) {\n          editor.on('change keyup undo redo', function (value) {\n            var currentContent = editor.getContent();\n            ctx.$emit('input', currentContent);\n            ctx.$emit('change', currentContent);\n          });\n        },\n        init_instance_callback: function init_instance_callback(editor) {\n          var h = this.$createElement;\n          var editorToolbarEl = document.querySelector('.tox-toolbar');\n          var ele = document.createElement('div');\n          ele.id = 'editorImageUpload';\n          editorToolbarEl.appendChild(ele);\n          new Vue({\n            components: {\n              EditorImage: EditorImage\n            },\n            render: function render(h) {\n              return h(\"editor-image\", {\n                \"attrs\": {\n                  \"editor\": editor\n                },\n                \"on\": {\n                  \"change\": ctx.onChangeGetFile\n                }\n              });\n            }\n          }).$mount('#editorImageUpload');\n          editor.setContent(ctx.value);\n          ctx.$emit('ready', editor);\n        }\n      });\n    });\n  }\n};",null]}