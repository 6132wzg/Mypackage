{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/upgrade-member.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/upgrade-member.vue","mtime":1594718340030},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import _readOnlyError from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/readOnlyError\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { UpgradeMemberService } from \"./upgrade-member.service\";\nimport { cloneDeep } from 'lodash-es';\nimport { timer } from 'rxjs';\nimport { ruleOptions } from \"./upgrade-member.config\";\nimport autoContractBtn from '@/views/biz-components/contract/auto-contract-btn.vue';\nimport moment from 'moment';\nimport { PERSON_TYPE } from '@/constants/course/small-course';\nimport EditableContractNumber from '@/views/biz-components/contract/editable-contract-number.vue';\nexport default {\n  name: 'ModalSoldUpgradeMemberCard',\n  bem: {\n    sale: 'modal-sold-deal-sale'\n  },\n  components: {\n    EditableContractNumber: EditableContractNumber\n  },\n  serviceProviders: function serviceProviders() {\n    return [UpgradeMemberService];\n  },\n  serviceInject: function serviceInject() {\n    return {\n      upgradeMemberService: UpgradeMemberService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      info: this.upgradeMemberService.info$,\n      couponList: this.upgradeMemberService.couponList$,\n      advanceList: this.upgradeMemberService.advanceList$,\n      priceInfo: this.upgradeMemberService.priceInfo$,\n      saleList: this.upgradeMemberService.saleList$,\n      loading: this.upgradeMemberService.loading$\n    };\n  },\n  props: ['id'],\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      PERSON_TYPE: PERSON_TYPE,\n      form: form,\n      decorators: decorators,\n      show: false,\n      // 会员卡列表\n      cardList: [],\n      cardLists: {},\n      // 选择的卡\n      selectCardItem: {},\n      // 选择的卡的详情\n      upgradeCardInfo: {},\n      upgradeCardsInfo: {},\n      // 规格\n      selectSpecs: null,\n      // 选择的规格\n      selectSpecsItem: {},\n      // 初始额度可编辑\n      isAmountDisabled: true,\n      getValidTime: 0,\n      // 开卡方式\n      selectOpenType: null,\n      // 有效时间\n      startTime: null,\n      endTime: '-',\n      // 购买赠送\n      giftAmount: '',\n      // 商品金额\n      cardPrice: '0',\n      // 原卡折扣\n      surplusPrice: '',\n      // 优惠\n      couponDropdownVisible: false,\n      couponText: '未选择优惠券',\n      couponAmount: '',\n      selectCoupon: '',\n      // 定金\n      advanceDropdownVisible: false,\n      advanceText: '未选择定金',\n      advanceAmount: '',\n      selectAdvance: '',\n      // 减免金额\n      reduceAmount: '',\n      // 描述\n      description: ''\n    };\n  },\n  computed: {\n    // 是否未选择卡\n    selectCardIsNone: function selectCardIsNone() {\n      return !this.selectCardItem.id;\n    },\n    // 卡跟规格，用来判断规格是否切换了，因为有可能不同的卡有同一个规格，但是同卡同规格是不会出现的\n    cardAndSpecs: function cardAndSpecs() {\n      return \"\".concat(this.selectCardItem.id || '', \"-\").concat(this.selectSpecsItem.id || '');\n    },\n    // 小计判断\n    orderAmountText: function orderAmountText() {\n      return this.priceInfo < 0 ? '小计不能为负' : '';\n    },\n    // 计算小计用\n    priceOB: function priceOB() {\n      return \"\".concat(this.selectSpecs, \"-\\n              \").concat(this.selectAdvance, \"-\\n              \").concat(this.reduceAmount, \"-\\n              \").concat(this.selectCoupon, \"-\\n              \").concat(this.surplusPrice);\n    },\n    isFamilyCard: function isFamilyCard() {\n      return this.info.card_number_type === 2;\n    }\n  },\n  watch: {\n    cardAndSpecs: function cardAndSpecs(newVal, oldVal) {\n      // 先重围优惠券\n      this.resetCoupon();\n      if (!this.upgradeCardInfo.id || !this.selectSpecsItem.id) return;\n      this.upgradeMemberService.couponAction$.dispatch({\n        member_id: this.info.member_id,\n        card_id: this.upgradeCardInfo.id,\n        specs_id: this.selectSpecsItem.id\n      });\n    },\n    // 计算小计\n    priceOB: function priceOB() {\n      this.getPrice({\n        product_id: this.selectCardItem.id,\n        product_type: this.info.contract_type,\n        specs_id: +this.selectSpecs,\n        advance_id: this.selectAdvance === -1 ? '' : this.selectAdvance,\n        reduce_amount: +this.reduceAmount,\n        coupon_id: this.selectCoupon === -1 ? '' : this.selectCoupon,\n        member_id: +this.info.member_id,\n        surplus_amount: +this.surplusPrice\n      });\n    }\n  },\n  created: function created() {\n    this.upgradeMemberService.serviceInit(this.id).subscribe();\n  },\n  methods: {\n    moment: moment,\n    // 搜索会员卡\n    onCardSearch: function onCardSearch(data) {\n      var _this = this;\n\n      if (data === '') {\n        this.cardList = [];\n      } else {\n        // 判断之前是否请求过\n        if (!this.cardLists[data]) {\n          this.upgradeMemberService.getCardList(data, this.info.card_number_type).subscribe(function (res) {\n            // 缓存请求结果\n            _this.cardLists[data] = cloneDeep(res.list);\n            _this.cardList = cloneDeep(res.list);\n          });\n        } else {\n          // 取缓存\n          this.cardList = cloneDeep(this.cardLists[data]);\n        }\n      }\n    },\n    // 重置规格/开卡方式/有效时间/商品金额/购买赠送/表单重置\n    resetData: function resetData() {\n      // 规格\n      this.selectSpecs = null;\n      this.selectSpecsItem = {}; // 开卡方式\n\n      this.selectOpenType = null; // 有效时间\n\n      this.startTime = null;\n      this.endTime = '-'; // 商品金额\n\n      this.cardPrice = '0'; // 购买赠送\n\n      this.giftAmount = '';\n      this.form.resetFields();\n    },\n    onSelectCardChange: function onSelectCardChange(data) {\n      if (data) {\n        // 选择了卡\n        this.selectCardItem = cloneDeep(this.cardList.filter(function (i) {\n          return i.id === data;\n        })[0]); // 获取选择的卡的详情\n\n        this.getUpgradeCardInfo(data);\n      } else {\n        // 清空了选择的卡\n        this.selectCardItem = {};\n        this.resetData();\n      }\n    },\n    getUpgradeCardInfo: function getUpgradeCardInfo(id) {\n      var _this2 = this;\n\n      // 判断之前是否请求过\n      if (!this.upgradeCardsInfo[id]) {\n        // 缓存请求结果\n        this.upgradeMemberService.getUpgradeCardInfo(id).subscribe(function (res) {\n          _this2.upgradeCardsInfo[id] = cloneDeep(res.info);\n          _this2.upgradeCardInfo = cloneDeep(res.info); // 设置默认规格\n\n          _this2.selectSpecs = _this2.upgradeCardInfo.specs[0].id;\n          _this2.selectSpecsItem = cloneDeep(_this2.upgradeCardInfo.specs[0]); // 设置默认开卡方式\n\n          _this2.selectOpenType = _this2.upgradeCardInfo.open_type[0].id; // 设置初始额度\n\n          _this2.form.setFieldsValue({\n            card_amount: _this2.selectSpecsItem.card_amount\n          });\n\n          _this2.getValidTime = _this2.selectSpecsItem.valid_time;\n\n          _this2.form.validate(['card_amount']); // 设置默认卡价格\n\n\n          _this2.cardPrice = _this2.upgradeCardInfo.specs[0].price;\n        });\n      } else {\n        // 取缓存\n        this.upgradeCardInfo = cloneDeep(this.upgradeCardsInfo[id]); // 设置默认规格\n\n        this.selectSpecs = this.upgradeCardInfo.specs[0].id;\n        this.selectSpecsItem = cloneDeep(this.upgradeCardInfo.specs[0]); // 设置默认开卡方式\n\n        this.selectOpenType = this.upgradeCardInfo.open_type[0].id; // 设置初始额度\n\n        this.form.setFieldsValue({\n          card_amount: this.selectSpecsItem.card_amount\n        });\n        this.form.validate(['card_amount']);\n        this.getValidTime = this.selectSpecsItem.valid_time; // 设置默认卡价格\n\n        this.cardPrice = this.upgradeCardInfo.specs[0].price;\n      }\n    },\n    // 规格\n    onSpecsChange: function onSpecsChange(data) {\n      this.selectSpecsItem = cloneDeep(this.upgradeCardInfo.specs.filter(function (i) {\n        return i.id === data.target.value;\n      })[0]);\n      this.cardPrice = this.upgradeCardInfo.specs.filter(function (i) {\n        return i.id === data.target.value;\n      })[0].price; // 重置选择的开始时间\n\n      this.form.resetFields(['startTime']);\n      this.endTime = '-';\n      this.form.setFieldsValue({\n        card_amount: this.selectSpecsItem.card_amount\n      });\n      this.getValidTime = this.selectSpecsItem.valid_time;\n      this.form.validate(['card_amount']);\n    },\n    // 开卡方式\n    onOpenTypeChange: function onOpenTypeChange(data) {\n      // 重置选择的开始时间\n      this.form.resetFields(['startTime']);\n      this.endTime = '-';\n    },\n    onClickAmountConfirm: function onClickAmountConfirm() {\n      var val = this.form.getFieldValue('card_amount');\n      var productType = this.upgradeCardInfo.product_type.id;\n      var currentStartTime = moment(this.form.getFieldValue('startTime'));\n      this.isAmountDisabled = true;\n      this.form.setFieldsValue({\n        card_amount: val\n      });\n\n      if (productType === 1) {\n        val = (_readOnlyError(\"val\"), this.selectSpecsItem.valid_time);\n      }\n\n      if (this.startTime) {\n        this.endTime = currentStartTime.add(val, 'd').format('YYYY-MM-DD HH:mm');\n      }\n\n      this.getValidTime = val;\n    },\n    onClickAmountEdit: function onClickAmountEdit() {\n      var val = this.form.getFieldValue('card_amount');\n      this.isAmountDisabled = false;\n      this.form.setFieldsValue({\n        card_amount: val\n      });\n      this.form.validate(['card_amount']);\n    },\n    // 有效时间\n    disabledStartDate: function disabledStartDate(startTime) {\n      return startTime.valueOf() < this.upgradeCardInfo.server_time * 1000;\n    },\n    onStartTimeChange: function onStartTimeChange(data) {\n      this.startTime = cloneDeep(data);\n      var s = cloneDeep(data);\n      var productType = this.upgradeCardInfo.product_type.id;\n      var dayScope = this.form.getFieldValue('card_amount');\n\n      if (productType === 1) {\n        dayScope = this.selectSpecsItem.valid_time;\n      }\n\n      this.endTime = s.add(dayScope, 'd').format('YYYY-MM-DD HH:mm');\n    },\n    // 原卡折扣\n    onSurplusPriceChange: function onSurplusPriceChange(data) {\n      this.surplusPrice = data;\n    },\n    // 优惠\n    onSelectCouponChange: function onSelectCouponChange(data) {\n      if (data.target.value === -1) {\n        this.couponAmount = '';\n        this.couponText = '未选择优惠券';\n        return;\n      }\n\n      var price = this.couponList.filter(function (o) {\n        return o.id === data.target.value;\n      })[0].price;\n      this.couponAmount = price;\n      this.couponText = \"\".concat(price, \"\\u5143\");\n    },\n    onSelectCoupon: function onSelectCoupon() {\n      var _this3 = this;\n\n      timer(200).subscribe(function () {\n        _this3.couponDropdownVisible = false;\n      });\n    },\n    resetCoupon: function resetCoupon() {\n      this.upgradeMemberService.resetCouponList();\n      this.couponText = '未选择优惠券';\n      this.couponAmount = '';\n      this.selectCoupon = '';\n    },\n    // 定金\n    onSelectAdvanceChange: function onSelectAdvanceChange(data) {\n      if (data.target.value === -1) {\n        this.advanceAmount = '';\n        this.advanceText = '未选择定金';\n        return;\n      }\n\n      var price = this.advanceList.filter(function (o) {\n        return o.id === data.target.value;\n      })[0].price;\n      this.advanceAmount = price;\n      this.advanceText = \"\".concat(price, \"\\u5143\");\n    },\n    onSelectAdvance: function onSelectAdvance() {\n      var _this4 = this;\n\n      timer(200).subscribe(function () {\n        _this4.advanceDropdownVisible = false;\n      });\n    },\n    resetAdvance: function resetAdvance() {\n      this.upgradeMemberService.resetAdvanceList();\n      this.advanceText = '未选择定金';\n      this.advanceAmount = '';\n      this.selectAdvance = '';\n    },\n    // 计算实付金额\n    getPrice: function getPrice(params) {\n      this.upgradeMemberService.priceAction$.dispatch(params);\n    },\n    onCreateOrder: function onCreateOrder() {\n      var _this5 = this;\n\n      this.form.validate(function (error, values) {\n        if (!error) {\n          _this5.upgradeMemberService.upgrade({\n            product_id: +values.memberCardId,\n            contract_number: _this5.info.contract_number,\n            rule_id: +_this5.selectSpecs,\n            surplus_price: +values.surplusPrice,\n            valid_start_time: moment(values.startTime).format('YYYY-MM-DD HH:mm'),\n            open_card_type: +_this5.selectOpenType,\n            user_coupon_id: _this5.selectCoupon,\n            advance_id: _this5.selectAdvance,\n            reduce_price: +_this5.reduceAmount,\n            description: _this5.description,\n            staff_sale_id: +values.saleName,\n            gift_amount: +_this5.giftAmount,\n            init_amount: values.card_amount\n          }, _this5.id).subscribe(function (res) {\n            _this5.show = false;\n\n            _this5.$emit('success', {\n              type: 'create',\n              orderId: res.info.order_id,\n              soldId: res.info.sold_id,\n              isFamilyCard: _this5.isFamilyCard\n            });\n          });\n        }\n      });\n    },\n    onPay: function onPay() {\n      var _this6 = this;\n\n      this.form.validate(function (error, values) {\n        if (!error) {\n          _this6.upgradeMemberService.upgrade({\n            product_id: +values.memberCardId,\n            contract_number: _this6.info.contract_number,\n            rule_id: +_this6.selectSpecs,\n            surplus_price: +values.surplusPrice,\n            valid_start_time: moment(values.startTime).format('YYYY-MM-DD HH:mm'),\n            open_card_type: +_this6.selectOpenType,\n            user_coupon_id: _this6.selectCoupon,\n            advance_id: _this6.selectAdvance,\n            reduce_price: +_this6.reduceAmount,\n            description: _this6.description,\n            staff_sale_id: +values.saleName,\n            gift_amount: +_this6.giftAmount,\n            init_amount: values.card_amount\n          }, _this6.id).subscribe(function (res) {\n            _this6.show = false;\n\n            _this6.$emit('success', {\n              type: 'createPay',\n              orderId: res.info.order_id,\n              soldId: res.info.sold_id,\n              isFamilyCard: _this6.isFamilyCard\n            });\n          });\n        }\n      });\n    },\n    onCancel: function onCancel() {\n      this.upgradeMemberService.resetCouponList();\n      this.upgradeMemberService.resetAdvanceList();\n    }\n  }\n};",null]}