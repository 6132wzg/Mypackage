{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/select.vue","mtime":1591147717220},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Action } from 'rx-state'\nimport { switchMap, catchError, filter } from 'rxjs/operators'\nimport { EMPTY } from 'rxjs'\nimport { SelectService } from './select.service'\nimport { json2AntDesignTreeData } from '@/utils/json-2-tree-data'\n\nexport default {\n  serviceInject() {\n    return {\n      selectService: SelectService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.selectService.loading$\n    }\n  },\n  data() {\n    return {\n      show: false,\n      treeData: [],\n      checkedKeys: [],\n      shopIds: []\n    }\n  },\n  props: {\n    checked: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    groupParams: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    type: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    checedNum() {\n      return this.shopIds.length\n    }\n  },\n  mounted() {\n    this.selectService\n      .getShopListTree(this.groupParams, this.type)\n      .subscribe(res => {\n        this.treeData = json2AntDesignTreeData(res.list)\n        this.initCheckedKeys()\n      })\n  },\n  methods: {\n    initCheckedKeys() {\n      const shopIds = this.checked\n      this.shopIds = shopIds\n      this.checkedKeys = shopIds.map(item =>\n        JSON.stringify({\n          isLeaf: true,\n          key: item\n        })\n      )\n    },\n    onCheck(checkedKeys) {\n      this.checkedKeys = checkedKeys\n      const shopIds = this.filterShopIds(checkedKeys)\n    },\n    filterShopIds(checkedKeys) {\n      const shopIds = []\n      checkedKeys.forEach(item => {\n        item = JSON.parse(item)\n        if (item.isLeaf) {\n          shopIds.push(item.key)\n        }\n      })\n      this.shopIds = shopIds\n      return shopIds\n    },\n    confirm() {\n      this.show = false\n      this.$emit('change', this.shopIds)\n    }\n  }\n}\n",null]}