{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/layouts/default.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/layouts/default.vue","mtime":1594718340310},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DefaultSiderMenu from './default#/sider-menu.vue'\nimport DefaultNotify from './default#/notify.vue'\nimport SwitchShop from '@/views/fragments/shop/switch'\nimport { find } from 'lodash-es'\nimport { UserService } from '@/services/user.service'\nimport { TokenService } from '@/services/token.service'\nimport { TitleService } from '@/services/title.service'\n\nimport AccountBind from '@/views/biz-modals/account/bind'\nimport AccountUnbind from '@/views/biz-modals/account/unbind'\nimport AccountModify from '@/views/biz-modals/account/modify'\nimport { UdeskService } from '@/services/udesk.service'\nimport StUdeskBtn from '@/views/biz-components/udesk-btn/udesk-btn'\nimport { WsNotifyService } from './default#/ws-notify.service'\nimport Copyright from '@/views/biz-components/copyright/copyright'\n\nexport default {\n  name: 'SaasLayout',\n  components: {\n    DefaultSiderMenu,\n    SwitchShop,\n    DefaultNotify,\n    StUdeskBtn,\n    Copyright\n  },\n  serviceInject() {\n    return {\n      userService: UserService,\n      tokenService: TokenService,\n      titleService: TitleService,\n      udeskService: UdeskService,\n      wsNotifyService: WsNotifyService\n    }\n  },\n  rxState() {\n    const { systemList$, activityList$ } = this.wsNotifyService\n    return {\n      systemList$,\n      activityList$,\n      user: this.userService.user$,\n      brand: this.userService.brand$,\n      shop: this.userService.shop$,\n      theme: this.userService.theme$,\n      title: this.titleService.title$,\n      isThemeStudio: this.userService.isThemeStudio$,\n      isShowUdeskBtn: this.udeskService.isShowUdeskBtn$\n    }\n  },\n  data() {\n    return {\n      isShowSwitchShop: false,\n      systemListLength: 0,\n      menuObj: {},\n      fastEntryComp: null\n    }\n  },\n  modals: {\n    CommonNotifyConfig: () =>\n      import(\n        /* webpackChunkName: \"notify-config\" */ '@/views/biz-modals/common/notify/config'\n      ),\n    CommonNotifyActivity: () =>\n      import(\n        /* webpackChunkName: \"notify-activity\" */ '@/views/biz-modals/common/notify/activity'\n      ),\n    CommonNotifySystem: () =>\n      import(\n        /* webpackChunkName: \"notify-system\" */ '@/views/biz-modals/common/notify/system'\n      ),\n    AccountBind,\n    AccountUnbind,\n    AccountModify\n  },\n  computed: {\n    breadCrumbs() {\n      const menuBreadCrumb = this.getSiderMenuBreadCrumb()\n      const parentBreadCrumb = this.getParentBreadCrumb()\n      return [...menuBreadCrumb, ...parentBreadCrumb]\n    },\n    isInShop() {\n      return this.shop.id\n    },\n    isSchedule() {\n      return this.$route.path.includes('shop/product/course/schedule')\n    },\n    isReception() {\n      return this.$route.path.includes('shop/reception/index')\n    },\n    siderMenuTip() {\n      return this.isThemeStudio ? '工作室版' : '俱乐部版'\n    }\n  },\n  watch: {\n    systemList$(newValue, oldValue) {\n      if (newValue.length === 0) {\n        if (this.activityList$.length > 0) {\n          this.$modalRouter.push({\n            name: 'common-notify-activity',\n            props: { list: this.activityList$ },\n            on: {\n              success: res => {\n                this.wsNotifyService.setRead().subscribe()\n              }\n            }\n          })\n        }\n        return\n      }\n      if (newValue.length === 0) return\n      this.onSuccess()\n    }\n  },\n  methods: {\n    onFastEntryVisible(visible) {\n      if (visible) {\n        import(\n          /* webpackChunkName: \"fast-entry\" */ './default#/fast-entry'\n        ).then(C => {\n          this.fastEntryComp = C.default || C\n        })\n      }\n    },\n    onSuccess() {\n      const len = this.systemList$.length\n      if (this.systemListLength === len) {\n        if (this.activityList$.length > 0) {\n          this.$modalRouter.push({\n            name: 'common-notify-activity',\n            props: { list: this.activityList$ },\n            on: {\n              success: res => {\n                this.wsNotifyService.setRead().subscribe()\n              }\n            }\n          })\n        }\n        return\n      }\n      this.$modalRouter.push({\n        name: 'common-notify-system',\n        props: { info: this.systemList$[this.systemListLength] },\n        on: {\n          // 模态窗动画400ms\n          success: res => {\n            this.systemListLength++\n            setTimeout(() => {\n              this.wsNotifyService.setRead().subscribe()\n              this.onSuccess()\n            }, 400)\n          },\n          cancel: res => {\n            this.systemListLength++\n            setTimeout(() => {\n              this.onSuccess()\n            }, 400)\n          }\n        }\n      })\n    },\n    onClickNotifyConfig() {\n      this.$modalRouter.push({ name: 'common-notify-config' })\n    },\n    switchShop() {\n      this.isShowSwitchShop = !this.isShowSwitchShop\n    },\n    onClickBind() {\n      this.$modalRouter.push({\n        name: 'account-bind'\n      })\n    },\n    onClickUnbind() {\n      this.$modalRouter.push({\n        name: 'account-unbind'\n      })\n    },\n    onClickModifyPass() {\n      this.$modalRouter.push({\n        name: 'account-modify'\n      })\n    },\n    onClickLogout() {\n      this.tokenService.REMOVE_TOKEN()\n      location.href = '/account/login'\n    },\n    getParentBreadCrumb() {\n      const parentRouteName = this.$route.meta.parentRouteName\n      let parentRoute\n      if (parentRouteName) {\n        parentRoute = this.$router.resolve({\n          name: parentRouteName\n        }).resolved\n      }\n      if (parentRoute) {\n        const name = parentRoute.name\n        const title = this.userService.interpolation(parentRoute.meta.title)\n        return [\n          {\n            label: title,\n            route: {\n              name\n            }\n          }\n        ]\n      } else {\n        return []\n      }\n    },\n    getSiderMenuBreadCrumb() {\n      const { selectedKey, currentSiderMenu } = this.menuObj\n      if (selectedKey) {\n        const menuBreadCrumb = []\n        menuBreadCrumb.push({\n          label: currentSiderMenu.name,\n          route: {\n            name: currentSiderMenu.url\n          }\n        })\n        if (selectedKey) {\n          const currentSubMenu = find(currentSiderMenu.children, subMenu => {\n            return subMenu.id === selectedKey\n          })\n          if (currentSubMenu) {\n            menuBreadCrumb.push({\n              label: currentSubMenu.name,\n              route: {\n                name: currentSubMenu.url\n              }\n            })\n          }\n        }\n        return menuBreadCrumb\n      } else {\n        return []\n      }\n    },\n    onSiderMenuChange(menuObj) {\n      this.menuObj = menuObj\n    },\n    onClickSiderMenu() {\n      /**\n       * 切换路由时关闭切换门店 drawer\n       */\n      this.isShowSwitchShop = false\n    }\n  }\n}\n",null]}