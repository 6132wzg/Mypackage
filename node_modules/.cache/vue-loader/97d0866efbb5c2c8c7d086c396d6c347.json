{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/department#/tree/tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/department#/tree/tree.vue","mtime":1591147717364},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { TreeToMap } from '@/utils/tree-to-map.js'\nimport TreeItem from './tree-item.vue'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'StOrganTree',\n  data() {\n    return {\n      treeDataSelf: {},\n      count: 0\n    }\n  },\n  props: {\n    treeData: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  components: {\n    TreeItem\n  },\n  methods: {\n    onClickItem(item) {\n      console.log(item)\n    },\n    makeFolder(item) {\n      Vue.set(item, 'children', [])\n      this.addItem(item)\n    },\n    getNodeItemDetail(item) {\n      console.log('getNodeItemDetail', item)\n      this.$emit('node-click', item.id)\n    },\n    traverseTree(node, tree, opString) {\n      return tree.map(item => {\n        item[opString] = item.name === node.name\n        // item.count && (this.count = this.count + item.count)\n        const obj = { [opString]: item.name === node.name }\n        return item.children\n          ? {\n              ...obj,\n              name: item.name,\n              children: this.traverseTree(node, item.children, opString),\n              id: item.id,\n              count: item.count\n            }\n          : item\n      })\n    },\n    addItem(item) {\n      this.treeDataSelf = this.traverseTree(\n        item,\n        [cloneDeep(this.treeData)],\n        'isAdd'\n      )[0]\n      this.$emit('add-item', item)\n    },\n    editItem(item) {\n      this.treeDataSelf = this.traverseTree(\n        item,\n        [cloneDeep(this.treeData)],\n        'isEdit'\n      )[0]\n      this.$emit('edit-item', item)\n    },\n    deleteItem(item) {\n      this.$emit('delete', item)\n    },\n    updateData() {\n      this.$emit('updateData')\n    }\n  },\n  watch: {\n    treeData(o) {\n      this.treeDataSelf = cloneDeep(this.treeData)\n    }\n  },\n  mounted() {\n    this.treeDataSelf = cloneDeep(this.treeData)\n  }\n}\n",{"version":3,"sources":["tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tree.vue","sourceRoot":"src/views/pages/brand/staff/department#/tree","sourcesContent":["<template>\n  <ul class=\"st-tree\">\n    <tree-item\n      class=\"item\"\n      :item=\"treeDataSelf\"\n      @make-folder=\"makeFolder\"\n      @add-item=\"addItem\"\n      @edit-item=\"editItem\"\n      @update-data=\"updateData\"\n      @node-item-detail=\"getNodeItemDetail\"\n    ></tree-item>\n  </ul>\n</template>\n\n<script>\nimport { TreeToMap } from '@/utils/tree-to-map.js'\nimport TreeItem from './tree-item.vue'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'StOrganTree',\n  data() {\n    return {\n      treeDataSelf: {},\n      count: 0\n    }\n  },\n  props: {\n    treeData: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  components: {\n    TreeItem\n  },\n  methods: {\n    onClickItem(item) {\n      console.log(item)\n    },\n    makeFolder(item) {\n      Vue.set(item, 'children', [])\n      this.addItem(item)\n    },\n    getNodeItemDetail(item) {\n      console.log('getNodeItemDetail', item)\n      this.$emit('node-click', item.id)\n    },\n    traverseTree(node, tree, opString) {\n      return tree.map(item => {\n        item[opString] = item.name === node.name\n        // item.count && (this.count = this.count + item.count)\n        const obj = { [opString]: item.name === node.name }\n        return item.children\n          ? {\n              ...obj,\n              name: item.name,\n              children: this.traverseTree(node, item.children, opString),\n              id: item.id,\n              count: item.count\n            }\n          : item\n      })\n    },\n    addItem(item) {\n      this.treeDataSelf = this.traverseTree(\n        item,\n        [cloneDeep(this.treeData)],\n        'isAdd'\n      )[0]\n      this.$emit('add-item', item)\n    },\n    editItem(item) {\n      this.treeDataSelf = this.traverseTree(\n        item,\n        [cloneDeep(this.treeData)],\n        'isEdit'\n      )[0]\n      this.$emit('edit-item', item)\n    },\n    deleteItem(item) {\n      this.$emit('delete', item)\n    },\n    updateData() {\n      this.$emit('updateData')\n    }\n  },\n  watch: {\n    treeData(o) {\n      this.treeDataSelf = cloneDeep(this.treeData)\n    }\n  },\n  mounted() {\n    this.treeDataSelf = cloneDeep(this.treeData)\n  }\n}\n</script>\n"]}]}