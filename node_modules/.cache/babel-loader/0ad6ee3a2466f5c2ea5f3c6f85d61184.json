{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-user-avg-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-user-avg-bar.vue","mtime":1600926555736},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport { View } from 'st-data-set';\nimport { Chart } from '@antv/g2';\nimport { toKFilter, thousandsFilter } from \"./filters\";\nimport chartMixin from \"./mixin\";\nexport default {\n  mixins: [chartMixin],\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['l(90) 0:#57ACFF 1:#4169F7'];\n      }\n    },\n    height: {\n      type: Number,\n      default: 200\n    },\n    max: {\n      type: Number,\n      default: 800\n    }\n  },\n  data: function data() {\n    return {// MAX: 0\n    };\n  },\n  computed: {\n    MAX: function MAX() {\n      var maxValue = this.dv.max('value');\n      return maxValue > this.max ? maxValue : this.max;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +row.value;\n          return row;\n        }\n      });\n    },\n    changeData: function changeData() {\n      this.chart.destroy();\n      this.initChart();\n    },\n    initChart: function initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg',\n        padding: 'auto'\n      });\n      this.chart.source(this.dv, {\n        value: {\n          max: +this.MAX,\n          formatter: toKFilter\n        }\n      });\n      this.chart.legend(false);\n      this.chart.axis('name', {\n        label: {\n          offsetY: 2,\n          textStyle: {\n            fontSize: 12,\n            fill: '#9BACB9'\n          }\n        },\n        line: {\n          stroke: '#f3f3f4',\n          // 坐标轴线的颜色\n          // strokeOpacity: {number}, // 坐标轴线的透明度，数值范围为 0 - 1\n          lineWidth: 0.5 // 设置坐标轴线的粗细\n\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        grid: {\n          lineStyle: {\n            stroke: '#E9E9E9',\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        },\n        label: {\n          textStyle: {\n            fontSize: 12,\n            fill: '#9BACB9'\n          }\n        },\n        range: [0, 1]\n      });\n      this.chart.tooltip({\n        showTitle: false\n      });\n      this.chart.interval().opacity(0.9).position('name*value').tooltip('name*value', function (name, value) {\n        return {\n          name: name,\n          value: '¥' + thousandsFilter(value)\n        };\n      }).color('name', this.colors);\n      this.chart.render();\n    }\n  }\n};",{"version":3,"sources":["brand-user-avg-bar.vue"],"names":[],"mappings":";;;;;AAKA,SAAA,IAAA,QAAA,aAAA;AACA,SAAA,KAAA,QAAA,UAAA;AACA,SAAA,SAAA,EAAA,eAAA;AACA,OAAA,UAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,UAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,CAAA,2BAAA,CAAA;AAAA;AAFA,KALA;AASA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAbA,GAFA;AAoBA,EAAA,IApBA,kBAoBA;AACA,WAAA,CACA;AADA,KAAA;AAGA,GAxBA;AAyBA,EAAA,QAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA,UAAA,QAAA,GAAA,KAAA,EAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AACA,aAAA,QAAA,GAAA,KAAA,GAAA,GAAA,QAAA,GAAA,KAAA,GAAA;AACA;AAJA,GAzBA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,EAAA,GAAA,IAAA,IAAA,EAAA;AACA,WAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA;AACA,WAAA,EAAA,CAAA,SAAA,CAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,QAFA,oBAEA,GAFA,EAEA;AACA,UAAA,GAAA,CAAA,KAAA,GAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBAAA,GAAA;AACA;AALA,OAAA;AAOA,KAXA;AAYA,IAAA,UAZA,wBAYA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,WAAA,SAAA;AACA,KAfA;AAgBA,IAAA,SAhBA,uBAgBA;AACA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA;AACA,QAAA,SAAA,EAAA,KAAA,GADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,KAAA,MAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,OAAA,EAAA;AALA,OAAA,CAAA;AAOA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,GAAA,EAAA,CAAA,KAAA,GADA;AAEA,UAAA,SAAA,EAAA;AAFA;AADA,OAAA;AAMA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AAEA,WAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,OAAA,EAAA,CADA;AAEA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,EADA;AAEA,YAAA,IAAA,EAAA;AAFA;AAFA,SADA;AAQA,QAAA,IAAA,EAAA;AACA,UAAA,MAAA,EAAA,SADA;AACA;AACA;AACA,UAAA,SAAA,EAAA,GAHA,CAGA;;AAHA,SARA;AAaA,QAAA,QAAA,EAAA;AACA,UAAA,SAAA,EAAA,CADA;AAEA,UAAA,MAAA,EAAA;AAFA;AAbA,OAAA;AAmBA,WAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,QAAA,IAAA,EAAA;AACA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA,SADA;AAEA,YAAA,SAAA,EAAA,GAFA;AAGA,YAAA,QAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AAHA;AADA,SADA;AAQA,QAAA,KAAA,EAAA;AACA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,EADA;AAEA,YAAA,IAAA,EAAA;AAFA;AADA,SARA;AAcA,QAAA,KAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AAdA,OAAA;AAgBA,WAAA,KAAA,CAAA,OAAA,CAAA;AACA,QAAA,SAAA,EAAA;AADA,OAAA;AAIA,WAAA,KAAA,CACA,QADA,GAEA,OAFA,CAEA,GAFA,EAGA,QAHA,CAGA,YAHA,EAIA,OAJA,CAIA,YAJA,EAIA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,eAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,MAAA,eAAA,CAAA,KAAA;AAFA,SAAA;AAIA,OATA,EAUA,KAVA,CAUA,MAVA,EAUA,KAAA,MAVA;AAWA,WAAA,KAAA,CAAA,MAAA;AACA;AAnFA;AA/BA,CAAA","sourcesContent":["<template>\n  <div class=\"stat-brand-user-avg-bar\"></div>\n</template>\n\n<script>\nimport { View } from 'st-data-set'\nimport { Chart } from '@antv/g2'\nimport { toKFilter, thousandsFilter } from './filters'\nimport chartMixin from './mixin'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    colors: {\n      type: Array,\n      default: () => ['l(90) 0:#57ACFF 1:#4169F7']\n    },\n    height: {\n      type: Number,\n      default: 200\n    },\n    max: {\n      type: Number,\n      default: 800\n    }\n  },\n  data() {\n    return {\n      // MAX: 0\n    }\n  },\n  computed: {\n    MAX() {\n      const maxValue = this.dv.max('value')\n      return maxValue > this.max ? maxValue : this.max\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n    },\n    changeData() {\n      this.chart.destroy()\n      this.initChart()\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg',\n        padding: 'auto'\n      })\n      this.chart.source(this.dv, {\n        value: {\n          max: +this.MAX,\n          formatter: toKFilter\n        }\n      })\n      this.chart.legend(false)\n\n      this.chart.axis('name', {\n        label: {\n          offsetY: 2,\n          textStyle: {\n            fontSize: 12,\n            fill: '#9BACB9'\n          }\n        },\n        line: {\n          stroke: '#f3f3f4', // 坐标轴线的颜色\n          // strokeOpacity: {number}, // 坐标轴线的透明度，数值范围为 0 - 1\n          lineWidth: 0.5 // 设置坐标轴线的粗细\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n\n      this.chart.axis('value', {\n        grid: {\n          lineStyle: {\n            stroke: '#E9E9E9',\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        },\n        label: {\n          textStyle: {\n            fontSize: 12,\n            fill: '#9BACB9'\n          }\n        },\n        range: [0, 1]\n      })\n      this.chart.tooltip({\n        showTitle: false\n      })\n\n      this.chart\n        .interval()\n        .opacity(0.9)\n        .position('name*value')\n        .tooltip('name*value', (name, value) => {\n          return {\n            name,\n            value: '¥' + thousandsFilter(value)\n          }\n        })\n        .color('name', this.colors)\n      this.chart.render()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}