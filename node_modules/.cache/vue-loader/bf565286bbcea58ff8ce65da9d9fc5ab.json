{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/personal-team/reserve-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/personal-team/reserve-info.vue","mtime":1597396799937},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { switchMap } from 'rxjs/operators'\nimport { MessageService } from '@/services/message.service'\nimport { PersonalTeamScheduleCommonService as CommonService } from '@/views/pages/shop/product/course/schedule/personal-team/service#/common.service'\nimport { PersonalTeamScheduleReserveService as ReserveService } from '@/views/pages/shop/product/course/schedule/personal-team/service#/reserve.service'\nimport { PersonalTeamScheduleScheduleService as ScheduleService } from '@/views/pages/shop/product/course/schedule/personal-team/service#/schedule.service'\nimport SchedulePersonalTeamEdit from '@/views/biz-modals/schedule/personal-team/edit'\nimport { columns } from './reserve-info.config'\nexport default {\n  name: 'ReserveInfo',\n  modals: {\n    SchedulePersonalTeamEdit\n  },\n  serviceInject() {\n    return {\n      commonService: CommonService,\n      reserveService: ReserveService,\n      scheduleService: ScheduleService,\n      messageService: MessageService\n    }\n  },\n  rxState() {\n    const commonService = this.commonService\n    return {\n      loading: this.reserveService.loading$,\n      memberOptions: commonService.memberOptions$,\n      consumeOptions: commonService.consumeOptions$,\n      reserveList: this.reserveService.reserveList$,\n      reserveInfo: this.reserveService.reserveInfo$,\n      auth: this.reserveService.auth$,\n      infoAuth: this.reserveService.infoAuth$\n    }\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      memberId: '',\n      consumeType: '',\n      consumeId: '',\n      consumeTypeId: '',\n      consumeName: '',\n      effectiveState: 1,\n      siteNumIds: [],\n      dataSource: [],\n      keyword: '',\n      memberName: '',\n      show: false,\n      info: {}\n    }\n  },\n  computed: {\n    columns,\n    courseId() {\n      return this.reserveInfo.course_id\n    },\n    scheduleId() {\n      return this.reserveInfo.id\n    }\n  },\n  created() {\n    this.getReserveInfo()\n  },\n  methods: {\n    keywordFilter(item) {\n      let str\n      if (item.is_minors === 1) {\n        str = `${item.member_name}(未成年) ${item.parent_mobile}(${item.parent_user_role})`.replace(\n          new RegExp(this.keyword),\n          `<span class=\"color-primary\">${this.keyword}</span>`\n        )\n      } else {\n        str = `${item.member_name} ${item.mobile}`.replace(\n          new RegExp(this.keyword),\n          `<span class=\"color-primary\">${this.keyword}</span>`\n        )\n      }\n      return str\n    },\n    onSearch(value) {\n      this.keyword = value\n      this.commonService\n        .getMemberList({\n          member_name: value\n        })\n        .subscribe()\n    },\n    getMemberName(id) {\n      let memberName = ''\n      this.memberOptions.forEach(item => {\n        if (item.member_id === id) {\n          memberName = item.member_name\n        }\n      })\n      return memberName\n    },\n    onChange(value) {\n      this.memberId = value\n      this.memberName = this.getMemberName(value)\n      this.commonService\n        .getConsumeList({\n          course_id: this.courseId,\n          member_id: value\n        })\n        .subscribe()\n    },\n    onChangeConsumeType(val) {\n      const obj = JSON.parse(val)\n      this.consumeType = obj.consume_type\n      this.consumeName = obj.name\n      //  因为会员卡，私教课，储值卡，课程包只有课程包有这个字段 没这个字段也是生效 undefined也为1\n      this.effectiveState = obj.effective_state === 0 ? 0 : 1\n      this.consumeId = obj.id\n    },\n    add() {\n      const form = {\n        schedule_id: this.id,\n        member_id: this.memberId,\n        consume_type: this.consumeType,\n        consume_id: this.consumeId\n      }\n      this.reserveService.add(form).subscribe(this.onAddReserveSuccess)\n    },\n    addReserve() {\n      // 生效的课程不二次判断\n      if (this.effectiveState) {\n        this.add()\n        return\n      }\n      this.$confirm({\n        title: '',\n        content: `新增预约后, ${this.memberName}的课程包${\n          this.consumeName.split('(')[0]\n        }会立即生效，确认新增?`,\n        onOk: () => {\n          this.add()\n          this.effectiveState = 1\n        }\n      })\n    },\n    cancelReserve(id) {\n      this.reserveService.cancel(id).subscribe(this.onCancelReserveSuccess)\n    },\n    check(id) {\n      const params = {\n        id,\n        checkin_method: 4\n      }\n      this.reserveService.check(params).subscribe(this.onCheckSuccess)\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData\n      }\n      target.editable = true\n      this.data = newData\n    },\n    save(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        delete target.editable\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n      }\n    },\n    cancelSchedule() {\n      this.scheduleService.del(this.id).subscribe(this.onDelScheduleScuccess)\n    },\n    updateSchedule() {\n      this.show = false\n      this.$modalRouter.push({\n        name: 'schedule-personal-team-edit',\n        props: {\n          info: this.reserveInfo\n        },\n        on: {\n          ok: () => {\n            this.$router.push({ query: this.$searchQuery })\n          }\n        }\n      })\n    },\n    getReserveInfo() {\n      this.reserveService.getInfo(this.id).subscribe()\n    },\n    onAddReserveSuccess() {\n      this.memberId = undefined\n      this.consumeType = undefined\n      this.getReserveInfo()\n    },\n    onCancelReserveSuccess() {\n      this.getReserveInfo()\n    },\n    onCheckSuccess() {\n      this.getReserveInfo()\n    },\n    onDelScheduleScuccess() {\n      this.$router.push({ query: this.$searchQuery })\n      this.show = false\n    }\n  }\n}\n",null]}