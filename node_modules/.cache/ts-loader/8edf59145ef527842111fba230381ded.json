{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/info/course.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/info/course.service.ts","mtime":1591147717367},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { UserService } from '@/services/user.service';\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap, map } from 'rxjs/operators';\nimport { StaffApi, GetStaffCourseListInput } from '@/api/v1/staff';\n\nvar CourseService = /*#__PURE__*/function () {\n  function CourseService(staffApi, userService) {\n    _classCallCheck(this, CourseService);\n\n    this.staffApi = staffApi;\n    this.userService = userService;\n    this.courseInfo$ = new State({});\n    this.page$ = new State({});\n    this.loading$ = new State({});\n    this.reserveStatus$ = this.userService.getOptions$('schedule.schedule_status').pipe(map(function (options) {\n      return [{\n        value: -1,\n        label: '全部课程状态'\n      }].concat(options);\n    }));\n  }\n\n  _createClass(CourseService, [{\n    key: \"getCoursesList\",\n    value: function getCoursesList(id, query) {\n      var _this = this;\n\n      return this.staffApi.getStaffCourseList(id, query).pipe(tap(function (res) {\n        _this.courseInfo$.commit(function () {\n          return res.list.map(function (item) {\n            item.class_hours = \"\".concat(item.start_time, \" ~ \").concat(item.stop_time);\n            return item;\n          });\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      var _to$meta$query = to.meta.query,\n          id = _to$meta$query.id,\n          query = _objectWithoutProperties(_to$meta$query, [\"id\"]);\n\n      return this.getCoursesList(id, query);\n    }\n  }]);\n\n  return CourseService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String, typeof (_a = typeof GetStaffCourseListInput !== \"undefined\" && GetStaffCourseListInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], CourseService.prototype, \"getCoursesList\", null);\n\nCourseService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof StaffApi !== \"undefined\" && StaffApi) === \"function\" ? _b : Object, typeof (_c = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _c : Object])], CourseService);\nexport { CourseService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/info/course.service.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,EAAc,GAAd,QAAyB,gBAAzB;AACA,SAAS,QAAT,EAAmB,uBAAnB,QAAkD,gBAAlD;;AAGA,IAAa,aAAb;AAUE,yBAAoB,QAApB,EAAgD,WAAhD,EAAwE;AAAA;;AAApD,SAAA,QAAA,GAAA,QAAA;AAA4B,SAAA,WAAA,GAAA,WAAA;AAThD,SAAA,WAAA,GAAc,IAAI,KAAJ,CAAU,EAAV,CAAd;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,cAAA,GAAiB,KAAK,WAAL,CACd,WADc,CACF,0BADE,EAEd,IAFc,CAGb,GAAG,CAAC,UAAA,OAAO;AAAA,aAAI,CAAC;AAAE,QAAA,KAAK,EAAE,CAAC,CAAV;AAAa,QAAA,KAAK,EAAE;AAApB,OAAD,EAAiC,MAAjC,CAAwC,OAAxC,CAAJ;AAAA,KAAR,CAHU,CAAjB;AAM4E;;AAV9E;AAAA;AAAA,mCAYiB,EAZjB,EAY6B,KAZ7B,EAY2D;AAAA;;AACvD,aAAO,KAAK,QAAL,CAAc,kBAAd,CAAiC,EAAjC,EAAqC,KAArC,EAA4C,IAA5C,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,KAAI,CAAC,WAAL,CAAiB,MAAjB,CAAwB,YAAK;AAC3B,iBAAO,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAa,UAAC,IAAD,EAAc;AAChC,YAAA,IAAI,CAAC,WAAL,aAAsB,IAAI,CAAC,UAA3B,gBAA2C,IAAI,CAAC,SAAhD;AACA,mBAAO,IAAP;AACD,WAHM,CAAP;AAID,SALD;;AAMA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OARE,CADE,CAAP;AAWD;AAxBH;AAAA;AAAA,+BA0Ba,EA1Bb,EA0B+B,IA1B/B,EA0BiD;AAAA,2BACpB,EAAE,CAAC,IAAH,CAAQ,KADY;AAAA,UACrC,EADqC,kBACrC,EADqC;AAAA,UAC9B,KAD8B;;AAE7C,aAAO,KAAK,cAAL,CAAoB,EAApB,EAAwB,KAAxB,CAAP;AACD;AA7BH;;AAAA;AAAA,GAAA;;AAYE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,6DAAkC,uB,KAAuB,W,IAAvB,uB,MAAuB,U,GAAA,E,GAAA,M,EAAzD,E,uCAAA,CAAA,E,uBAAA,E,gBAAA,EAYC,IAZD,CAAA;;AAZW,aAAa,GAAA,UAAA,CAAA,CADzB,UAAU,EACe,E,qDAUM,Q,KAAQ,W,IAAR,Q,MAAQ,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAuB,WAAvB,KAAkC,WAAlC,IAAuB,WAAvB,MAAkC,UAAlC,GAAkC,EAAlC,GAAkC,M,EAVhD,CAAA,EAAb,aAAa,CAAb;SAAA,a","sourcesContent":["import { UserService } from '@/services/user.service'\nimport { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap, map } from 'rxjs/operators'\nimport { StaffApi, GetStaffCourseListInput } from '@/api/v1/staff'\n\n@Injectable()\nexport class CourseService implements Controller {\n  courseInfo$ = new State({})\n  page$ = new State({})\n  loading$ = new State({})\n  reserveStatus$ = this.userService\n    .getOptions$('schedule.schedule_status')\n    .pipe(\n      map(options => [{ value: -1, label: '全部课程状态' }].concat(options))\n    )\n\n  constructor(private staffApi: StaffApi, private userService: UserService) {}\n  @Effect()\n  getCoursesList(id: string, query: GetStaffCourseListInput) {\n    return this.staffApi.getStaffCourseList(id, query).pipe(\n      tap(res => {\n        this.courseInfo$.commit(() => {\n          return res.list.map((item: any) => {\n            item.class_hours = `${item.start_time} ~ ${item.stop_time}`\n            return item\n          })\n        })\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    const { id, ...query } = to.meta.query\n    return this.getCoursesList(id, query)\n  }\n}\n"],"sourceRoot":""}]}