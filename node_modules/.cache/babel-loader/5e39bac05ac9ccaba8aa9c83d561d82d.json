{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-course-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-course-line.vue","mtime":1594718339904},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport { toKFilter } from \"./filters\";\nimport { View } from 'st-data-set';\nimport { Chart } from '@antv/g2';\nimport chartMixin from \"./mixin\";\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * 数据\n     * @example\n     * [{date:'05-28',私教预约人数:250,私教签到人数:250,团体课排课人数:20}]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 280\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: function _default() {\n        var smallCourse = this.$c('small_course');\n        return ['团体课可预约人数', '团体课签到人数', '团体课预约人数', '私教课签到人数', '私教课预约人数', \"\".concat(smallCourse, \"\\u7B7E\\u5230\\u4EBA\\u6570\"), \"\".concat(smallCourse, \"\\u9884\\u7EA6\\u4EBA\\u6570\")];\n      }\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#5095FC', '#6831D7', '#06DB8C', '#872333', '#98db23', '#8f23f3', '#9ddf33'];\n      }\n    },\n    shadowColors: {\n      type: Array,\n      default: function _default() {\n        return ['rgba(80,149,252,.4)', 'rgba(104,49,215,.4)', 'rgba(6,219,140,.4)', 'rgba(135,35,51,.4)', 'rgba(152,219,35,.4)'];\n      }\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data: function data() {\n    return {// MAX: 0\n    };\n  },\n  computed: {\n    colorMap: function colorMap() {\n      var _this = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this.colors[idx % _this.colors.length];\n        return res;\n      }, {});\n    },\n    shadowColorMap: function shadowColorMap() {\n      var _this2 = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this2.shadowColors[idx % _this2.shadowColors.length];\n        return res;\n      }, {});\n    },\n    MAX: function MAX() {\n      var maxValue = this.dv.max('value');\n      return maxValue > this.max ? maxValue : this.max;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      });\n    },\n    changeData: function changeData() {\n      this.chart.destroy();\n      this.initChart();\n    },\n    initChart: function initChart() {\n      var _this3 = this;\n\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [80, 16, 32, 'auto'],\n        renderer: 'svg'\n      });\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          max: +this.MAX,\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      });\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      });\n      this.chart.legend('name', {\n        position: 'top-left',\n        useHtml: true,\n        offsetY: -16,\n        // offsetX: -22,\n        textStyle: {\n          fill: '#3E4D5C'\n        },\n        itemTpl: function itemTpl() {\n          return '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + \"<span class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></span>\" + \" <span class=\\\"g2-legend-text\\\">{value}</span>\" + '</li>';\n        }\n      });\n      this.chart.line().style('name', {\n        shadowColor: function shadowColor(name) {\n          return _this3.shadowColorMap[name];\n        },\n        shadowBlur: 20,\n        shadowOffsetY: 4\n      }).tooltip('name*value', function (name, value) {\n        return {\n          name: name,\n          value: value + '人'\n        };\n      }).shape('smooth').size(2).position('date*value').color('name', this.colors);\n      this.chart.render();\n    }\n  }\n};",null]}