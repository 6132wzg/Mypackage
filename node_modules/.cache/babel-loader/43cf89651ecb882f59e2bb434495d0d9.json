{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/user.vue","mtime":1600912104709},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { LoginService } from \"../login.service\";\nimport NoCaptcha from \"./no-captcha\";\nimport AccountAgreement from '@/views/biz-modals/account/agreement';\nimport { ruleOptions } from \"./login.config\";\nimport { PatternService } from '@/services/pattern.service';\nexport default {\n  bem: {\n    loginUser: 'page-login-user'\n  },\n  name: 'LoginUser',\n  components: {\n    NoCaptcha: NoCaptcha\n  },\n  serviceInject: function serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.loginService.loading$\n    };\n  },\n  mounted: function mounted() {\n    var name = localStorage.getItem('UserAccountForFind') || '';\n    this.form.setFieldsValue({\n      name: name\n    });\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      thirdLogins: ['alipay', 'wechat', 'weibo', 'qq'],\n      trunPage: false\n    };\n  },\n  modals: {\n    AccountAgreement: AccountAgreement\n  },\n  computed: {},\n  methods: {\n    clickAgreement: function clickAgreement() {\n      this.$modalRouter.push({\n        name: 'account-agreement',\n        props: {},\n        on: {}\n      });\n    },\n    login: function login() {\n      var _this = this;\n\n      this.form.validate().then(function (values) {\n        _this.$emit('login', values);\n      });\n    },\n    onClickFindPassword: function onClickFindPassword() {\n      var data = this.form.getFieldsValue();\n      localStorage.setItem('UserAccountForFind', data.name);\n      window.open('/account/find', 'blank');\n    },\n    onClickThirdChange: function onClickThirdChange(key) {\n      this.$emit('third', key);\n    }\n  }\n};",{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,SAAA,YAAA;AACA,OAAA,SAAA;AACA,OAAA,gBAAA,MAAA,sCAAA;AACA,SAAA,WAAA;AACA,SAAA,cAAA,QAAA,4BAAA;AAEA,eAAA;AACA,EAAA,GAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,IAAA,EAAA,WAJA;AAKA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GALA;AAQA,EAAA,aARA,2BAQA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,YADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KAAA,YAAA,CAAA;AADA,KAAA;AAGA,GAlBA;AAmBA,EAAA,OAnBA,qBAmBA;AACA,QAAA,IAAA,GAAA,YAAA,CAAA,OAAA,CAAA,oBAAA,KAAA,EAAA;AACA,SAAA,IAAA,CAAA,cAAA,CAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GAxBA;AAyBA,EAAA,IAzBA,kBAyBA;AACA,QAAA,IAAA,GAAA,KAAA,OAAA,CAAA,MAAA,EAAA;AACA,QAAA,UAAA,GAAA,IAAA,CAAA,UAAA,CAAA,WAAA,CAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,UAFA;AAGA,MAAA,WAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,IAAA,CAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAlCA;AAmCA,EAAA,MAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAnCA;AAsCA,EAAA,QAAA,EAAA,EAtCA;AAuCA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,mBADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,EAAA,EAAA;AAHA,OAAA;AAKA,KAPA;AAQA,IAAA,KARA,mBAQA;AAAA;;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA,MAAA;AACA,OAFA;AAGA,KAZA;AAaA,IAAA,mBAbA,iCAaA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,CAAA,cAAA,EAAA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,oBAAA,EAAA,IAAA,CAAA,IAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA,OAAA;AACA,KAjBA;AAkBA,IAAA,kBAlBA,8BAkBA,GAlBA,EAkBA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AApBA;AAvCA,CAAA","sourcesContent":["<template>\n  <div :class=\"[loginUser(), trunPage ? 'trun-page' : '']\">\n    <st-form :form=\"form\" @submit.prevent=\"login\" :class=\"loginUser('form')\">\n      <st-form-item>\n        <a-input\n          size=\"large\"\n          placeholder=\"请输入用户名\"\n          v-decorator=\"decorators.name\"\n        />\n      </st-form-item>\n      <st-form-item class=\"mg-b12\">\n        <a-input\n          size=\"large\"\n          type=\"password\"\n          placeholder=\"请输入密码\"\n          v-decorator=\"decorators.password\"\n        />\n        <a-input\n          type=\"password\"\n          autocomplete=\"new-password\"\n          style=\"display: none\"\n        />\n      </st-form-item>\n      <st-form-item class=\"mg-b0\">\n        <no-captcha></no-captcha>\n      </st-form-item>\n      <st-form-item :class=\"loginUser('pass')\" class=\"mg-b12\">\n        <div :class=\"loginUser('wrapper')\">\n          <div :class=\"loginUser('wrapper-left')\">\n            <a-checkbox v-decorator=\"decorators.isAgree\">\n              我已阅读并同意\n              <a\n                :class=\"loginUser('wrapper-user-agreement')\"\n                @click=\"clickAgreement\"\n              >\n                《 用户服务协议 》\n              </a>\n            </a-checkbox>\n          </div>\n          <span :class=\"loginUser('pass-content')\">\n            <a @click=\"onClickFindPassword\">忘记密码</a>\n          </span>\n        </div>\n      </st-form-item>\n      <st-form-item class=\"mg-b32\">\n        <st-button\n          :class=\"loginUser('login-button')\"\n          :loading=\"loading.loginAccount\"\n          pill\n          block\n          size=\"large\"\n          type=\"primary\"\n          html-type=\"submit\"\n        >\n          登录\n        </st-button>\n      </st-form-item>\n    </st-form>\n    <!-- 第三方登录 -->\n    <!-- <div :class=\"loginUser('third')\" class=\"mg-l24\">\n      <div @click=\"onClickThirdChange(item)\" class=\"st-icon-wapper\" v-for=\"item in thirdLogins\" :key=\"item.type\"><st-icon :class=\"item\" :type=\"item\" size=\"24px\" /></div>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport { LoginService } from '../login.service'\nimport NoCaptcha from './no-captcha'\nimport AccountAgreement from '@/views/biz-modals/account/agreement'\nimport { ruleOptions } from './login.config'\nimport { PatternService } from '@/services/pattern.service'\n\nexport default {\n  bem: {\n    loginUser: 'page-login-user'\n  },\n  name: 'LoginUser',\n  components: {\n    NoCaptcha\n  },\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.loginService.loading$\n    }\n  },\n  mounted() {\n    const name = localStorage.getItem('UserAccountForFind') || ''\n    this.form.setFieldsValue({\n      name\n    })\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      thirdLogins: ['alipay', 'wechat', 'weibo', 'qq'],\n      trunPage: false\n    }\n  },\n  modals: {\n    AccountAgreement\n  },\n  computed: {},\n  methods: {\n    clickAgreement() {\n      this.$modalRouter.push({\n        name: 'account-agreement',\n        props: {},\n        on: {}\n      })\n    },\n    login() {\n      this.form.validate().then(values => {\n        this.$emit('login', values)\n      })\n    },\n    onClickFindPassword() {\n      const data = this.form.getFieldsValue()\n      localStorage.setItem('UserAccountForFind', data.name)\n      window.open('/account/find', 'blank')\n    },\n    onClickThirdChange(key) {\n      this.$emit('third', key)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src-entries/account/views/pages/account/login#"}]}