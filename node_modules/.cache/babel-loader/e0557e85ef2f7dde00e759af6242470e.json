{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-store-data-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-store-data-line.vue","mtime":1600926555779},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport { toKFilter } from \"./filters\";\nimport { View } from 'st-data-set';\nimport { Chart } from '@antv/g2';\nimport chartMixin from \"./mixin\";\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * 数据\n     * @example\n     * [{date:'05-28',私教预约人数:250,私教签到人数:250,团体课排课人数:20}]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 420\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: function _default() {\n        return ['amount'];\n      }\n    },\n    // 使用字段提示标题\n    tooltipKey: {\n      type: String\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#5095FC', '#6831D7', '#06DB8C', '#872333', '#98db23'];\n      }\n    },\n    shadowColors: {\n      type: Array,\n      default: function _default() {\n        return ['rgba(80,149,252,.4)', 'rgba(104,49,215,.4)', 'rgba(6,219,140,.4)', 'rgba(135,35,51,.4)', 'rgba(152,219,35,.4)'];\n      }\n    },\n    unit: {\n      type: String,\n      default: '元'\n    }\n  },\n  computed: {\n    colorMap: function colorMap() {\n      var _this = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this.colors[idx % _this.colors.length];\n        return res;\n      }, {});\n    },\n    shadowColorMap: function shadowColorMap() {\n      var _this2 = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this2.shadowColors[idx % _this2.shadowColors.length];\n        return res;\n      }, {});\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      });\n    },\n    initChart: function initChart() {\n      var _this3 = this;\n\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [40, 'auto', 32, 'auto'],\n        renderer: 'svg'\n      });\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      });\n      this.chart.scale('value', {\n        min: 0\n      });\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      });\n      this.chart.line().style('name', {\n        shadowColor: function shadowColor(name) {\n          return _this3.shadowColorMap[name];\n        } // shadowBlur: 20,\n        // shadowOffsetY: 4\n\n      }).tooltip('name*value', function (name, value) {\n        return {\n          name: _this3.tooltipKey,\n          value: value + _this3.unit\n        };\n      }).shape('smooth').size(2).position('date*value').color('name', this.colors);\n      this.chart.render();\n    }\n  }\n};",{"version":3,"sources":["shop-store-data-line.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"shop-store-data-line\"></div>\n  </div>\n</template>\n\n<script>\nimport { toKFilter } from './filters'\nimport { View } from 'st-data-set'\nimport { Chart } from '@antv/g2'\nimport chartMixin from './mixin'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * 数据\n     * @example\n     * [{date:'05-28',私教预约人数:250,私教签到人数:250,团体课排课人数:20}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 420\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: () => ['amount']\n    },\n    // 使用字段提示标题\n    tooltipKey: {\n      type: String\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: () => ['#5095FC', '#6831D7', '#06DB8C', '#872333', '#98db23']\n    },\n    shadowColors: {\n      type: Array,\n      default: () => [\n        'rgba(80,149,252,.4)',\n        'rgba(104,49,215,.4)',\n        'rgba(6,219,140,.4)',\n        'rgba(135,35,51,.4)',\n        'rgba(152,219,35,.4)'\n      ]\n    },\n    unit: {\n      type: String,\n      default: '元'\n    }\n  },\n  computed: {\n    colorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.colors[idx % this.colors.length]\n        return res\n      }, {})\n    },\n    shadowColorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.shadowColors[idx % this.shadowColors.length]\n        return res\n      }, {})\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [40, 'auto', 32, 'auto'],\n        renderer: 'svg'\n      })\n\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      })\n      this.chart.scale('value', {\n        min: 0\n      })\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      })\n      this.chart\n        .line()\n        .style('name', {\n          shadowColor: name => this.shadowColorMap[name]\n          // shadowBlur: 20,\n          // shadowOffsetY: 4\n        })\n        .tooltip('name*value', (name, value) => {\n          return {\n            name: this.tooltipKey,\n            value: value + this.unit\n          }\n        })\n        .shape('smooth')\n        .size(2)\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}