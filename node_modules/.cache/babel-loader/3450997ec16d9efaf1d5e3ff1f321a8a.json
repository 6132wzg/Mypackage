{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/textarea/textarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/textarea/textarea.vue","mtime":1598250255819},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'StTextarea',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  bem: {\n    b: 'st-textarea'\n  },\n  props: {\n    value: {\n      type: String\n    },\n    maxlength: {\n      type: [String, Number],\n      default: 500\n    },\n    maxRows: {\n      type: Number,\n      default: 0\n    },\n    // 文字后缀\n    suffix: {\n      type: [String, Object]\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      content: '',\n      attrs: _objectSpread({\n        autosize: {\n          minRows: 10,\n          maxRow: 20\n        }\n      }, this.$attrs),\n      lastContent: ''\n    };\n  },\n  watch: {\n    value: function value() {\n      this.init();\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  computed: {\n    currentLength: function currentLength() {\n      return this.suffix ? this.content.length + this.suffix.length + 2 : this.content.length;\n    },\n    currentRows: function currentRows() {\n      return this.calcRowsLength(this.content);\n    },\n    shouldUseRows: function shouldUseRows() {\n      return this.maxRows;\n    }\n  },\n  methods: {\n    calcRowsLength: function calcRowsLength(content) {\n      return content.trim().split('\\n').filter(function (item) {\n        return item !== '';\n      }).length;\n    },\n    init: function init() {\n      this.content = this.value || '';\n    },\n    onChange: function onChange(e) {\n      if (this.maxRows) {\n        var newRows = this.calcRowsLength(e.target.value);\n\n        if (newRows > this.maxRows) {\n          // 逐字输入\n          if (newRows - this.calcRowsLength(this.lastContent) <= 1) {\n            this.content = this.lastContent;\n          } else {\n            // 复制黏贴截取\n            this.content = e.target.value.trim().split('\\n').slice(0, this.maxRows).join('\\n');\n          }\n        }\n\n        this.$emit('input', this.content);\n        this.$emit('change', this.content);\n      } else {\n        var maxlength = this.maxlength;\n        var content = e.target.value.substr(0, maxlength);\n        this.content = content;\n        this.$emit('input', content);\n        this.$emit('change', content);\n      }\n\n      this.lastContent = this.content;\n    }\n  }\n};",null]}