{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/transaction/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/transaction/list.vue","mtime":1600926556497},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  PRODUCT_TYPE,\n  SOLD_DETAIL_PAGE_NAMES\n} from '@/constants/sold/transaction'\nimport { ListService } from './list.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './list.config'\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip'\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldDealSaleCabinet from '@/views/biz-modals/sold/deal/sale-cabinet'\nimport SoldDealSaleCourse from '@/views/biz-modals/sold/deal/sale-course'\nimport SoldDealSaleDepositCard from '@/views/biz-modals/sold/deal/sale-deposit-card'\nimport SoldDealSaleMemberCard from '@/views/biz-modals/sold/deal/sale-member-card'\nimport SoldDealSalePersonalCourse from '@/views/biz-modals/sold/deal/sale-personal-course'\nimport SoldDealSaleSmallCourse from '@/views/biz-modals/sold/deal/sale-small-course'\nimport SoldDealWaitPay from '@/views/biz-modals/brand/app/pos/wait-pay-result'\nexport default {\n  name: 'PageShopSoldLease',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'page-shop-sold',\n    sale: 'page-shop-sold-sale'\n  },\n  modals: {\n    SoldDealGatheringTip,\n    SoldDealGathering,\n    SoldDealSaleCabinet,\n    SoldDealSaleCourse,\n    SoldDealSaleDepositCard,\n    SoldDealSaleMemberCard,\n    SoldDealSalePersonalCourse,\n    SoldDealSaleSmallCourse,\n    SoldDealWaitPay\n  },\n  props: {\n    product_type: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      PRODUCT_TYPE\n    }\n  },\n  serviceInject() {\n    return {\n      listService: ListService\n    }\n  },\n  rxState() {\n    return {\n      list: this.listService.list$,\n      page: this.listService.page$,\n      loading: this.listService.loading$,\n      productTypes: this.listService.productTypes$,\n      auth: this.listService.auth$\n    }\n  },\n  computed: {\n    columns\n  },\n  mounted() {\n    this.$searchQuery.product_type = this.product_type\n    this.getList()\n  },\n  watch: {\n    $searchQuery() {\n      this.getList()\n    }\n  },\n  methods: {\n    getList() {\n      this.listService.getProductList(this.$searchQuery).subscribe()\n    },\n    // 签单\n    onTransaction(record) {\n      switch (this.$searchQuery.product_type) {\n        case this.PRODUCT_TYPE.MEMBER_CARD:\n          this.onMember(record)\n          break\n        case this.PRODUCT_TYPE.DEPOSIT_CARD:\n          this.onDeposit(record)\n          break\n        case this.PRODUCT_TYPE.PERSONAL_COURSE:\n          this.onPersonalCourse(record)\n          break\n        case this.PRODUCT_TYPE.PACKAGE:\n          this.onPackage(record)\n          break\n        case this.PRODUCT_TYPE.CABINET:\n          this.onCabinet(record)\n          break\n        case this.PRODUCT_TYPE.SMALL_COURSE:\n          this.onSmallCourse(record)\n          break\n      }\n    },\n    // 打印合同\n    createdOrderPrint(order_id) {\n      let url = `${window.location.origin}/common/contract-preview?id=${order_id}`\n      window.open(url)\n    },\n    // 查看订单\n    createdOrderViewOrder(order_id) {\n      this.$router.push({\n        name: 'shop-finance-order-info-collection-details',\n        query: {\n          id: order_id\n        }\n      })\n    },\n    viewSoldDetetail(soldId, type) {\n      const name = SOLD_DETAIL_PAGE_NAMES[type]\n      this.$router.push({\n        name,\n        query: {\n          id: soldId\n        }\n      })\n    },\n    // 打印小票\n    printOrder(order_id) {\n      window.open(\n        '/ticket/gathering-print?id=' + order_id,\n        '_blank',\n        'width=800,height=600'\n      )\n    },\n    // 订单收款modal\n    createdOrderPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 创建成功，提示框modal\n    createdGatheringTip(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering-tip',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 等待支付回调modal\n    createdWaitPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-wait-pay',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 提示框回调，gathering-tip\n    async tipCallBack(params = {}) {\n      const { orderId, soldId, modalType, callBackType } = params\n      switch (callBackType) {\n        case 'cancel':\n          this.getList()\n          break\n        case 'Print':\n          this.createdOrderPrint(orderId)\n          break\n        case 'ViewOrder':\n          this.createdOrderViewOrder(orderId)\n          break\n        case 'PrintOrder':\n          this.printOrder(orderId)\n          break\n        case 'viewSoldDetetail':\n          this.viewSoldDetetail(soldId, modalType)\n          break\n        case 'Pay':\n          this.createdOrderPay({\n            order_id: orderId,\n            type: modalType\n          }).then(res => {\n            this.payCallBack({\n              orderId,\n              soldId: res.soldId,\n              modalType,\n              callBackType: res.type,\n              callBackData: res\n            })\n          })\n          break\n      }\n    },\n    // 订单收款回调\n    async payCallBack(params) {\n      const { orderId, soldId, modalType, callBackType, callBackData } = params\n      switch (callBackType) {\n        case 'cancel':\n          this.getList()\n          break\n        case 'pay':\n          this.createdGatheringTip({\n            message: '收款成功',\n            type: this.product_type\n          }).then(res => {\n            this.tipCallBack({\n              orderId,\n              soldId,\n              modalType,\n              callBackType: res.type\n            })\n          })\n          break\n        case 'pos':\n          this.createdWaitPay(callBackData).then(() => {\n            this.createdGatheringTip({\n              message: '收款成功',\n              type: this.product_type,\n              order_id: orderId\n            }).then(res => {\n              this.tipCallBack({\n                orderId,\n                soldId: res.soldId,\n                modalType,\n                callBackType: res.type\n              })\n            })\n          })\n          break\n      }\n    },\n    // 签单成功回调\n    async saleCallBack(result, type) {\n      if (result.type === 'create') {\n        // 创建订单成功\n        let props = {\n          order_id: result.orderId,\n          type,\n          message: '订单创建成功',\n          needPay: true\n        }\n        let orderSuccessRes = await this.createdGatheringTip(props)\n        this.tipCallBack({\n          orderId: result.orderId,\n          soldId: result.soldId,\n          modalType: type,\n          callBackType: orderSuccessRes.type\n        })\n      } else if (result.type === 'createPay') {\n        // 创建订单成功 并且到支付页面\n        let props = {\n          order_id: result.orderId,\n          type\n        }\n        let payOrderRes = await this.createdOrderPay(props)\n        this.payCallBack({\n          orderId: result.orderId,\n          soldId: payOrderRes.soldId,\n          modalType: type,\n          callBackType: payOrderRes.type,\n          callBackData: payOrderRes\n        })\n      }\n    },\n    // 会员卡签单\n    onMember(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-member-card',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'member')\n          }\n        }\n      })\n    },\n    // 储值卡签单\n    onDeposit(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-deposit-card',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'deposit')\n          }\n        }\n      })\n    },\n    // 储物柜签单\n    onCabinet(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-cabinet',\n        props: {\n          // 默认传0，因为没有选择具体的柜子\n          id: '0',\n          areaId: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'cabinet_order')\n          }\n        }\n      })\n    },\n    // 课程包签单\n    onPackage(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-course',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'package')\n          }\n        }\n      })\n    },\n    // 私教课签单\n    onPersonalCourse(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-personal-course',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'personal')\n          }\n        }\n      })\n    },\n    // 小班课签单\n    onSmallCourse(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-small-course',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'small_course_order/detail')\n          }\n        }\n      })\n    },\n    onTableChange(pagination) {\n      this.$searchQuery.current_page = pagination.current\n      this.$searchQuery.size = pagination.pageSize\n      this.getList()\n    }\n  }\n}\n",{"version":3,"sources":["list.vue"],"names":[],"mappingsfile":"list.vue","sourceRoot":"src/views/pages/shop/sold/transaction","sourcesContent":["<template>\n  <st-panel initial app :class=\"basic()\">\n    <st-table\n      :page=\"page\"\n      :class=\"basic('table')\"\n      rowKey=\"id\"\n      :loading=\"loading.getProductList\"\n      :columns=\"columns\"\n      @change=\"onTableChange\"\n      :dataSource=\"list\"\n    >\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <st-table-actions>\n          <a\n            v-if=\"record.auth['shop:sold:transaction|order']\"\n            @click=\"onTransaction(record)\"\n          >\n            签单\n          </a>\n        </st-table-actions>\n      </div>\n    </st-table>\n  </st-panel>\n</template>\n\n<script>\nimport {\n  PRODUCT_TYPE,\n  SOLD_DETAIL_PAGE_NAMES\n} from '@/constants/sold/transaction'\nimport { ListService } from './list.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './list.config'\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip'\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldDealSaleCabinet from '@/views/biz-modals/sold/deal/sale-cabinet'\nimport SoldDealSaleCourse from '@/views/biz-modals/sold/deal/sale-course'\nimport SoldDealSaleDepositCard from '@/views/biz-modals/sold/deal/sale-deposit-card'\nimport SoldDealSaleMemberCard from '@/views/biz-modals/sold/deal/sale-member-card'\nimport SoldDealSalePersonalCourse from '@/views/biz-modals/sold/deal/sale-personal-course'\nimport SoldDealSaleSmallCourse from '@/views/biz-modals/sold/deal/sale-small-course'\nimport SoldDealWaitPay from '@/views/biz-modals/brand/app/pos/wait-pay-result'\nexport default {\n  name: 'PageShopSoldLease',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'page-shop-sold',\n    sale: 'page-shop-sold-sale'\n  },\n  modals: {\n    SoldDealGatheringTip,\n    SoldDealGathering,\n    SoldDealSaleCabinet,\n    SoldDealSaleCourse,\n    SoldDealSaleDepositCard,\n    SoldDealSaleMemberCard,\n    SoldDealSalePersonalCourse,\n    SoldDealSaleSmallCourse,\n    SoldDealWaitPay\n  },\n  props: {\n    product_type: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      PRODUCT_TYPE\n    }\n  },\n  serviceInject() {\n    return {\n      listService: ListService\n    }\n  },\n  rxState() {\n    return {\n      list: this.listService.list$,\n      page: this.listService.page$,\n      loading: this.listService.loading$,\n      productTypes: this.listService.productTypes$,\n      auth: this.listService.auth$\n    }\n  },\n  computed: {\n    columns\n  },\n  mounted() {\n    this.$searchQuery.product_type = this.product_type\n    this.getList()\n  },\n  watch: {\n    $searchQuery() {\n      this.getList()\n    }\n  },\n  methods: {\n    getList() {\n      this.listService.getProductList(this.$searchQuery).subscribe()\n    },\n    // 签单\n    onTransaction(record) {\n      switch (this.$searchQuery.product_type) {\n        case this.PRODUCT_TYPE.MEMBER_CARD:\n          this.onMember(record)\n          break\n        case this.PRODUCT_TYPE.DEPOSIT_CARD:\n          this.onDeposit(record)\n          break\n        case this.PRODUCT_TYPE.PERSONAL_COURSE:\n          this.onPersonalCourse(record)\n          break\n        case this.PRODUCT_TYPE.PACKAGE:\n          this.onPackage(record)\n          break\n        case this.PRODUCT_TYPE.CABINET:\n          this.onCabinet(record)\n          break\n        case this.PRODUCT_TYPE.SMALL_COURSE:\n          this.onSmallCourse(record)\n          break\n      }\n    },\n    // 打印合同\n    createdOrderPrint(order_id) {\n      let url = `${window.location.origin}/common/contract-preview?id=${order_id}`\n      window.open(url)\n    },\n    // 查看订单\n    createdOrderViewOrder(order_id) {\n      this.$router.push({\n        name: 'shop-finance-order-info-collection-details',\n        query: {\n          id: order_id\n        }\n      })\n    },\n    viewSoldDetetail(soldId, type) {\n      const name = SOLD_DETAIL_PAGE_NAMES[type]\n      this.$router.push({\n        name,\n        query: {\n          id: soldId\n        }\n      })\n    },\n    // 打印小票\n    printOrder(order_id) {\n      window.open(\n        '/ticket/gathering-print?id=' + order_id,\n        '_blank',\n        'width=800,height=600'\n      )\n    },\n    // 订单收款modal\n    createdOrderPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 创建成功，提示框modal\n    createdGatheringTip(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-gathering-tip',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 等待支付回调modal\n    createdWaitPay(props) {\n      return new Promise((resolve, reject) => {\n        this.$modalRouter.push({\n          name: 'sold-deal-wait-pay',\n          props,\n          on: {\n            success: resolve\n          }\n        })\n      })\n    },\n    // 提示框回调，gathering-tip\n    async tipCallBack(params = {}) {\n      const { orderId, soldId, modalType, callBackType } = params\n      switch (callBackType) {\n        case 'cancel':\n          this.getList()\n          break\n        case 'Print':\n          this.createdOrderPrint(orderId)\n          break\n        case 'ViewOrder':\n          this.createdOrderViewOrder(orderId)\n          break\n        case 'PrintOrder':\n          this.printOrder(orderId)\n          break\n        case 'viewSoldDetetail':\n          this.viewSoldDetetail(soldId, modalType)\n          break\n        case 'Pay':\n          this.createdOrderPay({\n            order_id: orderId,\n            type: modalType\n          }).then(res => {\n            this.payCallBack({\n              orderId,\n              soldId: res.soldId,\n              modalType,\n              callBackType: res.type,\n              callBackData: res\n            })\n          })\n          break\n      }\n    },\n    // 订单收款回调\n    async payCallBack(params) {\n      const { orderId, soldId, modalType, callBackType, callBackData } = params\n      switch (callBackType) {\n        case 'cancel':\n          this.getList()\n          break\n        case 'pay':\n          this.createdGatheringTip({\n            message: '收款成功',\n            type: this.product_type\n          }).then(res => {\n            this.tipCallBack({\n              orderId,\n              soldId,\n              modalType,\n              callBackType: res.type\n            })\n          })\n          break\n        case 'pos':\n          this.createdWaitPay(callBackData).then(() => {\n            this.createdGatheringTip({\n              message: '收款成功',\n              type: this.product_type,\n              order_id: orderId\n            }).then(res => {\n              this.tipCallBack({\n                orderId,\n                soldId: res.soldId,\n                modalType,\n                callBackType: res.type\n              })\n            })\n          })\n          break\n      }\n    },\n    // 签单成功回调\n    async saleCallBack(result, type) {\n      if (result.type === 'create') {\n        // 创建订单成功\n        let props = {\n          order_id: result.orderId,\n          type,\n          message: '订单创建成功',\n          needPay: true\n        }\n        let orderSuccessRes = await this.createdGatheringTip(props)\n        this.tipCallBack({\n          orderId: result.orderId,\n          soldId: result.soldId,\n          modalType: type,\n          callBackType: orderSuccessRes.type\n        })\n      } else if (result.type === 'createPay') {\n        // 创建订单成功 并且到支付页面\n        let props = {\n          order_id: result.orderId,\n          type\n        }\n        let payOrderRes = await this.createdOrderPay(props)\n        this.payCallBack({\n          orderId: result.orderId,\n          soldId: payOrderRes.soldId,\n          modalType: type,\n          callBackType: payOrderRes.type,\n          callBackData: payOrderRes\n        })\n      }\n    },\n    // 会员卡签单\n    onMember(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-member-card',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'member')\n          }\n        }\n      })\n    },\n    // 储值卡签单\n    onDeposit(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-deposit-card',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'deposit')\n          }\n        }\n      })\n    },\n    // 储物柜签单\n    onCabinet(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-cabinet',\n        props: {\n          // 默认传0，因为没有选择具体的柜子\n          id: '0',\n          areaId: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'cabinet_order')\n          }\n        }\n      })\n    },\n    // 课程包签单\n    onPackage(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-course',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'package')\n          }\n        }\n      })\n    },\n    // 私教课签单\n    onPersonalCourse(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-personal-course',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'personal')\n          }\n        }\n      })\n    },\n    // 小班课签单\n    onSmallCourse(record) {\n      this.$modalRouter.push({\n        name: 'sold-deal-sale-small-course',\n        props: {\n          id: `${record.id}`\n        },\n        on: {\n          success: result => {\n            this.saleCallBack(result, 'small_course_order/detail')\n          }\n        }\n      })\n    },\n    onTableChange(pagination) {\n      this.$searchQuery.current_page = pagination.current\n      this.$searchQuery.size = pagination.pageSize\n      this.getList()\n    }\n  }\n}\n</script>\n"]}]}