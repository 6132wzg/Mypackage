{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/mobile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/mobile.vue","mtime":1591147717009},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { LoginService } from '../login.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport NoCaptcha from './no-captcha'\nimport AccountAgreement from '@/views/biz-modals/account/agreement'\nimport { ruleOptions } from './login.config'\nimport InputPhone from '@/views/biz-components/input-phone/input-phone'\nimport InputPhoneCode from '@/views/biz-components/input-phone-code/input-phone-code'\n\nexport default {\n  name: 'LoginMobile',\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService,\n      noCaptchaService: NoCaptchaService\n    }\n  },\n  bem: {\n    mobile: 'page-login-mobile'\n  },\n  components: {\n    NoCaptcha,\n    InputPhone,\n    InputPhoneCode\n  },\n  modals: {\n    AccountAgreement\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      isCountTime: false,\n      countryInfo: {},\n      thirdLogins: ['alipay', 'wechat', 'weibo', 'qq'],\n      isBind: true\n    }\n  },\n  props: {\n    value: {\n      type: Object\n    }\n  },\n  mounted() {\n    let params = {\n      code_id: 37,\n      phone_code: 86,\n      phone: ''\n    }\n    if (this.value && this.value.country_phone) {\n      params = this.value.country_phone\n      this.form.setFieldsValue({\n        country_phone: params\n      })\n      // this.onChangePhone(params)\n    }\n  },\n  methods: {\n    onClickCaptcha() {\n      // if (!this.isBind) return\n      this.form.validateFields(['country_phone'], (err, values) => {\n        if (!err) {\n          const { country_phone } = values\n          const params = {\n            phone: country_phone.phone,\n            country_code_id: country_phone.code_id\n          }\n          this.getCaptcha(params)\n        }\n      })\n    },\n    clickAgreement() {\n      this.$modalRouter.push({\n        name: 'account-agreement',\n        props: {},\n        on: {}\n      })\n    },\n    onChangePhone(event) {\n      this.isBind = true\n      // const phone = event.phone\n      // if (this.pattern.MOBILE.test(phone)) {\n      //   this.validPhoneIsBind({ phone })\n      // } else {\n      //   this.isBind = true\n      // }\n    },\n    goBind() {\n      this.countryInfo.country_phone = this.form.getFieldValue('country_phone')\n      this.$emit('bind', this.countryInfo)\n    },\n    // validPhoneIsBind(params) {\n    //   this.loginService.checkPhoneIsBind(params).subscribe(res => {\n    //     this.isBind = false\n    //     if (res.status) {\n    //       this.isBind = true\n    //     }\n    //   })\n    // },\n    getCaptcha(params) {\n      params.nvc_val = getNVCVal()\n      this.loginService.getCaptcha(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        this.isCountTime = true\n      }, this.loginErrorHandler)\n    },\n    loginErrorHandler(err) {\n      const code = err.response.code\n      if (code === 60052) {\n        // 手机号未注册\n        this.isBind = false\n        return\n      }\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    login() {\n      this.form.validate().then(params => {\n        const { country_phone } = params\n        params.country_code_id = country_phone.code_id\n        params.phone = country_phone.phone\n        delete params.country_phone\n        this.loginService.loginPhone(params).subscribe(res => {\n          location.href = '/'\n        })\n      })\n    },\n    endCount() {\n      this.isCountTime = false\n    },\n    onSelectCountry(event) {\n      this.countryInfo = event\n    }\n  }\n}\n",null]}