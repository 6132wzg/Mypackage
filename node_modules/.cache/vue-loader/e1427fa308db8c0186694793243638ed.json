{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/date-component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/date-component.vue","mtime":1597396799923},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { TIME_UNIT } from '@/constants/course/team'\nexport default {\n  name: 'date',\n  data() {\n    return {\n      startTime: moment().format('YYYY-MM-DD'),\n      TIME_UNIT\n    }\n  },\n  props: {\n    end: {\n      type: String,\n      default: ''\n    }\n  },\n  created() {\n    let weekOfday = moment(this.start).format('E')\n    if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n      this.startTime = moment(this.start).format('YYYY-MM-DD')\n    } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n      this.startTime = this.$searchQuery.start_date\n    } else {\n      this.startTime = moment(this.start)\n        .subtract(weekOfday - 1, 'days')\n        .format('YYYY-MM-DD')\n    }\n  },\n  watch: {\n    start(n, o) {\n      let weekOfday = moment(n).format('E')\n      this.startTime =\n        this.$searchQuery.time_unit !== this.TIME_UNIT.TIME_WEEK\n          ? moment(this.start).format('YYYY-MM-DD')\n          : moment(this.start)\n              .subtract(weekOfday - 1, 'days')\n              .format('YYYY-MM-DD')\n    }\n  },\n  computed: {\n    isDay() {\n      const start = this.$searchQuery.start_date\n      const end = this.$searchQuery.end_date\n      return start === end\n    },\n    isCurrent() {\n      const start = moment(this.$searchQuery.start_date).valueOf()\n      const end = moment(this.$searchQuery.end_date).valueOf()\n      const current = moment(moment().format('YYYY-MM-DD')).valueOf()\n      return current < start || end < current\n    },\n    start() {\n      return this.$searchQuery.start_date\n    },\n    endTime() {\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        return moment(this.startTime).format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        return moment(this.startTime)\n          .endOf('month')\n          .add(1, 'days')\n          .format('YYYY-MM-DD')\n      } else {\n        return moment(this.startTime)\n          .add(6, 'days')\n          .format('YYYY-MM-DD')\n      }\n      return this.isDay\n        ? moment(this.startTime).format('YYYY-MM-DD')\n        : moment(this.startTime)\n            .add(6, 'days')\n            .format('YYYY-MM-DD')\n    },\n    rangeTime() {\n      let start = moment(this.startTime).format('LL')\n      let end = moment(this.endTime).format('LL')\n      console.log(this.startTime, start, '这是开始时间')\n      return this.isDay\n        ? moment(this.$searchQuery.start_date).format('LL')\n        : `${start} ~ ${end}`\n    }\n  },\n  methods: {\n    onClickPre() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .subtract(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .subtract(7, 'days')\n      //       .format('YYYY-MM-DD')\n\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date)\n          .subtract(1, 'days')\n          .format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime)\n          .subtract(1, 'months')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment(this.startTime)\n          .subtract(7, 'days')\n          .format('YYYY-MM-DD')\n      }\n      this.$emit('pre', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      })\n    },\n    onClickNext() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .add(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .add(7, 'days')\n      //       .format('YYYY-MM-DD')\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date)\n          .add(1, 'days')\n          .format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime)\n          .add(1, 'months')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment(this.startTime)\n          .add(7, 'days')\n          .format('YYYY-MM-DD')\n      }\n      this.$emit('next', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      })\n    },\n    onClickToday() {\n      let weekOfday = moment().format('E') // 计算今天是这周第几天\n      // this.startTime = this.isDay\n      //   ? moment().format('YYYY-MM-DD')\n      //   : moment()\n      //       .subtract(weekOfday - 1, 'days')\n      //       .format('YYYY-MM-DD') // 周一日期\n\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment().format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment()\n          .startOf('month')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment()\n          .subtract(weekOfday - 1, 'days')\n          .format('YYYY-MM-DD') // 周一日期\n      }\n      this.$emit('today', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit\n      })\n    },\n    getMatrix(n) {\n      let weekOfday = moment(this.start).format('E')\n      let date = moment(this.start)\n        .subtract(weekOfday - n, 'days')\n        .format('YYYY-MM-DD')\n      const sortedList = this.cardList\n        .filter(item => item.start_date === date)\n        .map(item => {\n          if (moment(item.end_date) > moment(item.start_date)) {\n            item.overload = 1\n          }\n          item.start = toTen(item.start_time)\n          item.end = toTen(item.end_time)\n          return item\n        })\n        .sort((a, b) => {\n          return a.start - b.start\n        })\n\n      const timeMatrix = []\n      let prevStart\n      let prevEnd\n      let group = []\n      let groupIndex = 0\n\n      sortedList.forEach(item => {\n        if (prevStart === undefined) {\n          prevStart = item.start\n          prevEnd = item.end\n        } else {\n          if (item.start < prevEnd) {\n            if (item.end > prevEnd) {\n              prevEnd = item.end\n            }\n          } else {\n            // 以当前item标记开始位和结束位\n            prevStart = item.start\n            prevEnd = item.end\n            // 新增分组\n            group = []\n            groupIndex++\n          }\n        }\n        group.push(item)\n\n        timeMatrix[groupIndex] = group\n      })\n      return timeMatrix\n    },\n    itemStyle(item) {\n      return {\n        top: `${(item.start / 24) * 100}%`,\n        height: `${((item.end - item.start) / 24) * 100}%`\n      }\n    }\n  }\n}\n",{"version":3,"sources":["date-component.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"date-component.vue","sourceRoot":"src/views/biz-components/schedule/date#","sourcesContent":["<template>\n  <div class=\"date-container\">\n    <st-button @click=\"onClickPre\">\n      <a-icon type=\"left\" />\n    </st-button>\n\n    <span class=\"text-content\">{{ rangeTime }}</span>\n\n    <st-button class=\"mg-r8\" @click=\"onClickNext\">\n      <a-icon type=\"right\" />\n    </st-button>\n    <st-button @click=\"onClickToday\" v-if=\"isCurrent\" class=\"today\">\n      今\n    </st-button>\n  </div>\n</template>\n<script>\nimport { TIME_UNIT } from '@/constants/course/team'\nexport default {\n  name: 'date',\n  data() {\n    return {\n      startTime: moment().format('YYYY-MM-DD'),\n      TIME_UNIT\n    }\n  },\n  props: {\n    end: {\n      type: String,\n      default: ''\n    }\n  },\n  created() {\n    let weekOfday = moment(this.start).format('E')\n    if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n      this.startTime = moment(this.start).format('YYYY-MM-DD')\n    } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n      this.startTime = this.$searchQuery.start_date\n    } else {\n      this.startTime = moment(this.start)\n        .subtract(weekOfday - 1, 'days')\n        .format('YYYY-MM-DD')\n    }\n  },\n  watch: {\n    start(n, o) {\n      let weekOfday = moment(n).format('E')\n      this.startTime =\n        this.$searchQuery.time_unit !== this.TIME_UNIT.TIME_WEEK\n          ? moment(this.start).format('YYYY-MM-DD')\n          : moment(this.start)\n              .subtract(weekOfday - 1, 'days')\n              .format('YYYY-MM-DD')\n    }\n  },\n  computed: {\n    isDay() {\n      const start = this.$searchQuery.start_date\n      const end = this.$searchQuery.end_date\n      return start === end\n    },\n    isCurrent() {\n      const start = moment(this.$searchQuery.start_date).valueOf()\n      const end = moment(this.$searchQuery.end_date).valueOf()\n      const current = moment(moment().format('YYYY-MM-DD')).valueOf()\n      return current < start || end < current\n    },\n    start() {\n      return this.$searchQuery.start_date\n    },\n    endTime() {\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        return moment(this.startTime).format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        return moment(this.startTime)\n          .endOf('month')\n          .add(1, 'days')\n          .format('YYYY-MM-DD')\n      } else {\n        return moment(this.startTime)\n          .add(6, 'days')\n          .format('YYYY-MM-DD')\n      }\n      return this.isDay\n        ? moment(this.startTime).format('YYYY-MM-DD')\n        : moment(this.startTime)\n            .add(6, 'days')\n            .format('YYYY-MM-DD')\n    },\n    rangeTime() {\n      let start = moment(this.startTime).format('LL')\n      let end = moment(this.endTime).format('LL')\n      console.log(this.startTime, start, '这是开始时间')\n      return this.isDay\n        ? moment(this.$searchQuery.start_date).format('LL')\n        : `${start} ~ ${end}`\n    }\n  },\n  methods: {\n    onClickPre() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .subtract(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .subtract(7, 'days')\n      //       .format('YYYY-MM-DD')\n\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date)\n          .subtract(1, 'days')\n          .format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime)\n          .subtract(1, 'months')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment(this.startTime)\n          .subtract(7, 'days')\n          .format('YYYY-MM-DD')\n      }\n      this.$emit('pre', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      })\n    },\n    onClickNext() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .add(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .add(7, 'days')\n      //       .format('YYYY-MM-DD')\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date)\n          .add(1, 'days')\n          .format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime)\n          .add(1, 'months')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment(this.startTime)\n          .add(7, 'days')\n          .format('YYYY-MM-DD')\n      }\n      this.$emit('next', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      })\n    },\n    onClickToday() {\n      let weekOfday = moment().format('E') // 计算今天是这周第几天\n      // this.startTime = this.isDay\n      //   ? moment().format('YYYY-MM-DD')\n      //   : moment()\n      //       .subtract(weekOfday - 1, 'days')\n      //       .format('YYYY-MM-DD') // 周一日期\n\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment().format('YYYY-MM-DD')\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment()\n          .startOf('month')\n          .format('YYYY-MM-DD')\n      } else {\n        this.startTime = moment()\n          .subtract(weekOfday - 1, 'days')\n          .format('YYYY-MM-DD') // 周一日期\n      }\n      this.$emit('today', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit\n      })\n    },\n    getMatrix(n) {\n      let weekOfday = moment(this.start).format('E')\n      let date = moment(this.start)\n        .subtract(weekOfday - n, 'days')\n        .format('YYYY-MM-DD')\n      const sortedList = this.cardList\n        .filter(item => item.start_date === date)\n        .map(item => {\n          if (moment(item.end_date) > moment(item.start_date)) {\n            item.overload = 1\n          }\n          item.start = toTen(item.start_time)\n          item.end = toTen(item.end_time)\n          return item\n        })\n        .sort((a, b) => {\n          return a.start - b.start\n        })\n\n      const timeMatrix = []\n      let prevStart\n      let prevEnd\n      let group = []\n      let groupIndex = 0\n\n      sortedList.forEach(item => {\n        if (prevStart === undefined) {\n          prevStart = item.start\n          prevEnd = item.end\n        } else {\n          if (item.start < prevEnd) {\n            if (item.end > prevEnd) {\n              prevEnd = item.end\n            }\n          } else {\n            // 以当前item标记开始位和结束位\n            prevStart = item.start\n            prevEnd = item.end\n            // 新增分组\n            group = []\n            groupIndex++\n          }\n        }\n        group.push(item)\n\n        timeMatrix[groupIndex] = group\n      })\n      return timeMatrix\n    },\n    itemStyle(item) {\n      return {\n        top: `${(item.start / 24) * 100}%`,\n        height: `${((item.end - item.start) / 24) * 100}%`\n      }\n    }\n  }\n}\n</script>\n"]}]}