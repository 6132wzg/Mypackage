{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-course-facet-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-course-facet-bar.vue","mtime":1594718339903},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport chartMixin from \"./mixin\";\nimport { Chart } from '@antv/g2';\nimport { View } from 'st-data-set';\nimport Vue from 'vue';\nimport StHelpTooltip from '@/views/components/help-tooltip/help-tooltip';\nimport { debounce } from 'lodash-es';\nexport default {\n  mixins: [chartMixin],\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    fields: {\n      type: Array,\n      default: function _default() {\n        return ['团体课', '私教课'];\n      }\n    },\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['l(0) 0:#57ABFF 1:#426BF7', 'l(0) 0:#8428FF 1:#6332D1'];\n      }\n    },\n    height: {\n      type: Number,\n      default: 280\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener('resize', debounce(this.mountedTooltip, 200));\n  },\n  methods: {\n    mountedTooltip: function mountedTooltip() {\n      setTimeout(this.changeData, 400);\n    },\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'type',\n        value: 'value'\n      }).transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = row.value ? +row.value : 0;\n          return row;\n        }\n      });\n    },\n    initChart: function initChart() {\n      var _this = this;\n\n      var h = this.$createElement;\n      var tooltipEl = new Vue({\n        components: {\n          StHelpTooltip: StHelpTooltip\n        },\n        render: function render(h) {\n          return h(\"st-help-tooltip\");\n        }\n      }).$mount().$el;\n      this.chart = new Chart({\n        container: this.$el,\n        padding: ['auto', 'auto', 'auto', 70],\n        renderer: 'svg',\n        forceFit: true,\n        height: this.height\n      });\n      this.chart.source(this.dv); // 图例位置\n\n      this.chart.legend({\n        position: 'top-left',\n        marker: 'circle',\n        offsetX: 5\n      }); // 图表分面 相当于两个柱状图\n\n      this.chart.facet('mirror', {\n        fields: ['type'],\n        padding: 4,\n        showTitle: false,\n        transpose: true,\n        eachView: function eachView(view, facet) {\n          var facetIndex = facet.colIndex;\n          view.axis('group', {\n            position: 'top',\n            label: {\n              offset: 70,\n              textStyle: {\n                fill: '#3E4D5C',\n                fontSize: 12\n              },\n              htmlTemplate: function htmlTemplate(text, item, index) {\n                // 增加tooltipEl.outerHTML，防止mounted未完成导致的空白闪烁\n                return \"<span style=\\\"width:70px;display:block;\\\">\".concat(text, \"&nbsp;<span id=\\\"axis-\").concat(index, \"\\\">\").concat(tooltipEl.outerHTML, \"</span></span>\");\n              }\n            },\n            tickLine: {\n              alignWithLabel: false,\n              length: 0\n            },\n            line: {\n              lineWidth: 0\n            }\n          });\n          var color = _this.colors[facetIndex];\n          view.axis('value', false);\n          view.guide().region({\n            start: ['0%', '11.5%'],\n            // 辅助框起始位置，值为原始数据值，支持 callback\n            end: ['100%', '21.5%'],\n            // 辅助框结束位置，值为原始数据值，支持 callback\n            style: {\n              lineWidth: 0,\n              // 辅助框的边框宽度\n              fill: '#E9EDF2',\n              // 辅助框填充的颜色\n              fillOpacity: 1,\n              // 辅助框的背景透明度\n              stroke: '#ccc' // 辅助框的边框颜色设置\n\n            }\n          });\n          view.guide().region({\n            start: ['0%', '45%'],\n            // 辅助框起始位置，值为原始数据值，支持 callback\n            end: ['100%', '55%'],\n            // 辅助框结束位置，值为原始数据值，支持 callback\n            style: {\n              lineWidth: 0,\n              // 辅助框的边框宽度\n              fill: '#E9EDF2',\n              // 辅助框填充的颜色\n              fillOpacity: 1,\n              // 辅助框的背景透明度\n              stroke: '#ccc' // 辅助框的边框颜色设置\n\n            }\n          });\n          view.guide().region({\n            start: ['0%', '78.5%'],\n            // 辅助框起始位置，值为原始数据值，支持 callback\n            end: ['100%', '88.5%'],\n            // 辅助框结束位置，值为原始数据值，支持 callback\n            style: {\n              lineWidth: 0,\n              // 辅助框的边框宽度\n              fill: '#E9EDF2',\n              // 辅助框填充的颜色\n              fillOpacity: 1,\n              // 辅助框的背景透明度\n              stroke: '#ccc' // 辅助框的边框颜色设置\n\n            }\n          });\n          view.interval().position('group*value').tooltip('type*value', function (t, v) {\n            return {\n              name: t,\n              value: v + '节'\n            };\n          }).color('type', [color]).size(24).opacity(1).label('value', function (val) {\n            var maxValue = _this.dv.max('value');\n\n            var offset = -4;\n            var textAlign = facetIndex === 1 ? 'end' : 'start';\n            var fill = 'white';\n            var shouldPutLeft = val / maxValue < 0.1;\n\n            if (shouldPutLeft) {\n              offset = 4;\n              textAlign = facetIndex === 1 ? 'start' : 'end';\n              fill = '#3E4D5C';\n            }\n\n            return {\n              offset: offset,\n              textStyle: {\n                fill: fill,\n                textAlign: textAlign\n              }\n            };\n          });\n        }\n      });\n      this.chart.render();\n      this.changeData();\n    },\n    changeData: function changeData() {\n      var h = this.$createElement;\n\n      if (document.querySelector('#axis-0')) {\n        new Vue({\n          components: {\n            StHelpTooltip: StHelpTooltip\n          },\n          render: function render(h) {\n            return h(\"st-help-tooltip\", {\n              \"attrs\": {\n                \"id\": \"TBDAC003\"\n              }\n            });\n          }\n        }).$mount('#axis-0');\n        new Vue({\n          components: {\n            StHelpTooltip: StHelpTooltip\n          },\n          render: function render(h) {\n            return h(\"st-help-tooltip\", {\n              \"attrs\": {\n                \"id\": \"TBDAC002\"\n              }\n            });\n          }\n        }).$mount('#axis-1');\n        new Vue({\n          components: {\n            StHelpTooltip: StHelpTooltip\n          },\n          render: function render(h) {\n            return h(\"st-help-tooltip\", {\n              \"attrs\": {\n                \"id\": \"TBDAC001\"\n              }\n            });\n          }\n        }).$mount('#axis-2');\n      }\n    }\n  }\n};",null]}