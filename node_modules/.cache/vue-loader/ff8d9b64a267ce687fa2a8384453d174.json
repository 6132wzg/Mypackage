{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/course/info/personal/info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/course/info/personal/info.vue","mtime":1596188219759},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { InfoService } from './info.service'\nimport { btnOptions } from './info.config'\nimport moment from 'moment'\nimport SoldCourseCoach from '@/views/biz-modals/sold/course/coach'\nimport SoldCourseFreeze from '@/views/biz-modals/sold/course/freeze'\nimport SoldCourseRefund from '@/views/biz-modals/sold/course/refund'\nimport SoldCourseSurplusPersonal from '@/views/biz-modals/sold/course/surplus-personal'\nimport SoldCourseTransfer from '@/views/biz-modals/sold/course/transfer'\nimport SoldCourseActivated from '@/views/biz-modals/sold/course/activated'\nimport SoldCourseLease from '@/views/biz-modals/sold/course/lease'\nimport Coaches from '@/views/biz-components/course/coaches'\nimport useInternalNoteActions from '@/hooks/shop/sold-internal-note-actions.hook'\nimport contractActions from '@/hooks/contract.hook'\nimport soldPersonalCourseActions from '@/hooks/sold/personal-course-actions.hook'\nexport default {\n  name: 'PageShopSoldCoursePersonalInfo',\n  bem: {\n    basic: 'page-shop-sold-info'\n  },\n  modals: {\n    SoldCourseCoach,\n    SoldCourseFreeze,\n    SoldCourseRefund,\n    SoldCourseSurplusPersonal,\n    SoldCourseTransfer,\n    SoldCourseActivated,\n    SoldCourseLease\n  },\n  components: {\n    Coaches\n  },\n  serviceInject() {\n    return {\n      infoService: InfoService\n    }\n  },\n  hooks() {\n    return {\n      internalNoteActions: useInternalNoteActions(),\n      contractActions: contractActions(this),\n      soldPersonalCourseActions: soldPersonalCourseActions(this)\n    }\n  },\n  rxState() {\n    return {\n      personalInfo: this.infoService.personalInfo$,\n      authTabs: this.infoService.authTabs$,\n      auth: this.infoService.auth$\n    }\n  },\n  computed: {\n    btnOptions\n  },\n  methods: {\n    moment,\n    // 修改剩余课时\n    onSurplus() {\n      this.$modalRouter.push({\n        name: 'sold-course-surplus-personal',\n        props: {\n          courseData: this.personalInfo\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 跳转合同\n    toContract() {\n      let record = this.personalInfo\n      let url = `${window.location.origin}/common/contract-preview?id=${record.order_id}`\n      window.open(url)\n    },\n    // 冻结\n    onFreeze() {\n      this.$modalRouter.push({\n        name: 'sold-course-freeze',\n        props: {\n          type: 'personal',\n          id: this.personalInfo.id,\n          courseName: this.personalInfo.course_name,\n          courseNum: this.personalInfo.remain_course_num,\n          courseEndTime: moment(this.personalInfo.end_time * 1000),\n          time: `${moment(this.personalInfo.buy_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )} 至 ${moment(this.personalInfo.end_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )}`\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 取消冻结\n    onUnfreeze() {\n      this.$confirm({\n        title: '提示',\n        content: '是否取消冻结？',\n        maskClosable: true,\n        onOk: () => {\n          return this.infoService\n            .unFreeze(this.infoService.id)\n            .toPromise()\n            .then(() => {\n              this.$router.reload()\n            })\n        }\n      })\n    },\n    // 转让\n    onTransfer() {\n      this.$modalRouter.push({\n        name: 'sold-course-transfer',\n        props: {\n          type: 'personal',\n          id: this.personalInfo.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 退款\n    onRefund() {\n      this.$modalRouter.push({\n        name: 'sold-course-refund',\n        props: {\n          type: 'personal',\n          id: this.personalInfo.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 修改教练\n    onEditCoach() {\n      this.$modalRouter.push({\n        name: 'sold-course-coach',\n        props: {\n          record: this.personalInfo\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 重新激活\n    onActivated() {\n      this.$modalRouter.push({\n        name: 'sold-course-activated',\n        props: {\n          type: 'personal',\n          id: this.personalInfo.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 延长有效期\n    onLease(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-lease',\n        props: {\n          type: 'personal',\n          id: this.personalInfo.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 对内备注\n    onInternalNote() {\n      this.internalNoteActions.onOpenModal({ id: this.infoService.id })\n    },\n    /**\n     * 修改合同备注\n     */\n    onEditContractDescription() {\n      const { order_id, description } = this.personalInfo\n      this.contractActions.editDescription({\n        order_id,\n        description\n      })\n    }\n  }\n}\n",null]}