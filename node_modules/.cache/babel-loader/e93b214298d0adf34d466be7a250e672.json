{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/stat/cashier-daily-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/stat/cashier-daily-detail.vue","mtime":1600926555987},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { columns as _columns } from \"./cashier-daily-detail.config\";\nimport tableMixin from '@/mixins/table.mixin';\nimport { CashierDailyService } from \"./cashier-daily-detail.service\";\nimport moment from 'moment';\nexport default {\n  name: 'DailyDetail',\n  mixins: [tableMixin],\n  serviceInject: function serviceInject() {\n    return {\n      cashierDailyService: CashierDailyService\n    };\n  },\n  rxState: function rxState() {\n    var _this$cashierDailySer = this.cashierDailyService,\n        list$ = _this$cashierDailySer.list$,\n        page$ = _this$cashierDailySer.page$,\n        auth$ = _this$cashierDailySer.auth$,\n        loading$ = _this$cashierDailySer.loading$;\n    return {\n      list: list$,\n      page: page$,\n      auth: auth$,\n      loading: loading$\n    };\n  },\n  props: {\n    query: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    title: String,\n    type: String\n  },\n  data: function data() {\n    return {\n      show: false,\n      modalQuery: {\n        current_page: 1,\n        size: 10\n      }\n    };\n  },\n  computed: {\n    columns: function columns() {\n      return _columns(this.type.includes('refund'));\n    },\n    searchQuery: function searchQuery() {\n      return _objectSpread({}, this.query, {}, this.modalQuery);\n    }\n  },\n  methods: {\n    moment: moment,\n    getList: function getList() {\n      this.cashierDailyService.getRevenueList(this.searchQuery, this.type).subscribe();\n    },\n    onModalTableChange: function onModalTableChange(pagination) {\n      for (var _len = arguments.length, ret = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        ret[_key - 1] = arguments[_key];\n      }\n\n      this.modalQuery = _objectSpread({}, this.modalQuery, {}, this.getTableQuery.apply(this, [pagination].concat(ret)));\n      this.getList();\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n  }\n};",{"version":3,"sources":["cashier-daily-detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,OAAA,IAAA,QAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,SAAA,mBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,aAHA,2BAGA;AACA,WAAA;AACA,MAAA,mBAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,OARA,qBAQA;AAAA,gCACA,KAAA,mBADA;AAAA,QACA,KADA,yBACA,KADA;AAAA,QACA,KADA,yBACA,KADA;AAAA,QACA,KADA,yBACA,KADA;AAAA,QACA,QADA,yBACA,QADA;AAEA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GAhBA;AAiBA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA,KADA;AAOA,IAAA,KAAA,EAAA,MAPA;AAQA,IAAA,IAAA,EAAA;AARA,GAjBA;AA2BA,EAAA,IA3BA,kBA2BA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA;AACA,QAAA,YAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA;AAFA,KAAA;AAOA,GAnCA;AAoCA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,QAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,+BACA,KAAA,KADA,MAEA,KAAA,UAFA;AAIA;AATA,GApCA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,OAFA,qBAEA;AACA,WAAA,mBAAA,CACA,cADA,CACA,KAAA,WADA,EACA,KAAA,IADA,EAEA,SAFA;AAGA,KANA;AAOA,IAAA,kBAPA,8BAOA,UAPA,EAOA;AAAA,wCAAA,GAAA;AAAA,QAAA,GAAA;AAAA;;AACA,WAAA,UAAA,qBACA,KAAA,UADA,MAEA,KAAA,aAAA,cAAA,UAAA,SAAA,GAAA,EAFA;AAIA,WAAA,OAAA;AACA;AAbA,GA/CA;AA8DA,EAAA,OA9DA,qBA8DA;AACA,SAAA,OAAA;AACA;AAhEA,CAAA","sourcesContent":["<!-- 数据统计--收银退款、收入模块--退款、收银日明细 -->\n<template>\n  <st-modal\n    wrapClassName=\"modal-stat-sell-amount\"\n    :title=\"title\"\n    v-model=\"show\"\n    size=\"default\"\n    :loading=\"loading.getRevenueList\"\n    :footer=\"false\"\n  >\n    <st-table\n      :scroll=\"{ y: 345 }\"\n      :columns=\"columns\"\n      :loading=\"loading.getRevenueList\"\n      :rowKey=\"(record, idx) => idx\"\n      :dataSource=\"list\"\n      :page=\"false\"\n      @change=\"onModalTableChange\"\n    >\n      <span slot=\"stat_date\" slot-scope=\"text\">\n        {{ moment(text).format('YYYY-MM-DD') }}\n      </span>\n    </st-table>\n  </st-modal>\n</template>\n<script>\nimport { columns } from './cashier-daily-detail.config'\nimport tableMixin from '@/mixins/table.mixin'\nimport { CashierDailyService } from './cashier-daily-detail.service'\nimport moment from 'moment'\n\nexport default {\n  name: 'DailyDetail',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      cashierDailyService: CashierDailyService\n    }\n  },\n  rxState() {\n    let { list$, page$, auth$, loading$ } = this.cashierDailyService\n    return {\n      list: list$,\n      page: page$,\n      auth: auth$,\n      loading: loading$\n    }\n  },\n  props: {\n    query: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    title: String,\n    type: String\n  },\n  data() {\n    return {\n      show: false,\n      modalQuery: {\n        current_page: 1,\n        size: 10\n      }\n    }\n  },\n  computed: {\n    columns() {\n      return columns(this.type.includes('refund'))\n    },\n    searchQuery() {\n      return {\n        ...this.query,\n        ...this.modalQuery\n      }\n    }\n  },\n  methods: {\n    moment,\n    getList() {\n      this.cashierDailyService\n        .getRevenueList(this.searchQuery, this.type)\n        .subscribe()\n    },\n    onModalTableChange(pagination, ...ret) {\n      this.modalQuery = {\n        ...this.modalQuery,\n        ...this.getTableQuery(pagination, ...ret)\n      }\n      this.getList()\n    }\n  },\n  mounted() {\n    this.getList()\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/stat"}]}