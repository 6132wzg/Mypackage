{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/mina/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/mina/index.vue","mtime":1597895242229},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { IndexService } from './index.service'\nimport UnAuthComponent from './components#/unauth.component'\nimport InfoComponent from './components#/info.component'\nimport H5WrapperComponent from './components#/h5/h5-wrapper.component'\nexport default {\n  name: 'BrandSettingMinaIndex',\n  components: {\n    UnAuthComponent,\n    InfoComponent,\n    H5WrapperComponent\n  },\n  bem: {\n    basic: 'brand-setting-mina-index'\n  },\n  serviceInject() {\n    return {\n      indexService: IndexService\n    }\n  },\n  rxState() {\n    return {\n      info: this.indexService.info$\n    }\n  },\n  data() {\n    return {\n      flag: false\n    }\n  },\n  mounted() {\n    let that = this\n    window.onbeforeunload = function() {\n      if (that.$route.path === '/brand/setting/mina/index') {\n        if (that.flag) {\n          return '此时离开将丢失已编辑的内容，是否确认离开？'\n        }\n      } else {\n        window.onbeforeunload = null\n      }\n    }\n  },\n  destroyed() {\n    window.onbeforeunload = null\n  },\n  methods: {\n    goLink(url) {\n      window.open(url)\n    },\n    wrapperEdit(flag) {\n      this.flag = flag\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if (this.flag) {\n      this.$confirm({\n        title: '确定要离开？',\n        content: '此时离开将丢失已编辑的内容，是否确认离开？',\n        onOk: () => {\n          this.flag = false\n          next()\n        }\n      })\n    } else {\n      next()\n    }\n  }\n}\n",null]}