{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/utils/find-path-with-tree.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/utils/find-path-with-tree.js","mtime":1591147717093},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import { isNil } from 'lodash-es';\nimport { walkTree } from \"./walk-tree\";\n/**\n * 通过tree树结构寻找该id所属于的id路径数组\n * @param { string | number } value 要寻找的值id\n * @param { array } tree 树结构\n */\n\nexport var findPathWithTree = function findPathWithTree(value) {\n  var tree = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$keyField = _ref.keyField,\n      keyField = _ref$keyField === void 0 ? 'id' : _ref$keyField;\n\n  if (isNil(value)) {\n    return [];\n  }\n\n  var paths = [];\n  var finded = false;\n  walkTree(tree, function (node, _ref2) {\n    var depth = _ref2.depth;\n\n    if (!finded) {\n      if (depth === 0) {\n        paths = [node[keyField]];\n      }\n\n      paths[depth] = node[keyField];\n    }\n\n    if (node.id === value) {\n      finded = true;\n    }\n  });\n\n  if (!finded) {\n    return [];\n  }\n\n  return paths;\n};",null]}