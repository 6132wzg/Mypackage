{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/services/shs.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/services/shs.service.ts","mtime":1600926555629},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { State } from 'rx-state';\nimport { OssService } from \"./oss.service\";\nimport { Injectable } from 'vue-service-app';\nimport { AppConfig } from '@/constants/config';\nimport { HttpService } from \"./http.service\";\nimport { tap, switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { NotificationService } from \"./notification.service\";\n/**\n * shs相关服务\n */\n\nvar ShsService = /*#__PURE__*/function () {\n  function ShsService(ossService, http, appConfig, notification) {\n    _classCallCheck(this, ShsService);\n\n    this.ossService = ossService;\n    this.http = http;\n    this.appConfig = appConfig;\n    this.notification = notification;\n    /**\n     * 是否处于加载过程\n     */\n\n    this.token$ = new State('');\n    this.loading$ = new State(true);\n  }\n  /**\n   * 处理图片\n   */\n\n\n  _createClass(ShsService, [{\n    key: \"getShsImage\",\n    value: function getShsImage(params) {\n      var _this = this;\n\n      var shsUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/saas/poster';\n      return this.getToken().pipe( // switchMap(() => {\n      //   return this.ossService.put({\n      //     business: 'image',\n      //     isPrivate: false,\n      //     file: this.convertBase64UrlToBlob(params.qrcode_url)\n      //   })\n      // }),\n      switchMap(function () {\n        return _this.http.originalPost(\"\".concat(_this.appConfig.SHS_API_ENV).concat(shsUrl), _objectSpread({}, params, {\n          token: _this.token$.snapshot()\n        }));\n      }), switchMap(function (res) {\n        console.log(res);\n        var imageUrl = \"\".concat(_this.appConfig.SHS_API_ENV).concat(res.response.data.url);\n        return _this.loadImage(imageUrl);\n      }));\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(url) {\n      var _this2 = this;\n\n      this.loading$.commit(function () {\n        return true;\n      });\n      return new Observable(function (observer) {\n        var _img = new Image();\n\n        _img.src = url;\n\n        _img.onload = function () {\n          observer.next(url);\n\n          _this2.loading$.commit(function () {\n            return false;\n          });\n\n          observer.complete();\n        };\n\n        _img.onerror = function (e) {\n          _this2.loading$.commit(function () {\n            return false;\n          });\n\n          observer.error(e);\n          observer.complete();\n        };\n      });\n    }\n    /**\n     * 将base64位生成blob\n     * @param urlData\n     */\n\n  }, {\n    key: \"convertBase64UrlToBlob\",\n    value: function convertBase64UrlToBlob(urlData) {\n      if (!urlData) {\n        this.notification.error({\n          title: '海报',\n          content: 'is not qrcode url'\n        });\n      }\n\n      var bytes = window.atob(urlData.split(',')[1]);\n      var ab = new ArrayBuffer(bytes.length);\n      var ia = new Uint8Array(ab);\n\n      for (var i = 0; i < bytes.length; i++) {\n        ia[i] = bytes.charCodeAt(i);\n      }\n\n      return new Blob([ab], {\n        type: 'image/png'\n      });\n    }\n    /**\n     * 获取shs token\n     */\n\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      var _this3 = this;\n\n      return this.http.originalPost(\"\".concat(this.appConfig.SHS_API_ENV, \"/user/token\")).pipe(tap(function (res) {\n        _this3.token$.commit(function () {\n          return res.response.data.token;\n        });\n      }));\n    }\n  }]);\n\n  return ShsService;\n}();\n\nShsService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof OssService !== \"undefined\" && OssService) === \"function\" ? _a : Object, typeof (_b = typeof HttpService !== \"undefined\" && HttpService) === \"function\" ? _b : Object, typeof (_c = typeof AppConfig !== \"undefined\" && AppConfig) === \"function\" ? _c : Object, typeof (_d = typeof NotificationService !== \"undefined\" && NotificationService) === \"function\" ? _d : Object])], ShsService);\nexport { ShsService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/services/shs.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { State, Effect } from 'rx-state'\nimport { OssService } from './oss.service'\nimport { Injectable } from 'vue-service-app'\nimport { AppConfig } from '@/constants/config'\nimport { HttpService } from './http.service'\nimport { tap, switchMap, map, catchError } from 'rxjs/operators'\nimport { Observable, pipe, BehaviorSubject } from 'rxjs'\nimport { NotificationService } from './notification.service'\n\ninterface UploadImageParams {\n  // base64图片地址\n  qrcode_url: string\n  // 商品logo\n  brand_logo: string\n  // 商品名称\n  brand_name: string\n  // 商品价钱\n  price: number\n}\ninterface UploadLotteryImageParams {\n  // base64图片地址\n  qrcode_url: string\n  // 商品logo\n  sub_name: string\n}\n/**\n * shs相关服务\n */\n@Injectable()\nexport class ShsService {\n  /**\n   * 是否处于加载过程\n   */\n  token$ = new State('')\n  loading$ = new State(true)\n  constructor(\n    private ossService: OssService,\n    private http: HttpService,\n    private appConfig: AppConfig,\n    private notification: NotificationService\n  ) {}\n\n  /**\n   * 处理图片\n   */\n\n  getShsImage(params: UploadImageParams, shsUrl = '/saas/poster') {\n    return this.getToken().pipe(\n      // switchMap(() => {\n      //   return this.ossService.put({\n      //     business: 'image',\n      //     isPrivate: false,\n      //     file: this.convertBase64UrlToBlob(params.qrcode_url)\n      //   })\n      // }),\n      switchMap(() => {\n        return this.http.originalPost(\n          `${this.appConfig.SHS_API_ENV}${shsUrl}`,\n          {\n            ...params,\n            token: this.token$.snapshot()\n          }\n        )\n      }),\n      switchMap((res: any) => {\n        console.log(res)\n        const imageUrl = `${this.appConfig.SHS_API_ENV}${res.response.data.url}`\n        return this.loadImage(imageUrl)\n      })\n    )\n  }\n  loadImage(url: string) {\n    this.loading$.commit(() => true)\n    return new Observable(observer => {\n      const _img = new Image()\n      _img.src = url\n      _img.onload = () => {\n        observer.next(url)\n        this.loading$.commit(() => false)\n        observer.complete()\n      }\n      _img.onerror = e => {\n        this.loading$.commit(() => false)\n        observer.error(e)\n        observer.complete()\n      }\n    })\n  }\n  /**\n   * 将base64位生成blob\n   * @param urlData\n   */\n  convertBase64UrlToBlob(urlData: string) {\n    if (!urlData) {\n      this.notification.error({\n        title: '海报',\n        content: 'is not qrcode url'\n      })\n    }\n    const bytes = window.atob(urlData.split(',')[1])\n    const ab = new ArrayBuffer(bytes.length)\n    const ia = new Uint8Array(ab)\n    for (let i = 0; i < bytes.length; i++) {\n      ia[i] = bytes.charCodeAt(i)\n    }\n    return new Blob([ab], { type: 'image/png' })\n  }\n  /**\n   * 获取shs token\n   */\n  private getToken() {\n    return this.http\n      .originalPost(`${this.appConfig.SHS_API_ENV}/user/token`)\n      .pipe(\n        tap((res: any) => {\n          this.token$.commit(() => res.response.data.token)\n        })\n      )\n  }\n}\n"],"sourceRoot":""}]}