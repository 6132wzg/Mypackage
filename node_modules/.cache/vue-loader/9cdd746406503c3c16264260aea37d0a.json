{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/entrance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/entrance.vue","mtime":1598250255730},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport infoEdit from '@/views/biz-components/info-edit/info-edit'\nimport faceUpload from '@/views/biz-components/face-upload/face-upload'\nimport ShopAddLable from '@/views/biz-modals/shop/add-lable'\nimport { MessageService } from '@/services/message.service'\n\nimport { EntranceService } from './entrance.service'\nimport { cloneDeep, get, debounce } from 'lodash-es'\nexport default {\n  name: 'modal-shop-reception-entrance',\n  props: {\n    member_id: {\n      type: [String, Number]\n    }\n  },\n  components: { faceUpload, infoEdit },\n  modals: { ShopAddLable },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      entranceService: EntranceService\n    }\n  },\n  rxState() {\n    return {\n      cabinetList: this.entranceService.cabinetList$,\n      loading: this.entranceService.loading$,\n      page: this.entranceService.page$,\n      sellerList: this.entranceService.sellerList$,\n      coachList: this.entranceService.coachList$,\n      entranceOptionList: this.entranceService.entranceOptionList$,\n      parent_types: this.entranceService.parent_types$,\n      auth: this.entranceService.auth$\n    }\n  },\n  data() {\n    return {\n      show: false,\n      isAnyEdit: false, // 是否处于编辑状态\n      memberInfo: {}, // 会员详细信息\n      photoList: [],\n      list: [],\n      cabinets: [],\n      tags: [],\n      proof: '',\n      temporary_cabinet: '', // 临时租赁柜\n      seller: '',\n      coach: '',\n      entranceOptionType: {\n        '1': 'reception-period-card',\n        '2': 'reception-number-card',\n        '3': 'reception-visit-appointment',\n        '4': 'reception-personal-course',\n        '5': 'reception-personal-team-course',\n        '6': 'reception-team-course',\n        '7': 'reception-small-course',\n        '8': 'reception-site-appointment'\n      },\n      isCheckinCourse: 1\n    }\n  },\n  computed: {\n    // 是否已入场\n    isEntry() {\n      return (\n        this.memberInfo.entry_status &&\n        +this.memberInfo.entry_status.value === 1\n      )\n    },\n    canEntry() {\n      return (\n        ((this.proof && this.proof !== -1) || this.proof === 0) &&\n        this.auth.checkin\n      )\n    },\n    memberIsBirthday() {\n      return get(this.memberInfo, 'is_birthday', false)\n    },\n    memberType() {\n      return get(this.memberInfo, 'member_type', {})\n    },\n    memberProof() {\n      return get(this.memberInfo, 'proof', {})\n    },\n    temporaryCabinet() {\n      let temporary_cabinet = get(this.memberInfo, 'temporary_cabinet', [])\n      let cabinet = temporary_cabinet.length ? temporary_cabinet[0] : {}\n      // 临时\n      return cabinet\n    },\n    leasingCabinets() {\n      // 长期\n      return get(this.memberInfo, 'leasing_cabinet', [])\n    },\n    leasingCabinetText() {\n      if (!this.leasingCabinets.length) return '暂无'\n      return this.leasingCabinets.reduce((str, cur) => {\n        let prefix = str ? ' / ' : ''\n        str += prefix + cur.name\n        return str\n      }, '')\n    },\n    coachName() {\n      return get(this.memberInfo.coach, 'name', '')\n    },\n    sellerName() {\n      return get(this.memberInfo.seller, 'name', '')\n    },\n    cardNum() {\n      return get(this.memberInfo, 'card_num', '')\n    },\n    rfid() {\n      return get(this.memberInfo, 'rfid', '')\n    }\n  },\n  created() {\n    this.entranceService.init().subscribe()\n  },\n  mounted() {\n    // 获取会员详情\n    this.init()\n    document.addEventListener('keydown', this.onInputKeyPress)\n  },\n  destroyed() {\n    document.removeEventListener('keydown', this.onInputKeyPress)\n  },\n  methods: {\n    handleProofChange(e) {\n      this.proof = e.target.value\n    },\n    cabinetSearch: debounce(function(keyword) {\n      this.entranceService\n        .getCabinetList(this.member_id, {\n          keyword\n        })\n        .subscribe()\n    }, 400),\n    onInputKeyPress(e) {\n      let keyCode = e.keyCode\n      if (this.isAnyEdit) {\n        return false\n      }\n      if (keyCode === 13) {\n        if (this.isEntry) {\n          if (this.auth.checkout) this.onLeaveConfirm()\n        } else {\n          if (this.canEntry) this.onEntry()\n        }\n      }\n    },\n    init() {\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.proof = get(res.info.proof, 'proof_type', -1)\n        this.temporary_cabinet = get(this.temporaryCabinet, 'id', -1)\n\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n        this.isCheckinCourse = res.info.is_checkin_course\n\n        // 获取会员入场凭证列表\n        if (!this.isEntry) {\n          this.entranceService\n            .getEntranceOptionList(this.member_id)\n            .subscribe(res => {\n              let proofs = this.entranceOptionList.filter(\n                option => option.is_able\n              )\n              if (proofs.length === 1 && proofs[0]['id'] === 0) {\n                this.proof = -1\n              } else {\n                this.proof = proofs.length\n                  ? proofs[0]['id']\n                  : this.entranceOptionList[0]['id']\n              }\n            })\n        }\n        // 获取会员储物柜列表\n        this.entranceService.getCabinetList(this.member_id).subscribe()\n      })\n    },\n    // 删除标签\n    handleRemoveTag(tag) {\n      this.entranceService\n        .getMemberLabelDelete({ user_id: this.member_id, tag_id: tag.id })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 获取会员详情\n    handleGetMemberInfo() {\n      console.log('handleGetMemberInfo')\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.proof = get(res.info.proof, 'proof_type', -1)\n        this.temporary_cabinet = get(this.temporaryCabinet, 'id', -1)\n        this.isCheckinCourse = res.info.isCheckinCourse\n\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n\n        if (!this.isEntry && (!this.proof || this.proof === -1)) {\n          let proofs = this.entranceOptionList.filter(option => option.is_able)\n          this.proof = proofs.length\n            ? proofs[0]['id']\n            : this.entranceOptionList[0]['id']\n        }\n      })\n    },\n    // 头像变更\n    handlePhotoChange(list) {\n      this.entranceService\n        .editFace(this.member_id, {\n          image_face: list[0]\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 物理卡号变更\n    handleRfidChange(rfid) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num:\n            typeof this.memberInfo.card_num === 'string'\n              ? this.memberInfo.card_num.trim()\n              : this.memberInfo.card_num,\n          rfid: typeof rfid === 'string' ? rfid.trim() : rfid // 物理ID\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 实体卡号变更\n    handleCardNumChange(card_num) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num: typeof card_num === 'string' ? card_num.trim() : card_num,\n          rfid:\n            typeof this.memberInfo.rfid === 'string'\n              ? this.memberInfo.rfid.trim()\n              : this.memberInfo.rfid // 实体卡号\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 销售变更\n    handleEditSeller(seller_id) {\n      this.entranceService\n        .editSeller({\n          member_id: +this.member_id,\n          seller_id: seller_id === -1 ? 0 : seller_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 教练变更\n    handleEditCoach(coach_id) {\n      this.entranceService\n        .editCoach({\n          member_id: +this.member_id,\n          coach_id: coach_id === -1 ? 0 : coach_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 备注变更\n    handleRemarkChange(remark) {\n      this.entranceService\n        .updateMemberEdit(+this.member_id, {\n          remark\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 修改编辑状态\n    handleChangeEditStatus(val) {\n      this.isAnyEdit = val\n    },\n    // 入场会员修改储物柜\n    handleEditCabinet(cabinet_id) {\n      this.entranceService\n        .editEntranceCabinet({\n          member_id: +this.member_id,\n          cabinet_id: cabinet_id === -1 ? 0 : +cabinet_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 入场\n    onEntry() {\n      let cabinet_id =\n        this.temporary_cabinet === -1 ? undefined : +this.temporary_cabinet\n      let proof_type =\n        this.entranceOptionList.length > 0 &&\n        this.entranceOptionList.filter(i => i.id === this.proof)[0].proof_type\n      let proof_value = +this.proof\n      let seller_id = this.seller === -1 ? undefined : +this.seller\n      let coach_id = this.coach === -1 ? undefined : +this.coach\n      let member_id = +this.member_id\n      let is_checkin_course = this.isCheckinCourse\n      this.entranceService\n        .setEntrance({\n          member_id,\n          cabinet_id,\n          proof_type,\n          proof_value,\n          seller_id,\n          coach_id,\n          is_checkin_course\n        })\n        .subscribe(res => {\n          this.show = false\n          this.messageService.success({ content: '入场成功' })\n          this.$emit('done')\n        })\n    },\n    // 离场之前的确认\n    onLeaveConfirm() {\n      console.log('entranceService', this.entranceService)\n      this.entranceService.getCabinetInfo(this.member_id).subscribe(res => {\n        if (res.info.is_smart) {\n          this.$error({\n            title: `当前会员有储物柜「${res.info.cabinet_area_name}」「${res.info.serial_num}」尚未归还，请先归还！`,\n            okText: '知道了'\n          })\n        } else {\n          this.onLeave()\n        }\n      })\n    },\n    // 离场\n    onLeave() {\n      this.entranceService.setEntranceLeave(this.member_id).subscribe(res => {\n        this.show = false\n        this.messageService.success({ content: '离场成功' })\n        this.$emit('done')\n      })\n    },\n    handleClose() {\n      this.show = false\n      this.$emit('done')\n    }\n  }\n}\n",null]}