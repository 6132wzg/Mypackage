{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/member-points/list/setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/member-points/list/setting.vue","mtime":1600926556150},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SettingService } from './setting.service'\nimport moment from 'moment'\n\nexport default {\n  name: 'Setting',\n  bem: {\n    b: 'brand-plagin-member-points-setting'\n  },\n  watch: {\n    setting$: {\n      handler: function(newVal) {\n        this.initData(newVal)\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {\n      isEdit: false,\n      setting: { validate_num: 0, validate_unit: 0 },\n      validateNum: 0,\n      validateUnit: 0,\n      isOpen: 1,\n      actionList: [],\n      actionCheckList: [],\n      consumeList: [],\n      consumeCheckList: [],\n      termDate: moment()\n        .endOf(this.setting$.validate_unit === 1 ? 'month' : 'year')\n        .format('YYYY年MM月DD日')\n    }\n  },\n  serviceInject() {\n    return {\n      service: SettingService\n    }\n  },\n  rxState() {\n    let {\n      loading$,\n      setting$,\n      defalutOptions$,\n      linkPoints$,\n      sourceTypeOptions$,\n      payPointsOptions$,\n      actionPointsOptions$,\n      validateUnitTypeOptions$,\n      validateUnitType$,\n      auth$\n    } = this.service\n    return {\n      loading$,\n      setting$,\n      defalutOptions$,\n      linkPoints$,\n      sourceTypeOptions$,\n      payPointsOptions$,\n      actionPointsOptions$,\n      validateUnitTypeOptions$,\n      validateUnitType$,\n      auth$\n    }\n  },\n  computed: {\n    getRules() {\n      let listMap = {}\n      let list = []\n      this.actionList.map(item => {\n        listMap[item.id] = item\n      })\n      this.actionCheckList.map(id => {\n        list.push(listMap[id])\n      })\n      return list\n    },\n    supportCategory() {\n      let listMap = {}\n      let list = []\n      this.consumeList.map(item => {\n        listMap[item.id] = item\n      })\n      this.consumeCheckList.map(id => {\n        list.push(listMap[id])\n      })\n      return list\n    }\n  },\n  created() {\n    this.initData(this.setting$)\n  },\n  methods: {\n    initData(newVal) {\n      this.setting = newVal || { validate_num: 0, validate_unit: 0 }\n      this.validateNum = newVal.validate_num\n      this.validateUnit = newVal.validate_unit\n      this.termDate = moment()\n        .add(\n          newVal.validate_num,\n          newVal.validate_unit === 1 ? 'months' : 'years'\n        )\n        .endOf(newVal.validate_unit === 1 ? 'month' : 'year')\n        .format('YYYY年MM月DD日')\n      this.isOpen = newVal.activity_status === 1 ? 1 : 0\n      const actionObj = this.SET_ACTION(newVal.get_rules)\n      this.actionList = actionObj.list\n      this.actionCheckList = actionObj.checkList\n      const consumeObj = this.SET_CONSUME(newVal.support_category)\n      this.consumeList = consumeObj.list\n      this.consumeCheckList = consumeObj.checkList\n    },\n    onChange() {\n      this.isEdit = true\n    },\n    onTermChange(e) {\n      this.isEdit = true\n      this.$nextTick(() => {\n        this.termDate = moment()\n          .add(this.validateNum, this.validateUnit === 1 ? 'months' : 'years')\n          .endOf(this.validateUnit === 1 ? 'month' : 'year')\n          .format('YYYY年MM月DD日')\n      })\n    },\n    onOffChange() {\n      if (!this.auth$.open) return\n      this.isEdit = true\n      this.$confirm({\n        title: '提示',\n        content: !this.isOpen\n          ? '请确定以下积分规则设置无误，开启后，会员将在个人中心看到积分相关功能，并可按规则赚取积分。'\n          : '关闭积分后会员将看不到积分入口，无法获取、消耗积分，可能会引发会员投诉，对品牌公信度带来不好的影响，请谨慎操作。',\n        onOk: () => {\n          console.log('OK')\n          this.isOpen = this.isOpen === 1 ? 0 : 1\n        },\n        onCancel: () => {\n          console.log('Cancel')\n        }\n      })\n    },\n    onSubmit() {\n      const get_rules = this.getRules.map(item => ({\n        ...item,\n        points: +item.points\n      }))\n      const support_category = this.supportCategory.map(item => ({\n        ...item,\n        price: +item.price,\n        points: +item.points\n      }))\n      this.service\n        .setPoiontsSetting({\n          ...this.setting,\n          activity_status: this.isOpen === 1 ? 1 : 2,\n          validate_num: +this.validateNum,\n          validate_unit: +this.validateUnit,\n          get_rules,\n          support_category\n        })\n        .subscribe(() => {\n          this.isEdit = false\n          this.service.refreshUserInfo().subscribe()\n          this.$router.push({\n            path: './member-points'\n          })\n        })\n    },\n    onPush(name) {\n      const routeUrl = this.$router.resolve({\n        name\n      })\n      window.open(routeUrl.href, '_blank')\n    },\n    SET_ACTION(data = []) {\n      let list = []\n      let checkList = []\n      let dataValusMap = {}\n      let actionOptionsMap = {}\n      let defalutActionRules = this.defalutOptions$.get_rules\n      this.actionPointsOptions$.map(item => {\n        actionOptionsMap[item.id] = item\n      })\n      data.map(item => {\n        dataValusMap[item.id] = item\n        checkList.push(item.id)\n      })\n      list = defalutActionRules.map(item => ({\n        ...item,\n        points:\n          (dataValusMap[item.id] && dataValusMap[item.id].points) ||\n          item.points,\n        label: actionOptionsMap[item.id] && actionOptionsMap[item.id].text,\n        text: actionOptionsMap[item.id] && actionOptionsMap[item.id].desc\n      }))\n      this.actionList = list\n      this.actionCheckList = checkList\n      return {\n        list,\n        checkList\n      }\n    },\n    SET_CONSUME(data = []) {\n      let list = []\n      let checkList = []\n      let dataValusMap = {}\n      let consumeOptionsMap = this.payPointsOptions$\n      let defalutConsumeRules = this.defalutOptions$.support_category\n\n      data.map(item => {\n        dataValusMap[item.id] = item\n        checkList.push(item.id)\n      })\n      list = defalutConsumeRules.map(item => ({\n        ...item,\n        points:\n          (dataValusMap[item.id] && dataValusMap[item.id].points) ||\n          item.points,\n        price:\n          (dataValusMap[item.id] && dataValusMap[item.id].price) || item.price,\n        label: consumeOptionsMap[item.id]\n      }))\n      this.consumeList = list\n      this.consumeCheckList = checkList\n      return {\n        list,\n        checkList\n      }\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    // this.targetName = to.name  // 提示框点击确认后跳转的 路由\n    if (this.isEdit) {\n      this.$confirm({\n        title: '提示',\n        content: '您的设置还未保存，是否继续离开页面？',\n        onOk: () => {\n          console.log('OK')\n          this.isEdit = false\n          next()\n        },\n        onCancel: () => {\n          console.log('Cancel')\n          next(false)\n        }\n      })\n      // next(false)\n    } else {\n      next()\n    }\n  }\n}\n",{"version":3,"sources":["setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"setting.vue","sourceRoot":"src/views/pages/brand/marketing/plugin/member-points/list","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <st-form>\n      <st-form-item label=\"积分应用\">\n        <div :class=\"b('tip')\">\n          <div\n            :class=\"b('tip-item')\"\n            v-for=\"link in linkPoints$\"\n            :key=\"link.id\"\n            @click=\"onPush(link.link, link.query)\"\n            class=\"mg-r64\"\n          >\n            <st-icon :type=\"link.icon\" size=\"22px\" class=\"mg-r8\"></st-icon>\n            <span>{{ link.text }}</span>\n          </div>\n        </div>\n      </st-form-item>\n      <st-form-item label=\"功能开关\">\n        <st-switch v-model=\"isOpen\" :disabled=\"!auth$.open\"></st-switch>\n        <div :class=\"b('switch-btn')\" @click=\"onOffChange\"></div>\n      </st-form-item>\n      <st-form-item label=\"积分有效期\">\n        <st-input-number\n          style=\"width: 140px\"\n          placeholder=\"请输入\"\n          v-model=\"validateNum\"\n          @change=\"onTermChange\"\n        >\n          <a-select\n            slot=\"addonAfter\"\n            v-model=\"validateUnit\"\n            :default-value=\"1\"\n            :options=\"validateUnitTypeOptions$\"\n            @change=\"onTermChange\"\n          />\n        </st-input-number>\n        <span class=\"mg-l16 tip\">\n          例：本{{ validateUnitType$[validateUnit] }}获取的积分，将在{{\n            termDate\n          }}到期\n        </span>\n      </st-form-item>\n      <st-form-item label=\"积分获取规则\">\n        <div :class=\"b('rule')\">\n          <div :class=\"b('rule-item')\">\n            <div class=\"title\">按会员行为送积分</div>\n            <div :class=\"b('rule-item-action')\">\n              <a-checkbox-group\n                :class=\"b('rule-item-action')\"\n                v-model=\"actionCheckList\"\n                @change=\"onChange\"\n              >\n                <a-checkbox\n                  class=\"mg-t16\"\n                  v-for=\"item in actionList\"\n                  :key=\"item.id\"\n                  :value=\"item.id\"\n                >\n                  {{ item.label }}\n                  <st-input-number\n                    style=\"width: 141px\"\n                    placeholder=\"请输入\"\n                    v-model=\"item.points\"\n                    :min=\"0\"\n                    :max=\"99999\"\n                    @change=\"onChange\"\n                  >\n                    <template slot=\"addonAfter\">\n                      积分/次\n                    </template>\n                  </st-input-number>\n                  <span class=\"mg-l16 tip\">{{ item.text }}</span>\n                </a-checkbox>\n              </a-checkbox-group>\n            </div>\n          </div>\n          <div class=\"mg-t16\" :class=\"b('rule-item')\">\n            <div class=\"title\">\n              按会员消费送积分\n              <span class=\"tip\">发生退款时，可扣除对应积分</span>\n            </div>\n            <div>\n              <a-checkbox-group v-model=\"consumeCheckList\">\n                <a-checkbox\n                  class=\"mg-t16\"\n                  v-for=\"item in consumeList\"\n                  :key=\"item.id\"\n                  :value=\"item.id\"\n                  @change=\"onChange\"\n                >\n                  <div class=\"checkbox-content\">\n                    <span class=\"checkbox-content__text\">\n                      {{ item.label }}\n                    </span>\n                    <span class=\"mg-r8\">单次消费每满</span>\n                    <st-input-number\n                      style=\"width: 106px\"\n                      placeholder=\"请输入\"\n                      v-model=\"item.price\"\n                      :min=\"0\"\n                      :max=\"999999\"\n                      @change=\"onChange\"\n                    >\n                      <template slot=\"addonAfter\">\n                        元\n                      </template>\n                    </st-input-number>\n                    <span class=\"mg-l8\">赠送</span>\n                    <st-input-number\n                      class=\"mg-l8\"\n                      style=\"width: 120px\"\n                      placeholder=\"请输入\"\n                      v-model=\"item.points\"\n                      :min=\"0\"\n                      :max=\"99999\"\n                      @change=\"onChange\"\n                    >\n                      <template slot=\"addonAfter\">\n                        积分\n                      </template>\n                    </st-input-number>\n                  </div>\n                </a-checkbox>\n              </a-checkbox-group>\n            </div>\n          </div>\n        </div>\n      </st-form-item>\n      <!-- 每日积分上线功能暂时关闭 -->\n      <!-- <st-form-item label=\"积分上限\">\n        <span class=\"mg-r8\">每个客户每天最多获得</span>\n        <st-input-number\n          style=\"width: 120px\"\n          v-model=\"setting.points_limit\"\n          :min=\"0\"\n          @change=\"onChange\"\n        >\n          <template slot=\"addonAfter\">\n            积分\n          </template>\n        </st-input-number>\n        <span class=\"tip mg-l16\">员工录入积分不受此限制</span>\n      </st-form-item> -->\n      <st-form-item labelFix>\n        <st-button\n          type=\"primary\"\n          :disabled=\"!isEdit\"\n          :loading=\"loading$.setPoiontsSetting\"\n          @click=\"onSubmit\"\n        >\n          保存\n        </st-button>\n      </st-form-item>\n    </st-form>\n  </div>\n</template>\n\n<script>\nimport { SettingService } from './setting.service'\nimport moment from 'moment'\n\nexport default {\n  name: 'Setting',\n  bem: {\n    b: 'brand-plagin-member-points-setting'\n  },\n  watch: {\n    setting$: {\n      handler: function(newVal) {\n        this.initData(newVal)\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {\n      isEdit: false,\n      setting: { validate_num: 0, validate_unit: 0 },\n      validateNum: 0,\n      validateUnit: 0,\n      isOpen: 1,\n      actionList: [],\n      actionCheckList: [],\n      consumeList: [],\n      consumeCheckList: [],\n      termDate: moment()\n        .endOf(this.setting$.validate_unit === 1 ? 'month' : 'year')\n        .format('YYYY年MM月DD日')\n    }\n  },\n  serviceInject() {\n    return {\n      service: SettingService\n    }\n  },\n  rxState() {\n    let {\n      loading$,\n      setting$,\n      defalutOptions$,\n      linkPoints$,\n      sourceTypeOptions$,\n      payPointsOptions$,\n      actionPointsOptions$,\n      validateUnitTypeOptions$,\n      validateUnitType$,\n      auth$\n    } = this.service\n    return {\n      loading$,\n      setting$,\n      defalutOptions$,\n      linkPoints$,\n      sourceTypeOptions$,\n      payPointsOptions$,\n      actionPointsOptions$,\n      validateUnitTypeOptions$,\n      validateUnitType$,\n      auth$\n    }\n  },\n  computed: {\n    getRules() {\n      let listMap = {}\n      let list = []\n      this.actionList.map(item => {\n        listMap[item.id] = item\n      })\n      this.actionCheckList.map(id => {\n        list.push(listMap[id])\n      })\n      return list\n    },\n    supportCategory() {\n      let listMap = {}\n      let list = []\n      this.consumeList.map(item => {\n        listMap[item.id] = item\n      })\n      this.consumeCheckList.map(id => {\n        list.push(listMap[id])\n      })\n      return list\n    }\n  },\n  created() {\n    this.initData(this.setting$)\n  },\n  methods: {\n    initData(newVal) {\n      this.setting = newVal || { validate_num: 0, validate_unit: 0 }\n      this.validateNum = newVal.validate_num\n      this.validateUnit = newVal.validate_unit\n      this.termDate = moment()\n        .add(\n          newVal.validate_num,\n          newVal.validate_unit === 1 ? 'months' : 'years'\n        )\n        .endOf(newVal.validate_unit === 1 ? 'month' : 'year')\n        .format('YYYY年MM月DD日')\n      this.isOpen = newVal.activity_status === 1 ? 1 : 0\n      const actionObj = this.SET_ACTION(newVal.get_rules)\n      this.actionList = actionObj.list\n      this.actionCheckList = actionObj.checkList\n      const consumeObj = this.SET_CONSUME(newVal.support_category)\n      this.consumeList = consumeObj.list\n      this.consumeCheckList = consumeObj.checkList\n    },\n    onChange() {\n      this.isEdit = true\n    },\n    onTermChange(e) {\n      this.isEdit = true\n      this.$nextTick(() => {\n        this.termDate = moment()\n          .add(this.validateNum, this.validateUnit === 1 ? 'months' : 'years')\n          .endOf(this.validateUnit === 1 ? 'month' : 'year')\n          .format('YYYY年MM月DD日')\n      })\n    },\n    onOffChange() {\n      if (!this.auth$.open) return\n      this.isEdit = true\n      this.$confirm({\n        title: '提示',\n        content: !this.isOpen\n          ? '请确定以下积分规则设置无误，开启后，会员将在个人中心看到积分相关功能，并可按规则赚取积分。'\n          : '关闭积分后会员将看不到积分入口，无法获取、消耗积分，可能会引发会员投诉，对品牌公信度带来不好的影响，请谨慎操作。',\n        onOk: () => {\n          console.log('OK')\n          this.isOpen = this.isOpen === 1 ? 0 : 1\n        },\n        onCancel: () => {\n          console.log('Cancel')\n        }\n      })\n    },\n    onSubmit() {\n      const get_rules = this.getRules.map(item => ({\n        ...item,\n        points: +item.points\n      }))\n      const support_category = this.supportCategory.map(item => ({\n        ...item,\n        price: +item.price,\n        points: +item.points\n      }))\n      this.service\n        .setPoiontsSetting({\n          ...this.setting,\n          activity_status: this.isOpen === 1 ? 1 : 2,\n          validate_num: +this.validateNum,\n          validate_unit: +this.validateUnit,\n          get_rules,\n          support_category\n        })\n        .subscribe(() => {\n          this.isEdit = false\n          this.service.refreshUserInfo().subscribe()\n          this.$router.push({\n            path: './member-points'\n          })\n        })\n    },\n    onPush(name) {\n      const routeUrl = this.$router.resolve({\n        name\n      })\n      window.open(routeUrl.href, '_blank')\n    },\n    SET_ACTION(data = []) {\n      let list = []\n      let checkList = []\n      let dataValusMap = {}\n      let actionOptionsMap = {}\n      let defalutActionRules = this.defalutOptions$.get_rules\n      this.actionPointsOptions$.map(item => {\n        actionOptionsMap[item.id] = item\n      })\n      data.map(item => {\n        dataValusMap[item.id] = item\n        checkList.push(item.id)\n      })\n      list = defalutActionRules.map(item => ({\n        ...item,\n        points:\n          (dataValusMap[item.id] && dataValusMap[item.id].points) ||\n          item.points,\n        label: actionOptionsMap[item.id] && actionOptionsMap[item.id].text,\n        text: actionOptionsMap[item.id] && actionOptionsMap[item.id].desc\n      }))\n      this.actionList = list\n      this.actionCheckList = checkList\n      return {\n        list,\n        checkList\n      }\n    },\n    SET_CONSUME(data = []) {\n      let list = []\n      let checkList = []\n      let dataValusMap = {}\n      let consumeOptionsMap = this.payPointsOptions$\n      let defalutConsumeRules = this.defalutOptions$.support_category\n\n      data.map(item => {\n        dataValusMap[item.id] = item\n        checkList.push(item.id)\n      })\n      list = defalutConsumeRules.map(item => ({\n        ...item,\n        points:\n          (dataValusMap[item.id] && dataValusMap[item.id].points) ||\n          item.points,\n        price:\n          (dataValusMap[item.id] && dataValusMap[item.id].price) || item.price,\n        label: consumeOptionsMap[item.id]\n      }))\n      this.consumeList = list\n      this.consumeCheckList = checkList\n      return {\n        list,\n        checkList\n      }\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    // this.targetName = to.name  // 提示框点击确认后跳转的 路由\n    if (this.isEdit) {\n      this.$confirm({\n        title: '提示',\n        content: '您的设置还未保存，是否继续离开页面？',\n        onOk: () => {\n          console.log('OK')\n          this.isEdit = false\n          next()\n        },\n        onCancel: () => {\n          console.log('Cancel')\n          next(false)\n        }\n      })\n      // next(false)\n    } else {\n      next()\n    }\n  }\n}\n</script>\n\n<style></style>\n"]}]}