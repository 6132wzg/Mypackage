{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/data.vue","mtime":1591147717316},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserService } from '@/services/user.service'\nimport { DataService } from './data.service.ts'\nimport { columns } from './data.config.ts'\nimport { State, Effect } from 'rx-state'\nimport tableMixin from '@/mixins/table.mixin'\nimport Header from '../lottery/info/components#/header'\nlet Color = ''\nexport default {\n  name: 'PageBrandMarketingPluginGroupListData',\n  bem: {\n    activities: 'brand-marketing-plugin-group-data'\n  },\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      dataService: DataService,\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      list: this.dataService.list$,\n      page: this.dataService.page$,\n      collect: this.dataService.collect$,\n      loading: this.dataService.loading$,\n      info: this.dataService.info$,\n      groupStatusEnums: this.dataService.groupStatusEnums$\n    }\n  },\n  data() {\n    return {\n      showList: [],\n      flag: true,\n      searchWhere: '',\n      groupStatus: -1,\n      columns\n    }\n  },\n  watch: {\n    $searchQuery(newVal) {\n      this.setSearchData()\n    }\n  },\n  mounted() {\n    this.setSearchData()\n  },\n  methods: {\n    setSearchData() {\n      let { search_where, group_status } = this.$searchQuery\n      this.searchWhere = search_where\n      this.groupStatus = group_status || -1\n    },\n    rowClassName(record, index) {\n      let id = record && record.id\n      let has = this.showList.includes(id)\n      let className = ''\n      if (index % 2 !== 0) {\n        className = has ? 'evengb shadow' : 'evengb'\n      } else {\n        className = has ? 'shadow' : ''\n      }\n      if (record && record.children) {\n        Color = className\n        return className\n      } else {\n        let name = Color\n        return name.indexOf('shadow') === -1 ? name : name.replace('shadow', '')\n      }\n    },\n    onShow(list) {\n      this.showList = list\n      this.rowClassName()\n    }\n  }\n}\n",null]}