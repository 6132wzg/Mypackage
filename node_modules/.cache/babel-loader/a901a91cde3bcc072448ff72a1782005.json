{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/modals/test/sg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/modals/test/sg.vue","mtime":1591147717285},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { UserService } from '@/services/user.service';\nimport { SgService } from \"./sg.service\";\nexport default {\n  serviceProviders: function serviceProviders() {\n    return [SgService];\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators({\n      name: {\n        rules: [{\n          required: true,\n          message: '必填'\n        }]\n      }\n    });\n    return {\n      form: form,\n      decorators: decorators,\n      show: false\n    };\n  },\n  serviceInject: function serviceInject() {\n    return {\n      sgService: SgService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      a: this.sgService.a$\n    };\n  },\n  mounted: function mounted() {\n    this.form.setFieldsValue({\n      name: '333'\n    });\n  },\n  methods: {\n    onClick: function onClick() {\n      this.$emit('click');\n    },\n    onOk: function onOk() {\n      this.$emit('ok');\n      this.show = false;\n    }\n  }\n};",{"version":3,"sources":["sg.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,SAAA;AAEA,eAAA;AACA,EAAA,gBADA,8BACA;AACA,WAAA,CAAA,SAAA,CAAA;AACA,GAHA;AAIA,EAAA,IAJA,kBAIA;AACA,QAAA,IAAA,GAAA,KAAA,OAAA,CAAA,MAAA,EAAA;AACA,QAAA,UAAA,GAAA,IAAA,CAAA,UAAA,CAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AADA;AADA,KAAA,CAAA;AAKA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,UAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GAhBA;AAiBA,EAAA,aAjBA,2BAiBA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GArBA;AAsBA,EAAA,OAtBA,qBAsBA;AACA,WAAA;AACA,MAAA,CAAA,EAAA,KAAA,SAAA,CAAA;AADA,KAAA;AAGA,GA1BA;AA2BA,EAAA,OA3BA,qBA2BA;AACA,SAAA,IAAA,CAAA,cAAA,CAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GA/BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AACA,WAAA,KAAA,CAAA,IAAA;AACA,WAAA,IAAA,GAAA,KAAA;AACA;AAPA;AAhCA,CAAA","sourcesContent":["<template>\n  <st-modal title=\"modal-sg\" v-model=\"show\" @ok=\"onOk\">\n    this is test modal\n    {{ a }}\n\n    <st-form :form=\"form\">\n      <st-form-item>\n        <a-input v-decorator=\"decorators.name\" placeholder=\"name\"></a-input>\n      </st-form-item>\n    </st-form>\n  </st-modal>\n</template>\n\n<script>\nimport { UserService } from '@/services/user.service'\nimport { SgService } from './sg.service'\n\nexport default {\n  serviceProviders() {\n    return [SgService]\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators({\n      name: {\n        rules: [{ required: true, message: '必填' }]\n      }\n    })\n    return {\n      form,\n      decorators,\n      show: false\n    }\n  },\n  serviceInject() {\n    return {\n      sgService: SgService\n    }\n  },\n  rxState() {\n    return {\n      a: this.sgService.a$\n    }\n  },\n  mounted() {\n    this.form.setFieldsValue({\n      name: '333'\n    })\n  },\n  methods: {\n    onClick() {\n      this.$emit('click')\n    },\n    onOk() {\n      this.$emit('ok')\n      this.show = false\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/modals/test"}]}