{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/entrance/entrance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/entrance/entrance.vue","mtime":1594718340686},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { EntranceService } from './entrance.service'\nimport { columns } from './entrance.config.ts'\nimport tableMixin from '@/mixins/table.mixin'\n\nexport default {\n  mixins: [tableMixin],\n  name: 'PageShopReceptionEntrance',\n  bem: {\n    entrance: 'page-shop-reception-entrance'\n  },\n  serviceInject() {\n    return {\n      entranceService: EntranceService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.entranceService.auth$,\n      entryTypeList: this.entranceService.entryTypeList$,\n      list: this.entranceService.list$,\n      page: this.entranceService.page$,\n      loading: this.entranceService.loading$\n    }\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    // 离场之前的确认\n    onLeaveConfirm(record) {\n      this.entranceService.getCabinetInfo(record.member_id).subscribe(res => {\n        if (res.info.is_smart) {\n          this.$error({\n            title: `当前会员有储物柜「${res.info.cabinet_area_name}」「${res.info.serial_num}」尚未归还，请先归还！`,\n            okText: '知道了'\n          })\n        } else {\n          this.onLeave(record)\n        }\n      })\n    },\n    // 离场\n    onLeave(record) {\n      this.$confirm({\n        title: '离场',\n        content: `确定离场吗？`,\n        onOk: () => {\n          return this.entranceService\n            .setEntranceLeave(record.member_id)\n            .toPromise()\n            .then(() => {\n              this.onSelectionReset()\n              this.$router.reload()\n            })\n        }\n      })\n    },\n    // 批量离场\n    onLeaveBatch() {\n      let ids = []\n      this.selectedRows.forEach(i => {\n        ids.push(i.member_id)\n      })\n      this.$confirm({\n        title: '批量离场',\n        content: `确定离场吗？`,\n        onOk: () => {\n          return this.entranceService\n            .setEntranceLeaveBatch({\n              ids\n            })\n            .toPromise()\n            .then(() => {\n              this.onSelectionReset()\n              this.$router.reload()\n            })\n        }\n      })\n    }\n  }\n}\n",null]}