{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/cabinet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/cabinet.vue","mtime":1597396800002},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MessageService } from '@/services/message.service';\nimport { CabinetService } from \"./cabinet.service\";\nimport AddCabinetArea from \"./components#/add-area\";\nimport EditCabinetArea from \"./components#/edit-area\";\nimport { CabinetAreaService as AreaService } from \"./components#/area.service\";\nimport CabinetList from \"./components#/cabinet-list\";\nimport ShopCabinetEditPrice from '@/views/biz-modals/shop/cabinet/edit-price';\nimport ShopCabinetAddLongTerm from '@/views/biz-modals/shop/cabinet/add-long-term';\nimport ShopCabinetAddTemporary from '@/views/biz-modals/shop/cabinet/add-temporary';\nimport Draggable from 'vuedraggable';\nimport { CabinetListService } from \"./components#/cabinet-list.service\";\nexport default {\n  bem: {\n    b: 'page-setting-cabinet'\n  },\n  modals: {\n    ShopCabinetEditPrice: ShopCabinetEditPrice,\n    ShopCabinetAddLongTerm: ShopCabinetAddLongTerm,\n    ShopCabinetAddTemporary: ShopCabinetAddTemporary\n  },\n  serviceInject: function serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: CabinetService,\n      cabinetListService: CabinetListService,\n      areaService: AreaService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list: this.areaService.list$,\n      auth: this.cabinetService.auth$,\n      loading: this.cabinetService.loading$,\n      resData: this.cabinetListService.resData$\n    };\n  },\n  data: function data() {\n    return {\n      isActive: '',\n      editId: 0,\n      isShowAddAreaBtn: false,\n      checked: [],\n      isOperationInBatch: false\n    };\n  },\n  components: {\n    AddCabinetArea: AddCabinetArea,\n    EditCabinetArea: EditCabinetArea,\n    CabinetList: CabinetList,\n    Draggable: Draggable\n  },\n  computed: {\n    type: function type() {\n      return this.$searchQuery.type || 'temporary';\n    },\n    defaultActiveKey: function defaultActiveKey() {\n      return +this.$searchQuery.id || 0;\n    },\n    currentArea: function currentArea() {\n      var list = this.list;\n      var id = this.$searchQuery.id;\n      var currentArea = {};\n      list.forEach(function (item) {\n        if (item.id === +id) {\n          currentArea = item;\n        }\n      });\n      return currentArea;\n    },\n    areaName: function areaName() {\n      return this.currentArea.area_name;\n    },\n    listMap: function listMap() {\n      var list = this.resData.list;\n      var map = new Map();\n      list.map(function (item) {\n        map.set(item.id, item);\n      });\n      return map;\n    }\n  },\n  created: function created() {\n    this.initQueryId();\n  },\n  methods: {\n    initQueryId: function initQueryId() {\n      var list = this.list;\n      var queryId = this.$searchQuery.id;\n      var id = list[0] && list[0].id || 0;\n      this.queryHandler({\n        id: id\n      });\n    },\n    addArea: function addArea() {\n      this.isShowAddAreaBtn = true;\n    },\n    editArea: function editArea(id) {\n      this.editId = id;\n    },\n    delArea: function delArea(item) {\n      var _this = this;\n\n      if (item.bind_device > 0) {\n        this.$error({\n          title: '当前区域内有配置智能储物柜，若需删除，请联系三体工作人员',\n          okText: '知道了'\n        });\n        return;\n      }\n\n      if (item.cabinet_num > 0) {\n        this.$error({\n          title: '当前区域内有配置储值柜，无法删除',\n          okText: '知道了'\n        });\n        return;\n      }\n\n      this.$confirm({\n        title: '请问是否确认删除该区域？',\n        onOk: function onOk() {\n          _this.areaService.del(item.id).subscribe(_this.onDelAreaSuccess);\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    onDelAreaSuccess: function onDelAreaSuccess() {\n      this.messageService.success({\n        content: '删除成功'\n      });\n      this.onAreaListChange();\n    },\n    onAreaListChange: function onAreaListChange(type) {\n      var _this2 = this;\n\n      this.editId = 0;\n      this.isShowAddAreaBtn = false;\n\n      if (type === 'cancel') {\n        return;\n      }\n\n      this.areaService.getList().subscribe(function () {\n        if (_this2.list.length <= 1) {\n          _this2.initQueryId();\n        }\n      });\n    },\n    onAreaChange: function onAreaChange(id) {\n      this.queryHandler({\n        id: id\n      });\n    },\n    onAreaSortChange: function onAreaSortChange(e) {\n      this.cabinetService.sort(this.list).subscribe();\n    },\n    onCabinetTabChange: function onCabinetTabChange(key) {\n      this.queryHandler({\n        type: key\n      });\n      this.checked = [];\n      this.isOperationInBatch = false;\n    },\n    queryHandler: function queryHandler(query) {\n      this.$router.push({\n        query: Object.assign(_objectSpread({}, this.$searchQuery), query)\n      });\n    },\n    onCabinetListChange: function onCabinetListChange() {\n      this.$router.push({\n        query: this.$searchQuery\n      });\n      this.onAreaListChange();\n    },\n    onCabinetSelectChange: function onCabinetSelectChange(checked) {\n      this.checked = checked;\n    },\n    onDelCabinet: function onDelCabinet() {\n      var _this3 = this;\n\n      var flagText = this.validSelectedData();\n\n      if (flagText === 'smart') {\n        this.$error({\n          title: '当前选中柜子有智能储物柜，若需删除，请联系三体工作人员',\n          okText: '知道了'\n        });\n        return;\n      }\n\n      if (flagText === 'using') {\n        this.$error({\n          title: '选择的储物柜正在使用中，无法删除',\n          okText: '知道了'\n        });\n        return;\n      }\n\n      this.$confirm({\n        title: '确认删除选择的储物柜？',\n        onOk: function onOk() {\n          _this3.cabinetService.del({\n            ids: _this3.checked\n          }).subscribe(_this3.onDelCabinetSuccess);\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    onDelCabinetSuccess: function onDelCabinetSuccess() {\n      this.messageService.success({\n        content: '删除成功'\n      });\n      this.checked = [];\n      this.isOperationInBatch = false;\n      this.onCabinetListChange();\n    },\n    changeOperationMode: function changeOperationMode() {\n      this.isOperationInBatch = !this.isOperationInBatch;\n    },\n    openBatchAdd: function openBatchAdd() {\n      var id = this.$searchQuery.id;\n      var type = this.type,\n          areaName = this.areaName;\n\n      if (!+id) {\n        this.messageService.error({\n          content: '请先新增区域'\n        });\n        return;\n      }\n\n      this.$modalRouter.push({\n        name: \"shop-cabinet-add-\".concat(type),\n        props: {\n          id: id,\n          type: type,\n          areaName: areaName\n        },\n        on: {\n          change: this.onCabinetListChange\n        }\n      });\n    },\n    validSelectedData: function validSelectedData() {\n      var type = this.$searchQuery.type;\n\n      for (var i = 0; i < this.checked.length; i++) {\n        var temp = this.listMap.get(this.checked[i]);\n\n        if (temp.is_smart) {\n          return 'smart';\n        }\n\n        if (type === 'long-term' && temp.sale_status === 1) {\n          return 'using';\n        }\n\n        if (type === 'temporary' && temp.cabinet_business_type === 2) {\n          return 'using';\n        }\n      }\n\n      return 'none';\n    }\n  }\n};",null]}