{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/reserved-course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/reserved-course.vue","mtime":1591147717195},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { cloneDeep } from 'lodash-es';\nimport { SmallCourseScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service';\nimport { SmallCourseScheduleCommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service';\nimport { ruleOptions } from \"./reserved-course.config\";\nexport default {\n  name: 'AddCourseSchedule',\n  serviceInject: function serviceInject() {\n    return {\n      smallCourseScheduleService: SmallCourseScheduleService,\n      smallCourseScheduleCommonService: SmallCourseScheduleCommonService\n    };\n  },\n  rxState: function rxState() {\n    var tss = this.smallCourseScheduleCommonService;\n    return {\n      loading: this.smallCourseScheduleService.loading$,\n      coachSmallCourseOptions: tss.coachBindOptions$,\n      courseSmallCourseOptions: tss.courseSmallCourseOptions$,\n      courtOptions: tss.courtOptions$\n    };\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false,\n      courseItem: '',\n      smallCourseInfo: {}\n    };\n  },\n  props: {\n    item: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    checked: {\n      type: Boolean,\n      default: function _default() {\n        return false;\n      }\n    }\n  },\n  created: function created() {\n    this.getBindCoachList(this.item.course_id);\n    console.log(this.item);\n    console.log(this.checked);\n  },\n  mounted: function mounted() {\n    var item = cloneDeep(this.item);\n    var court_item = [+item.court_id, +item.court_site_id];\n    var time = moment(item.start_date);\n    this.form.setFieldsValue({\n      course_id: item.course_id,\n      coach_id: item.coach_id,\n      court_id: court_item,\n      current_course_name: item.current_course_name\n    });\n    this.form.setFieldsValue({\n      start_time: moment(\"\".concat(this.item.start_date, \" \").concat(this.item.start_time)),\n      end_time: moment(\"\".concat(this.item.start_date, \" \").concat(this.item.end_time)),\n      start_days: time\n    });\n  },\n  methods: {\n    onChangeCourse: function onChangeCourse(value) {\n      var _this = this;\n\n      this.getBindCoachList(value);\n      this.courseSmallCourseOptions.forEach(function (item, index) {\n        if (item.course_id === value) {\n          _this.smallCourseInfo = item;\n        }\n      });\n    },\n    getBindCoachList: function getBindCoachList(courseId) {\n      this.smallCourseScheduleCommonService.getBindCoachList(courseId).subscribe();\n    },\n    onSubmit: function onSubmit() {\n      var _this2 = this;\n\n      this.form.validate().then(function (values) {\n        var form = cloneDeep(values);\n        console.log(values);\n        var start_days = values.start_days.format('YYYY-MM-DD');\n        var start_time = values.start_time.format('HH:mm');\n        var end_time = values.end_time.format('HH:mm');\n        form.start_time = start_days + ' ' + start_time;\n        form.end_time = start_days + ' ' + end_time;\n        form.cycle_start_date = _this2.smallCourseInfo.course_begin_time;\n        form.cycle_end_date = _this2.smallCourseInfo.course_end_time;\n        form.id = _this2.item.id;\n\n        if (form.court_id) {\n          form.court_site_id = +form.court_id[1];\n          form.court_id = +form.court_id[0];\n        } // 提交\n\n\n        console.log(form);\n\n        _this2.smallCourseScheduleService.update(form).subscribe(function () {\n          _this2.show = false;\n\n          _this2.onScheduleChange();\n        });\n      });\n    },\n    onClick: function onClick() {\n      this.show = false;\n    },\n    onScheduleChange: function onScheduleChange() {\n      this.$router.reload();\n    }\n  }\n};",null]}