{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/crowd/add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/crowd/add.vue","mtime":1597396799954},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport base_info from \"./components#/basic-data\";\nimport base_sex from \"./components#/base_sex\";\nimport base_age from \"./components#/base_age\";\nimport base_birthday from \"./components#/base_birthday\";\nimport regTime from \"./components#/reg-time\";\nimport affiliatedStore from \"./components#/affiliated-store\";\nimport availableIntegral from \"./components#/available-integral\";\nimport availableCoupons from \"./components#/available-coupons\";\nimport accumulateIntegrals from \"./components#/accumulate-integrals\";\nimport membershipExpires from \"./components#/membership-expires\";\nimport cardRemainingNumber from \"./components#/card-remaining-number\";\nimport privateClassNum from \"./components#/private-class-num\";\nimport cardMount from \"./components#/card-mount\";\nimport admissionTimes from \"./components#/admission-times\";\nimport lastAdmissionTime from \"./components#/last-admission-time\";\nimport sourceMode from \"./components#/source-mode.vue\";\nimport inductionTime from \"./components#/induction-time.vue\";\nimport { AddService } from \"./add.service\";\nimport routes from '@/router/routes';\nimport { MessageService } from '@/services/message.service';\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      addService: AddService,\n      messageService: MessageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.addService.loading$,\n      crowdInfo: this.addService.crowdInfo$\n    };\n  },\n  components: {\n    'basic-data': base_info,\n    // 左侧组件\n    'reg-time': regTime,\n    // 注册时间\n    'source-mode': sourceMode,\n    // 来源方式\n    'induction-time': inductionTime,\n    // 入会时间\n    base_birthday: base_birthday,\n    // 生日\n    base_sex: base_sex,\n    // 性别\n    base_age: base_age,\n    // 年龄\n    'affiliated-store': affiliatedStore,\n    // 所属门店\n    'available-integral': availableIntegral,\n    // 可用积分\n    'available-coupons': availableCoupons,\n    // 可用优惠劵\n    'accumulate-integrals': accumulateIntegrals,\n    // 累计获取积分\n    'membership-expires': membershipExpires,\n    // 会员卡即将到期\n    'card-remaining-number': cardRemainingNumber,\n    // 会员卡剩余次数\n    'admission-times': admissionTimes,\n    // 入场次数\n    'private-class-num': privateClassNum,\n    // 私教课剩余次数\n    cardMount: cardMount,\n    // 储值卡剩余金额\n    lastAdmissionTime: lastAdmissionTime // 最后一次入场时间\n\n  },\n  data: function data() {\n    var self = this;\n    return {\n      // 状态锁\n      flag: true,\n      form: this.$form.createForm(this),\n      basicInfoRuleList: {\n        crowd_name: ['crowd_name', {\n          rules: [{\n            required: true,\n            message: '不超过20字，且不包含“/”'\n          }]\n        }]\n      },\n      selectData: {\n        // 基础资料\n        base_info: {\n          title: '基础资料',\n          value: ['性别', 'base_age', '所属门店', '生日'],\n          selectionData: [],\n          width: 108\n        },\n        // 注册来源\n        source_info: {\n          title: '注册来源',\n          value: ['注册时间', '来源方式', '入会时间'],\n          selectionData: [],\n          width: 108\n        },\n        deal_info: {\n          title: '交易信息',\n          value: [\"\".concat(this.$c('member_card'), \"\\u5373\\u5C06\\u5230\\u671F\"), \"\".concat(this.$c('member_card'), \"\\u5269\\u4F59\\u6B21\\u6570\"), '私教课剩余次数', '储值卡剩余金额'],\n          selectionData: [],\n          width: 170\n        },\n        active_info: {\n          title: '活跃信息',\n          value: ['入场次数', '最后一次入场时间'],\n          selectionData: [],\n          width: 170\n        },\n        discount_info: {\n          title: '优惠奖励',\n          value: ['可用积分', '可用优惠券', '累计获得积分'],\n          selectionData: [],\n          width: 108\n        },\n        arrData: [],\n        getData: {\n          crowd_name: '',\n          base_sex: {\n            name: '',\n            value: ''\n          },\n          base_age: {\n            min: '',\n            max: ''\n          },\n          base_birthday: {\n            min: '',\n            max: '',\n            name: '',\n            value: ''\n          },\n          shop: [],\n          register_time: {\n            min: '',\n            max: '',\n            name: '',\n            value: ''\n          },\n          source_channel: [],\n          member_time: {\n            min: '',\n            max: ''\n          },\n          available_scores: {\n            min: '',\n            max: ''\n          },\n          available_coupon_number: {\n            min: '',\n            max: ''\n          },\n          sum_scores: {\n            min: '',\n            max: ''\n          },\n          member_expiring: {\n            min: '',\n            max: ''\n          },\n          member_card_remain_times: {\n            min: '',\n            max: ''\n          },\n          personal_course_remain_times: {\n            min: '',\n            max: ''\n          },\n          deposit_remain_money: {\n            min: '',\n            max: ''\n          },\n          remain_enter_times: {\n            select_time: {\n              min: '',\n              max: ''\n            },\n            remain_times: {\n              min: '',\n              max: ''\n            }\n          },\n          final_enter_time: {\n            min: '',\n            max: ''\n          }\n        },\n        info: {}\n      }\n    };\n  },\n  created: function created() {\n    if (this.$searchQuery.id) {\n      this.getCrowdBrand(this.$searchQuery.id);\n    }\n\n    this.getFilterData();\n  },\n  filters: {\n    componentFun: function componentFun(value) {\n      var obj = {\n        base_sex: 'base_sex',\n        base_age: 'base_age',\n        base_birthday: 'base_birthday',\n        shop: 'affiliated-store',\n        register_time: 'reg-time',\n        source_channel: 'source-mode',\n        member_time: 'induction-time',\n        available_scores: 'available-integral',\n        available_coupon_number: 'available-coupons',\n        sum_scores: 'accumulate-integrals',\n        member_expiring: 'membership-expires',\n        member_card_remain_times: 'card-remaining-number',\n        personal_course_remain_times: 'private-class-num',\n        deposit_remain_money: 'cardMount',\n        remain_enter_times: 'admission-times',\n        final_enter_time: 'lastAdmissionTime'\n      };\n      return obj[value];\n    }\n  },\n  methods: {\n    getCrowdBrand: function getCrowdBrand(id) {\n      var _this = this;\n\n      this.addService.getCrowdBrand(id).subscribe(function (status) {\n        _this.selectData.arrData = status.info.array_index;\n        _this.selectData.getData.crowd_name = status.info.crowd_name;\n        status.info.array_index.map(function (item) {\n          _this.selectData.getData[item] = status.info[item];\n        });\n      });\n    },\n    conserve: function conserve() {\n      var _this2 = this;\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          var obj = {};\n\n          _this2.selectData.arrData.map(function (item) {\n            obj[item] = _this2.selectData.getData[item];\n          });\n\n          var arrKey = [],\n              arrValue = [];\n\n          _this2.selectData.arrData.map(function (item) {\n            obj[item] = _this2.selectData.getData[item];\n\n            if (Object.prototype.toString.call(_this2.selectData.getData[item]).slice(8, -1) === 'Object') {\n              arrKey.push.apply(arrKey, _toConsumableArray(Object.keys(_this2.selectData.getData[item])));\n              arrValue.push.apply(arrValue, _toConsumableArray(Object.values(_this2.selectData.getData[item])));\n            } else {\n              arrKey.push(item);\n              arrValue.push(_this2.selectData.getData[item]);\n            }\n          });\n\n          obj.crowd_name = values.basicInfoRuleList.crowd_name;\n          obj.array_index = _this2.selectData.arrData;\n\n          if (obj.remain_enter_times && (!obj.remain_enter_times.remain_times.min || !obj.remain_enter_times.select_time.min && !obj.remain_enter_times.select_time.name)) {\n            _this2.messageService.error({\n              content: '入场次数和时间范围必填!'\n            });\n\n            return;\n          }\n\n          if (_this2.$searchQuery.id) {\n            _this2.addService.updateCrowdBrandCrowd(_this2.$searchQuery.id, obj).subscribe(function (status) {\n              _this2.$router.push({\n                name: 'brand-marketing-plugin-crowd-index'\n              });\n            });\n          } else {\n            _this2.addService.setCrowdBrandField(obj).subscribe(function (status) {\n              _this2.$router.push({\n                name: 'brand-marketing-plugin-crowd-index'\n              });\n            });\n          }\n        }\n      });\n    },\n    getFilterData: function getFilterData() {\n      var _this3 = this;\n\n      Object.keys(this.crowdInfo.info).map(function (item) {\n        Object.assign(_this3.selectData.info, _this3.crowdInfo.info[item].value);\n        _this3.selectData[item].value = Object.keys(_this3.crowdInfo.info[item].value);\n      });\n    },\n    deleteIcon: function deleteIcon(data, item) {\n      var k = Object.keys(data);\n      k.map(function (item1) {\n        if (item1 !== 'arrData' && item1 !== 'getData' && item1 !== 'info') {\n          if (data[item1].selectionData.indexOf(item) >= 0) {\n            data[item1].selectionData.splice(data[item1].selectionData.indexOf(item), 1);\n          }\n        } else {\n          if (data.arrData.indexOf(item) >= 0) {\n            data.arrData.splice(data.arrData.indexOf(item), 1);\n          }\n        }\n      });\n    },\n    save: function save(e) {\n      e.preventDefault();\n      this.form.validateFields(function (err, values) {\n        console.log(err, values);\n      });\n    },\n    // 校验格式\n    physicalId: function physicalId(rule, value, callback) {\n      if (value === undefined || value === '') {\n        // eslint-disable-next-line\n        callback('请填写人群名称');\n      } else if (value && /\\//.test(value)) {\n        // eslint-disable-next-line\n        callback('输入的人群名称格式错误，请重新输入');\n      } else {\n        // eslint-disable-next-line\n        callback();\n      }\n    }\n  },\n  mounted: function mounted() {},\n  watch: {\n    selectData: {\n      handler: function handler() {\n        var k = Object.keys(this.selectData);\n        var arr = [];\n        arr.push.apply(arr, _toConsumableArray(this.selectData.arrData));\n\n        if (arr.length >= 5) {\n          this.flag = false;\n        } else {\n          this.flag = true;\n        }\n      },\n      deep: true\n    }\n  }\n};",null]}