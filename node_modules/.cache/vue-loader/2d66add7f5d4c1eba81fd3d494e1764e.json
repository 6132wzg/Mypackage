{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/shortcut-nav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/shortcut-nav.vue","mtime":1594718340673},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { shortcutNavList } from './shortcut.config'\nimport { ShortcutNavService } from './shortcut-nav.service'\n\nimport { cloneDeep } from 'lodash-es'\n\nexport default {\n  name: '',\n\n  bem: {},\n\n  components: {},\n\n  serviceInject() {\n    return {\n      shortcutNavService: ShortcutNavService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.shortcutNavService.auth$\n    }\n  },\n\n  props: {},\n\n  data() {\n    return {\n      // 根据权限处理后的快捷操作列表\n      dropdownList: [],\n      nodropdownList: [],\n      visible: false,\n      needResize: false,\n      safeWidth: 142,\n      resizeSmall: false\n    }\n  },\n\n  computed: {\n    shortcutNavList,\n    showDropDown() {\n      return !!this.dropdownList.length\n    }\n  },\n\n  async: {},\n\n  mounted() {\n    this.formatShortcutList()\n    window.addEventListener('resize', this.judgeIfNeedResizeShortNav)\n  },\n\n  methods: {\n    judgeIfNeedResizeShortNav() {\n      let shortcutNav = this.$refs.shortcutNav\n      let shortcuts = this.$refs.shortcuts\n      if (shortcuts && shortcutNav) {\n        let nWidth = shortcutNav.offsetWidth\n        let sWidth = shortcuts.offsetWidth\n        let offsetWidth = nWidth - sWidth\n        console.log('offsetWidth', offsetWidth)\n        if (offsetWidth > 290) {\n          this.needResize = false\n          this.resizeShortcutList()\n        }\n        if (offsetWidth < 180) {\n          this.needResize = true\n          this.resizeShortcutList()\n        }\n      }\n    },\n    // 快捷操作\n    onShortcut(data) {\n      switch (data) {\n        case 'checkInoutRecord':\n          window.open('/shop/reception/entrance')\n          break\n        case 'scheduleAgency':\n          window.open('/shop/product/course/schedule/team')\n          break\n        case 'courseSign':\n          window.open('/shop/reception/reserve')\n          break\n        case 'receptionCabinet':\n          window.open('/shop/reception/cabinet')\n          break\n        case 'earnestManage':\n          window.open('/shop/finance/gathering/earnest')\n          break\n        case 'store':\n          window.open('/shop/sold/transaction/store')\n          break\n        case 'soldCard':\n          window.open('/shop/sold/card/list')\n          break\n        case 'soldCourse':\n          window.open('/shop/sold/course/list')\n          break\n        case 'receptionRecord':\n          window.open('/shop/store/order/list/verification')\n          break\n      }\n    },\n    openNewTab(path) {\n      let a = document.createElement('a')\n      let url = location.origin + path\n      a.setAttribute('href', url)\n      a.setAttribute('target', '_blank')\n      a.setAttribute('id', 'camnpr')\n      document.body.appendChild(a)\n      a.click()\n    },\n    handleMenuClick(e) {\n      let key = e.key\n      this.onShortcut(key)\n    },\n    formatShortcutList() {\n      let trueArray = this.shortcutNavList\n        .map(i => {\n          i.auth = this.auth[i.id] || false\n          return i\n        })\n        .filter(i => i.auth)\n      this.nodropdownList = cloneDeep(trueArray)\n      this.$nextTick(() => {\n        this.initShortcutList()\n      })\n    },\n    initShortcutList(val) {\n      let shortcutNav = this.$refs.shortcutNav\n      let shortcuts = this.$refs.shortcuts\n      if (shortcuts && shortcutNav) {\n        let nWidth = shortcutNav.offsetWidth\n        let sWidth = shortcuts.offsetWidth\n        let offsetWidth = nWidth - sWidth\n        console.log('initShortcutList offsetWidth', offsetWidth)\n        if (offsetWidth > 290) {\n          this.needResize = false\n          return false\n        } else if (offsetWidth < 180) {\n          this.deleteDropDownList()\n        }\n      }\n    },\n    computedOffsetWidth() {\n      let shortcutNav = this.$refs.shortcutNav\n      let shortcuts = this.$refs.shortcuts\n      let nWidth = shortcutNav.offsetWidth\n      let sWidth = shortcuts.offsetWidth\n      let offsetWidth = nWidth - sWidth\n      return offsetWidth < 180\n    },\n    deleteDropDownList() {\n      let len = this.nodropdownList.length\n      console.log('deleteDropDownList', len)\n      if (len) {\n        let list = this.nodropdownList.splice(len - 1)\n        this.dropdownList = [...this.dropdownList, ...list]\n        this.$nextTick(() => {\n          if (this.computedOffsetWidth()) {\n            return this.deleteDropDownList()\n          } else {\n            return false\n          }\n        })\n      } else {\n        return false\n      }\n    },\n    resizeShortcutList() {\n      if (this.needResize) {\n        let len = this.nodropdownList.length\n        if (len) {\n          let list = this.nodropdownList.splice(len - 1)\n          this.dropdownList = [...this.dropdownList, ...list]\n        }\n      } else {\n        let len = this.dropdownList.length\n        if (len) {\n          let list = this.dropdownList.splice(len - 1)\n          this.nodropdownList = [...this.nodropdownList, ...list]\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["shortcut-nav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"shortcut-nav.vue","sourceRoot":"src/views/pages/shop/reception/components#","sourcesContent":["<template>\n  <div class=\"shortcut-jump\" :class=\"{ showDropDown }\" ref=\"shortcutNav\">\n    <div class=\"label\">快捷跳转：</div>\n    <div class=\"nav\" ref=\"shortcuts\">\n      <div\n        class=\"nav-item\"\n        v-for=\"(item, index) in nodropdownList\"\n        :disabled=\"!item.auth\"\n        :key=\"index\"\n        @click=\"onShortcut(item.id)\"\n      >\n        {{ item.label }}\n      </div>\n      <template v-if=\"showDropDown\">\n        <a-dropdown v-model=\"visible\" placement=\"bottomRight\">\n          <a class=\"dropdown\" @click=\"visible = !visible\">\n            <div class=\"dropdown-icon\">\n              <img src=\"~@/assets/img/icon_dropdown.png\" alt=\"\" />\n            </div>\n          </a>\n          <a-menu slot=\"overlay\" @click=\"handleMenuClick\">\n            <a-menu-item v-for=\"shortcut in dropdownList\" :key=\"shortcut.id\">\n              {{ shortcut.label }}\n            </a-menu-item>\n          </a-menu>\n        </a-dropdown>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { shortcutNavList } from './shortcut.config'\nimport { ShortcutNavService } from './shortcut-nav.service'\n\nimport { cloneDeep } from 'lodash-es'\n\nexport default {\n  name: '',\n\n  bem: {},\n\n  components: {},\n\n  serviceInject() {\n    return {\n      shortcutNavService: ShortcutNavService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.shortcutNavService.auth$\n    }\n  },\n\n  props: {},\n\n  data() {\n    return {\n      // 根据权限处理后的快捷操作列表\n      dropdownList: [],\n      nodropdownList: [],\n      visible: false,\n      needResize: false,\n      safeWidth: 142,\n      resizeSmall: false\n    }\n  },\n\n  computed: {\n    shortcutNavList,\n    showDropDown() {\n      return !!this.dropdownList.length\n    }\n  },\n\n  async: {},\n\n  mounted() {\n    this.formatShortcutList()\n    window.addEventListener('resize', this.judgeIfNeedResizeShortNav)\n  },\n\n  methods: {\n    judgeIfNeedResizeShortNav() {\n      let shortcutNav = this.$refs.shortcutNav\n      let shortcuts = this.$refs.shortcuts\n      if (shortcuts && shortcutNav) {\n        let nWidth = shortcutNav.offsetWidth\n        let sWidth = shortcuts.offsetWidth\n        let offsetWidth = nWidth - sWidth\n        console.log('offsetWidth', offsetWidth)\n        if (offsetWidth > 290) {\n          this.needResize = false\n          this.resizeShortcutList()\n        }\n        if (offsetWidth < 180) {\n          this.needResize = true\n          this.resizeShortcutList()\n        }\n      }\n    },\n    // 快捷操作\n    onShortcut(data) {\n      switch (data) {\n        case 'checkInoutRecord':\n          window.open('/shop/reception/entrance')\n          break\n        case 'scheduleAgency':\n          window.open('/shop/product/course/schedule/team')\n          break\n        case 'courseSign':\n          window.open('/shop/reception/reserve')\n          break\n        case 'receptionCabinet':\n          window.open('/shop/reception/cabinet')\n          break\n        case 'earnestManage':\n          window.open('/shop/finance/gathering/earnest')\n          break\n        case 'store':\n          window.open('/shop/sold/transaction/store')\n          break\n        case 'soldCard':\n          window.open('/shop/sold/card/list')\n          break\n        case 'soldCourse':\n          window.open('/shop/sold/course/list')\n          break\n        case 'receptionRecord':\n          window.open('/shop/store/order/list/verification')\n          break\n      }\n    },\n    openNewTab(path) {\n      let a = document.createElement('a')\n      let url = location.origin + path\n      a.setAttribute('href', url)\n      a.setAttribute('target', '_blank')\n      a.setAttribute('id', 'camnpr')\n      document.body.appendChild(a)\n      a.click()\n    },\n    handleMenuClick(e) {\n      let key = e.key\n      this.onShortcut(key)\n    },\n    formatShortcutList() {\n      let trueArray = this.shortcutNavList\n        .map(i => {\n          i.auth = this.auth[i.id] || false\n          return i\n        })\n        .filter(i => i.auth)\n      this.nodropdownList = cloneDeep(trueArray)\n      this.$nextTick(() => {\n        this.initShortcutList()\n      })\n    },\n    initShortcutList(val) {\n      let shortcutNav = this.$refs.shortcutNav\n      let shortcuts = this.$refs.shortcuts\n      if (shortcuts && shortcutNav) {\n        let nWidth = shortcutNav.offsetWidth\n        let sWidth = shortcuts.offsetWidth\n        let offsetWidth = nWidth - sWidth\n        console.log('initShortcutList offsetWidth', offsetWidth)\n        if (offsetWidth > 290) {\n          this.needResize = false\n          return false\n        } else if (offsetWidth < 180) {\n          this.deleteDropDownList()\n        }\n      }\n    },\n    computedOffsetWidth() {\n      let shortcutNav = this.$refs.shortcutNav\n      let shortcuts = this.$refs.shortcuts\n      let nWidth = shortcutNav.offsetWidth\n      let sWidth = shortcuts.offsetWidth\n      let offsetWidth = nWidth - sWidth\n      return offsetWidth < 180\n    },\n    deleteDropDownList() {\n      let len = this.nodropdownList.length\n      console.log('deleteDropDownList', len)\n      if (len) {\n        let list = this.nodropdownList.splice(len - 1)\n        this.dropdownList = [...this.dropdownList, ...list]\n        this.$nextTick(() => {\n          if (this.computedOffsetWidth()) {\n            return this.deleteDropDownList()\n          } else {\n            return false\n          }\n        })\n      } else {\n        return false\n      }\n    },\n    resizeShortcutList() {\n      if (this.needResize) {\n        let len = this.nodropdownList.length\n        if (len) {\n          let list = this.nodropdownList.splice(len - 1)\n          this.dropdownList = [...this.dropdownList, ...list]\n        }\n      } else {\n        let len = this.dropdownList.length\n        if (len) {\n          let list = this.dropdownList.splice(len - 1)\n          this.nodropdownList = [...this.nodropdownList, ...list]\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}