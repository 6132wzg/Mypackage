{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/services/plugin.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/services/plugin.service.ts","mtime":1600926555626},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Computed } from 'rx-state';\nimport { tap, map } from 'rxjs/operators';\nimport { MarketingApi } from '@/api/v1/marketing/marketing';\n\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService(marketingApi) {\n    _classCallCheck(this, PluginService);\n\n    this.marketingApi = marketingApi;\n    this.plugin$ = new State([]);\n  }\n\n  _createClass(PluginService, [{\n    key: \"fetchList\",\n    value: function fetchList() {\n      var _this = this;\n\n      return this.marketingApi.getPluginSnList().pipe(tap(function (res) {\n        _this.plugin$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n    /**\n     * 通过插件 Path Name 获取sn\n     * @param pathName 插件Path Name\n     */\n\n  }, {\n    key: \"getPluginSnByPathName\",\n    value: function getPluginSnByPathName(pathName) {\n      return new Computed(this.plugin$.pipe(map(function (list) {\n        var item = list.filter(function (item) {\n          return item.redrect_url === pathName;\n        })[0];\n        return item ? item.plugin_sn : '';\n      })));\n    }\n  }]);\n\n  return PluginService;\n}();\n\nPluginService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof MarketingApi !== \"undefined\" && MarketingApi) === \"function\" ? _a : Object])], PluginService);\nexport { PluginService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/services/plugin.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAuC,iBAAvC;AACA,SAAS,KAAT,EAAgB,QAAhB,QAAgC,UAAhC;AACA,SAAS,GAAT,EAAc,GAAd,QAAyB,gBAAzB;AACA,SAAS,YAAT,QAA6B,8BAA7B;;AAGA,IAAa,aAAb;AAEE,yBAAoB,YAApB,EAA8C;AAAA;;AAA1B,SAAA,YAAA,GAAA,YAAA;AADpB,SAAA,OAAA,GAAU,IAAI,KAAJ,CAAsB,EAAtB,CAAV;AACkD;;AAFpD;AAAA;AAAA,gCAGW;AAAA;;AACP,aAAO,KAAK,YAAL,CAAkB,eAAlB,GAAoC,IAApC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,OAAL,CAAa,MAAb,CAAoB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAApB;AACD,OAFE,CADE,CAAP;AAKD;AACD;;;;;AAVF;AAAA;AAAA,0CAcwB,QAdxB,EAcwC;AACpC,aAAO,IAAI,QAAJ,CACL,KAAK,OAAL,CAAa,IAAb,CACE,GAAG,CAAC,UAAA,IAAI,EAAG;AACT,YAAM,IAAI,GAAG,IAAI,CAAC,MAAL,CAAY,UAAA,IAAI;AAAA,iBAAI,IAAI,CAAC,WAAL,KAAqB,QAAzB;AAAA,SAAhB,EAAmD,CAAnD,CAAb;AACA,eAAO,IAAI,GAAG,IAAI,CAAC,SAAR,GAAoB,EAA/B;AACD,OAHE,CADL,CADK,CAAP;AAQD;AAvBH;;AAAA;AAAA,GAAA;;AAAa,aAAa,GAAA,UAAA,CAAA,CADzB,UAAU,EACe,E,qDAEU,Y,KAAY,W,IAAZ,Y,MAAY,U,GAAA,E,GAAA,M,EAFtB,CAAA,EAAb,aAAa,CAAb;SAAA,a","sourcesContent":["import { Injectable, Dictionary } from 'vue-service-app'\nimport { State, Computed } from 'rx-state'\nimport { tap, map } from 'rxjs/operators'\nimport { MarketingApi } from '@/api/v1/marketing/marketing'\n\n@Injectable()\nexport class PluginService {\n  plugin$ = new State<Array<any>>([])\n  constructor(private marketingApi: MarketingApi) {}\n  fetchList() {\n    return this.marketingApi.getPluginSnList().pipe(\n      tap((res: any) => {\n        this.plugin$.commit(() => res.list)\n      })\n    )\n  }\n  /**\n   * 通过插件 Path Name 获取sn\n   * @param pathName 插件Path Name\n   */\n  getPluginSnByPathName(pathName: string) {\n    return new Computed(\n      this.plugin$.pipe(\n        map(list => {\n          const item = list.filter(item => item.redrect_url === pathName)[0]\n          return item ? item.plugin_sn : ''\n        })\n      )\n    )\n  }\n}\n"],"sourceRoot":""}]}