{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/card/list/member.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/card/list/member.vue","mtime":1600926556475},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport { cloneDeep, filter } from 'lodash-es';\nimport { MemberService } from \"./member.service\";\nimport tableMixin from '@/mixins/table.mixin';\nimport { columns, totalColumns } from \"./member.config\";\nimport StTotal from '@/views/components/total#/total.vue';\nimport SoldCardArea from '@/views/biz-modals/sold/card/area';\nimport SoldCardBatchArea from '@/views/biz-modals/sold/card/batch-area';\nimport SoldCardBatchEnterTime from '@/views/biz-modals/sold/card/batch-enter-time';\nimport SoldCardFreeze from '@/views/biz-modals/sold/card/freeze';\nimport SoldCardGiving from '@/views/biz-modals/sold/card/giving';\nimport SoldCardRefund from '@/views/biz-modals/sold/card/refund';\nimport SoldCardSetTime from '@/views/biz-modals/sold/card/set-time';\nimport SoldCardTransfer from '@/views/biz-modals/sold/card/transfer';\nimport SoldCardExtendDay from '@/views/biz-modals/sold/card/extend-day';\nimport SoldCardReactive from '@/views/biz-modals/sold/card/reactive';\nimport SoldCardMemberReactive from '@/views/biz-modals/sold/card/member/reactive';\nimport useCardActions from '@/hooks/card-actions.hook';\nimport CommonTaskSuccessTip from '@/views/biz-modals/common/task/success-tip';\nimport useInternalNoteActions from '@/hooks/shop/sold-internal-note-actions.hook';\nimport soldMemberCardActions from '@/hooks/sold/member-card-actions.hook';\nimport { PrintService } from '@/services/print.service';\nexport default {\n  name: 'PageShopSoldCardMemberList',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'page-shop-sold'\n  },\n  components: {\n    StTotal: StTotal\n  },\n  modals: {\n    SoldCardArea: SoldCardArea,\n    SoldCardFreeze: SoldCardFreeze,\n    SoldCardGiving: SoldCardGiving,\n    SoldCardRefund: SoldCardRefund,\n    SoldCardSetTime: SoldCardSetTime,\n    SoldCardTransfer: SoldCardTransfer,\n    CommonTaskSuccessTip: CommonTaskSuccessTip,\n    SoldCardBatchArea: SoldCardBatchArea,\n    SoldCardBatchEnterTime: SoldCardBatchEnterTime,\n    SoldCardExtendDay: SoldCardExtendDay,\n    SoldCardMemberReactive: SoldCardMemberReactive,\n    SoldCardReactive: SoldCardReactive\n  },\n  serviceInject: function serviceInject() {\n    return {\n      memberService: MemberService,\n      printService: PrintService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.memberService.loading$,\n      list: this.memberService.list$,\n      page: this.memberService.page$,\n      cardTypes: this.memberService.cardTypes$,\n      cardStatus: this.memberService.cardStatus$,\n      isOpens: this.memberService.isOpens$,\n      total: this.memberService.total$,\n      auth: this.memberService.auth$\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    this.cardActions.$on('refresh', function (val) {\n      _this.$router.reload();\n    });\n  },\n  hooks: function hooks() {\n    return {\n      cardActions: useCardActions(),\n      internalNoteActions: useInternalNoteActions(),\n      soldMemberCardActions: soldMemberCardActions(this)\n    };\n  },\n  computed: {\n    conditions: function conditions() {\n      var conditions = _objectSpread({}, this.$searchQuery, {\n        is_valid: this.$searchQuery.card_status\n      });\n\n      return conditions;\n    },\n    columns: columns,\n    totalColumns: totalColumns,\n    // 列表选择的卡是否一致\n    isUnifyCard: function isUnifyCard() {\n      var _this2 = this;\n\n      return this.selectedRows.length > 0 && this.selectedRows.every(function (o) {\n        return o.card_type === _this2.selectedRows[0].card_type;\n      });\n    }\n  },\n  data: function data() {\n    return {\n      action: {\n        /**\n         * 赠送额度\n         */\n        giving: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n\n        /**\n         * 变更入场vip区域\n         */\n        area: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n\n        /**\n         * 变更入场vip区域\n         */\n        endTime: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n\n        /**\n         * 延长卡有效期\n         */\n        extendDay: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n\n        /**\n         * 重新激活\n         */\n        reactive: {\n          isAvaliable: false,\n          isShowTip: false\n        }\n      },\n      // 结束时间面板是否显示\n      endOpen: false,\n      selectedRowKeys: [],\n      selectedRows: [],\n      // diffSelectedRows: [],\n      date: [],\n      buyDate: [],\n      expireDate: []\n    };\n  },\n  mounted: function mounted() {\n    this.setSearchData();\n  },\n  watch: {\n    query: function query(newVal) {\n      this.setSearchData();\n    }\n  },\n  methods: {\n    disabledSelect: function disabledSelect(record) {\n      return false;\n    },\n    // 查询\n    onSearchNative: function onSearchNative() {\n      this.$searchQuery.start_time = this.date[0] ? \"\".concat(this.date[0].format('YYYY-MM-DD'), \" 00:00:00\") : '';\n      this.$searchQuery.end_time = this.date[1] ? \"\".concat(this.date[1].format('YYYY-MM-DD'), \" 23:59:59\") : '';\n      this.$searchQuery.buy_start_time = this.buyDate[0] ? \"\".concat(this.buyDate[0].format('YYYY-MM-DD'), \" 00:00:00\") : '';\n      this.$searchQuery.buy_end_time = this.buyDate[1] ? \"\".concat(this.buyDate[1].format('YYYY-MM-DD'), \" 23:59:59\") : '';\n      this.$searchQuery.expire_start_time = this.expireDate[0] ? \"\".concat(this.expireDate[0].format('YYYY-MM-DD'), \" 00:00:00\") : '';\n      this.$searchQuery.expire_end_time = this.expireDate[1] ? \"\".concat(this.expireDate[1].format('YYYY-MM-DD'), \" 23:59:59\") : '';\n      this.onSearch();\n    },\n    onSearchResetNative: function onSearchResetNative() {\n      this.date = [null, null];\n      this.buyDate = [null, null];\n      this.expireDate = [null, null];\n      this.onSearchReset();\n    },\n    // 设置searchData\n    setSearchData: function setSearchData() {\n      var start = this.$searchQuery.start_time ? cloneDeep(moment(this.$searchQuery.start_time)) : null;\n      var end = this.$searchQuery.end_time ? cloneDeep(moment(this.$searchQuery.end_time)) : null;\n      var expireStart = this.$searchQuery.expire_start_time ? cloneDeep(moment(this.$searchQuery.expire_start_time)) : null;\n      var expireEnd = this.$searchQuery.expire_end_time ? cloneDeep(moment(this.$searchQuery.expire_end_time)) : null;\n      var buyStart = this.$searchQuery.buy_start_time ? moment(this.$searchQuery.buy_start_time) : null;\n      var buyEnd = this.$searchQuery.buy_end_time ? moment(this.$searchQuery.buy_end_time) : null;\n      this.date = [start, end];\n      this.expireDate = [expireStart, expireEnd];\n      this.buyDate = [buyStart, buyEnd];\n    },\n    // moment\n    moment: moment,\n    // 列表选择\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      this.checkSelectedRows(selectedRows, 'card_type', 'giving', function () {\n        var isAvaliable;\n        var firstItem = selectedRows[0];\n        var diffSelectedRows = selectedRows.filter(function (item) {\n          return item.card_type !== firstItem.card_type;\n        });\n        return !diffSelectedRows.length;\n      });\n      this.checkSelectedRows(selectedRows, 'is_open', 'area', function () {\n        return !selectedRows.filter(function (item) {\n          return !item.is_open;\n        }).length;\n      });\n      this.checkSelectedRows(selectedRows, 'is_open', 'endTime', function () {\n        return !selectedRows.filter(function (item) {\n          return !item.is_open;\n        }).length;\n      });\n      this.checkSelectedRows(selectedRows, 'is_open', 'extendDay', function () {\n        return !selectedRows.filter(function (item) {\n          return !item.is_open;\n        }).length;\n      });\n      this.checkSelectedRows(selectedRows, 'is_open', 'reactive', function () {\n        return selectedRows.filter(function (item) {\n          return item.card_status === 2 && item.is_refund.id === 0;\n        }).length === selectedRows.length;\n      });\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n    },\n    checkSelectedRows: function checkSelectedRows(selectedRows, key, targetDataKey, checkFn) {\n      var _this3 = this;\n\n      this.action[targetDataKey].isShowTip = false;\n      var isAvaliable = checkFn();\n      this.action[targetDataKey].isAvaliable = selectedRows.length && isAvaliable;\n\n      if (!isAvaliable) {\n        this.action[targetDataKey].isShowTip = true;\n        var timerKey = \"timer_\".concat(targetDataKey);\n        clearTimeout(this[timerKey]);\n        this[timerKey] = setTimeout(function () {\n          _this3.action[targetDataKey].isShowTip = false;\n        }, 2000);\n      }\n    },\n    // 详情\n    onDetail: function onDetail(record) {\n      this.$router.push({\n        path: \"/shop/sold/card/info/member/info/operation-record\",\n        query: {\n          id: record.id,\n          card_type: record.card_type\n        }\n      });\n    },\n    // 冻结\n    onFreeze: function onFreeze(record) {\n      var _this4 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-freeze',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: function success() {\n            _this4.$router.reload();\n          }\n        }\n      });\n    },\n    // 取消冻结\n    onUnfreeze: function onUnfreeze(record) {\n      var _this5 = this;\n\n      this.$confirm({\n        title: '提示',\n        content: '是否取消冻结？',\n        maskClosable: true,\n        onOk: function onOk() {\n          return _this5.memberService.unFreeze(record.id).toPromise().then(function () {\n            _this5.$router.reload();\n          });\n        }\n      });\n    },\n    // 退款\n    onRefund: function onRefund(record) {\n      var _this6 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-refund',\n        props: {\n          type: 'member',\n          id: record.id\n        },\n        on: {\n          success: function success() {\n            _this6.$router.reload();\n          }\n        }\n      });\n    },\n    // 重新激活\n    onReactive: function onReactive(record) {\n      var _this7 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-member-reactive',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: function success() {\n            _this7.$router.reload();\n          }\n        }\n      });\n    },\n    // 跳转合同\n    toContract: function toContract(record) {\n      var url = \"\".concat(window.location.origin, \"/common/contract-preview?id=\").concat(record.order_id);\n      window.open(url);\n    },\n    // 转让\n    onTransfer: function onTransfer(record) {\n      var _this8 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-transfer',\n        props: {\n          id: record.id,\n          type: 'member'\n        },\n        on: {\n          success: function success() {\n            _this8.$router.reload();\n          }\n        }\n      });\n    },\n    // 修改有效时间\n    onSetTime: function onSetTime(record) {\n      var _this9 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-set-time',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: function success() {\n            _this9.$router.reload();\n          }\n        }\n      });\n    },\n    // 变更vip入场区域\n    onArea: function onArea(record) {\n      var _this10 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-area',\n        props: {\n          id: [record.id]\n        },\n        on: {\n          success: function success() {\n            _this10.$router.reload();\n          }\n        }\n      });\n    },\n    // 批量变更vip入场区域\n    onAreas: function onAreas() {\n      var _this11 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-batch-area',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: function success() {\n            _this11.successTip();\n          }\n        }\n      });\n    },\n    // 批量变更入场时间段\n    onEnterTime: function onEnterTime() {\n      var _this12 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-batch-enter-time',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: function success() {\n            _this12.successTip();\n          }\n        }\n      });\n    },\n    // 额度赠送\n    onGiving: function onGiving() {\n      var _this13 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-giving',\n        props: {\n          ids: this.selectedRowKeys,\n          type: this.selectedRows[0].card_type,\n          unit: this.selectedRows[0].unit,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: function success() {\n            _this13.successTip();\n          }\n        }\n      });\n    },\n    successTip: function successTip() {\n      var _this14 = this;\n\n      this.$modalRouter.push({\n        name: 'common-task-success-tip',\n        on: {\n          success: function success() {\n            _this14.$router.reload();\n\n            _this14.onClear();\n          }\n        }\n      });\n    },\n    onClear: function onClear() {\n      this.selectedRowKeys = [];\n      this.selectedRows = [];\n    },\n    onExtendDays: function onExtendDays() {\n      var _this15 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-extend-day',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: this.$searchQuery\n        },\n        on: {\n          success: function success() {\n            _this15.successTip();\n          }\n        }\n      });\n    },\n    onReactiveBatch: function onReactiveBatch() {\n      var _this16 = this;\n\n      this.$modalRouter.push({\n        name: 'sold-card-reactive',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: this.$searchQuery\n        },\n        on: {\n          success: function success() {\n            _this16.successTip();\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["member.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"basic()\">\n    <portal to=\"SHOP_SOLD_CARD_LIST_ACTIONS\">\n      <st-input-search\n        v-model=\"$searchQuery.search\"\n        @search=\"onKeywordsSearch('search', $event)\"\n        placeholder=\"请输入卡名、合同编号、会员姓名或手机号查找\"\n        style=\"width: 380px;\"\n      />\n    </portal>\n    <st-search-panel @search=\"onSearchNative\" @reset=\"onSearchResetNative\">\n      <st-search-panel-item :label=\"`${$c('member_card')}类型：`\">\n        <st-search-radio\n          v-model=\"$searchQuery.card_type\"\n          :options=\"cardTypes\"\n        />\n      </st-search-panel-item>\n      <st-search-panel-item :label=\"`${$c('member_card')}状态：`\">\n        <st-search-radio\n          v-model=\"$searchQuery.card_status\"\n          :options=\"cardStatus\"\n        />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"开卡状态：\">\n        <st-search-radio v-model=\"$searchQuery.is_open\" :options=\"isOpens\" />\n      </st-search-panel-item>\n      <div slot=\"more\">\n        <st-search-panel-item label=\"到期时间：\">\n          <st-range-picker :disabledDays=\"180\" v-model=\"expireDate\" />\n        </st-search-panel-item>\n        <st-search-panel-item label=\"开卡时间：\">\n          <st-range-picker :disabledDays=\"180\" v-model=\"date\" />\n        </st-search-panel-item>\n        <st-search-panel-item label=\"购买时间：\">\n          <st-range-picker :disabledDays=\"180\" v-model=\"buyDate\" />\n        </st-search-panel-item>\n      </div>\n    </st-search-panel>\n    <div :class=\"basic('content')\">\n      <div :class=\"basic('content-batch')\" class=\"mg-b16\">\n        <st-button\n          v-if=\"auth.export\"\n          type=\"primary\"\n          class=\"mg-r8\"\n          v-export-excel=\"{\n            type: 'sold/card/member',\n            query: { conditions: conditions }\n          }\"\n        >\n          全部导出\n        </st-button>\n\n        <st-help-tooltip\n          :isCustom=\"true\"\n          :title=\"`只支持一种类型且有效的${$c('member_card')}`\"\n          :defaultVisible=\"true\"\n          v-if=\"auth.gift\"\n          trigger=\"contextmenu\"\n          v-model=\"action.giving.isShowTip\"\n          @click=\"onGiving\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :disabled=\"!action.giving.isAvaliable\"\n          >\n            赠送额度\n          </st-button>\n        </st-help-tooltip>\n        <st-help-tooltip\n          :isCustom=\"true\"\n          v-if=\"auth.vipRegion\"\n          :title=\"`只支持有效的${$c('member_card')}`\"\n          :defaultVisible=\"true\"\n          trigger=\"contextmenu\"\n          v-model=\"action.area.isShowTip\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :disabled=\"!action.area.isAvaliable\"\n            @click=\"onAreas\"\n          >\n            变更入场vip区域\n          </st-button>\n        </st-help-tooltip>\n        <st-help-tooltip\n          v-if=\"auth.batch_admission\"\n          :isCustom=\"true\"\n          :title=\"`只支持有效的${$c('member_card')}`\"\n          :defaultVisible=\"true\"\n          trigger=\"contextmenu\"\n          v-model=\"action.endTime.isShowTip\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :disabled=\"!action.endTime.isAvaliable\"\n            @click=\"onEnterTime\"\n          >\n            变更入场时段\n          </st-button>\n        </st-help-tooltip>\n        <st-help-tooltip\n          v-if=\"auth.extendDay\"\n          :isCustom=\"true\"\n          :title=\"`只支持已开卡且有效的${$c('member_card')}`\"\n          :defaultVisible=\"true\"\n          trigger=\"contextmenu\"\n          v-model=\"action.extendDay.isShowTip\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            @click=\"onExtendDays\"\n            :disabled=\"!action.extendDay.isAvaliable\"\n          >\n            延长有效期\n          </st-button>\n        </st-help-tooltip>\n        <st-help-tooltip\n          v-if=\"auth.reactive\"\n          :isCustom=\"true\"\n          :title=\"`只支持过期失效且未退款的${$c('member_card')}`\"\n          :defaultVisible=\"true\"\n          placement=\"bottom\"\n          trigger=\"contextmenu\"\n          v-model=\"action.reactive.isShowTip\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :disabled=\"!action.reactive.isAvaliable\"\n            @click=\"onReactiveBatch\"\n          >\n            重新激活\n          </st-button>\n        </st-help-tooltip>\n      </div>\n      <st-total\n        :indexs=\"totalColumns\"\n        :dataSource=\"total\"\n        hasTitle\n        class=\"mg-b16\"\n      ></st-total>\n      <div>\n        <st-table\n          :page=\"page\"\n          :loading=\"loading.getList\"\n          :alertSelection=\"{ onReset: onClear }\"\n          :rowSelection=\"{\n            selectedRowKeys: selectedRowKeys,\n            fixed: true,\n            onChange: onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: disabledSelect(record) // Column configuration not to be checked\n              }\n            })\n          }\"\n          rowKey=\"id\"\n          @change=\"onTableChange\"\n          :columns=\"columns\"\n          :dataSource=\"list\"\n          :scroll=\"{ x: 1880 }\"\n        >\n          <template slot=\"card_name\" slot-scope=\"text, record\">\n            <st-link\n              :value=\"text\"\n              :disabled=\"!record.auth['shop:sold:sold_member_card|get']\"\n              @click=\"onDetail(record)\"\n            ></st-link>\n          </template>\n          <template slot=\"sex\" slot-scope=\"text\">\n            {{ text | enumFilter('staff.sex') }}\n          </template>\n          <template slot=\"remain_amount\" slot-scope=\"text, record\">\n            {{ text }}{{ record.unit | enumFilter('sold_common.unit') }}\n          </template>\n          <template slot=\"is_refund\" slot-scope=\"text\">\n            {{ text.name }}\n          </template>\n          <template slot=\"init_amount\" slot-scope=\"text, record\">\n            {{ text }}{{ record.unit | enumFilter('sold_common.unit') }}\n          </template>\n          <template slot=\"card_status\" slot-scope=\"text\">\n            <st-text\n              :status=\"{\n                success: text === 1,\n                error: text === 2,\n                warning: text === 3\n              }\"\n            >\n              {{ text | enumFilter('sold_common.card_status') }}\n            </st-text>\n          </template>\n          <template slot=\"member_name\" slot-scope=\"text, record\">\n            <template v-if=\"record.is_minors\">\n              <span class=\"word-break\">{{ record.member_name }}(未成年)</span>\n            </template>\n            <template v-else>\n              <span class=\"word-break\">{{ record.member_name }}</span>\n            </template>\n          </template>\n          <template slot=\"mobile\" slot-scope=\"text, record\">\n            <template v-if=\"record.is_minors\">\n              {{ record.parent_mobile }}({{ record.parent_user_role }})\n            </template>\n            <template v-else>\n              {{ record.mobile }}\n            </template>\n          </template>\n          <template slot=\"sell_time\" slot-scope=\"text, record\">\n            <span class=\"word-break\">\n              {{ record.start_time }} ~ {{ record.end_time }}\n            </span>\n          </template>\n          <template slot=\"is_open\" slot-scope=\"text\">\n            {{ text | enumFilter('sold_common.is_open') }}\n          </template>\n          <div slot=\"action\" slot-scope=\"text, record\">\n            <st-table-actions>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|get']\"\n                @click=\"onDetail(record)\"\n              >\n                详情\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|upgrade']\"\n                @click=\"cardActions.upgradeCard(record)\"\n              >\n                升级\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|renew']\"\n                @click=\"cardActions.onRenewal(record)\"\n              >\n                续卡\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|vaild_time']\"\n                @click=\"onSetTime(record)\"\n              >\n                修改有效时间\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|reactivate']\"\n                @click=\"onReactive(record)\"\n              >\n                重新激活\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|frozen']\"\n                @click=\"onFreeze(record)\"\n              >\n                冻结\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|unfrozen']\"\n                @click=\"onUnfreeze(record)\"\n              >\n                取消冻结\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|transfer']\"\n                @click=\"onTransfer(record)\"\n              >\n                转让\n              </a>\n              <a\n                v-if=\"record.auth['brand_shop:order:order|refund']\"\n                @click=\"onRefund(record)\"\n              >\n                退款\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|export_contract']\"\n                @click=\"toContract(record)\"\n              >\n                查看合同\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|vip_region']\"\n                @click=\"onArea(record)\"\n              >\n                修改入场vip区域\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|edit']\"\n                @click=\"cardActions.onChangeMember(record)\"\n              >\n                变更成员\n              </a>\n              <a\n                v-if=\"\n                  record.auth['shop:sold:sold_member_card|internal_description']\n                \"\n                @click=\"internalNoteActions.onOpenModal(record)\"\n              >\n                对内备注\n              </a>\n              <a\n                v-if=\"record.auth['shop:sold:sold_member_card|rights_edit']\"\n                @click=\"soldMemberCardActions.onUpdateRights(record.id)\"\n              >\n                修改权益\n              </a>\n              <a\n                v-if=\"record.auth['shop:order:order|print']\"\n                @click=\"printService.printSmallTicket(record.order_id)\"\n              >\n                打印小票\n              </a>\n            </st-table-actions>\n          </div>\n        </st-table>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport moment from 'moment'\nimport { cloneDeep, filter } from 'lodash-es'\nimport { MemberService } from './member.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, totalColumns } from './member.config'\nimport StTotal from '@/views/components/total#/total.vue'\nimport SoldCardArea from '@/views/biz-modals/sold/card/area'\nimport SoldCardBatchArea from '@/views/biz-modals/sold/card/batch-area'\nimport SoldCardBatchEnterTime from '@/views/biz-modals/sold/card/batch-enter-time'\nimport SoldCardFreeze from '@/views/biz-modals/sold/card/freeze'\nimport SoldCardGiving from '@/views/biz-modals/sold/card/giving'\nimport SoldCardRefund from '@/views/biz-modals/sold/card/refund'\nimport SoldCardSetTime from '@/views/biz-modals/sold/card/set-time'\nimport SoldCardTransfer from '@/views/biz-modals/sold/card/transfer'\nimport SoldCardExtendDay from '@/views/biz-modals/sold/card/extend-day'\nimport SoldCardReactive from '@/views/biz-modals/sold/card/reactive'\nimport SoldCardMemberReactive from '@/views/biz-modals/sold/card/member/reactive'\nimport useCardActions from '@/hooks/card-actions.hook'\nimport CommonTaskSuccessTip from '@/views/biz-modals/common/task/success-tip'\nimport useInternalNoteActions from '@/hooks/shop/sold-internal-note-actions.hook'\nimport soldMemberCardActions from '@/hooks/sold/member-card-actions.hook'\nimport { PrintService } from '@/services/print.service'\nexport default {\n  name: 'PageShopSoldCardMemberList',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'page-shop-sold'\n  },\n  components: {\n    StTotal\n  },\n  modals: {\n    SoldCardArea,\n    SoldCardFreeze,\n    SoldCardGiving,\n    SoldCardRefund,\n    SoldCardSetTime,\n    SoldCardTransfer,\n    CommonTaskSuccessTip,\n    SoldCardBatchArea,\n    SoldCardBatchEnterTime,\n    SoldCardExtendDay,\n    SoldCardMemberReactive,\n    SoldCardReactive\n  },\n  serviceInject() {\n    return {\n      memberService: MemberService,\n      printService: PrintService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.memberService.loading$,\n      list: this.memberService.list$,\n      page: this.memberService.page$,\n      cardTypes: this.memberService.cardTypes$,\n      cardStatus: this.memberService.cardStatus$,\n      isOpens: this.memberService.isOpens$,\n      total: this.memberService.total$,\n      auth: this.memberService.auth$\n    }\n  },\n  beforeCreate() {\n    this.cardActions.$on('refresh', val => {\n      this.$router.reload()\n    })\n  },\n  hooks() {\n    return {\n      cardActions: useCardActions(),\n      internalNoteActions: useInternalNoteActions(),\n      soldMemberCardActions: soldMemberCardActions(this)\n    }\n  },\n  computed: {\n    conditions() {\n      let conditions = {\n        ...this.$searchQuery,\n        is_valid: this.$searchQuery.card_status\n      }\n      return conditions\n    },\n    columns,\n    totalColumns,\n    // 列表选择的卡是否一致\n    isUnifyCard() {\n      return (\n        this.selectedRows.length > 0 &&\n        this.selectedRows.every(\n          o => o.card_type === this.selectedRows[0].card_type\n        )\n      )\n    }\n  },\n  data() {\n    return {\n      action: {\n        /**\n         * 赠送额度\n         */\n        giving: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 变更入场vip区域\n         */\n        area: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 变更入场vip区域\n         */\n        endTime: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 延长卡有效期\n         */\n        extendDay: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 重新激活\n         */\n        reactive: {\n          isAvaliable: false,\n          isShowTip: false\n        }\n      },\n      // 结束时间面板是否显示\n      endOpen: false,\n      selectedRowKeys: [],\n      selectedRows: [],\n      // diffSelectedRows: [],\n      date: [],\n      buyDate: [],\n      expireDate: []\n    }\n  },\n  mounted() {\n    this.setSearchData()\n  },\n  watch: {\n    query(newVal) {\n      this.setSearchData()\n    }\n  },\n  methods: {\n    disabledSelect(record) {\n      return false\n    },\n    // 查询\n    onSearchNative() {\n      this.$searchQuery.start_time = this.date[0]\n        ? `${this.date[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.end_time = this.date[1]\n        ? `${this.date[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.$searchQuery.buy_start_time = this.buyDate[0]\n        ? `${this.buyDate[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.buy_end_time = this.buyDate[1]\n        ? `${this.buyDate[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.$searchQuery.expire_start_time = this.expireDate[0]\n        ? `${this.expireDate[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.expire_end_time = this.expireDate[1]\n        ? `${this.expireDate[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.onSearch()\n    },\n    onSearchResetNative() {\n      this.date = [null, null]\n      this.buyDate = [null, null]\n      this.expireDate = [null, null]\n      this.onSearchReset()\n    },\n    // 设置searchData\n    setSearchData() {\n      const start = this.$searchQuery.start_time\n        ? cloneDeep(moment(this.$searchQuery.start_time))\n        : null\n      const end = this.$searchQuery.end_time\n        ? cloneDeep(moment(this.$searchQuery.end_time))\n        : null\n      const expireStart = this.$searchQuery.expire_start_time\n        ? cloneDeep(moment(this.$searchQuery.expire_start_time))\n        : null\n      const expireEnd = this.$searchQuery.expire_end_time\n        ? cloneDeep(moment(this.$searchQuery.expire_end_time))\n        : null\n      const buyStart = this.$searchQuery.buy_start_time\n        ? moment(this.$searchQuery.buy_start_time)\n        : null\n      const buyEnd = this.$searchQuery.buy_end_time\n        ? moment(this.$searchQuery.buy_end_time)\n        : null\n      this.date = [start, end]\n      this.expireDate = [expireStart, expireEnd]\n      this.buyDate = [buyStart, buyEnd]\n    },\n    // moment\n    moment,\n    // 列表选择\n    onSelectChange(selectedRowKeys, selectedRows) {\n      this.checkSelectedRows(selectedRows, 'card_type', 'giving', () => {\n        let isAvaliable\n        const firstItem = selectedRows[0]\n        const diffSelectedRows = selectedRows.filter(\n          item => item.card_type !== firstItem.card_type\n        )\n        return !diffSelectedRows.length\n      })\n      this.checkSelectedRows(selectedRows, 'is_open', 'area', () => {\n        return !selectedRows.filter(item => !item.is_open).length\n      })\n      this.checkSelectedRows(selectedRows, 'is_open', 'endTime', () => {\n        return !selectedRows.filter(item => !item.is_open).length\n      })\n      this.checkSelectedRows(selectedRows, 'is_open', 'extendDay', () => {\n        return !selectedRows.filter(item => !item.is_open).length\n      })\n      this.checkSelectedRows(selectedRows, 'is_open', 'reactive', () => {\n        return (\n          selectedRows.filter(\n            item => item.card_status === 2 && item.is_refund.id === 0\n          ).length === selectedRows.length\n        )\n      })\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    checkSelectedRows(selectedRows, key, targetDataKey, checkFn) {\n      this.action[targetDataKey].isShowTip = false\n      const isAvaliable = checkFn()\n      this.action[targetDataKey].isAvaliable =\n        selectedRows.length && isAvaliable\n      if (!isAvaliable) {\n        this.action[targetDataKey].isShowTip = true\n        const timerKey = `timer_${targetDataKey}`\n        clearTimeout(this[timerKey])\n        this[timerKey] = setTimeout(() => {\n          this.action[targetDataKey].isShowTip = false\n        }, 2000)\n      }\n    },\n    // 详情\n    onDetail(record) {\n      this.$router.push({\n        path: `/shop/sold/card/info/member/info/operation-record`,\n        query: { id: record.id, card_type: record.card_type }\n      })\n    },\n    // 冻结\n    onFreeze(record) {\n      this.$modalRouter.push({\n        name: 'sold-card-freeze',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 取消冻结\n    onUnfreeze(record) {\n      this.$confirm({\n        title: '提示',\n        content: '是否取消冻结？',\n        maskClosable: true,\n        onOk: () => {\n          return this.memberService\n            .unFreeze(record.id)\n            .toPromise()\n            .then(() => {\n              this.$router.reload()\n            })\n        }\n      })\n    },\n    // 退款\n    onRefund(record) {\n      this.$modalRouter.push({\n        name: 'sold-card-refund',\n        props: {\n          type: 'member',\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 重新激活\n    onReactive(record) {\n      this.$modalRouter.push({\n        name: 'sold-card-member-reactive',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 跳转合同\n    toContract(record) {\n      let url = `${window.location.origin}/common/contract-preview?id=${record.order_id}`\n      window.open(url)\n    },\n    // 转让\n    onTransfer(record) {\n      this.$modalRouter.push({\n        name: 'sold-card-transfer',\n        props: {\n          id: record.id,\n          type: 'member'\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 修改有效时间\n    onSetTime(record) {\n      this.$modalRouter.push({\n        name: 'sold-card-set-time',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 变更vip入场区域\n    onArea(record) {\n      this.$modalRouter.push({\n        name: 'sold-card-area',\n        props: {\n          id: [record.id]\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 批量变更vip入场区域\n    onAreas() {\n      this.$modalRouter.push({\n        name: 'sold-card-batch-area',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    // 批量变更入场时间段\n    onEnterTime() {\n      this.$modalRouter.push({\n        name: 'sold-card-batch-enter-time',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    // 额度赠送\n    onGiving() {\n      this.$modalRouter.push({\n        name: 'sold-card-giving',\n        props: {\n          ids: this.selectedRowKeys,\n          type: this.selectedRows[0].card_type,\n          unit: this.selectedRows[0].unit,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    successTip() {\n      this.$modalRouter.push({\n        name: 'common-task-success-tip',\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    onClear() {\n      this.selectedRowKeys = []\n      this.selectedRows = []\n    },\n    onExtendDays() {\n      this.$modalRouter.push({\n        name: 'sold-card-extend-day',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: this.$searchQuery\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    onReactiveBatch() {\n      this.$modalRouter.push({\n        name: 'sold-card-reactive',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: this.$searchQuery\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/pages/shop/sold/card/list"}]}