{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/frozen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/frozen.vue","mtime":1596188219492},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FrozenService } from './frozen.service'\nimport { columns, ruleOptions } from './frozen.config'\nimport moment from 'moment'\nexport default {\n  name: 'ModalShopFrozen',\n  bem: {\n    frozen: 'modal-shop-frozen'\n  },\n  serviceInject() {\n    return {\n      frozenService: FrozenService\n    }\n  },\n  rxState() {\n    return {\n      list: this.frozenService.list$,\n      staffList: this.frozenService.staffList$,\n      payMethodList: this.frozenService.payMethodList$,\n      hasTransferFeeList: this.frozenService.hasTransferFeeList$,\n      loading: this.frozenService.loading$\n    }\n  },\n  name: 'frozen',\n  bem: {\n    basic: 'shop-frozen'\n  },\n  props: {\n    record: {\n      type: Object\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isTransferFlag: false,\n      selectedRows: [],\n      dateString: [],\n      selectedRowsHelp: ''\n    }\n  },\n  created() {\n    this.getMemberBuy()\n  },\n  methods: {\n    disabledDate(current) {\n      // Can not select days before today and today\n      return (\n        current && current.format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD')\n      )\n    },\n    moment,\n    // 搜索员工\n    onSearch(data) {\n      this.memberSearchText = data\n      if (data === '') {\n        this.frozenService.memberList$.commit(() => [])\n        this.form.resetFields(['pay_fee'])\n      } else {\n        this.frozenService.getMemberList(data).subscribe(res => {\n          if (!res.list.length) {\n            this.form.resetFields(['pay_fee'])\n          }\n        })\n      }\n    },\n    getMemberBuy() {\n      this.frozenService.getMemberBuy(this.record.member_id).subscribe()\n    },\n    getMemberTransfer(data) {\n      this.frozenService.getMemberTransfer(data).subscribe(state => {\n        this.show = false\n        this.$emit('success')\n      })\n    },\n    save(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        if (this.selectedRows.length <= 0) {\n          this.selectedRowsHelp = '请选择冻结的卡课'\n          return\n        } else {\n          this.selectedRowsHelp = ''\n        }\n        values.product = this.selectedRows.map(item => {\n          return {\n            product_type: item.product_type,\n            product_id: item.id\n          }\n        })\n        values.id = this.record.member_id\n        values.end_time = moment(values.end_time).format('YYYY-MM-DD HH:mm')\n        this.getMemberTransfer(values)\n      })\n    },\n    onChangeDatepicker(date, dateString) {\n      this.dateString = dateString\n    },\n    changeTransfer(event) {\n      if (event.target.value === 0) {\n        this.isTransferFlag = false\n      } else {\n        this.isTransferFlag = true\n      }\n    }\n  },\n  computed: {\n    columns,\n    rowSelection() {\n      let self = this\n      const { selectedRowKeys } = this\n      return {\n        onChange: (selectedRowKeys, selectedRows) => {\n          self.selectedRows = selectedRows\n          if (selectedRows.length > 0) {\n            self.selectedRowsHelp = ''\n          }\n        },\n        getCheckboxProps: record => ({\n          props: {\n            // 产品类型为 1 会员卡 2 课程包  is_purchaser 1 为购卡人\n            disabled:\n              [1, 4].includes(record.product_type) && record.is_purchaser !== 1\n          }\n        })\n      }\n    }\n  }\n}\n",{"version":3,"sources":["frozen.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"frozen.vue","sourceRoot":"src/views/biz-modals/shop","sourcesContent":["<template>\n  <st-modal\n    title=\"冻结\"\n    v-model=\"show\"\n    @ok=\"save\"\n    width=\"740px\"\n    :loading=\"loading.getMemberBuy\"\n    :confirmLoading=\"loading.getMemberTransfer\"\n    wrapClassName=\"modal-shop-frozen\"\n  >\n    <st-form :form=\"form\" labelWidth=\"80px\">\n      <a-row :gutter=\"8\">\n        <a-col :lg=\"24\">\n          <st-info>\n            <st-info-item label=\"姓名\">\n              {{ record.member_name }}\n            </st-info-item>\n            <st-info-item :label=\"record.is_minors ? '家长手机号' : '手机号'\">\n              {{ record.is_minors ? record.parent_info.mobile : record.mobile }}\n            </st-info-item>\n          </st-info>\n        </a-col>\n      </a-row>\n      <st-t4 class=\"mg-b8\">选择需要冻结的卡或课</st-t4>\n      <a-row :gutter=\"8\">\n        <a-col\n          :lg=\"24\"\n          class=\"distribution-container\"\n          style=\"padding-left:12px;padding-right:12px;\"\n        >\n          <st-form-item :help=\"selectedRowsHelp\" required>\n            <st-table\n              :rowSelection=\"rowSelection\"\n              :pagination=\"false\"\n              :columns=\"columns\"\n              :dataSource=\"list\"\n              rowKey=\"id\"\n            >\n              <span\n                slot=\"remain_amount\"\n                style=\"width: 60px\"\n                slot-scope=\"text, record\"\n              >\n                {{ record.remain_amount }} {{ record.unit }}\n              </span>\n              <span slot=\"start_end\" slot-scope=\"text, record\">\n                {{ record.start_time }} ~ {{ record.end_time }}\n              </span>\n              <span\n                slot=\"member_info\"\n                slot-scope=\"text, record\"\n                v-if=\"record.member_info\"\n              >\n                <st-overflow-text\n                  :value=\"[\n                    `购买人: ${record.member_info.card_buyer}`,\n                    '成员:',\n                    ...record.member_info.card_members\n                  ]\"\n                  max-width=\"120px\"\n                ></st-overflow-text>\n                <span\n                  v-if=\"record.product_type === 1 && record.is_purchaser !== 1\"\n                  class=\"error-color\"\n                >\n                  需要购买人冻结\n                </span>\n              </span>\n            </st-table>\n          </st-form-item>\n        </a-col>\n      </a-row>\n      <a-row :gutter=\"8\" class=\"mg-t24\">\n        <a-col :lg=\"24\">\n          <st-form-item label=\"冻结日期\">\n            <a-date-picker\n              format=\"YYYY-MM-DD\"\n              placeholder=\"冻结日期\"\n              :disabledDate=\"disabledDate\"\n              v-decorator=\"decorators.end_time\"\n            />\n            <br />\n          </st-form-item>\n        </a-col>\n      </a-row>\n      <a-row :gutter=\"8\">\n        <a-col :lg=\"24\">\n          <st-form-item label=\"有无手续费\" required>\n            <a-radio-group\n              v-decorator=\"decorators.is_handling_fee\"\n              @change=\"changeTransfer\"\n            >\n              <a-radio\n                :value=\"item.value\"\n                v-for=\"(item, index) in hasTransferFeeList\"\n                :key=\"index\"\n              >\n                {{ item.label }}\n              </a-radio>\n            </a-radio-group>\n          </st-form-item>\n        </a-col>\n      </a-row>\n      <a-row :gutter=\"8\" class=\"mg-t8\" v-if=\"isTransferFlag\">\n        <a-col :lg=\"24\">\n          <st-form-item label=\"手续费\" required>\n            <st-input-number\n              :float=\"true\"\n              placeholder=\"请输入手续费\"\n              v-decorator=\"decorators.pay_fee\"\n            >\n              <template slot=\"addonAfter\">\n                元\n              </template>\n            </st-input-number>\n          </st-form-item>\n        </a-col>\n      </a-row>\n\n      <a-row :gutter=\"8\" class=\"mg-t8\" v-if=\"isTransferFlag\">\n        <a-col :lg=\"24\">\n          <st-form-item label=\"支付方式\" required>\n            <a-select\n              :class=\"basic('select')\"\n              v-decorator=\"decorators.pay_method\"\n              placeholder=\"请选择支付方式\"\n            >\n              <a-select-option\n                v-for=\"(item, index) in payMethodList\"\n                :key=\"index\"\n                :value=\"item.value\"\n              >\n                {{ item.label }}\n              </a-select-option>\n            </a-select>\n          </st-form-item>\n        </a-col>\n      </a-row>\n      <!-- <a-row :gutter=\"8\" class=\"mg-t8\" v-if=\"isTransferFlag\">\n        <a-col :lg=\"24\">\n          <st-form-item label=\"收款人员\" required>\n            <a-select\n              showSearch\n              allowClear\n              placeholder=\"输入手机号或员工名称搜索\"\n              :defaultActiveFirstOption=\"false\"\n              :showArrow=\"false\"\n              :filterOption=\"false\"\n              v-decorator=\"decorators.sale_id\"\n              @search=\"onSearch\"\n              notFoundContent=\"无搜索结果\"\n            >\n              <a-select-option\n              v-for=\"(item,index) in staffList\"\n              :value=\"item.id\"\n              :key=\"index\">\n                <span v-html=\"`${item.staff_name} ${item.mobile}`.replace(new RegExp(memberSearchText,'g'),`\\<span class='global-highlight-color'\\>${memberSearchText}\\<\\/span\\>`)\">\n                  {{item.staff_name}} {{item.mobile}}\n                </span>\n              </a-select-option>\n            </a-select>\n          </st-form-item>\n        </a-col>\n      </a-row> -->\n      <!-- <a-row :gutter=\"8\">\n        <a-col :lg=\"24\">\n          <st-form-item\n            class=\"mg-l24\"\n            style=\"text-align:right; margin-bottom:0\"\n            labelOffset\n          >\n            <st-button\n              type=\"primary\"\n              @click=\"save\"\n              :loading=\"loading.getMemberTransfer\"\n            >\n              确认\n            </st-button>\n          </st-form-item>\n        </a-col>\n      </a-row> -->\n    </st-form>\n  </st-modal>\n</template>\n<script>\nimport { FrozenService } from './frozen.service'\nimport { columns, ruleOptions } from './frozen.config'\nimport moment from 'moment'\nexport default {\n  name: 'ModalShopFrozen',\n  bem: {\n    frozen: 'modal-shop-frozen'\n  },\n  serviceInject() {\n    return {\n      frozenService: FrozenService\n    }\n  },\n  rxState() {\n    return {\n      list: this.frozenService.list$,\n      staffList: this.frozenService.staffList$,\n      payMethodList: this.frozenService.payMethodList$,\n      hasTransferFeeList: this.frozenService.hasTransferFeeList$,\n      loading: this.frozenService.loading$\n    }\n  },\n  name: 'frozen',\n  bem: {\n    basic: 'shop-frozen'\n  },\n  props: {\n    record: {\n      type: Object\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isTransferFlag: false,\n      selectedRows: [],\n      dateString: [],\n      selectedRowsHelp: ''\n    }\n  },\n  created() {\n    this.getMemberBuy()\n  },\n  methods: {\n    disabledDate(current) {\n      // Can not select days before today and today\n      return (\n        current && current.format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD')\n      )\n    },\n    moment,\n    // 搜索员工\n    onSearch(data) {\n      this.memberSearchText = data\n      if (data === '') {\n        this.frozenService.memberList$.commit(() => [])\n        this.form.resetFields(['pay_fee'])\n      } else {\n        this.frozenService.getMemberList(data).subscribe(res => {\n          if (!res.list.length) {\n            this.form.resetFields(['pay_fee'])\n          }\n        })\n      }\n    },\n    getMemberBuy() {\n      this.frozenService.getMemberBuy(this.record.member_id).subscribe()\n    },\n    getMemberTransfer(data) {\n      this.frozenService.getMemberTransfer(data).subscribe(state => {\n        this.show = false\n        this.$emit('success')\n      })\n    },\n    save(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        if (this.selectedRows.length <= 0) {\n          this.selectedRowsHelp = '请选择冻结的卡课'\n          return\n        } else {\n          this.selectedRowsHelp = ''\n        }\n        values.product = this.selectedRows.map(item => {\n          return {\n            product_type: item.product_type,\n            product_id: item.id\n          }\n        })\n        values.id = this.record.member_id\n        values.end_time = moment(values.end_time).format('YYYY-MM-DD HH:mm')\n        this.getMemberTransfer(values)\n      })\n    },\n    onChangeDatepicker(date, dateString) {\n      this.dateString = dateString\n    },\n    changeTransfer(event) {\n      if (event.target.value === 0) {\n        this.isTransferFlag = false\n      } else {\n        this.isTransferFlag = true\n      }\n    }\n  },\n  computed: {\n    columns,\n    rowSelection() {\n      let self = this\n      const { selectedRowKeys } = this\n      return {\n        onChange: (selectedRowKeys, selectedRows) => {\n          self.selectedRows = selectedRows\n          if (selectedRows.length > 0) {\n            self.selectedRowsHelp = ''\n          }\n        },\n        getCheckboxProps: record => ({\n          props: {\n            // 产品类型为 1 会员卡 2 课程包  is_purchaser 1 为购卡人\n            disabled:\n              [1, 4].includes(record.product_type) && record.is_purchaser !== 1\n          }\n        })\n      }\n    }\n  }\n}\n</script>\n"]}]}