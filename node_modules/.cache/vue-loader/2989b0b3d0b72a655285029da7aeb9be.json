{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/help-tooltip/help-tooltip.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/help-tooltip/help-tooltip.vue","mtime":1594718340290},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserService } from '@/services/user.service'\nimport { HelpTooltipService } from './help-tooltip.service'\nexport default {\n  name: 'StHelpTooltip',\n  serviceInject() {\n    return {\n      userService: UserService,\n      helpTooltipService: HelpTooltipService\n    }\n  },\n  rxState() {\n    return {\n      invalidTooltips: this.userService.invalidTooltips$,\n      menuData: this.userService.menuData$\n    }\n  },\n  model: {\n    prop: 'visible',\n    event: 'change'\n  },\n  props: {\n    id: {\n      type: [Number, String],\n      default: 0\n    },\n    placement: {\n      type: String,\n      default: 'top'\n    },\n    isCustom: {\n      type: Boolean,\n      default: false\n    },\n    defaultVisible: {\n      type: Boolean,\n      default: false\n    },\n    visible: Boolean\n  },\n  data() {\n    return {\n      content: '加载中...',\n      loaded: false\n    }\n  },\n  methods: {\n    onMouseEnter() {\n      if (!this.loaded) {\n        this.getHelp()\n      }\n    },\n    getHelp() {\n      const { id } = this\n      this.helpTooltipService.getToolTip(this.id).subscribe(res => {\n        this.content = res.info.content\n        this.loaded = true\n      })\n    },\n    change(event) {\n      this.$emit('change', event)\n    }\n  }\n}\n",{"version":3,"sources":["help-tooltip.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"help-tooltip.vue","sourceRoot":"src/views/components/help-tooltip","sourcesContent":["<template>\n  <span class=\"st-help-tooltip\">\n    <a-tooltip\n      v-if=\"invalidTooltips.indexOf(id) === -1 && !isCustom\"\n      :placement=\"placement\"\n      v-bind=\"$attrs\"\n      v-on=\"$listeners\"\n      @mouseenter=\"onMouseEnter\"\n      :mouseEnterDelay=\"0.3\"\n    >\n      <template slot=\"title\">\n        <span>{{ content }}</span>\n      </template>\n      <!-- <span><st-icon type=\"help\" /></span> -->\n      <span class=\"st-help-tooltip-img\">\n        <img height=\"14\" width=\"14\" src=\"~@/assets/img/tooltip-help.png\" />\n      </span>\n      <slot></slot>\n    </a-tooltip>\n    <a-tooltip\n      v-if=\"defaultVisible && isCustom\"\n      v-bind=\"$attrs\"\n      v-on=\"$listeners\"\n      :mouseEnterDelay=\"0.3\"\n      :visible=\"visible\"\n      @visibleChange=\"change\"\n    >\n      <slot></slot>\n    </a-tooltip>\n    <a-tooltip v-else v-bind=\"$attrs\" v-on=\"$listeners\" :mouseEnterDelay=\"0.3\">\n      <slot></slot>\n    </a-tooltip>\n  </span>\n</template>\n<script>\nimport { UserService } from '@/services/user.service'\nimport { HelpTooltipService } from './help-tooltip.service'\nexport default {\n  name: 'StHelpTooltip',\n  serviceInject() {\n    return {\n      userService: UserService,\n      helpTooltipService: HelpTooltipService\n    }\n  },\n  rxState() {\n    return {\n      invalidTooltips: this.userService.invalidTooltips$,\n      menuData: this.userService.menuData$\n    }\n  },\n  model: {\n    prop: 'visible',\n    event: 'change'\n  },\n  props: {\n    id: {\n      type: [Number, String],\n      default: 0\n    },\n    placement: {\n      type: String,\n      default: 'top'\n    },\n    isCustom: {\n      type: Boolean,\n      default: false\n    },\n    defaultVisible: {\n      type: Boolean,\n      default: false\n    },\n    visible: Boolean\n  },\n  data() {\n    return {\n      content: '加载中...',\n      loaded: false\n    }\n  },\n  methods: {\n    onMouseEnter() {\n      if (!this.loaded) {\n        this.getHelp()\n      }\n    },\n    getHelp() {\n      const { id } = this\n      this.helpTooltipService.getToolTip(this.id).subscribe(res => {\n        this.content = res.info.content\n        this.loaded = true\n      })\n    },\n    change(event) {\n      this.$emit('change', event)\n    }\n  }\n}\n</script>\n"]}]}