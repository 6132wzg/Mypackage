{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule-time-picker/schedule-time-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule-time-picker/schedule-time-picker.vue","mtime":1595230476653},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport item from \"./schedule-time-picker-item\";\nimport { cloneDeep } from 'lodash-es';\nexport default {\n  name: 'StScheduleTimePicker',\n  model: {\n    prop: 'values',\n    event: 'change'\n  },\n  data: function data() {\n    return {\n      isDrag: false,\n      isEnter: false,\n      checkArr: [],\n      views: []\n    };\n  },\n  components: {\n    item: item\n  },\n  props: {\n    values: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  watch: {\n    checkArr: function checkArr(n) {\n      this.views = this.rangeTime(n).views;\n      this.$emit('change', this.rangeTime(n).values);\n    }\n  },\n  methods: {\n    formatTime: function formatTime(val) {\n      var tail = val % 2 > 0 ? '30' : '00';\n      var value = Math.floor(val / 2);\n      return value < 10 ? \"0\".concat(value, \":\").concat(tail) : \"\".concat(value, \":\").concat(tail);\n    },\n    rangeTime: function rangeTime(checkArr) {\n      var values = [];\n      var start = -1;\n      var end = 0;\n      var rangeArr = [];\n      var views = [];\n      var ca = cloneDeep(checkArr);\n      ca[ca.length] = false;\n\n      for (var i = 0; i < ca.length; i++) {\n        if (ca[i] && start === -1) {\n          start = i - 1;\n        }\n\n        if (start !== -1 && ca[i]) {\n          end = i;\n        }\n\n        if (!ca[i] && start !== -1 && end) {\n          rangeArr.push({\n            start_time: \"\".concat(this.formatTime(start)),\n            end_time: \"\".concat(this.formatTime(end))\n          });\n          var view = \"#\".concat(start, \"#start---#\").concat(end, \"#end\");\n          views.push(view);\n          start = -1;\n        }\n      }\n\n      return {\n        values: rangeArr,\n        views: views\n      };\n    },\n    onMouseDown: function onMouseDown() {\n      this.isDrag = true;\n    },\n    onMouseOver: function onMouseOver() {\n      this.isDrag = false;\n    },\n    onDown: function onDown(isEnter) {\n      this.isEnter = isEnter;\n    },\n    onChange: function onChange(val) {\n      this.$set(this.checkArr, val.time, val.isActive);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    window.addEventListener('mouseup', function () {\n      _this.isDrag = false;\n    });\n    this.$nextTick().then(function () {\n      if (!_this.values.length) return;\n      _this.views = _this.values.map(function (item) {\n        var startTime = item.start_time.split(':');\n        var endTime = item.end_time.split(':');\n        var start = startTime[1] === '30' ? 2 * +startTime[0] + 1 : 2 * +startTime[0];\n        var end = endTime[1] === '30' ? 2 * +endTime[0] + 1 : 2 * +endTime[0];\n\n        for (var i = 0; i < 49; i++) {\n          if (i > start && i <= end) {\n            _this.$set(_this.checkArr, i, true);\n          }\n        }\n\n        return \"#\".concat(start, \"#start---#\").concat(end, \"#end\");\n      });\n    });\n  }\n};",null]}