{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/task/list.vue?vue&type=template&id=357a316c&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/task/list.vue","mtime":1596188219699},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1591062572376},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"st-panel\",\n    { attrs: { app: \"\" } },\n    [\n      _c(\"st-refresh-btn\", {\n        staticClass: \"mg-b16\",\n        attrs: {\n          date: _vm.last_updated_time,\n          action: _vm.refresh,\n          rangeTime: 120\n        }\n      }),\n      _c(\"st-table\", {\n        attrs: {\n          page: _vm.page,\n          loading: _vm.loading.getList,\n          columns: _vm.columns,\n          dataSource: _vm.list,\n          rowKey: \"id\"\n        },\n        on: { change: _vm.onTableChange },\n        scopedSlots: _vm._u([\n          {\n            key: \"task_status\",\n            fn: function(text, record) {\n              return [\n                _c(\n                  \"st-text\",\n                  {\n                    attrs: {\n                      status: {\n                        default:\n                          record.task_status.code === _vm.TASK_STATUS.PENDING,\n                        info:\n                          record.task_status.code === _vm.TASK_STATUS.IN_HAND,\n                        warning:\n                          record.task_status.code === _vm.TASK_STATUS.PAUSE,\n                        success:\n                          record.task_status.code === _vm.TASK_STATUS.SUCCESS\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n        \" +\n                        _vm._s(record.task_status.status) +\n                        \"\\n      \"\n                    )\n                  ]\n                )\n              ]\n            }\n          },\n          {\n            key: \"task_type\",\n            fn: function(text, record) {\n              return [\n                _vm._v(\"\\n      \" + _vm._s(record.task_type.name) + \"\\n    \")\n              ]\n            }\n          },\n          {\n            key: \"total_num\",\n            fn: function(text, record) {\n              return [\n                _c(\n                  \"a\",\n                  {\n                    on: {\n                      click: function($event) {\n                        return _vm.onClickModal(record.id, \"total\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n        \" + _vm._s(text) + \"\\n      \")]\n                )\n              ]\n            }\n          },\n          {\n            key: \"success_num\",\n            fn: function(text, record) {\n              return [\n                _c(\n                  \"a\",\n                  {\n                    on: {\n                      click: function($event) {\n                        return _vm.onClickModal(record.id, \"success\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n        \" + _vm._s(text) + \"\\n      \")]\n                )\n              ]\n            }\n          },\n          {\n            key: \"fail_num\",\n            fn: function(text, record) {\n              return [\n                _c(\n                  \"a\",\n                  {\n                    on: {\n                      click: function($event) {\n                        return _vm.onClickModal(record.id, \"fail\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n        \" + _vm._s(text) + \"\\n      \")]\n                )\n              ]\n            }\n          },\n          {\n            key: \"action\",\n            fn: function(text, record) {\n              return _c(\n                \"div\",\n                {},\n                [\n                  _c(\n                    \"st-table-actions\",\n                    [\n                      record.auth[\"brand:task:task_center|end\"]\n                        ? _c(\n                            \"st-popconfirm\",\n                            {\n                              attrs: { title: \"确认要终止该任务么？\" },\n                              on: {\n                                confirm: function($event) {\n                                  return _vm.stopTask(record)\n                                }\n                              }\n                            },\n                            [\n                              _c(\"a\", [\n                                _vm._v(\"\\n            终止任务\\n          \")\n                              ])\n                            ]\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}