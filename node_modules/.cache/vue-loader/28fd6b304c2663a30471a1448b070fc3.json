{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-revenue-ring.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-revenue-ring.vue","mtime":1594718339906},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport chartMixin from './mixin'\nimport Vue from 'vue'\nimport StHelpTooltip from '@/views/components/help-tooltip/help-tooltip'\nimport { decimalFilter } from './filters'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{name:'图例1',value:123}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    sum: {\n      type: [Number, String],\n      default: () => 0\n    },\n    height: {\n      type: Number,\n      default: 280\n    },\n    colors: {\n      type: Array,\n      default: () => [\n        '#5C57FE',\n        '#6332D1',\n        '#009DFF',\n        '#00D0F0',\n        '#00FF87',\n        '#24A68D',\n        '#FFE679'\n      ]\n    },\n    unit: {\n      type: String,\n      default: '元'\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: [8, 80, 8, 0],\n        height: this.height\n      })\n      this.chart.source(this.dv, {\n        value: {\n          formatter: v => v + this.unit\n        }\n      })\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      })\n      this.chart.legend({\n        position: 'right-center',\n        useHtml: true,\n        itemTpl: (name, color, checked, index) => {\n          return (\n            `<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">` +\n            `<i class=\"g2-legend-marker\" style=\"background-color:{color};\"></i>` +\n            `<span class=\"g2-legend-text\">${name}&nbsp;<span id='legend-{index}'></span></span>` +\n            `</li>`\n          )\n        },\n        onHover: ev => {\n          // 总计为 0 是执行hover\n          // if (this.total === 0) return\n          const $s = this.$el.querySelector.bind(this.$el)\n          const name = ev.item.value\n          const row = this.dv.findRow({ name })\n          const shapes = ev.shapes\n          const geom = ev.geom\n          const legend = ev.currentTarget\n          // 选中对应单元\n          this.sum !== 0 && geom.setShapesActived(shapes)\n          legend.addEventListener('mouseleave', () => {\n            $s('.guide-value').textContent = this.sum\n            $s('.guide-name').textContent = this.name\n          })\n          $s('.guide-value').textContent = row.value\n          $s('.guide-name').textContent = row.name\n        }\n      })\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: () => {\n          let sum = decimalFilter(this.sum)\n          return (\n            `<div class='guide'>` +\n            `<div class='guide-title'><span class='guide-value'>${sum}</span><span class='guide-unit'>${this.unit}</span></div>` +\n            `<div class='guide-name'>总营收</div>` +\n            `</div>`\n          )\n        }\n      })\n      this.chart.guide().arc({\n        start: ['3%', '50%'],\n        end: ['97%', '50%'],\n        style: {\n          lineWidth: 0,\n          fill: '#E9EDF2',\n          fillOpacity: 1,\n          stroke: '#ccc'\n        }\n      })\n      this.chart.guide().arc({\n        start: ['97%', '50%'],\n        end: ['3%', '50%'],\n        style: {\n          lineWidth: 0,\n          fill: '#E9EDF2',\n          fillOpacity: 1,\n          stroke: '#ccc'\n        }\n      })\n      this.chart.guide().arc({\n        start: ['19%', '50%'],\n        end: ['81%', '50%'],\n        style: {\n          lineWidth: 0,\n          fill: '#fff',\n          fillOpacity: 1,\n          stroke: '#ccc'\n        }\n      })\n      this.chart.guide().arc({\n        start: ['81%', '50%'],\n        end: ['19%', '50%'],\n        style: {\n          lineWidth: 0,\n          fill: '#fff',\n          fillOpacity: 1,\n          stroke: '#ccc'\n        }\n      })\n\n      this.chart.tooltip({\n        showTitle: false\n      })\n\n      this.chart\n        .intervalStack()\n        .style({\n          fillOpacity: 1,\n          cursor: 'pointer'\n        })\n        .position('value')\n        .color('name', this.colors)\n        .select(false)\n        .active({\n          style: {\n            fillOpacity: 1,\n            lineWidth: 8\n          }\n        })\n\n      this.chart.render()\n\n      this.changeData()\n\n      const $s = this.$el.querySelector.bind(this.$el)\n\n      this.chart.on('interval:mouseenter', e => {\n        const origin = e.data._origin\n        $s('.guide-value').textContent = origin.value\n        $s('.guide-name').textContent = origin.name\n      })\n\n      const legendListItems = [\n        ...this.$el.querySelectorAll('.g2-legend-list-item')\n      ]\n\n      const vm = this\n      vm.offMouseHandlers = []\n      const mouseHandler = function() {\n        const name = this.dataset.value\n        const row = vm.dv.findRow({ name })\n        $s('.guide-value').textContent = row.value\n        $s('.guide-name').textContent = row.name\n      }\n\n      legendListItems.forEach(el => {\n        el.addEventListener('mouseenter', mouseHandler, false)\n        this.offMouseHandlers.push(() => {\n          el.addEventListener('mouseenter', mouseHandler, false)\n        })\n      })\n    },\n    changeData() {\n      new Vue({\n        components: {\n          StHelpTooltip\n        },\n        render: h => <st-help-tooltip id=\"TBDAR002\" />\n      }).$mount('#legend-1')\n      new Vue({\n        components: {\n          StHelpTooltip\n        },\n        render: h => <st-help-tooltip id=\"TBDAR001\" />\n      }).$mount('#legend-5')\n    }\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.offMouseHandlers.forEach(fn => fn())\n    }\n  }\n}\n",{"version":3,"sources":["shop-revenue-ring.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shop-revenue-ring.vue","sourceRoot":"src/views/biz-components/stat","sourcesContent":["<template>\n  <div class=\"stat-shop-revenue-ring\"></div>\n</template>\n\n<script>\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport chartMixin from './mixin'\nimport Vue from 'vue'\nimport StHelpTooltip from '@/views/components/help-tooltip/help-tooltip'\nimport { decimalFilter } from './filters'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{name:'图例1',value:123}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    sum: {\n      type: [Number, String],\n      default: () => 0\n    },\n    height: {\n      type: Number,\n      default: 280\n    },\n    colors: {\n      type: Array,\n      default: () => [\n        '#5C57FE',\n        '#6332D1',\n        '#009DFF',\n        '#00D0F0',\n        '#00FF87',\n        '#24A68D',\n        '#FFE679'\n      ]\n    },\n    unit: {\n      type: String,\n      default: '元'\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: [8, 80, 8, 0],\n        height: this.height\n      })\n      this.chart.source(this.dv, {\n        value: {\n          formatter: v => v + this.unit\n        }\n      })\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      })\n      this.chart.legend({\n        position: 'right-center',\n        useHtml: true,\n        itemTpl: (name, color, checked, index) => {\n          return (\n            `<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">` +\n            `<i class=\"g2-legend-marker\" style=\"background-color:{color};\"></i>` +\n            `<span class=\"g2-legend-text\">${name}&nbsp;<span id='legend-{index}'></span></span>` +\n            `</li>`\n          )\n        },\n        onHover: ev => {\n          // 总计为 0 是执行hover\n          // if (this.total === 0) return\n          const $s = this.$el.querySelector.bind(this.$el)\n          const name = ev.item.value\n          const row = this.dv.findRow({ name })\n          const shapes = ev.shapes\n          const geom = ev.geom\n          const legend = ev.currentTarget\n          // 选中对应单元\n          this.sum !== 0 && geom.setShapesActived(shapes)\n          legend.addEventListener('mouseleave', () => {\n            $s('.guide-value').textContent = this.sum\n            $s('.guide-name').textContent = this.name\n          })\n          $s('.guide-value').textContent = row.value\n          $s('.guide-name').textContent = row.name\n        }\n      })\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: () => {\n          let sum = decimalFilter(this.sum)\n          return (\n            `<div class='guide'>` +\n            `<div class='guide-title'><span class='guide-value'>${sum}</span><span class='guide-unit'>${this.unit}</span></div>` +\n            `<div class='guide-name'>总营收</div>` +\n            `</div>`\n          )\n        }\n      })\n      this.chart.guide().arc({\n        start: ['3%', '50%'],\n        end: ['97%', '50%'],\n        style: {\n          lineWidth: 0,\n          fill: '#E9EDF2',\n          fillOpacity: 1,\n          stroke: '#ccc'\n        }\n      })\n      this.chart.guide().arc({\n        start: ['97%', '50%'],\n        end: ['3%', '50%'],\n        style: {\n          lineWidth: 0,\n          fill: '#E9EDF2',\n          fillOpacity: 1,\n          stroke: '#ccc'\n        }\n      })\n      this.chart.guide().arc({\n        start: ['19%', '50%'],\n        end: ['81%', '50%'],\n        style: {\n          lineWidth: 0,\n          fill: '#fff',\n          fillOpacity: 1,\n          stroke: '#ccc'\n        }\n      })\n      this.chart.guide().arc({\n        start: ['81%', '50%'],\n        end: ['19%', '50%'],\n        style: {\n          lineWidth: 0,\n          fill: '#fff',\n          fillOpacity: 1,\n          stroke: '#ccc'\n        }\n      })\n\n      this.chart.tooltip({\n        showTitle: false\n      })\n\n      this.chart\n        .intervalStack()\n        .style({\n          fillOpacity: 1,\n          cursor: 'pointer'\n        })\n        .position('value')\n        .color('name', this.colors)\n        .select(false)\n        .active({\n          style: {\n            fillOpacity: 1,\n            lineWidth: 8\n          }\n        })\n\n      this.chart.render()\n\n      this.changeData()\n\n      const $s = this.$el.querySelector.bind(this.$el)\n\n      this.chart.on('interval:mouseenter', e => {\n        const origin = e.data._origin\n        $s('.guide-value').textContent = origin.value\n        $s('.guide-name').textContent = origin.name\n      })\n\n      const legendListItems = [\n        ...this.$el.querySelectorAll('.g2-legend-list-item')\n      ]\n\n      const vm = this\n      vm.offMouseHandlers = []\n      const mouseHandler = function() {\n        const name = this.dataset.value\n        const row = vm.dv.findRow({ name })\n        $s('.guide-value').textContent = row.value\n        $s('.guide-name').textContent = row.name\n      }\n\n      legendListItems.forEach(el => {\n        el.addEventListener('mouseenter', mouseHandler, false)\n        this.offMouseHandlers.push(() => {\n          el.addEventListener('mouseenter', mouseHandler, false)\n        })\n      })\n    },\n    changeData() {\n      new Vue({\n        components: {\n          StHelpTooltip\n        },\n        render: h => <st-help-tooltip id=\"TBDAR002\" />\n      }).$mount('#legend-1')\n      new Vue({\n        components: {\n          StHelpTooltip\n        },\n        render: h => <st-help-tooltip id=\"TBDAR001\" />\n      }).$mount('#legend-5')\n    }\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.offMouseHandlers.forEach(fn => fn())\n    }\n  }\n}\n</script>\n"]}]}