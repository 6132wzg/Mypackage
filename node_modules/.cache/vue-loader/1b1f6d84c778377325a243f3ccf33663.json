{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/input-number/input-number.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/input-number/input-number.vue","mtime":1598250255773},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { isNumber } from 'lodash-es'\nexport default {\n  name: 'StInputNumber',\n  bem: {\n    input: 'st-input-number'\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default() {\n        return ''\n      }\n    },\n    min: {\n      type: Number,\n      default() {\n        return 0\n      }\n    },\n    max: {\n      type: [String, Number],\n      default() {\n        return 999999999999\n      }\n    },\n    value: {\n      type: [String, Number]\n    },\n    disabled: {\n      type: Boolean,\n      default() {\n        return false\n      }\n    },\n    /**\n     * input-number是否允许有小数。允许一位小数\n     */\n    float: {\n      type: Boolean,\n      default() {\n        return false\n      }\n    }\n  },\n  watch: {\n    value: {\n      deep: true,\n      handler(newVal, oldVal) {\n        this.init(newVal)\n      }\n    }\n  },\n  created() {\n    this.init(this.value)\n  },\n  data() {\n    return {\n      number: ''\n    }\n  },\n  methods: {\n    init(data) {\n      this.number = data\n    },\n    numberBlur(e) {\n      switch (e.target.value) {\n        case null:\n        case undefined:\n        case '':\n        case '.':\n          this.number = ''\n          this.triggerChange()\n          this.$emit('blur', `${this.number}`)\n          break\n        default:\n          if (!this.float) {\n            this.number = parseInt(+e.target.value, 10)\n            this.number = this.min > this.number ? this.min : this.number\n            this.number = this.max < this.number ? this.max : this.number\n          } else {\n            this.number = parseInt(+e.target.value * 10, 10) / 10\n            this.number = this.min > this.number ? this.min : this.number\n            this.number = this.max < this.number ? this.max : this.number\n          }\n          this.number += ''\n          this.triggerChange()\n          this.$emit('blur', `${this.number}`)\n      }\n    },\n    numberFocus(e) {\n      this.$emit('focus')\n    },\n    numberChange(e) {\n      console.log('e', e)\n      // 控制不能输入非数字\n      const PATTERN_NUMBER = /^(\\d+(\\.\\d?)?|\\.\\d?)$/ // 包含小数的数字  匹配 1.1 / 1. / .1 三种形式\n      if (\n        !PATTERN_NUMBER.test(e.target.value) &&\n        e.target.value !== '' &&\n        e.target.value !== '.'\n      ) {\n        return\n      }\n      this.number = `${e.target.value}`\n      this.triggerChange()\n    },\n    triggerChange() {\n      this.$emit('change', `${this.number}`)\n      this.$emit('input', `${this.number}`)\n    }\n  }\n}\n",null]}