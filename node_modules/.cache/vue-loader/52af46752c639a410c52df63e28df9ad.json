{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/app/venue/record.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/app/venue/record.vue","mtime":1591147717379},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { RecordService } from './record.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, subColumns } from './record.config'\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport { RESERVE_STATUS } from '@/constants/venue'\nexport default {\n  name: 'PageShopAppVenueData',\n  bem: {\n    data: 'shop-app-venue-data'\n  },\n  mixins: [tableMixin],\n  modals: {\n    SoldDealGathering\n  },\n  serviceInject() {\n    return {\n      recordService: RecordService\n    }\n  },\n  rxState() {\n    return {\n      list: this.recordService.list$,\n      page: this.recordService.page$,\n      loading: this.recordService.loading$\n    }\n  },\n  data() {\n    return {\n      columns,\n      subColumns,\n      RESERVE_STATUS\n    }\n  },\n  methods: {\n    receipt(id) {\n      this.$modalRouter.push({\n        name: 'sold-deal-gathering',\n        props: {\n          order_id: id,\n          type: 'venues'\n        },\n        on: {\n          success: res => {\n            this.getList()\n          }\n        }\n      })\n    },\n    cancelBooking(id, isSub) {\n      let params = {}\n      if (isSub) {\n        params.sub_order_id = id\n      } else {\n        params.order_id = id\n      }\n      this.recordService.cancelReserve(params).subscribe(() => {\n        this.getList()\n      })\n    },\n    getList() {\n      this.recordService.getList(this.$searchQuery).subscribe()\n    }\n  }\n}\n",null]}