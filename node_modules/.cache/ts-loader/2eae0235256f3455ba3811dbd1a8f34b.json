{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/card/list/deposit.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/card/list/deposit.service.ts","mtime":1600926556472},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { CardApi, GetMemberListInput } from '@/api/v1/sold/cards';\nimport { AuthService } from '@/services/auth.service';\nimport { UserService } from '@/services/user.service';\n\nvar DepositService = /*#__PURE__*/function () {\n  function DepositService(cardApi, authService, userService) {\n    _classCallCheck(this, DepositService);\n\n    this.cardApi = cardApi;\n    this.authService = authService;\n    this.userService = userService;\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.loading$ = new State({});\n    this.total$ = new State({});\n    this.auth$ = this.authService.authMap$({\n      export: 'shop:sold:sold_deposit_card|export'\n    });\n    this.isValids$ = this.userService.getOptions$('sold_common.new_is_valid', {\n      addAll: true\n    });\n  }\n\n  _createClass(DepositService, [{\n    key: \"getList\",\n    value: function getList(params) {\n      var _this = this;\n\n      return this.cardApi.getMemberList(params, 'deposit').pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n\n        _this.total$.commit(function () {\n          return res.total;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return this.getList(to.meta.query);\n    }\n  }]);\n\n  return DepositService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof GetMemberListInput !== \"undefined\" && GetMemberListInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], DepositService.prototype, \"getList\", null);\n\nDepositService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof CardApi !== \"undefined\" && CardApi) === \"function\" ? _b : Object, typeof (_c = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _c : Object, typeof (_d = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _d : Object])], DepositService);\nexport { DepositService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/card/list/deposit.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,OAAT,EAAkB,kBAAlB,QAA4C,qBAA5C;AACA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAS,WAAT,QAA4B,yBAA5B;;AAGA,IAAa,cAAb;AAWE,0BACU,OADV,EAEU,WAFV,EAGU,WAHV,EAGkC;AAAA;;AAFxB,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAA,WAAA;AAbV,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,MAAA,GAAS,IAAI,KAAJ,CAAU,EAAV,CAAT;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,QAAjB,CAA0B;AAChC,MAAA,MAAM,EAAE;AADwB,KAA1B,CAAR;AAGA,SAAA,SAAA,GAAY,KAAK,WAAL,CAAiB,WAAjB,CAA6B,0BAA7B,EAAyD;AACnE,MAAA,MAAM,EAAE;AAD2D,KAAzD,CAAZ;AAOI;;AAfN;AAAA;AAAA,4BAiBU,MAjBV,EAiBoC;AAAA;;AAChC,aAAO,KAAK,OAAL,CAAa,aAAb,CAA2B,MAA3B,EAAmC,SAAnC,EAA8C,IAA9C,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB;AAAA,iBAAM,GAAG,CAAC,KAAV;AAAA,SAAnB;AACD,OAJE,CADE,CAAP;AAOD;AAzBH;AAAA;AAAA,+BA0Ba,EA1Bb,EA0B+B,IA1B/B,EA0BiD;AAC7C,aAAO,KAAK,OAAL,CAAa,EAAE,CAAC,IAAH,CAAQ,KAArB,CAAP;AACD;AA5BH;;AAAA;AAAA,GAAA;;AAiBE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAgB,kB,KAAkB,W,IAAlB,kB,MAAkB,U,GAAA,E,GAAA,M,EAAlC,E,uCAAA,CAAA,E,wBAAA,E,SAAA,EAQC,IARD,CAAA;;AAjBW,cAAc,GAAA,UAAA,CAAA,CAD1B,UAAU,EACgB,E,qDAYN,O,KAAO,W,IAAP,O,MAAO,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACH,WADG,KACQ,WADR,IACH,WADG,MACQ,UADR,GACQ,EADR,GACQ,M,EAAA,QAAA,EAAA,GAAA,OACX,WADW,KACA,WADA,IACX,WADW,MACA,UADA,GACA,EADA,GACA,M,EAdT,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { CardApi, GetMemberListInput } from '@/api/v1/sold/cards'\nimport { AuthService } from '@/services/auth.service'\nimport { UserService } from '@/services/user.service'\n\n@Injectable()\nexport class DepositService implements Controller {\n  list$ = new State([])\n  page$ = new State({})\n  loading$ = new State({})\n  total$ = new State({})\n  auth$ = this.authService.authMap$({\n    export: 'shop:sold:sold_deposit_card|export'\n  })\n  isValids$ = this.userService.getOptions$('sold_common.new_is_valid', {\n    addAll: true\n  })\n  constructor(\n    private cardApi: CardApi,\n    private authService: AuthService,\n    private userService: UserService\n  ) {}\n  @Effect()\n  getList(params: GetMemberListInput) {\n    return this.cardApi.getMemberList(params, 'deposit').pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n        this.total$.commit(() => res.total)\n      })\n    )\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return this.getList(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}