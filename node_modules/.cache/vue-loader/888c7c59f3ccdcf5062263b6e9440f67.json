{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/transfer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/transfer.vue","mtime":1594718340027},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { TransferService } from './transfer.service'\nimport { UserService } from '@/services/user.service'\nimport { cloneDeep } from 'lodash-es'\nimport { PatternService } from '@/services/pattern.service'\nimport { ruleOptions } from './transfer.config'\nimport EditableContractNumber from '@/views/biz-components/contract/editable-contract-number.vue'\nimport MemberSearch from '@/views/biz-components/member-search/member-search'\nimport { PERSON_TYPE } from '@/constants/course/small-course'\nimport moment from 'moment'\nexport default {\n  name: 'ModalSoldCardTransfer',\n  components: {\n    EditableContractNumber,\n    MemberSearch\n  },\n  bem: {\n    transfer: 'modal-sold-card-transfer'\n  },\n  serviceProviders() {\n    return [TransferService]\n  },\n  serviceInject() {\n    return {\n      transferService: TransferService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.transferService.loading$,\n      depositTransferInfo: this.transferService.depositTransferInfo$,\n      memberTransferInfo: this.transferService.memberTransferInfo$,\n      timeScope: this.transferService.timeScope$,\n      payList: this.transferService.payList$,\n      rangeType: this.transferService.rangeType$\n    }\n  },\n  computed: {\n    moment,\n    member_id() {\n      return this.memberTransferInfo.member_id\n    },\n    isDeposit() {\n      return this.type === 'deposit'\n    },\n    isMember() {\n      return this.type === 'member'\n    },\n    saleRange() {\n      return (\n        this.depositTransferInfo.sale_range ||\n        this.memberTransferInfo.sale_range ||\n        {}\n      )\n    },\n    isFamilyCard() {\n      return this.memberTransferInfo.card_number_type === 2\n    },\n    reduceMax() {\n      return this.isMember\n        ? this.memberTransferInfo.poundage\n        : this.depositTransferInfo.poundage\n    }\n  },\n  props: ['id', 'type'],\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      PERSON_TYPE,\n      form,\n      decorators,\n      show: false,\n      // 转让信息\n      transferData: {\n        member_id: null,\n        member_name: '',\n        mobile: '',\n        remain_price: null,\n        contract_number: '',\n        handling_fee: null,\n        frozen_pay_type: null\n      },\n      endTime: moment()\n    }\n  },\n  created() {\n    this.transferService.getTransferInfo(this.id, this.type).subscribe(res => {\n      if (this.isMember) {\n        this.endTime = moment(this.memberTransferInfo.end_time)\n      }\n    })\n  },\n  methods: {\n    onSubmit() {\n      this.form.validate().then(values => {\n        let sold_type = this.isDeposit\n          ? this.depositTransferInfo.contract_type\n          : this.isMember\n          ? this.memberTransferInfo.contract_type\n          : '1'\n\n        let start_time = this.isMember\n          ? values.startTime.format('YYYY-MM-DD HH:mm')\n          : null\n        /**\n         * info混乱，需要重构，暂时不处理\n         */\n        const info = this.isMember\n          ? this.memberTransferInfo\n          : this.depositTransferInfo\n        this.transferService\n          .editCardTransfer(\n            {\n              start_time,\n              transferee_member_id: +values.member_id,\n              member_name: values.member_name,\n              mobile: values.mobile ? values.mobile.phone : undefined,\n              country_prefix: values.mobile ? values.mobile.code_id : undefined,\n              remain_price: +values.remainPrice,\n              contract_number: info.contract_number,\n              pay_channel: +values.payType,\n              contract_type: +sold_type,\n              handling_fee_reduce: values.handling_fee_reduce,\n              is_minors: values.is_minors,\n              parent_name: values.parent_name,\n              parent_mobile: values.parent_mobile\n                ? values.parent_mobile.phone\n                : undefined,\n              parent_country_prefix: values.parent_mobile\n                ? values.parent_mobile.code_id\n                : undefined,\n              parent_user_role: values.parent_user_role\n            },\n            this.id,\n            this.type\n          )\n          .subscribe(res => {\n            this.$emit('success')\n            this.show = false\n          })\n      })\n    },\n    // time\n    disabledStartDate(startValue) {\n      return (\n        startValue.valueOf() <\n          moment()\n            .subtract(1, 'd')\n            .valueOf() ||\n        startValue.valueOf() >\n          moment()\n            .add(31, 'd')\n            .valueOf()\n      )\n    },\n    onStartTimeChange(data) {\n      if (this.timeScope) {\n        this.endTime = cloneDeep(moment(data.valueOf() + this.timeScope))\n      } else {\n        this.endTime = cloneDeep(moment(data.valueOf()))\n      }\n    }\n  }\n}\n",null]}