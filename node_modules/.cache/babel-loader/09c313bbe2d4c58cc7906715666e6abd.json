{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/vue-plugin.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/vue-service-app/src/vue-plugin.js","mtime":1591147717499},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _typeof from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport ServiceRouter from \"./router\";\nimport { isFn, isObject } from \"./utils\";\nexport default {\n  install: function install(Vue, rootContainer) {\n    Vue.use(ServiceRouter);\n    Vue.mixin({\n      computed: {\n        $skeletonLoading: function $skeletonLoading() {\n          return this.$root._skeletonLoading;\n        }\n      },\n      beforeCreate: function beforeCreate() {\n        if (this.$root === this) {\n          Vue.util.defineReactive(this, '_skeletonLoading', false);\n        }\n\n        var _this$$options = this.$options,\n            serviceInject = _this$$options.serviceInject,\n            serviceProviders = _this$$options.serviceProviders;\n\n        if (serviceProviders) {\n          if (!isFn(serviceProviders)) {\n            throw new Error(\"[vue-service-app] serviceProviders should be function but got \".concat(_typeof(serviceProviders)));\n          }\n\n          var providers = serviceProviders.call(this);\n\n          if (!Array.isArray(providers)) {\n            throw new Error(\"[vue-service-app] serviceProviders should be function return an array but got \".concat(_typeof(providers)));\n          }\n\n          providers.forEach(function (p) {\n            if (p === undefined) {\n              throw new Error(\"[vue-service-app] serviceProviders you just provide undefined\");\n            }\n          });\n          this._componentSerivceProviders = providers;\n        }\n\n        if (serviceInject) {\n          if (!isFn(serviceInject)) {\n            throw new Error(\"[vue-service-app] serviceInject should be function but got \".concat(_typeof(serviceInject)));\n          }\n\n          var injects = serviceInject.call(this);\n\n          if (!isObject(injects)) {\n            throw new Error(\"[vue-service-app] serviceInject should be function return an object but got \".concat(_typeof(injects)));\n          }\n\n          this._serviceInjectNames = [];\n\n          for (var name in injects) {\n            if (injects[name] === undefined) {\n              throw new Error(\"[vue-service-app] serviceInject you just inject undefined in [\".concat(name, \"]\"));\n            }\n\n            this._serviceInjectNames.push(name);\n\n            this[name] = rootContainer.get(injects[name]);\n          }\n        }\n      },\n      // 组件销毁时 销毁根容器的provider实例\n      beforeDestroy: function beforeDestroy() {\n        var _this = this;\n\n        var serviceProviders = this.$options.serviceProviders;\n\n        if (serviceProviders) {\n          // todo 销毁 services\n          this._componentSerivceProviders.forEach(function (p) {\n            rootContainer.destroy(p);\n          });\n        }\n\n        if (this._serviceInjectNames) {\n          this._serviceInjectNames.forEach(function (name) {\n            _this[name] = null;\n          });\n        }\n      }\n    });\n  }\n};",null]}