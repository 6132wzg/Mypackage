{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/edit-personal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/edit-personal.vue","mtime":1591147717317},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport GroupForm from './components#/group-form'\nimport { ruleOptions, cardColumns } from './add-personal.config'\nimport { EditPersonalService } from './edit-personal.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { ACTIVITY_STATUS } from '@/constants/marketing/group-buy'\nexport default {\n  serviceInject() {\n    return {\n      editPersonalService: EditPersonalService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.editPersonalService.loading$,\n      coach: this.editPersonalService.coach$,\n      info: this.editPersonalService.info$,\n      personalList: this.editPersonalService.personalList$\n    }\n  },\n  bem: {\n    basic: 'brand-marketing-group-personal'\n  },\n  computed: {\n    cardColumns\n  },\n  mounted() {\n    this.editPersonalService.getPersonalList().subscribe(() => {\n      // this.courseId = this.info.product.id\n      // this.groupHour = this.info.init_course_num\n      this.selectCourseChange(this.info.product.id)\n    })\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      courseId: '', // 活动商品\n      ACTIVITY_STATUS,\n      selectedRowKeys: [], // 优惠设置选中项\n      tableText: '', // 优惠设置错误提示\n      tableErr: false,\n      shopIds: [],\n      newCoach: [],\n      // 禁用优惠设置的选择\n      getCheckboxProps: () => ({\n        props: {\n          disabled: true\n        }\n      }),\n      disabledEdit: false,\n      groupParams: {\n        type: 3,\n        id: null\n      }\n    }\n  },\n  methods: {\n    // 输入拼团课时\n    changeHour(e) {\n      console.log(e)\n      this.groupHour = e.target.value\n      this.newCoach.forEach((item, index) => {\n        item.hour = e.target.value\n      })\n      // this.setFieldsValue()\n    },\n    // 设置选择私教课并返回教练\n    selectCourseChange(id) {\n      this.form.setFieldsValue({\n        course_id: id,\n        group_hour: this.info.init_course_num\n      })\n      this.groupParams.id = id\n      this.editPersonalService.getCoachList(id).subscribe(res => {\n        this.newCoach = this.coach.map(item => {\n          return {\n            is_select: false,\n            level: item.spec,\n            id: item.id,\n            hour: this.info.init_course_num,\n            group_price: ''\n          }\n        })\n        if (this.newCoach.length === 1) {\n          this.selectedRowKeys = this.newCoach\n          this.newCoach[0].is_select = true\n        }\n        this.setFieldsValue()\n        this.setCoachPrice()\n      })\n    },\n    setCoachPrice() {\n      this.newCoach.forEach(item => {\n        let selectCoach = this.info.sku.filter(sku => sku.sku_id === item.id)\n        console.log(selectCoach)\n        item.is_select = selectCoach.length > 0\n        item.group_price =\n          selectCoach.length > 0 ? selectCoach[0].group_price : ''\n      })\n      this.selectedRowKeys = this.info.sku.map(sku => sku.sku_id)\n      console.log(this.newCoach)\n    },\n    // 优惠设置选择变化\n    onChange(value) {\n      this.selectedRowKeys = value\n      this.newCoach.forEach(coach => {\n        coach.is_select = this.selectedRowKeys.indexOf(coach.id) !== -1\n      })\n      // this.setPriceChange()\n    },\n    // 处理输入拼团价格的逻辑\n    setPriceChange() {\n      let selectedCoach = this.newCoach.filter(item => item.is_select)\n      let hasEmpty = selectedCoach.filter(item => !item.group_price)\n      if (hasEmpty.length > 0) {\n        this.tableText = '请输入拼团价格'\n        this.tableErr = true\n      } else {\n        this.tableText = ''\n        this.tableErr = false\n      }\n    },\n    // 新建拼团活动\n    onSubmit(data) {\n      console.log(data)\n      if (this.tableErr) return\n      const selectedCoach = this.newCoach.filter(item => item.is_select)\n      if (selectedCoach.length === 0) {\n        this.tableText = `请选择至少一个${this.$c('coach')}`\n        this.tableErr = true\n        return\n      }\n      data.sku = selectedCoach.map(item => {\n        return {\n          sku_id: item.id,\n          group_price: item.group_price\n        }\n      })\n      data.init_course_num = +this.form.getFieldValue('group_hour')\n      data.product_type = 3\n      data.product_id = +this.form.getFieldValue('course_id')\n      data.id = +this.$route.query.id\n      this.editPersonalService.editGroupbuy(data).subscribe(res => {\n        this.$router.push({\n          path: `/brand/marketing/plugin/group/list`\n        })\n      })\n    },\n    // 详情回显\n    setFieldsValue() {\n      this.newCoach.forEach(item => {\n        item.is_select =\n          this.info.sku.filter(skuItem => skuItem.sku_id === item.id).length > 0\n      })\n      // 是否能够编辑, 当活动未开始时可以编辑\n      this.disabledEdit =\n        this.info.activity_state.id >= ACTIVITY_STATUS.NO_START\n      this.getCheckboxProps = () => ({\n        props: {\n          disabled: this.disabledEdit\n        }\n      })\n      console.log(this.disabledEdit)\n      this.selectedRowKeys = this.newCoach.map(item => {\n        if (item.is_select) {\n          return item.id\n        }\n      })\n      this.form.setFieldsValue({\n        group_hour: this.info.init_course_num\n      })\n    }\n  },\n  components: {\n    GroupForm\n  }\n}\n",null]}