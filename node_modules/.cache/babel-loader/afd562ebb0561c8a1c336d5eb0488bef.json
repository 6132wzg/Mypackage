{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-stat-ring.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-stat-ring.vue","mtime":1598321087621},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\nimport { Chart } from '@antv/g2';\nimport { View } from 'st-data-set';\nimport chartMixin from \"./mixin\";\nimport { decimalFilter, setColorMap } from \"./filters\";\nimport StHelpTooltip from '@/views/components/help-tooltip/help-tooltip';\nexport default {\n  name: 'BrandStatRing',\n  mixins: [chartMixin],\n  data: function data() {\n    return {\n      intervalStack: {},\n      resize: -99\n    };\n  },\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    unitBack: {\n      type: Boolean,\n      default: false\n    },\n    unit: {\n      type: String,\n      default: '¥'\n    },\n    totalName: {\n      type: String,\n      default: ''\n    },\n    tooltipId: {\n      type: String,\n      default: ''\n    },\n    tooltipMap: {\n      type: Object,\n      default: function _default() {}\n    },\n    legend: {\n      type: Object,\n      default: function _default() {}\n    },\n    guide: {\n      type: Object,\n      default: function _default() {}\n    },\n    fields: {\n      type: [Array, Boolean],\n      default: function _default() {\n        return ['会员卡', '私教课', '团体课', '储值卡', '课程包', '定金', '押金', '储物柜', '云店', '小班课', '其他', '全部'];\n      }\n    },\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#3F66F6', '#798AFF', '#06DB8C', '#77FF74', '#B8F10F', '#FFE679', '#FFB946', '#5E83AC', '#FF6466', '#04A0AF', '#C87FFF', '#484F83'];\n      }\n    },\n    colorKey: {\n      type: String,\n      default: 'name'\n    },\n    colorMap: {\n      type: [Object, Boolean],\n      default: false\n    },\n    height: {\n      type: Number,\n      default: 210\n    },\n    padding: {\n      type: [Array, Number],\n      default: function _default() {\n        return ['auto', 185, 'auto', 'auto'];\n      }\n    }\n  },\n  watch: {\n    // 当浏览器窗口变小时，tooltip会消失问题\n    resize: function resize() {\n      var _this = this;\n\n      var h = this.$createElement;\n      this.$nextTick(function () {\n        var tooltipMap = _this.tooltipMap;\n\n        var _loop = function _loop(key) {\n          tooltipMap[key] && new Vue({\n            components: {\n              StHelpTooltip: StHelpTooltip\n            },\n            render: function render(h) {\n              return h(\"st-help-tooltip\", {\n                \"attrs\": {\n                  \"id\": tooltipMap[key]\n                }\n              });\n            }\n          }).$mount(\"#legend-\".concat(key));\n        };\n\n        for (var key in tooltipMap) {\n          _loop(key);\n        }\n\n        if (_this.tooltipId) {\n          var $s = _this.$el.querySelector.bind(_this.$el);\n\n          var component = new Vue({\n            components: {\n              StHelpTooltip: StHelpTooltip\n            },\n            render: function render(h) {\n              return h(\"st-help-tooltip\", {\n                \"attrs\": {\n                  \"id\": _this.tooltipId\n                }\n              });\n            }\n          }).$mount();\n          $s(\"#guide-name-tooltip\".concat(_this.tooltipId)).appendChild(component.$el);\n        }\n      });\n    }\n  },\n  computed: {\n    dataSource: function dataSource() {\n      //传入的总计为0时，多一个环形图为0的灰色环形图\n      if (this.total === 0 || !this.total) {\n        return [{\n          name: 'empty',\n          value: 1\n        }].concat(_toConsumableArray(this.data));\n      }\n\n      return [{\n        name: 'empty',\n        value: 0\n      }].concat(_toConsumableArray(this.data));\n    },\n    $fields: function $fields() {\n      var fields = [];\n      if (!this.fields) return _toConsumableArray(new Set(this.data.map(function (item) {\n        return item.name;\n      })));\n\n      if (this.fields.length) {\n        fields = [].concat(_toConsumableArray(this.fields), _toConsumableArray(new Set(this.data.map(function (item) {\n          return item.name;\n        }))));\n      }\n\n      return fields;\n    },\n    $colorMap: function $colorMap() {\n      if (this.colorMap) return this.colorMap; // const colorMap = {}\n      // this.$fields.map((key, idx) => {\n      //   colorMap[key] = this.colors[idx % this.colors.length]\n      // })\n\n      return setColorMap(this.$fields || [], this.colors);\n    },\n    $option: function $option() {\n      return {\n        legend: _objectSpread({\n          position: 'right-center',\n          layout: 'line'\n        }, this.legend),\n        guide: _objectSpread({\n          layout: ''\n        }, this.guide)\n      };\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.dataSource);\n      this.dv.transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +(row.value || 0);\n          return row;\n        }\n      }).transform({\n        type: 'percent',\n        field: 'value',\n        // 统计销量\n        dimension: 'name',\n        // 每年的占比\n        as: 'percent' // 结果存储在 percent 字段\n\n      });\n    },\n    initChart: function initChart() {\n      var _this2 = this;\n\n      // chart初始化实例\n      this.getChartInstance(); // 加载数据\n\n      this.chart.source(this.dv, {\n        value: {\n          formatter: function formatter(v) {\n            return _this2.unitBack ? v + _this2.unit : _this2.unit + v;\n          }\n        }\n      }); // 设置坐标系\n\n      this.setCoord(); // 设置提示信息\n\n      this.setTooltip(); // 设置图例\n\n      this.setLegend(); // 设置复制元素\n\n      this.setGuideHtml(); // 设置渲染环形图\n\n      this.getintervalStack();\n    },\n    getintervalStack: function getintervalStack() {\n      var _this3 = this;\n\n      // 环形图初始化\n      this.intervalStack = this.chart.intervalStack().style({\n        fillOpacity: 1,\n        cursor: 'pointer'\n      }).tooltip('name*percent', function (name, percent) {\n        return {\n          name: name,\n          percent: function (p) {\n            // 百分比处理，精确至 0.001%（最小值）\n            var r = 10;\n            var u = 1,\n                i = 0;\n            p = p * 100;\n\n            while (p < u && i < 3) {\n              u = u / 10;\n              i++;\n            }\n\n            if (p < u) p = u;\n            return (i <= 0 ? Math.floor(p) : p.toFixed(i)) + '%';\n          }(percent)\n        };\n      }).position('value') // .color(`name*${this.colorKey}`, ['#E9EDF2', ...this.colors])\n      .color(\"name*\".concat(this.colorKey), !this.fields ? ['#E9EDF2'].concat(_toConsumableArray(this.colors)) : function (name, key) {\n        if (_this3.total === 0 || !_this3.total) return '#E9EDF2';\n        console.log('color', name, key, _this3.$colorMap[name]);\n        return _this3.$colorMap[name];\n      }).select(false).active({\n        style: {\n          fillOpacity: 1,\n          lineWidth: 8\n        }\n      });\n      this.chart.render(); // 自定义监听环形图事件\n\n      this.chartEvent();\n    },\n    getChartInstance: function getChartInstance() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: this.padding,\n        height: this.height\n      });\n    },\n    setTooltip: function setTooltip() {\n      this.chart.tooltip({\n        showTitle: false,\n        itemTpl: \"<li class=\\\"tooltip-item-{name}\\\">\\n                    <span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>\\n                    {name}\\n                    <span class=\\\"st-g2-tooltip-value\\\">| {percent}</span>\\n                  </li>\"\n      });\n    },\n    setCoord: function setCoord() {\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      });\n    },\n    valFormat: function valFormat(val) {\n      return Number((+val).toFixed(1)).toLocaleString();\n    },\n    setLegend: function setLegend() {\n      var _this4 = this;\n\n      this.chart.legend({\n        position: this.$option.legend.position,\n        useHtml: true,\n        itemTpl: function itemTpl(name, color, checked, index) {\n          var row = _this4.dv.findRow({\n            name: name\n          });\n\n          var value = _this4.valFormat(row.value);\n\n          var tooltipId = _this4.tooltipMap && _this4.tooltipMap[row.key];\n          return \"<li class=\\\"g2-legend-list-item item-{originValue} item-{index} {checked} \".concat(_this4.$option.legend.layout, \"\\\" data-color=\\\"{originColor}\\\" data-value=\\\"{originValue}\\\">\\n                    <div>\\n                      <i class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></i>\\n                      <span class=\\\"g2-legend-text\\\">\").concat(name, \"</span>\\n                      <span id='legend-{index}'></span>\\n                    </div>\\n                    <div class='legend-right'>\\n                      <span class='legend-percent'>\").concat(_this4.unitBack ? value + _this4.unit : _this4.unit + value, \"</span>\\n                    </div>\\n                  </li>\");\n        },\n        onHover: function onHover(ev) {\n          // 总计为 0 是阻止事件继续执行hover\n          if (!_this4.total) return;\n\n          var $s = _this4.$el.querySelector.bind(_this4.$el);\n\n          var name = ev.item.value;\n\n          var row = _this4.dv.findRow({\n            name: name\n          });\n\n          var shapes = ev.shapes;\n          var geom = ev.geom;\n          var legend = ev.currentTarget; // 选中对应单元\n\n          _this4.total && geom.setShapesActived(shapes);\n          legend.addEventListener('mouseleave', function () {\n            _this4.resetTotal();\n          });\n          $s('.guide-value').textContent = _this4.valFormat(row.value);\n          $s('.guide-name-text').textContent = row.name;\n          $s('.guide-name-tooltip').setAttribute('style', 'display: none');\n        }\n      });\n    },\n    setGuideHtml: function setGuideHtml() {\n      var _this5 = this;\n\n      // 总计的自定义DOM\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: function html() {\n          _this5.resize = Math.random();\n          return \"<div class='guide \".concat(_this5.$option.guide.layout, \"' style='width: \").concat(_this5.height / 2, \"px'>\\n                    <div class='guide-name'>\\n                      <span class=\\\"guide-name-text\\\">\").concat(_this5.totalName, \"</span>\\n                      <span class=\\\"guide-name-tooltip\\\" id=\\\"guide-name-tooltip\").concat(_this5.tooltipId, \"\\\"></span>\\n                    </div>\\n                    <div class='guide-title'>\\n                      <span class='guide-unit' style=\\\"display: \").concat(_this5.unitBack ? 'none' : 'inline-block', \"\\\">\").concat(_this5.unit, \"</span>\\n                      <span class='guide-value'>\").concat(_this5.valFormat(_this5.total) || 0, \"</span>\\n                      <span class='guide-unit' style=\\\"display: \").concat(!_this5.unitBack ? 'none' : 'inline-block', \"\\\">\").concat(_this5.unit, \"</span>\\n                    </div>\\n                  </div>\");\n        }\n      });\n    },\n    resetTotal: function resetTotal() {\n      var $s = this.$el.querySelector.bind(this.$el);\n      $s('.guide-value').textContent = this.valFormat(this.total) || 0; // 总计的时候显示tooltip\n\n      $s('.guide-name-tooltip').setAttribute('style', this.tooltipId ? 'display: inline' : 'display: none');\n      $s('.guide-name-text').textContent = this.totalName;\n    },\n    setUnit: function setUnit(e) {\n      var $s = this.$el.querySelector.bind(this.$el); // 当环形图总计都是零的时候隐藏tooltip\n\n      if (e.data._origin.name === 'empty') {\n        $s('.g2-tooltip').setAttribute('style', 'display: none');\n        return;\n      }\n\n      var origin = e.data._origin;\n      var shapes = e.shapes;\n      var geom = e.geom;\n      $s('.guide-value').textContent = this.valFormat(origin.value);\n      $s('.guide-name-text').textContent = origin.name; // 不是总计的时候隐藏tooltip\n\n      $s('.guide-name-tooltip').setAttribute('style', 'display: none');\n    },\n    chartEvent: function chartEvent() {\n      var _this6 = this;\n\n      // 鼠标进入环形显示相关的值\n      this.chart.on('interval:mouseenter', function (ev) {\n        var shape = ev.shape;\n        var origin = ev.data._origin;\n\n        if (origin.name === 'empty') {\n          _this6.intervalStack.clearActivedShapes(shape);\n        }\n\n        _this6.setUnit(ev);\n      }); // 鼠标离开显示总值\n\n      this.chart.on('interval:mouseleave', function (e) {\n        _this6.resetTotal();\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      // 注销图形所有事件\n      this.chart.off();\n    }\n  }\n};",{"version":3,"sources":["brand-stat-ring.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"brand-stat-ring\"></div>\n</template>\n\n<script>\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport chartMixin from './mixin'\nimport { decimalFilter, setColorMap } from './filters'\nimport StHelpTooltip from '@/views/components/help-tooltip/help-tooltip'\n\nexport default {\n  name: 'BrandStatRing',\n  mixins: [chartMixin],\n  data() {\n    return {\n      intervalStack: {},\n      resize: -99\n    }\n  },\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    unitBack: {\n      type: Boolean,\n      default: false\n    },\n    unit: {\n      type: String,\n      default: '¥'\n    },\n    totalName: {\n      type: String,\n      default: ''\n    },\n    tooltipId: {\n      type: String,\n      default: ''\n    },\n    tooltipMap: {\n      type: Object,\n      default: () => {}\n    },\n    legend: {\n      type: Object,\n      default: () => {}\n    },\n    guide: {\n      type: Object,\n      default: () => {}\n    },\n    fields: {\n      type: [Array, Boolean],\n      default: () => [\n        '会员卡',\n        '私教课',\n        '团体课',\n        '储值卡',\n        '课程包',\n        '定金',\n        '押金',\n        '储物柜',\n        '云店',\n        '小班课',\n        '其他',\n        '全部'\n      ]\n    },\n    colors: {\n      type: Array,\n      default: () => [\n        '#3F66F6',\n        '#798AFF',\n        '#06DB8C',\n        '#77FF74',\n        '#B8F10F',\n        '#FFE679',\n        '#FFB946',\n        '#5E83AC',\n        '#FF6466',\n        '#04A0AF',\n        '#C87FFF',\n        '#484F83'\n      ]\n    },\n    colorKey: {\n      type: String,\n      default: 'name'\n    },\n    colorMap: {\n      type: [Object, Boolean],\n      default: false\n    },\n    height: {\n      type: Number,\n      default: 210\n    },\n    padding: {\n      type: [Array, Number],\n      default: () => ['auto', 185, 'auto', 'auto']\n    }\n  },\n  watch: {\n    // 当浏览器窗口变小时，tooltip会消失问题\n    resize() {\n      this.$nextTick(() => {\n        const tooltipMap = this.tooltipMap\n        for (let key in tooltipMap) {\n          tooltipMap[key] &&\n            new Vue({\n              components: {\n                StHelpTooltip\n              },\n              render: h => <st-help-tooltip id={tooltipMap[key]} />\n            }).$mount(`#legend-${key}`)\n        }\n        if (this.tooltipId) {\n          const $s = this.$el.querySelector.bind(this.$el)\n          const component = new Vue({\n            components: {\n              StHelpTooltip\n            },\n            render: h => <st-help-tooltip id={this.tooltipId} />\n          }).$mount()\n          $s(`#guide-name-tooltip${this.tooltipId}`).appendChild(component.$el)\n        }\n      })\n    }\n  },\n  computed: {\n    dataSource() {\n      //传入的总计为0时，多一个环形图为0的灰色环形图\n      if (this.total === 0 || !this.total) {\n        return [{ name: 'empty', value: 1 }, ...this.data]\n      }\n      return [{ name: 'empty', value: 0 }, ...this.data]\n    },\n    $fields() {\n      let fields = []\n      if (!this.fields) return [...new Set(this.data.map(item => item.name))]\n      if (this.fields.length) {\n        fields = [...this.fields, ...new Set(this.data.map(item => item.name))]\n      }\n      return fields\n    },\n    $colorMap() {\n      if (this.colorMap) return this.colorMap\n      // const colorMap = {}\n      // this.$fields.map((key, idx) => {\n      //   colorMap[key] = this.colors[idx % this.colors.length]\n      // })\n      return setColorMap(this.$fields || [], this.colors)\n    },\n    $option() {\n      return {\n        legend: {\n          position: 'right-center',\n          layout: 'line', // line 同行  vertical 分上下两行\n          ...this.legend\n        },\n        guide: {\n          layout: '', // reverse 上下文案反转\n          ...this.guide\n        }\n      }\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.dataSource)\n      this.dv\n        .transform({\n          type: 'map',\n          callback(row) {\n            row.value = +(row.value || 0)\n            return row\n          }\n        })\n        .transform({\n          type: 'percent',\n          field: 'value', // 统计销量\n          dimension: 'name', // 每年的占比\n          as: 'percent' // 结果存储在 percent 字段\n        })\n    },\n    initChart() {\n      // chart初始化实例\n      this.getChartInstance()\n      // 加载数据\n      this.chart.source(this.dv, {\n        value: {\n          formatter: v => (this.unitBack ? v + this.unit : this.unit + v)\n        }\n      })\n      // 设置坐标系\n      this.setCoord()\n      // 设置提示信息\n      this.setTooltip()\n      // 设置图例\n      this.setLegend()\n      // 设置复制元素\n      this.setGuideHtml()\n      // 设置渲染环形图\n      this.getintervalStack()\n    },\n    getintervalStack() {\n      // 环形图初始化\n      this.intervalStack = this.chart\n        .intervalStack()\n        .style({\n          fillOpacity: 1,\n          cursor: 'pointer'\n        })\n        .tooltip('name*percent', function(name, percent) {\n          return {\n            name,\n            percent: (function(p) {\n              // 百分比处理，精确至 0.001%（最小值）\n              const r = 10\n              let u = 1,\n                i = 0\n              p = p * 100\n              while (p < u && i < 3) {\n                u = u / 10\n                i++\n              }\n              if (p < u) p = u\n              return (i <= 0 ? Math.floor(p) : p.toFixed(i)) + '%'\n            })(percent)\n          }\n        })\n        .position('value')\n        // .color(`name*${this.colorKey}`, ['#E9EDF2', ...this.colors])\n        .color(\n          `name*${this.colorKey}`,\n          !this.fields\n            ? ['#E9EDF2', ...this.colors]\n            : (name, key) => {\n                if (this.total === 0 || !this.total) return '#E9EDF2'\n                console.log('color', name, key, this.$colorMap[name])\n                return this.$colorMap[name]\n              }\n        )\n        .select(false)\n        .active({\n          style: {\n            fillOpacity: 1,\n            lineWidth: 8\n          }\n        })\n      this.chart.render()\n      // 自定义监听环形图事件\n      this.chartEvent()\n    },\n    getChartInstance() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: this.padding,\n        height: this.height\n      })\n    },\n    setTooltip() {\n      this.chart.tooltip({\n        showTitle: false,\n        itemTpl: `<li class=\"tooltip-item-{name}\">\n                    <span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>\n                    {name}\n                    <span class=\"st-g2-tooltip-value\">| {percent}</span>\n                  </li>`\n      })\n    },\n    setCoord() {\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      })\n    },\n    valFormat(val) {\n      return Number((+val).toFixed(1)).toLocaleString()\n    },\n    setLegend() {\n      this.chart.legend({\n        position: this.$option.legend.position,\n        useHtml: true,\n        itemTpl: (name, color, checked, index) => {\n          const row = this.dv.findRow({ name })\n          const value = this.valFormat(row.value)\n          const tooltipId = this.tooltipMap && this.tooltipMap[row.key]\n          return `<li class=\"g2-legend-list-item item-{originValue} item-{index} {checked} ${\n            this.$option.legend.layout\n          }\" data-color=\"{originColor}\" data-value=\"{originValue}\">\n                    <div>\n                      <i class=\"g2-legend-marker\" style=\"background-color:{color};\"></i>\n                      <span class=\"g2-legend-text\">${name}</span>\n                      <span id='legend-{index}'></span>\n                    </div>\n                    <div class='legend-right'>\n                      <span class='legend-percent'>${\n                        this.unitBack ? value + this.unit : this.unit + value\n                      }</span>\n                    </div>\n                  </li>`\n        },\n        onHover: ev => {\n          // 总计为 0 是阻止事件继续执行hover\n          if (!this.total) return\n          const $s = this.$el.querySelector.bind(this.$el)\n          const name = ev.item.value\n          const row = this.dv.findRow({ name })\n          const shapes = ev.shapes\n          const geom = ev.geom\n          const legend = ev.currentTarget\n          // 选中对应单元\n          this.total && geom.setShapesActived(shapes)\n          legend.addEventListener('mouseleave', () => {\n            this.resetTotal()\n          })\n          $s('.guide-value').textContent = this.valFormat(row.value)\n          $s('.guide-name-text').textContent = row.name\n          $s('.guide-name-tooltip').setAttribute('style', 'display: none')\n        }\n      })\n    },\n    setGuideHtml() {\n      // 总计的自定义DOM\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: () => {\n          this.resize = Math.random()\n          return `<div class='guide ${\n            this.$option.guide.layout\n          }' style='width: ${this.height / 2}px'>\n                    <div class='guide-name'>\n                      <span class=\"guide-name-text\">${this.totalName}</span>\n                      <span class=\"guide-name-tooltip\" id=\"guide-name-tooltip${\n                        this.tooltipId\n                      }\"></span>\n                    </div>\n                    <div class='guide-title'>\n                      <span class='guide-unit' style=\"display: ${\n                        this.unitBack ? 'none' : 'inline-block'\n                      }\">${this.unit}</span>\n                      <span class='guide-value'>${this.valFormat(this.total) ||\n                        0}</span>\n                      <span class='guide-unit' style=\"display: ${\n                        !this.unitBack ? 'none' : 'inline-block'\n                      }\">${this.unit}</span>\n                    </div>\n                  </div>`\n        }\n      })\n    },\n    resetTotal() {\n      const $s = this.$el.querySelector.bind(this.$el)\n      $s('.guide-value').textContent = this.valFormat(this.total) || 0\n      // 总计的时候显示tooltip\n      $s('.guide-name-tooltip').setAttribute(\n        'style',\n        this.tooltipId ? 'display: inline' : 'display: none'\n      )\n      $s('.guide-name-text').textContent = this.totalName\n    },\n    setUnit(e) {\n      const $s = this.$el.querySelector.bind(this.$el)\n      // 当环形图总计都是零的时候隐藏tooltip\n      if (e.data._origin.name === 'empty') {\n        $s('.g2-tooltip').setAttribute('style', 'display: none')\n        return\n      }\n      const origin = e.data._origin\n      const shapes = e.shapes\n      const geom = e.geom\n\n      $s('.guide-value').textContent = this.valFormat(origin.value)\n      $s('.guide-name-text').textContent = origin.name\n      // 不是总计的时候隐藏tooltip\n      $s('.guide-name-tooltip').setAttribute('style', 'display: none')\n    },\n    chartEvent() {\n      // 鼠标进入环形显示相关的值\n      this.chart.on('interval:mouseenter', ev => {\n        const shape = ev.shape\n        const origin = ev.data._origin\n        if (origin.name === 'empty') {\n          this.intervalStack.clearActivedShapes(shape)\n        }\n        this.setUnit(ev)\n      })\n      // 鼠标离开显示总值\n      this.chart.on('interval:mouseleave', e => {\n        this.resetTotal()\n      })\n    }\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      // 注销图形所有事件\n      this.chart.off()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}