{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/task/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/setting/task/list.vue","mtime":1596792848080},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ListService } from './list.service'\nimport { columns } from './list.config.ts'\nimport tableMixin from '@/mixins/table.mixin'\nimport { TASK_STATUS } from '@/constants/brand/setting/task'\nimport TaskDetail from '@/views/biz-modals/task/detail'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  mixins: [tableMixin],\n  name: 'PageBrandSettingShopList',\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      listService: ListService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.listService.loading$,\n      last_updated_time: this.listService.last_updated_time$,\n      list: this.listService.list$,\n      page: this.listService.page$\n    }\n  },\n  computed: {\n    columns\n  },\n  modals: {\n    TaskDetail\n  },\n  data() {\n    return {\n      TASK_STATUS\n    }\n  },\n  methods: {\n    refresh() {\n      return this.listService.getList(this.$searchQuery)\n    },\n    onClickModal(record, type) {\n      this.$modalRouter.push({\n        name: 'task-detail',\n        props: {\n          task_id: record.id,\n          task_type: record.task_type.id,\n          popup_type: type\n        },\n        on: {}\n      })\n    },\n    stopTask(item) {\n      this.listService.stopTask(item.id).subscribe(res => {\n        this.messageService.success({ content: '终止任务成功!' })\n        this.$router.reload()\n      })\n    }\n  }\n}\n",null]}