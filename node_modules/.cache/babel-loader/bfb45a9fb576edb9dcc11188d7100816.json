{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/hooks/card-actions.hook.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/hooks/card-actions.hook.js","mtime":1594718339795},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport SoldCardRenewalMember from '@/views/biz-modals/sold/card/renewal-member';\nimport SoldCardUpgradeMember from '@/views/biz-modals/sold/card/upgrade-member';\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip';\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering';\nimport SoldDealChangeMember from '@/views/biz-modals/sold/deal/change-member';\n\nvar useCardActions = function useCardActions() {\n  return {\n    modals: {\n      SoldCardRenewalMember: SoldCardRenewalMember,\n      SoldCardUpgradeMember: SoldCardUpgradeMember,\n      SoldDealGatheringTip: SoldDealGatheringTip,\n      SoldDealGathering: SoldDealGathering,\n      SoldDealChangeMember: SoldDealChangeMember\n    },\n    methods: {\n      upgradeCard: function upgradeCard(record) {\n        var _this = this;\n\n        this.$modalRouter.push({\n          name: 'sold-card-upgrade-member',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: function () {\n              var _success = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n                var props, orderSuccessRes, _props, payOrderRes;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _this.$emit('success');\n\n                        if (!(res.type === 'create')) {\n                          _context.next = 9;\n                          break;\n                        }\n\n                        // 创建订单成功\n                        props = {\n                          order_id: res.orderId,\n                          type: 'member',\n                          message: '订单创建成功',\n                          needPay: true\n                        };\n                        _context.next = 5;\n                        return _this.createdGatheringTip(props);\n\n                      case 5:\n                        orderSuccessRes = _context.sent;\n\n                        _this.tipCallBack(res.orderId, 'member', orderSuccessRes.type, res.soldId, res.isFamilyCard);\n\n                        _context.next = 15;\n                        break;\n\n                      case 9:\n                        if (!(res.type === 'createPay')) {\n                          _context.next = 15;\n                          break;\n                        }\n\n                        // 创建订单成功 并且到支付页面\n                        _props = {\n                          order_id: res.orderId,\n                          type: 'member'\n                        };\n                        _context.next = 13;\n                        return _this.createdOrderPay(_props);\n\n                      case 13:\n                        payOrderRes = _context.sent;\n\n                        _this.payCallBack(res.orderId, 'member', payOrderRes.type, res.soldId, res.isFamilyCard);\n\n                      case 15:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              function success(_x) {\n                return _success.apply(this, arguments);\n              }\n\n              return success;\n            }()\n          }\n        });\n      },\n      // 续卡\n      onRenewal: function onRenewal(record) {\n        var _this2 = this;\n\n        this.$modalRouter.push({\n          name: 'sold-card-renewal-member',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: function () {\n              var _success2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n                var props, orderSuccessRes, _props2, payOrderRes;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!(res.type === 'create')) {\n                          _context2.next = 8;\n                          break;\n                        }\n\n                        // 创建订单成功\n                        props = {\n                          order_id: res.orderId,\n                          type: 'member',\n                          message: '订单创建成功',\n                          needPay: true\n                        };\n                        _context2.next = 4;\n                        return _this2.createdGatheringTip(props);\n\n                      case 4:\n                        orderSuccessRes = _context2.sent;\n\n                        _this2.tipCallBack(res.orderId, 'member', orderSuccessRes.type, res.soldId, res.isFamilyCard);\n\n                        _context2.next = 14;\n                        break;\n\n                      case 8:\n                        if (!(res.type === 'createPay')) {\n                          _context2.next = 14;\n                          break;\n                        }\n\n                        // 创建订单成功 并且到支付页面\n                        _props2 = {\n                          order_id: res.orderId,\n                          type: 'member'\n                        };\n                        _context2.next = 12;\n                        return _this2.createdOrderPay(_props2);\n\n                      case 12:\n                        payOrderRes = _context2.sent;\n\n                        _this2.payCallBack(res.orderId, 'member', payOrderRes.type, res.soldId, res.isFamilyCard);\n\n                      case 14:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              function success(_x2) {\n                return _success2.apply(this, arguments);\n              }\n\n              return success;\n            }()\n          }\n        });\n      },\n      // 变更成员\n      onChangeMember: function onChangeMember(record) {\n        var _this3 = this;\n\n        this.$modalRouter.push({\n          name: 'sold-deal-change-member',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: function success() {\n              _this3.$emit('refresh');\n            }\n          }\n        });\n      },\n      // 订单收款modal\n      createdOrderPay: function createdOrderPay(props) {\n        var _this4 = this;\n\n        return new Promise(function (resolve, reject) {\n          _this4.$modalRouter.push({\n            name: 'sold-deal-gathering',\n            props: props,\n            on: {\n              success: resolve\n            }\n          });\n        });\n      },\n      // 订单收款回调\n      payCallBack: function () {\n        var _payCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(orderId, modalType, callBackType, soldId, isFamilyCard) {\n          var _this5 = this;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.t0 = callBackType;\n                  _context3.next = _context3.t0 === 'cancel' ? 3 : _context3.t0 === 'pay' ? 5 : 7;\n                  break;\n\n                case 3:\n                  this.$emit('refresh');\n                  return _context3.abrupt(\"break\", 7);\n\n                case 5:\n                  this.createdGatheringTip({\n                    message: '收款成功',\n                    order_id: orderId,\n                    isFamilyCard: isFamilyCard\n                  }).then(function (res) {\n                    _this5.tipCallBack(orderId, modalType, res.type, soldId);\n                  });\n                  return _context3.abrupt(\"break\", 7);\n\n                case 7:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function payCallBack(_x3, _x4, _x5, _x6, _x7) {\n          return _payCallBack.apply(this, arguments);\n        }\n\n        return payCallBack;\n      }(),\n      // 创建成功，提示框modal\n      createdGatheringTip: function createdGatheringTip(props) {\n        var _this6 = this;\n\n        return new Promise(function (resolve, reject) {\n          _this6.$modalRouter.push({\n            name: 'sold-deal-gathering-tip',\n            props: props,\n            on: {\n              success: resolve\n            }\n          });\n        });\n      },\n      // 提示框回调，gathering-tip\n      tipCallBack: function () {\n        var _tipCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(orderId, modalType, callBackType, soldId, isFamilyCard) {\n          var _this7 = this;\n\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.t0 = callBackType;\n                  _context4.next = _context4.t0 === 'cancel' ? 3 : _context4.t0 === 'Print' ? 5 : _context4.t0 === 'PrintOrder' ? 8 : _context4.t0 === 'ViewOrder' ? 10 : _context4.t0 === 'Pay' ? 13 : _context4.t0 === 'ChangeMember' ? 15 : 17;\n                  break;\n\n                case 3:\n                  // this.$router.reload()\n                  this.$emit('refresh');\n                  return _context4.abrupt(\"break\", 17);\n\n                case 5:\n                  this.$emit('refresh');\n                  this.createdOrderPrint(orderId);\n                  return _context4.abrupt(\"break\", 17);\n\n                case 8:\n                  this.printOrder(orderId);\n                  return _context4.abrupt(\"break\", 17);\n\n                case 10:\n                  this.$emit('refresh');\n                  this.createdOrderViewOrder(orderId);\n                  return _context4.abrupt(\"break\", 17);\n\n                case 13:\n                  this.createdOrderPay({\n                    order_id: orderId,\n                    type: modalType\n                  }).then(function (res) {\n                    _this7.payCallBack(orderId, modalType, res.type, soldId, isFamilyCard);\n                  });\n                  return _context4.abrupt(\"break\", 17);\n\n                case 15:\n                  this.onChangeMember({\n                    id: soldId\n                  });\n                  return _context4.abrupt(\"break\", 17);\n\n                case 17:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        function tipCallBack(_x8, _x9, _x10, _x11, _x12) {\n          return _tipCallBack.apply(this, arguments);\n        }\n\n        return tipCallBack;\n      }(),\n      // 打印小票\n      printOrder: function printOrder(order_id) {\n        window.open('/ticket/gathering-print?id=' + order_id, '_blank', 'width=800,height=600');\n      },\n      // 打印合同\n      createdOrderPrint: function createdOrderPrint(order_id) {\n        var url = \"\".concat(window.location.origin, \"/common/contract-preview?id=\").concat(order_id);\n        window.open(url);\n      },\n      // 查看订单\n      createdOrderViewOrder: function createdOrderViewOrder(order_id) {\n        this.$router.push({\n          name: 'shop-finance-order-info-collection-details',\n          query: {\n            id: order_id\n          }\n        });\n      }\n    }\n  };\n};\n\nexport default useCardActions;",null]}