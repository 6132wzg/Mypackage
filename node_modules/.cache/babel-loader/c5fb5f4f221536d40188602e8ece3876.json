{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/recent-radio-group/recent-radio-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/recent-radio-group/recent-radio-group.vue","mtime":1600926556058},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nexport default {\n  name: 'StRecentRadioGroup',\n  bem: {\n    b: 'st-recent-radio-group'\n  },\n  props: {\n    // radio的文案自定义\n    label: {\n      type: String,\n      default: '近$天'\n    },\n\n    /**\n     * type、unit、showBtnRangeDate 三个参数用于 当选择radio枚举时 在rangepiker里展示 当前选项的日期范围\n     * showBtnRangeDate 是否展示枚举范围\n     * type 可设置 subtract、add 分别代表 日期往前推算、日期往后推算\n     * unit 可设置 days、 months、 weeks、years 等 代表日期推算的单位\n     */\n    type: {\n      type: String,\n      default: 'subtract'\n    },\n    unit: {\n      type: String,\n      default: 'days'\n    },\n    showBtnRangeDate: {\n      type: Boolean,\n      default: true\n    },\n    // 日期选择范围限定，默认不限制日期选择范围，单位固定为 天(days)\n    range: {\n      type: [Number, Boolean],\n      default: 180\n    },\n    disabledNow: {\n      type: Boolean,\n      default: false\n    },\n    // 是否展示时间范围选择组件\n    showRangePicker: {\n      type: Boolean,\n      default: true\n    },\n    days: {\n      type: Array,\n      default: function _default() {\n        return [7, 30, 90];\n      }\n    },\n    value: {\n      type: Object,\n      default: function _default() {\n        return {\n          day: undefined,\n          start_date: undefined,\n          end_date: undefined\n        };\n      }\n    },\n    customRadioItem: {\n      type: Boolean,\n      default: false,\n      descirption: '是否自定义筛选项名称'\n    },\n    defaultRecent: {\n      type: Number,\n      default: 7\n    }\n  },\n  data: function data() {\n    return {\n      recent: this.days[0],\n      dateRange: this.showRangePicker ? this.computeDateRange(this.days[0]) : []\n    };\n  },\n  watch: {\n    recent: function recent(newValue) {\n      if (newValue && newValue !== 0) {\n        this.$emit('change', {\n          recently_day: newValue,\n          start_date: undefined,\n          end_date: undefined\n        });\n        this.dateRange = this.computeDateRange(newValue);\n      }\n    }\n  },\n  computed: {\n    cValue: function cValue() {\n      // value 字段转译 默认值如下， 可单独传参数设置\n      var _this$$attrs = this.$attrs,\n          _this$$attrs$_day = _this$$attrs._day,\n          _day = _this$$attrs$_day === void 0 ? 'day' : _this$$attrs$_day,\n          _this$$attrs$_start_d = _this$$attrs._start_date,\n          _start_date = _this$$attrs$_start_d === void 0 ? 'start_date' : _this$$attrs$_start_d,\n          _this$$attrs$_end_dat = _this$$attrs._end_date,\n          _end_date = _this$$attrs$_end_dat === void 0 ? 'end_date' : _this$$attrs$_end_dat;\n\n      return {\n        day: this.value[_day],\n        start_date: this.value[_start_date],\n        end_date: this.value[_end_date]\n      };\n    }\n  },\n  mounted: function mounted() {\n    if (this.defaultRecent) {\n      this.recent = this.defaultRecent;\n    }\n\n    if (this.cValue.day) {\n      this.recent = this.cValue.day;\n      this.dateRange = this.computeDateRange(this.recent);\n    }\n\n    if (this.cValue.start_date && this.cValue.end_date) {\n      this.recent = false;\n      this.dateRange = [moment(this.cValue.start_date), moment(this.cValue.end_date)];\n    }\n  },\n  methods: {\n    moment: moment,\n    // 当选择的是radio时 的 日期范围推算\n    computeDateRange: function computeDateRange(rangeDate) {\n      if (this.showRangePicker && this.showBtnRangeDate) {\n        var start = this.type === 'subtract' ? rangeDate : 1;\n        var end = this.type === 'subtract' ? 1 : rangeDate;\n\n        if (!this.disabledNow) {\n          start = this.type === 'subtract' ? rangeDate - 1 : 0;\n          end = this.type === 'subtract' ? 0 : rangeDate - 1;\n        }\n\n        return [moment()[this.type](start, this.unit), moment()[this.type](end, this.unit)];\n      }\n\n      return [];\n    },\n    // 日期面板变化时的回调\n    calendarChange: function calendarChange(val) {\n      this.dateRange = val;\n    },\n    recentChange: function recentChange(date, dateString) {\n      this.recent = false;\n      this.$emit('change', {\n        start_date: dateString[0],\n        end_date: dateString[1],\n        recently_day: undefined\n      });\n    },\n    disabledDate: function disabledDate(current) {\n      var dateRange = this.dateRange,\n          range = this.range,\n          disabledNow = this.disabledNow,\n          type = this.type;\n      var start = dateRange[0];\n      var end = dateRange[1];\n\n      if (this.$attrs.disabledDate) {\n        return this.$attrs.disabledDate(current, {\n          range: range,\n          dateRange: dateRange,\n          disabledNow: disabledNow,\n          type: type\n        });\n      }\n\n      if (range > 0 && start && !end && (current > moment(start).add(range, 'days') || current < moment(start).subtract(range, 'days'))) {\n        return true;\n      }\n\n      if (type === 'subtract' && current && (disabledNow ? current.format('YYYY-MM-DD') >= moment().format('YYYY-MM-DD') : current > moment())) return true;\n      if (type === 'add' && current && (disabledNow ? current.format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD') : current < moment())) return true;\n      return current && current > moment();\n    }\n  }\n};",{"version":3,"sources":["recent-radio-group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,GAAA,EAAA;AACA,IAAA,CAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAFA;;AAMA;;;;;;AAMA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAZA;AAgBA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhBA;AAoBA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KApBA;AAwBA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7BA;AAiCA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAlCA;AAsCA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AACA;AAJA,KAtCA;AA4CA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA;AACA,UAAA,GAAA,EAAA,SADA;AAEA,UAAA,UAAA,EAAA,SAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAAA;AAKA;AARA,KA5CA;AAsDA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAtDA;AA2DA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA3DA,GALA;AAqEA,EAAA,IArEA,kBAqEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KAAA,IAAA,CAAA,CAAA,CADA;AAEA,MAAA,SAAA,EAAA,KAAA,eAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA;AAFA,KAAA;AAIA,GA1EA;AA2EA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,QADA,EACA;AACA,UAAA,QAAA,IAAA,QAAA,KAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA;AACA,UAAA,YAAA,EAAA,QADA;AAEA,UAAA,UAAA,EAAA,SAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAAA;AAKA,aAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,QAAA,CAAA;AACA;AACA;AAVA,GA3EA;AAuFA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA;AADA,yBAMA,KAAA,MANA;AAAA,2CAGA,IAHA;AAAA,UAGA,IAHA,kCAGA,KAHA;AAAA,+CAIA,WAJA;AAAA,UAIA,WAJA,sCAIA,YAJA;AAAA,+CAKA,SALA;AAAA,UAKA,SALA,sCAKA,UALA;;AAOA,aAAA;AACA,QAAA,GAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CADA;AAEA,QAAA,UAAA,EAAA,KAAA,KAAA,CAAA,WAAA,CAFA;AAGA,QAAA,QAAA,EAAA,KAAA,KAAA,CAAA,SAAA;AAHA,OAAA;AAKA;AAbA,GAvFA;AAsGA,EAAA,OAtGA,qBAsGA;AACA,QAAA,KAAA,aAAA,EAAA;AACA,WAAA,MAAA,GAAA,KAAA,aAAA;AACA;;AACA,QAAA,KAAA,MAAA,CAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,KAAA,MAAA,CAAA,GAAA;AACA,WAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,MAAA,CAAA;AACA;;AACA,QAAA,KAAA,MAAA,CAAA,UAAA,IAAA,KAAA,MAAA,CAAA,QAAA,EAAA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,SAAA,GAAA,CACA,MAAA,CAAA,KAAA,MAAA,CAAA,UAAA,CADA,EAEA,MAAA,CAAA,KAAA,MAAA,CAAA,QAAA,CAFA,CAAA;AAIA;AACA,GArHA;AAsHA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA;AACA,IAAA,gBAHA,4BAGA,SAHA,EAGA;AACA,UAAA,KAAA,eAAA,IAAA,KAAA,gBAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,IAAA,KAAA,UAAA,GAAA,SAAA,GAAA,CAAA;AACA,YAAA,GAAA,GAAA,KAAA,IAAA,KAAA,UAAA,GAAA,CAAA,GAAA,SAAA;;AACA,YAAA,CAAA,KAAA,WAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,IAAA,KAAA,UAAA,GAAA,SAAA,GAAA,CAAA,GAAA,CAAA;AACA,UAAA,GAAA,GAAA,KAAA,IAAA,KAAA,UAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA;AACA;;AACA,eAAA,CACA,MAAA,GAAA,KAAA,IAAA,CAAA,CAAA,KAAA,EAAA,KAAA,IAAA,CADA,EAEA,MAAA,GAAA,KAAA,IAAA,CAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAFA,CAAA;AAIA;;AACA,aAAA,EAAA;AACA,KAjBA;AAkBA;AACA,IAAA,cAnBA,0BAmBA,GAnBA,EAmBA;AACA,WAAA,SAAA,GAAA,GAAA;AACA,KArBA;AAsBA,IAAA,YAtBA,wBAsBA,IAtBA,EAsBA,UAtBA,EAsBA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA;AACA,QAAA,UAAA,EAAA,UAAA,CAAA,CAAA,CADA;AAEA,QAAA,QAAA,EAAA,UAAA,CAAA,CAAA,CAFA;AAGA,QAAA,YAAA,EAAA;AAHA,OAAA;AAKA,KA7BA;AA8BA,IAAA,YA9BA,wBA8BA,OA9BA,EA8BA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UACA,WADA,GACA,IADA,CACA,WADA;AAAA,UACA,IADA,GACA,IADA,CACA,IADA;AAEA,UAAA,KAAA,GAAA,SAAA,CAAA,CAAA,CAAA;AACA,UAAA,GAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,UAAA,KAAA,MAAA,CAAA,YAAA,EAAA;AACA,eAAA,KAAA,MAAA,CAAA,YAAA,CAAA,OAAA,EAAA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,SAAA,EAAA,SAFA;AAGA,UAAA,WAAA,EAAA,WAHA;AAIA,UAAA,IAAA,EAAA;AAJA,SAAA,CAAA;AAMA;;AACA,UACA,KAAA,GAAA,CAAA,IACA,KADA,IAEA,CAAA,GAFA,KAGA,OAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,KAAA,EAAA,MAAA,CAAA,IACA,OAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAJA,CADA,EAMA;AACA,eAAA,IAAA;AACA;;AACA,UACA,IAAA,KAAA,UAAA,IACA,OADA,KAEA,WAAA,GACA,OAAA,CAAA,MAAA,CAAA,YAAA,KAAA,MAAA,GAAA,MAAA,CAAA,YAAA,CADA,GAEA,OAAA,GAAA,MAAA,EAJA,CADA,EAOA,OAAA,IAAA;AACA,UACA,IAAA,KAAA,KAAA,IACA,OADA,KAEA,WAAA,GACA,OAAA,CAAA,MAAA,CAAA,YAAA,KAAA,MAAA,GAAA,MAAA,CAAA,YAAA,CADA,GAEA,OAAA,GAAA,MAAA,EAJA,CADA,EAOA,OAAA,IAAA;AACA,aAAA,OAAA,IAAA,OAAA,GAAA,MAAA,EAAA;AACA;AApEA;AAtHA,CAAA","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <a-radio-group v-model=\"recent\">\n      <a-radio-button\n        v-for=\"item in days\"\n        :value=\"item.value || item\"\n        :key=\"item.value || item\"\n      >\n        {{ item.label || label.replace('$', item) }}\n      </a-radio-button>\n    </a-radio-group>\n    <a-range-picker\n      v-if=\"showRangePicker\"\n      :class=\"[b('range'), { active: !recent }]\"\n      @change=\"recentChange\"\n      v-model=\"dateRange\"\n      v-bind=\"$attrs\"\n      :disabledDate=\"disabledDate\"\n      @calendarChange=\"calendarChange\"\n    />\n  </div>\n</template>\n<script>\nimport moment from 'moment'\nexport default {\n  name: 'StRecentRadioGroup',\n  bem: {\n    b: 'st-recent-radio-group'\n  },\n  props: {\n    // radio的文案自定义\n    label: {\n      type: String,\n      default: '近$天'\n    },\n    /**\n     * type、unit、showBtnRangeDate 三个参数用于 当选择radio枚举时 在rangepiker里展示 当前选项的日期范围\n     * showBtnRangeDate 是否展示枚举范围\n     * type 可设置 subtract、add 分别代表 日期往前推算、日期往后推算\n     * unit 可设置 days、 months、 weeks、years 等 代表日期推算的单位\n     */\n    type: {\n      type: String,\n      default: 'subtract'\n    },\n    unit: {\n      type: String,\n      default: 'days'\n    },\n    showBtnRangeDate: {\n      type: Boolean,\n      default: true\n    },\n    // 日期选择范围限定，默认不限制日期选择范围，单位固定为 天(days)\n    range: {\n      type: [Number, Boolean],\n      default: 180\n    },\n    disabledNow: {\n      type: Boolean,\n      default: false\n    },\n    // 是否展示时间范围选择组件\n    showRangePicker: {\n      type: Boolean,\n      default: true\n    },\n    days: {\n      type: Array,\n      default: () => {\n        return [7, 30, 90]\n      }\n    },\n    value: {\n      type: Object,\n      default: () => {\n        return {\n          day: undefined,\n          start_date: undefined,\n          end_date: undefined\n        }\n      }\n    },\n    customRadioItem: {\n      type: Boolean,\n      default: false,\n      descirption: '是否自定义筛选项名称'\n    },\n    defaultRecent: {\n      type: Number,\n      default: 7\n    }\n  },\n  data() {\n    return {\n      recent: this.days[0],\n      dateRange: this.showRangePicker ? this.computeDateRange(this.days[0]) : []\n    }\n  },\n  watch: {\n    recent(newValue) {\n      if (newValue && newValue !== 0) {\n        this.$emit('change', {\n          recently_day: newValue,\n          start_date: undefined,\n          end_date: undefined\n        })\n        this.dateRange = this.computeDateRange(newValue)\n      }\n    }\n  },\n  computed: {\n    cValue() {\n      // value 字段转译 默认值如下， 可单独传参数设置\n      const {\n        _day = 'day',\n        _start_date = 'start_date',\n        _end_date = 'end_date'\n      } = this.$attrs\n      return {\n        day: this.value[_day],\n        start_date: this.value[_start_date],\n        end_date: this.value[_end_date]\n      }\n    }\n  },\n  mounted() {\n    if (this.defaultRecent) {\n      this.recent = this.defaultRecent\n    }\n    if (this.cValue.day) {\n      this.recent = this.cValue.day\n      this.dateRange = this.computeDateRange(this.recent)\n    }\n    if (this.cValue.start_date && this.cValue.end_date) {\n      this.recent = false\n      this.dateRange = [\n        moment(this.cValue.start_date),\n        moment(this.cValue.end_date)\n      ]\n    }\n  },\n  methods: {\n    moment,\n    // 当选择的是radio时 的 日期范围推算\n    computeDateRange(rangeDate) {\n      if (this.showRangePicker && this.showBtnRangeDate) {\n        let start = this.type === 'subtract' ? rangeDate : 1\n        let end = this.type === 'subtract' ? 1 : rangeDate\n        if (!this.disabledNow) {\n          start = this.type === 'subtract' ? rangeDate - 1 : 0\n          end = this.type === 'subtract' ? 0 : rangeDate - 1\n        }\n        return [\n          moment()[this.type](start, this.unit),\n          moment()[this.type](end, this.unit)\n        ]\n      }\n      return []\n    },\n    // 日期面板变化时的回调\n    calendarChange(val) {\n      this.dateRange = val\n    },\n    recentChange(date, dateString) {\n      this.recent = false\n      this.$emit('change', {\n        start_date: dateString[0],\n        end_date: dateString[1],\n        recently_day: undefined\n      })\n    },\n    disabledDate(current) {\n      const { dateRange, range, disabledNow, type } = this\n      const start = dateRange[0]\n      const end = dateRange[1]\n      if (this.$attrs.disabledDate) {\n        return this.$attrs.disabledDate(current, {\n          range,\n          dateRange,\n          disabledNow,\n          type\n        })\n      }\n      if (\n        range > 0 &&\n        start &&\n        !end &&\n        (current > moment(start).add(range, 'days') ||\n          current < moment(start).subtract(range, 'days'))\n      ) {\n        return true\n      }\n      if (\n        type === 'subtract' &&\n        current &&\n        (disabledNow\n          ? current.format('YYYY-MM-DD') >= moment().format('YYYY-MM-DD')\n          : current > moment())\n      )\n        return true\n      if (\n        type === 'add' &&\n        current &&\n        (disabledNow\n          ? current.format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD')\n          : current < moment())\n      )\n        return true\n      return current && current > moment()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/components/recent-radio-group"}]}