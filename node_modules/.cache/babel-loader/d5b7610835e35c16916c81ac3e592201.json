{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/hooks/shop/sold-small-course-actions.hook.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/hooks/shop/sold-small-course-actions.hook.js","mtime":1600926555619},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip';\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering';\nimport SoldCourseSmallCourseTransfer from '@/views/biz-modals/sold/course/small-course/transfer';\nimport SoldCourseSmallCourseChange from '@/views/biz-modals/sold/course/small-course/change';\nimport SoldCourseSmallCourseRefund from '@/views/biz-modals/sold/course/small-course/refund';\n\nvar useSmallCourseActions = function useSmallCourseActions() {\n  return {\n    modals: {\n      SoldCourseSmallCourseTransfer: SoldCourseSmallCourseTransfer,\n      SoldCourseSmallCourseChange: SoldCourseSmallCourseChange,\n      SoldDealGatheringTip: SoldDealGatheringTip,\n      SoldDealGathering: SoldDealGathering,\n      SoldCourseSmallCourseRefund: SoldCourseSmallCourseRefund\n    },\n    methods: {\n      onTrasnfer: function onTrasnfer(record) {\n        var _this = this;\n\n        this.$modalRouter.push({\n          name: 'sold-course-small-course-transfer',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: function success() {\n              _this.$emit('refresh');\n            }\n          }\n        });\n      },\n      onChangeSmallCourse: function onChangeSmallCourse(record) {\n        var _this2 = this;\n\n        this.$modalRouter.push({\n          name: 'sold-course-small-course-change',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: function () {\n              var _success = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n                var props, orderSuccessRes, _props, payOrderRes;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(res.type === 'create')) {\n                          _context.next = 8;\n                          break;\n                        }\n\n                        // 创建订单成功\n                        props = {\n                          order_id: res.orderId,\n                          type: 'small_course_order/detail',\n                          message: '订单创建成功',\n                          needPay: true\n                        };\n                        _context.next = 4;\n                        return _this2.createdGatheringTip(props);\n\n                      case 4:\n                        orderSuccessRes = _context.sent;\n\n                        _this2.tipCallBack(res.orderId, 'small_course', orderSuccessRes.type);\n\n                        _context.next = 14;\n                        break;\n\n                      case 8:\n                        if (!(res.type === 'createPay')) {\n                          _context.next = 14;\n                          break;\n                        }\n\n                        // 创建订单成功 并且到支付页面\n                        _props = {\n                          order_id: res.orderId,\n                          type: 'small_course_order/detail'\n                        };\n                        _context.next = 12;\n                        return _this2.createdOrderPay(_props);\n\n                      case 12:\n                        payOrderRes = _context.sent;\n\n                        _this2.payCallBack(res.orderId, 'small_course', payOrderRes.type);\n\n                      case 14:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              function success(_x) {\n                return _success.apply(this, arguments);\n              }\n\n              return success;\n            }()\n          }\n        });\n      },\n      onRefund: function onRefund(record) {\n        var _this3 = this;\n\n        this.$modalRouter.push({\n          name: 'sold-course-small-course-refund',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: function success() {\n              _this3.$emit('refresh');\n            }\n          }\n        });\n      },\n      // 订单收款modal\n      createdOrderPay: function createdOrderPay(props) {\n        var _this4 = this;\n\n        return new Promise(function (resolve, reject) {\n          _this4.$modalRouter.push({\n            name: 'sold-deal-gathering',\n            props: props,\n            on: {\n              success: resolve\n            }\n          });\n        });\n      },\n      // 订单收款回调\n      payCallBack: function () {\n        var _payCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(orderId, modalType, callBackType, soldId, isFamilyCard) {\n          var _this5 = this;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.t0 = callBackType;\n                  _context2.next = _context2.t0 === 'cancel' ? 3 : _context2.t0 === 'pay' ? 5 : 7;\n                  break;\n\n                case 3:\n                  this.$emit('refresh');\n                  return _context2.abrupt(\"break\", 7);\n\n                case 5:\n                  this.createdGatheringTip({\n                    message: '收款成功',\n                    order_id: orderId,\n                    isFamilyCard: isFamilyCard\n                  }).then(function (res) {\n                    _this5.tipCallBack(orderId, modalType, res.type, soldId);\n                  });\n                  return _context2.abrupt(\"break\", 7);\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function payCallBack(_x2, _x3, _x4, _x5, _x6) {\n          return _payCallBack.apply(this, arguments);\n        }\n\n        return payCallBack;\n      }(),\n      // 创建成功，提示框modal\n      createdGatheringTip: function createdGatheringTip(props) {\n        var _this6 = this;\n\n        return new Promise(function (resolve, reject) {\n          _this6.$modalRouter.push({\n            name: 'sold-deal-gathering-tip',\n            props: props,\n            on: {\n              success: resolve\n            }\n          });\n        });\n      },\n      // 提示框回调，gathering-tip\n      tipCallBack: function () {\n        var _tipCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(orderId, modalType, callBackType, soldId, isFamilyCard) {\n          var _this7 = this;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.t0 = callBackType;\n                  _context3.next = _context3.t0 === 'cancel' ? 3 : _context3.t0 === 'Print' ? 5 : _context3.t0 === 'PrintOrder' ? 8 : _context3.t0 === 'ViewOrder' ? 10 : _context3.t0 === 'Pay' ? 13 : _context3.t0 === 'ChangeMember' ? 15 : 17;\n                  break;\n\n                case 3:\n                  this.$emit('refresh');\n                  return _context3.abrupt(\"break\", 17);\n\n                case 5:\n                  this.$emit('refresh');\n                  this.createdOrderPrint(orderId);\n                  return _context3.abrupt(\"break\", 17);\n\n                case 8:\n                  this.printOrder(orderId);\n                  return _context3.abrupt(\"break\", 17);\n\n                case 10:\n                  this.$emit('refresh');\n                  this.createdOrderViewOrder(orderId);\n                  return _context3.abrupt(\"break\", 17);\n\n                case 13:\n                  this.createdOrderPay({\n                    order_id: orderId,\n                    type: modalType\n                  }).then(function (res) {\n                    _this7.payCallBack(orderId, modalType, res.type, soldId, isFamilyCard);\n                  });\n                  return _context3.abrupt(\"break\", 17);\n\n                case 15:\n                  this.onChangeMember({\n                    id: soldId\n                  });\n                  return _context3.abrupt(\"break\", 17);\n\n                case 17:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function tipCallBack(_x7, _x8, _x9, _x10, _x11) {\n          return _tipCallBack.apply(this, arguments);\n        }\n\n        return tipCallBack;\n      }(),\n      // 打印小票\n      printOrder: function printOrder(order_id) {\n        window.open('/ticket/gathering-print?id=' + order_id, '_blank', 'width=800,height=600');\n      },\n      // 打印合同\n      createdOrderPrint: function createdOrderPrint(order_id) {\n        var url = \"\".concat(window.location.origin, \"/common/contract-preview?id=\").concat(order_id);\n        window.open(url);\n      },\n      // 查看订单\n      createdOrderViewOrder: function createdOrderViewOrder(order_id) {\n        this.$router.push({\n          name: 'shop-finance-order-info-collection-details',\n          query: {\n            id: order_id\n          }\n        });\n      }\n    }\n  };\n};\n\nexport default useSmallCourseActions;",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/hooks/shop/sold-small-course-actions.hook.js"],"names":["SoldDealGatheringTip","SoldDealGathering","SoldCourseSmallCourseTransfer","SoldCourseSmallCourseChange","SoldCourseSmallCourseRefund","useSmallCourseActions","modals","methods","onTrasnfer","record","$modalRouter","push","name","props","id","on","success","$emit","onChangeSmallCourse","res","type","order_id","orderId","message","needPay","createdGatheringTip","orderSuccessRes","tipCallBack","createdOrderPay","payOrderRes","payCallBack","onRefund","Promise","resolve","reject","modalType","callBackType","soldId","isFamilyCard","then","createdOrderPrint","printOrder","createdOrderViewOrder","onChangeMember","window","open","url","location","origin","$router","query"],"mappings":"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","sourcesContent":["import SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip'\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldCourseSmallCourseTransfer from '@/views/biz-modals/sold/course/small-course/transfer'\nimport SoldCourseSmallCourseChange from '@/views/biz-modals/sold/course/small-course/change'\nimport SoldCourseSmallCourseRefund from '@/views/biz-modals/sold/course/small-course/refund'\n\nconst useSmallCourseActions = () => {\n  return {\n    modals: {\n      SoldCourseSmallCourseTransfer,\n      SoldCourseSmallCourseChange,\n      SoldDealGatheringTip,\n      SoldDealGathering,\n      SoldCourseSmallCourseRefund\n    },\n    methods: {\n      onTrasnfer(record) {\n        this.$modalRouter.push({\n          name: 'sold-course-small-course-transfer',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: () => {\n              this.$emit('refresh')\n            }\n          }\n        })\n      },\n      onChangeSmallCourse(record) {\n        this.$modalRouter.push({\n          name: 'sold-course-small-course-change',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: async res => {\n              if (res.type === 'create') {\n                // 创建订单成功\n                let props = {\n                  order_id: res.orderId,\n                  type: 'small_course_order/detail',\n                  message: '订单创建成功',\n                  needPay: true\n                }\n                let orderSuccessRes = await this.createdGatheringTip(props)\n                this.tipCallBack(\n                  res.orderId,\n                  'small_course',\n                  orderSuccessRes.type\n                )\n              } else if (res.type === 'createPay') {\n                // 创建订单成功 并且到支付页面\n                let props = {\n                  order_id: res.orderId,\n                  type: 'small_course_order/detail'\n                }\n                let payOrderRes = await this.createdOrderPay(props)\n                this.payCallBack(res.orderId, 'small_course', payOrderRes.type)\n              }\n            }\n          }\n        })\n      },\n      onRefund(record) {\n        this.$modalRouter.push({\n          name: 'sold-course-small-course-refund',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: () => {\n              this.$emit('refresh')\n            }\n          }\n        })\n      },\n      // 订单收款modal\n      createdOrderPay(props) {\n        return new Promise((resolve, reject) => {\n          this.$modalRouter.push({\n            name: 'sold-deal-gathering',\n            props,\n            on: {\n              success: resolve\n            }\n          })\n        })\n      },\n      // 订单收款回调\n      async payCallBack(\n        orderId,\n        modalType,\n        callBackType,\n        soldId,\n        isFamilyCard\n      ) {\n        switch (callBackType) {\n          case 'cancel':\n            this.$emit('refresh')\n            break\n          case 'pay':\n            this.createdGatheringTip({\n              message: '收款成功',\n              order_id: orderId,\n              isFamilyCard\n            }).then(res => {\n              this.tipCallBack(orderId, modalType, res.type, soldId)\n            })\n            break\n        }\n      },\n      // 创建成功，提示框modal\n      createdGatheringTip(props) {\n        return new Promise((resolve, reject) => {\n          this.$modalRouter.push({\n            name: 'sold-deal-gathering-tip',\n            props,\n            on: {\n              success: resolve\n            }\n          })\n        })\n      },\n      // 提示框回调，gathering-tip\n      async tipCallBack(\n        orderId,\n        modalType,\n        callBackType,\n        soldId,\n        isFamilyCard\n      ) {\n        switch (callBackType) {\n          case 'cancel':\n            this.$emit('refresh')\n            break\n          case 'Print':\n            this.$emit('refresh')\n            this.createdOrderPrint(orderId)\n            break\n          case 'PrintOrder':\n            this.printOrder(orderId)\n            break\n          case 'ViewOrder':\n            this.$emit('refresh')\n            this.createdOrderViewOrder(orderId)\n            break\n          case 'Pay':\n            this.createdOrderPay({ order_id: orderId, type: modalType }).then(\n              res => {\n                this.payCallBack(\n                  orderId,\n                  modalType,\n                  res.type,\n                  soldId,\n                  isFamilyCard\n                )\n              }\n            )\n            break\n          case 'ChangeMember':\n            this.onChangeMember({\n              id: soldId\n            })\n            break\n        }\n      },\n      // 打印小票\n      printOrder(order_id) {\n        window.open(\n          '/ticket/gathering-print?id=' + order_id,\n          '_blank',\n          'width=800,height=600'\n        )\n      },\n      // 打印合同\n      createdOrderPrint(order_id) {\n        let url = `${window.location.origin}/common/contract-preview?id=${order_id}`\n        window.open(url)\n      },\n      // 查看订单\n      createdOrderViewOrder(order_id) {\n        this.$router.push({\n          name: 'shop-finance-order-info-collection-details',\n          query: {\n            id: order_id\n          }\n        })\n      }\n    }\n  }\n}\n\nexport default useSmallCourseActions\n"]}]}