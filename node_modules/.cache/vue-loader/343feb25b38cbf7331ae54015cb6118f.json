{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/map.vue","mtime":1600926555923},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { RegionService } from '../../../services/region.service'\nimport { QqMapService } from '@/services/qq-map.service'\nimport { AppConfig } from '@/constants/config'\nimport { findIndex, cloneDeep } from 'lodash-es'\nexport default {\n  bem: {\n    map: 'st-modal-map'\n  },\n  name: 'StModalMap',\n  serviceInject() {\n    return {\n      regionService: RegionService,\n      appConfig: AppConfig,\n      qqMapService: QqMapService\n    }\n  },\n  computed: {\n    isAdd() {\n      return this.lat === '' || this.lng === ''\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      default() {\n        return '门店定位'\n      }\n    },\n    address: {\n      type: String,\n      default() {\n        return '无'\n      }\n    },\n    province: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    city: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    district: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    lat: {\n      type: String,\n      default() {\n        return ''\n      }\n    },\n    lng: {\n      type: String,\n      default() {\n        return ''\n      }\n    }\n  },\n  data() {\n    return {\n      show: false,\n      dropdownVisible: false,\n      errorText: '',\n      latlngIsOk: true,\n      addressIsOk: true,\n      fieldNames: {\n        label: 'name',\n        value: 'id',\n        children: 'children'\n      },\n      regions: [],\n      searchText: '',\n      selectCity: '上海市',\n      PC: [310000, 310100],\n      st_address: '',\n      st_province: {},\n      st_city: {},\n      st_district: {},\n      // 定位data\n      locationData: {},\n      // 注释以下三个对象，提升vue性能\n      // mapObject: null,\n      // markerObject: null,\n      // searchServiceObject: null,\n      locationObject: null,\n      // 检索列表\n      poisList: [],\n      selectData: {\n        province: {},\n        city: {},\n        district: {},\n        address: '',\n        lat: '',\n        lng: ''\n      }\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  watch: {\n    st_address(newVal, oldVal) {\n      this.selectData.address = newVal\n      this.addressIsOk = true\n      this.errorText = this.latlngIsOk ? '' : '请选择具体地址!'\n    }\n  },\n  methods: {\n    init() {\n      // 获取省市区\n      this.getRegions()\n      this.st_address = this.address\n      this.st_province = cloneDeep(this.province)\n      this.st_city = cloneDeep(this.city)\n      this.st_district = cloneDeep(this.district)\n      if (this.isAdd) {\n        this.qqMapService\n          .getLocation(\n            `https://apis.map.qq.com/ws/location/v1/ip?output=jsonp&key=${this.appConfig.QQ_MAP_KEY}&callback=`\n          )\n          .subscribe(res => {\n            if (res.status === 0) {\n              let code = res.result.ad_info.adcode\n              let provinceId = `${code}`.substr(0, 2) + '0000'\n              let cityId = `${code}`.substr(0, 4) + '00'\n              // 定位成功\n              this.selectData.province = {\n                // id: ~~(res.result.ad_info.adcode / 10000) * 10000,\n                id: +provinceId,\n                name: res.result.ad_info.province\n              }\n              this.selectData.city = {\n                // id: ~~(res.result.ad_info.adcode / 100) * 100,\n                id: +cityId,\n                name: res.result.ad_info.city\n              }\n              this.PC = [+provinceId, +cityId, res.result.ad_info.adcode]\n              this.selectCity = res.result.ad_info.city\n              this.locationData = cloneDeep(res.result)\n            } else {\n              // 定位失败,设置为上海市政府\n              this.locationFailed()\n              this.locationData = {\n                location: {\n                  lat: '31.230350',\n                  lng: '121.473720'\n                }\n              }\n            }\n            // 实例化map\n            const { lat, lng } = this.locationData.location\n            this.qqMapService.init({ lat, lng }).then(() => {\n              this.initSearch({ location: this.selectCity })\n            })\n          })\n      } else {\n        this.selectData.province = cloneDeep(this.st_province)\n        this.selectData.city = cloneDeep(this.st_city)\n        this.PC = [this.st_province.id, this.st_city.id]\n        this.selectCity = this.st_city.name\n        this.locationData = {\n          location: {\n            lat: this.lat,\n            lng: this.lng\n          }\n        }\n        // 实例化map\n        const { lat, lng } = this.locationData.location\n        this.qqMapService.init({ lat, lng }).then(() => {\n          this.initSearch({ location: this.selectCity })\n        })\n      }\n    },\n    getRegions() {\n      this.regionService.getRegionPC().subscribe(res => {\n        this.regions = res\n      })\n    },\n    // 定位失败\n    locationFailed() {\n      this.selectData.province = {\n        id: 310000,\n        name: '上海市'\n      }\n      this.selectData.city = {\n        id: 310100,\n        name: '上海市'\n      }\n      this.selectCity = '上海市'\n    },\n    // 省市change\n    cascaderChange(data) {\n      let province = cloneDeep(\n        this.regions[findIndex(this.regions, o => o.id === data[0])]\n      )\n      let city = cloneDeep(\n        province.children[findIndex(province.children, o => o.id === data[1])]\n      )\n      this.selectData.province = {\n        id: data[0],\n        name: province.name\n      }\n      this.selectData.city = {\n        id: data[1],\n        name: city.name\n      }\n      this.selectCity = city.name\n      this.searchText = ''\n      this.poisList = []\n      this.selectData.address = this.st_address = ''\n      this.selectData.lat = ''\n      this.selectData.lng = ''\n    },\n    // 实例化检索服务\n    initSearch({ location }) {\n      let that = this\n      this.searchServiceObject = new qq.maps.SearchService({\n        location: '上海市',\n        autoExtend: false,\n        // eslint-disable-next-line\n        error: function(error) {\n          that.poisList = []\n        },\n        complete: function(results) {\n          if (results.type === 'POI_LIST') {\n            if (results.detail.pois.length) {\n              results.detail.pois.forEach((i, index) => {\n                let latLng = new qq.maps.LatLng(i.latLng.lat, i.latLng.lng)\n                that.initLocation(index).searchCityByLatLng(latLng)\n              })\n            }\n            that.poisList = cloneDeep(results.detail.pois)\n          } else {\n            that.poisList = []\n          }\n        }\n      })\n    },\n    // 实例化坐标定位服务\n    initLocation(index) {\n      let that = this\n      return new qq.maps.CityService({\n        complete: function(results) {\n          that.$set(that.poisList[index], 'location', results)\n        }\n      })\n    },\n    onSearch(data) {\n      this.dropdownVisible = true\n      this.searchServiceObject.setLocation(this.selectCity)\n      this.searchServiceObject.search(data)\n    },\n    onChange(data) {\n      this.dropdownVisible = true\n      this.searchServiceObject.setLocation(this.selectCity)\n      this.searchServiceObject.search(data.target.value)\n    },\n    selectLocation(data) {\n      this.dropdownVisible = false\n      this.searchText = data.name\n      this.selectData.address = this.st_address = data.address\n      let position = new qq.maps.LatLng(data.latLng.lat, data.latLng.lng)\n      this.qqMapService.resetMap(position)\n      this.selectData.lat = String(data.latLng.lat)\n      this.selectData.lng = String(data.latLng.lng)\n    },\n    searchInput() {\n      this.latlngIsOk = true\n      this.errorText = this.addressIsOk ? '' : '请输入详细地址！'\n    },\n    handleOk() {\n      this.latlngIsOk = this.selectData.lat !== '' && this.selectData.lng !== ''\n      this.addressIsOk = this.selectData.address !== ''\n      if (!this.latlngIsOk && !this.addressIsOk) {\n        this.errorText = '请选择具体地址并输入详细地址!'\n      } else {\n        if (!this.latlngIsOk) {\n          this.errorText = '请选择具体地址!'\n        } else if (!this.addressIsOk) {\n          this.errorText = '请输入详细地址!'\n        } else {\n          this.qqMapService\n            .getLocation(\n              `https://apis.map.qq.com/ws/geocoder/v1/?location=${this.selectData.lat},${this.selectData.lng}&output=jsonp&key=${this.appConfig.QQ_MAP_KEY}&callback=`\n            )\n            .subscribe(res => {\n              let code = res.result.ad_info.adcode\n              let provinceId = `${code}`.substr(0, 2) + '0000'\n              let cityId = `${code}`.substr(0, 4) + '00'\n              // 定位成功\n              this.selectData.province.id = +provinceId\n              this.selectData.province.name = res.result.ad_info.province\n              this.selectData.city.id = +cityId\n              this.selectData.city.name = res.result.ad_info.city\n              this.selectData.district.id = +res.result.ad_info.adcode\n              this.selectData.district.name = res.result.ad_info.district\n              this.selectData.district.id = +res.result.ad_info.adcode\n              this.selectData.district.name = res.result.ad_info.district\n              this.$emit('ok', this.selectData)\n              this.show = false\n            })\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["map.vue"],"names":[],"mappingsfile":"map.vue","sourceRoot":"src/views/biz-modals/shop","sourcesContent":["<template>\n  <st-modal\n    :title=\"title\"\n    v-model=\"show\"\n    :footer=\"null\"\n    wrapClassName=\"st-modal-map\"\n    width=\"484px\"\n  >\n    <div :class=\"map('search')\">\n      <a-cascader\n        :class=\"map('cascader')\"\n        :options=\"regions\"\n        :fieldNames=\"fieldNames\"\n        v-model=\"PC\"\n        @change=\"cascaderChange\"\n      >\n        <a href=\"javascript:void(0)\" :class=\"map('cascader__btn')\">\n          {{ selectCity }}\n          <st-icon type=\"down\" size=\"12px\" :class=\"map('icon')\"></st-icon>\n        </a>\n      </a-cascader>\n      <div :class=\"map('search-input')\">\n        <a-dropdown :trigger=\"['click']\" v-model=\"dropdownVisible\">\n          <a-input-search\n            @change=\"onChange\"\n            @input=\"searchInput\"\n            :class=\"{ error: !latlngIsOk }\"\n            placeholder=\"请输入街道、小区或商圈名称\"\n            v-model=\"searchText\"\n            @search=\"onSearch\"\n          />\n          <ul\n            slot=\"overlay\"\n            :class=\"map('search-menu')\"\n            v-scrollBar=\"{ stopPropagation: true }\"\n          >\n            <li :class=\"map('search-faild')\" v-if=\"!poisList.length\">无结果</li>\n            <template v-if=\"poisList.length\">\n              <li\n                @click=\"selectLocation(item)\"\n                :class=\"map('search-item')\"\n                v-for=\"(item, index) in poisList\"\n                :key=\"index\"\n              >\n                <p :class=\"map('search-title')\">{{ item.name }}</p>\n                <span :class=\"map('search-describe')\" v-if=\"item.location\">\n                  {{\n                    item.location.detail.detail\n                      .split(',')\n                      .reverse()\n                      .join('')\n                  }}\n                </span>\n              </li>\n            </template>\n          </ul>\n        </a-dropdown>\n      </div>\n    </div>\n    <div :class=\"map('map')\" id=\"mapcontainer\"></div>\n    <div :class=\"map('address')\">\n      <a-textarea\n        :class=\"{ error: !addressIsOk }\"\n        placeholder=\"详细地址，例：16号楼5层502\"\n        v-model=\"st_address\"\n        :rows=\"3\"\n      />\n    </div>\n    <div :class=\"map('button')\">\n      <span v-if=\"!latlngIsOk || !addressIsOk\" :class=\"map('error-info')\">\n        {{ errorText }}\n      </span>\n      <st-button type=\"primary\" @click=\"handleOk\">提交</st-button>\n    </div>\n  </st-modal>\n</template>\n<script>\nimport { RegionService } from '../../../services/region.service'\nimport { QqMapService } from '@/services/qq-map.service'\nimport { AppConfig } from '@/constants/config'\nimport { findIndex, cloneDeep } from 'lodash-es'\nexport default {\n  bem: {\n    map: 'st-modal-map'\n  },\n  name: 'StModalMap',\n  serviceInject() {\n    return {\n      regionService: RegionService,\n      appConfig: AppConfig,\n      qqMapService: QqMapService\n    }\n  },\n  computed: {\n    isAdd() {\n      return this.lat === '' || this.lng === ''\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      default() {\n        return '门店定位'\n      }\n    },\n    address: {\n      type: String,\n      default() {\n        return '无'\n      }\n    },\n    province: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    city: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    district: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    lat: {\n      type: String,\n      default() {\n        return ''\n      }\n    },\n    lng: {\n      type: String,\n      default() {\n        return ''\n      }\n    }\n  },\n  data() {\n    return {\n      show: false,\n      dropdownVisible: false,\n      errorText: '',\n      latlngIsOk: true,\n      addressIsOk: true,\n      fieldNames: {\n        label: 'name',\n        value: 'id',\n        children: 'children'\n      },\n      regions: [],\n      searchText: '',\n      selectCity: '上海市',\n      PC: [310000, 310100],\n      st_address: '',\n      st_province: {},\n      st_city: {},\n      st_district: {},\n      // 定位data\n      locationData: {},\n      // 注释以下三个对象，提升vue性能\n      // mapObject: null,\n      // markerObject: null,\n      // searchServiceObject: null,\n      locationObject: null,\n      // 检索列表\n      poisList: [],\n      selectData: {\n        province: {},\n        city: {},\n        district: {},\n        address: '',\n        lat: '',\n        lng: ''\n      }\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  watch: {\n    st_address(newVal, oldVal) {\n      this.selectData.address = newVal\n      this.addressIsOk = true\n      this.errorText = this.latlngIsOk ? '' : '请选择具体地址!'\n    }\n  },\n  methods: {\n    init() {\n      // 获取省市区\n      this.getRegions()\n      this.st_address = this.address\n      this.st_province = cloneDeep(this.province)\n      this.st_city = cloneDeep(this.city)\n      this.st_district = cloneDeep(this.district)\n      if (this.isAdd) {\n        this.qqMapService\n          .getLocation(\n            `https://apis.map.qq.com/ws/location/v1/ip?output=jsonp&key=${this.appConfig.QQ_MAP_KEY}&callback=`\n          )\n          .subscribe(res => {\n            if (res.status === 0) {\n              let code = res.result.ad_info.adcode\n              let provinceId = `${code}`.substr(0, 2) + '0000'\n              let cityId = `${code}`.substr(0, 4) + '00'\n              // 定位成功\n              this.selectData.province = {\n                // id: ~~(res.result.ad_info.adcode / 10000) * 10000,\n                id: +provinceId,\n                name: res.result.ad_info.province\n              }\n              this.selectData.city = {\n                // id: ~~(res.result.ad_info.adcode / 100) * 100,\n                id: +cityId,\n                name: res.result.ad_info.city\n              }\n              this.PC = [+provinceId, +cityId, res.result.ad_info.adcode]\n              this.selectCity = res.result.ad_info.city\n              this.locationData = cloneDeep(res.result)\n            } else {\n              // 定位失败,设置为上海市政府\n              this.locationFailed()\n              this.locationData = {\n                location: {\n                  lat: '31.230350',\n                  lng: '121.473720'\n                }\n              }\n            }\n            // 实例化map\n            const { lat, lng } = this.locationData.location\n            this.qqMapService.init({ lat, lng }).then(() => {\n              this.initSearch({ location: this.selectCity })\n            })\n          })\n      } else {\n        this.selectData.province = cloneDeep(this.st_province)\n        this.selectData.city = cloneDeep(this.st_city)\n        this.PC = [this.st_province.id, this.st_city.id]\n        this.selectCity = this.st_city.name\n        this.locationData = {\n          location: {\n            lat: this.lat,\n            lng: this.lng\n          }\n        }\n        // 实例化map\n        const { lat, lng } = this.locationData.location\n        this.qqMapService.init({ lat, lng }).then(() => {\n          this.initSearch({ location: this.selectCity })\n        })\n      }\n    },\n    getRegions() {\n      this.regionService.getRegionPC().subscribe(res => {\n        this.regions = res\n      })\n    },\n    // 定位失败\n    locationFailed() {\n      this.selectData.province = {\n        id: 310000,\n        name: '上海市'\n      }\n      this.selectData.city = {\n        id: 310100,\n        name: '上海市'\n      }\n      this.selectCity = '上海市'\n    },\n    // 省市change\n    cascaderChange(data) {\n      let province = cloneDeep(\n        this.regions[findIndex(this.regions, o => o.id === data[0])]\n      )\n      let city = cloneDeep(\n        province.children[findIndex(province.children, o => o.id === data[1])]\n      )\n      this.selectData.province = {\n        id: data[0],\n        name: province.name\n      }\n      this.selectData.city = {\n        id: data[1],\n        name: city.name\n      }\n      this.selectCity = city.name\n      this.searchText = ''\n      this.poisList = []\n      this.selectData.address = this.st_address = ''\n      this.selectData.lat = ''\n      this.selectData.lng = ''\n    },\n    // 实例化检索服务\n    initSearch({ location }) {\n      let that = this\n      this.searchServiceObject = new qq.maps.SearchService({\n        location: '上海市',\n        autoExtend: false,\n        // eslint-disable-next-line\n        error: function(error) {\n          that.poisList = []\n        },\n        complete: function(results) {\n          if (results.type === 'POI_LIST') {\n            if (results.detail.pois.length) {\n              results.detail.pois.forEach((i, index) => {\n                let latLng = new qq.maps.LatLng(i.latLng.lat, i.latLng.lng)\n                that.initLocation(index).searchCityByLatLng(latLng)\n              })\n            }\n            that.poisList = cloneDeep(results.detail.pois)\n          } else {\n            that.poisList = []\n          }\n        }\n      })\n    },\n    // 实例化坐标定位服务\n    initLocation(index) {\n      let that = this\n      return new qq.maps.CityService({\n        complete: function(results) {\n          that.$set(that.poisList[index], 'location', results)\n        }\n      })\n    },\n    onSearch(data) {\n      this.dropdownVisible = true\n      this.searchServiceObject.setLocation(this.selectCity)\n      this.searchServiceObject.search(data)\n    },\n    onChange(data) {\n      this.dropdownVisible = true\n      this.searchServiceObject.setLocation(this.selectCity)\n      this.searchServiceObject.search(data.target.value)\n    },\n    selectLocation(data) {\n      this.dropdownVisible = false\n      this.searchText = data.name\n      this.selectData.address = this.st_address = data.address\n      let position = new qq.maps.LatLng(data.latLng.lat, data.latLng.lng)\n      this.qqMapService.resetMap(position)\n      this.selectData.lat = String(data.latLng.lat)\n      this.selectData.lng = String(data.latLng.lng)\n    },\n    searchInput() {\n      this.latlngIsOk = true\n      this.errorText = this.addressIsOk ? '' : '请输入详细地址！'\n    },\n    handleOk() {\n      this.latlngIsOk = this.selectData.lat !== '' && this.selectData.lng !== ''\n      this.addressIsOk = this.selectData.address !== ''\n      if (!this.latlngIsOk && !this.addressIsOk) {\n        this.errorText = '请选择具体地址并输入详细地址!'\n      } else {\n        if (!this.latlngIsOk) {\n          this.errorText = '请选择具体地址!'\n        } else if (!this.addressIsOk) {\n          this.errorText = '请输入详细地址!'\n        } else {\n          this.qqMapService\n            .getLocation(\n              `https://apis.map.qq.com/ws/geocoder/v1/?location=${this.selectData.lat},${this.selectData.lng}&output=jsonp&key=${this.appConfig.QQ_MAP_KEY}&callback=`\n            )\n            .subscribe(res => {\n              let code = res.result.ad_info.adcode\n              let provinceId = `${code}`.substr(0, 2) + '0000'\n              let cityId = `${code}`.substr(0, 4) + '00'\n              // 定位成功\n              this.selectData.province.id = +provinceId\n              this.selectData.province.name = res.result.ad_info.province\n              this.selectData.city.id = +cityId\n              this.selectData.city.name = res.result.ad_info.city\n              this.selectData.district.id = +res.result.ad_info.adcode\n              this.selectData.district.name = res.result.ad_info.district\n              this.selectData.district.id = +res.result.ad_info.adcode\n              this.selectData.district.name = res.result.ad_info.district\n              this.$emit('ok', this.selectData)\n              this.show = false\n            })\n        }\n      }\n    }\n  }\n}\n</script>\n"]}]}