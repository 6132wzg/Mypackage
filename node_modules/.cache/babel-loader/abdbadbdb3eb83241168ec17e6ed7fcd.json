{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/utils/date.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/utils/date.js","mtime":1600926555641},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import moment from 'moment';\nexport var momentPlus = {\n  _defaultOpts: {\n    baseDate: new Date(),\n    limit: {\n      num: 5,\n      unit: 'years'\n    }\n  },\n  _calc: function _calc(num, unit, opts) {\n    var action = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'add';\n    opts = Object.assign(this._defaultOpts, opts);\n    num = +num || 0;\n    var _opts = opts,\n        baseDate = _opts.baseDate,\n        limit = _opts.limit;\n    var mathAction = action === 'add' ? 'min' : 'max';\n    var date = moment(baseDate)[action](num, unit);\n    /**\n     * 处理异常日期 NaN\n     */\n\n    if (!+date) {\n      date = moment();\n    }\n\n    return moment(Math[mathAction](date, moment(baseDate)[action](limit.num, limit.unit)));\n  },\n\n  /**\n   * 计算日期边界值\n   * 包含容错处理（invalid date）\n   * 参考 moment.add\n   * @param baseDate 基础日期\n   * @param num 操作数量\n   * @param unit 操作数量对应的单位\n   */\n  add: function add(num, unit, opts) {\n    return this._calc(num, unit, opts, 'add');\n  },\n\n  /**\n   * 计算日期边界值\n   * 包含容错处理（invalid date）\n   * 参考 moment.subtract\n   * @param baseDate 基础日期\n   * @param num 操作数量\n   * @param unit 操作数量对应的单位\n   */\n  subtract: function subtract(num, unit, opts) {\n    return this._calc(num, unit, opts, 'subtract');\n  }\n};",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/utils/date.js"],"names":["moment","momentPlus","_defaultOpts","baseDate","Date","limit","num","unit","_calc","opts","action","Object","assign","mathAction","date","Math","add","subtract"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,IAAIC,IAAJ,EADE;AAEZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE,CADA;AAELC,MAAAA,IAAI,EAAE;AAFD;AAFK,GADU;AAQxBC,EAAAA,KARwB,iBAQlBF,GARkB,EAQbC,IARa,EAQPE,IARO,EAQe;AAAA,QAAhBC,MAAgB,uEAAP,KAAO;AACrCD,IAAAA,IAAI,GAAGE,MAAM,CAACC,MAAP,CAAc,KAAKV,YAAnB,EAAiCO,IAAjC,CAAP;AACAH,IAAAA,GAAG,GAAG,CAACA,GAAD,IAAQ,CAAd;AAFqC,gBAGTG,IAHS;AAAA,QAG7BN,QAH6B,SAG7BA,QAH6B;AAAA,QAGnBE,KAHmB,SAGnBA,KAHmB;AAIrC,QAAMQ,UAAU,GAAGH,MAAM,KAAK,KAAX,GAAmB,KAAnB,GAA2B,KAA9C;AACA,QAAII,IAAI,GAAGd,MAAM,CAACG,QAAD,CAAN,CAAiBO,MAAjB,EAAyBJ,GAAzB,EAA8BC,IAA9B,CAAX;AACA;;;;AAGA,QAAI,CAAC,CAACO,IAAN,EAAY;AACVA,MAAAA,IAAI,GAAGd,MAAM,EAAb;AACD;;AACD,WAAOA,MAAM,CACXe,IAAI,CAACF,UAAD,CAAJ,CAAiBC,IAAjB,EAAuBd,MAAM,CAACG,QAAD,CAAN,CAAiBO,MAAjB,EAAyBL,KAAK,CAACC,GAA/B,EAAoCD,KAAK,CAACE,IAA1C,CAAvB,CADW,CAAb;AAGD,GAvBuB;;AAwBxB;;;;;;;;AAQAS,EAAAA,GAhCwB,eAgCpBV,GAhCoB,EAgCfC,IAhCe,EAgCTE,IAhCS,EAgCH;AACnB,WAAO,KAAKD,KAAL,CAAWF,GAAX,EAAgBC,IAAhB,EAAsBE,IAAtB,EAA4B,KAA5B,CAAP;AACD,GAlCuB;;AAmCxB;;;;;;;;AAQAQ,EAAAA,QA3CwB,oBA2CfX,GA3Ce,EA2CVC,IA3CU,EA2CJE,IA3CI,EA2CE;AACxB,WAAO,KAAKD,KAAL,CAAWF,GAAX,EAAgBC,IAAhB,EAAsBE,IAAtB,EAA4B,UAA5B,CAAP;AACD;AA7CuB,CAAnB","sourcesContent":["import moment from 'moment'\n\nexport const momentPlus = {\n  _defaultOpts: {\n    baseDate: new Date(),\n    limit: {\n      num: 5,\n      unit: 'years'\n    }\n  },\n  _calc(num, unit, opts, action = 'add') {\n    opts = Object.assign(this._defaultOpts, opts)\n    num = +num || 0\n    const { baseDate, limit } = opts\n    const mathAction = action === 'add' ? 'min' : 'max'\n    let date = moment(baseDate)[action](num, unit)\n    /**\n     * 处理异常日期 NaN\n     */\n    if (!+date) {\n      date = moment()\n    }\n    return moment(\n      Math[mathAction](date, moment(baseDate)[action](limit.num, limit.unit))\n    )\n  },\n  /**\n   * 计算日期边界值\n   * 包含容错处理（invalid date）\n   * 参考 moment.add\n   * @param baseDate 基础日期\n   * @param num 操作数量\n   * @param unit 操作数量对应的单位\n   */\n  add(num, unit, opts) {\n    return this._calc(num, unit, opts, 'add')\n  },\n  /**\n   * 计算日期边界值\n   * 包含容错处理（invalid date）\n   * 参考 moment.subtract\n   * @param baseDate 基础日期\n   * @param num 操作数量\n   * @param unit 操作数量对应的单位\n   */\n  subtract(num, unit, opts) {\n    return this._calc(num, unit, opts, 'subtract')\n  }\n}\n"]}]}