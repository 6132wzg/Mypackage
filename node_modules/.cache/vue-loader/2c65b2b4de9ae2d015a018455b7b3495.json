{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/package/update-expiration-date.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/package/update-expiration-date.vue","mtime":1596188219496},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport { UpdateExpirationDateService } from './update-expiration-date.service.ts'\nimport { ruleOptions } from './update-expiration-date.config'\nimport { get } from 'lodash'\nexport default {\n  name: 'ModalSoldCourseExtend',\n  bem: {\n    extend: 'modal-sold-course-extend'\n  },\n  serviceInject() {\n    return {\n      service: UpdateExpirationDateService\n    }\n  },\n  rxState() {\n    const { packageInfo$, loading$ } = this.service\n    return { packageInfo$, loading$ }\n  },\n  props: ['id'],\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      date: void 0,\n      show: false\n    }\n  },\n  computed: {\n    expirationDate() {\n      const time = get(this.packageInfo$, 'end_time')\n      return time\n    }\n  },\n  created() {\n    this.service.getPackageInfo(this.id).subscribe()\n  },\n  methods: {\n    moment,\n    disabledDate(current) {\n      if (moment(get(this.packageInfo$, 'end_time')) < moment()) return true\n      return (\n        moment(get(this.packageInfo$, 'end_time')) < current ||\n        current < moment()\n      )\n    },\n    onChangeDate(value) {\n      this.date = value\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        values.valid_end_time = moment(values.valid_end_time).format(\n          'YYYY-MM-DD'\n        )\n        this.service\n          .setValidTime({\n            id: this.id,\n            ...values\n          })\n          .subscribe(res => {\n            this.$emit('success')\n            this.show = false\n          })\n      })\n    }\n  }\n}\n",null]}