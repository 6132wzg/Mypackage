SentryReporter.init({
  //   enable: false,
  debug: true,
  release: 'first',
  dsn: 'http://b62eb16d87444162ac19b1a5b28ba76f@ats.styd.cn/1',
  environment: 'pre',
  resourceError: {
    // level: 'error'
    // captureTagName: ['img', 'audio', 'video','script']
  },
  httpError: {
    // level: 'error'
    responseHeaderTags: ['cache-control']
  }
})
  .setFramework({
    Vue: window.Vue
  })
  .setTagsContext({
    tag1: 1
  })
  .setExtraContext({
    extra1: 1
  })
  .setUserContext({
    name: 'lee'
  })
  .captureBreadcrumb({
    category: 'test',
    message: 'test bread'
  })

function err1() {
  new Promise(() => {
    a
  })
}
function err2() {
  Promise.reject({ a: 1, noReport: true })
}

function err3() {
  axios.get('http://a.b')
}

function errGet1() {
  axios.get('http://jsonplaceholder.typicode.com/pos', {
    params: {
      get1: 1,
      get2: 2
    }
  })
}
function errGet2() {
  axios.get('http://jsonplaceholder.typicode.com/post2', {})
}
function postErr1() {
  axios.post('http://jsonplaceholder.typicode.com/pos', { post1: 1, post2: 2 })
}

function postErr2() {
  axios.post('http://jsonplaceholder.typicode.com/post2')
}

function errImg1() {
  const img = document.createElement('img')
  img.src = 'a.jpg?123'
  img.setAttribute('test', 1)
  document.body.appendChild(img)
}

function errImg2() {
  const img = document.createElement('img')
  img.src = 'b.png?123'
  img.setAttribute('test2', 2)
  document.body.appendChild(img)
}

function errLink1() {
  const link = document.createElement('link')
  link.href = 'a.css'
  link.rel = 'stylesheet'
  document.body.appendChild(link)
}

function errScript1() {
  const s = document.createElement('script')
  s.src = '/a.js'
  s.type = 'text/javascript'
  document.body.appendChild(s)
}

function jqueryGet1() {
  $.ajax({
    url: 'http://a.b'
  })
}

function jqueryPost1() {
  $.ajax({
    method: 'POST',
    url: 'http://jsonplaceholder.typicode.com/pos',
    data: {
      post3: 1,
      post4: '2'
    }
  })
}

function vueErr1() {
  new Vue({
    el: '#app',
    created() {
      cc
    }
  })
}

function throwErr1() {
  throw new Error('err11')
}

function setTimeoutErr1() {
  setTimeout(() => {
    throw new Error('setTimeoutError')
  })
}
