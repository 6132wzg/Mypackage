{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/scope.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/scope.vue","mtime":1597396799943},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ScopeService } from \"./scope.service\";\nimport { ruleOptions } from \"./scope.config\";\nimport { BATCH_TYPE, BATCH_INFO } from '@/constants/common/batch-operation';\nimport { cloneDeep, remove, every, filter, reduce, forEach, find, intersection } from 'lodash-es';\nexport default {\n  name: 'ModalSoldCourseScope',\n  bem: {\n    add: 'page-shop-add-range-package',\n    basic: 'page-shop-add-basic-package',\n    b: 'modal-sold-course-scope'\n  },\n  serviceProviders: function serviceProviders() {\n    return [ScopeService];\n  },\n  serviceInject: function serviceInject() {\n    return {\n      scopeService: ScopeService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list_num: this.scopeService.list_num$,\n      loading: this.scopeService.loading$,\n      coachList: this.scopeService.coachList$,\n      teamCourseList: this.scopeService.teamCourseList$,\n      teamCourseTreeList: this.scopeService.teamCourseTreeList$,\n      personalCourseList: this.scopeService.personalCourseList$,\n      personalCourseTreeList: this.scopeService.personalCourseTreeList$\n    };\n  },\n  props: {\n    ids: {\n      type: Array,\n      required: true\n    },\n    searchQuery: {\n      type: Object\n    }\n  },\n  mounted: function mounted() {\n    this.scopeService.init(this.searchQuery).subscribe();\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      expandedKeys: [],\n      autoExpandParent: true,\n      teamCourseIds: [],\n      expandedKeysCourse: [],\n      autoExpandParentCourse: true,\n      teamCourseList: [],\n      searchCourseValue: '',\n      teamChildrenIds: [],\n      personalCourseIds: [],\n      expandedKeysPersonal: [],\n      autoExpandParentPersonal: true,\n      searchPersonalValue: '',\n      personalChildrenIds: [],\n      BATCH_TYPE: BATCH_TYPE,\n      BATCH_INFO: BATCH_INFO,\n      form: form,\n      decorators: decorators,\n      show: false,\n      batch_type: BATCH_TYPE.SELECTED,\n      teamCheckAll: false,\n      personalCheckAll: false,\n      coachAllOperationDropdownIsShow: false,\n      personalAllOperationCoachList: [],\n      personalAllOperationCoachTotal: 0\n    };\n  },\n  computed: {\n    teamCourseShowList: function teamCourseShowList() {\n      var _this = this;\n\n      return this.teamCourseList.filter(function (item) {\n        return _this.teamChildrenIds.includes(item.id);\n      });\n    },\n    personalCourseShowList: function personalCourseShowList() {\n      var _this2 = this;\n\n      var cocahes = [];\n      var total = 0;\n      this.coachList.forEach(function (item) {\n        cocahes.push(item.id);\n        total += item.coach_number;\n      });\n      return this.personalCourseList.filter(function (item) {\n        // if (this.personalCourseIds.includes(item.id)) {\n        if (_this2.personalChildrenIds.includes(item.id)) {\n          item.coachGradeList = cocahes;\n          item.coach = total;\n          return item;\n        }\n      });\n    },\n    helpText: function helpText() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM ? this.BATCH_INFO.ERROR_TIP : '';\n    },\n    helpShow: function helpShow() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM;\n    },\n    operateDataNum: function operateDataNum() {\n      return this.batch_type === this.BATCH_TYPE.SELECTED ? this.ids.length : this.list_num;\n    }\n  },\n  methods: {\n    getPopupContainer: function getPopupContainer() {\n      return document.getElementsByClassName('modal-sold-course-scope')[0];\n    },\n    onTeamTree: function onTeamTree() {\n      var _this3 = this;\n\n      this.teamChildrenIds = this.teamCourseIds.filter(function (i) {\n        return !find(_this3.teamCourseTreeList, {\n          id: i\n        });\n      });\n      this.teamCourseIds.forEach(function (i, index) {\n        var item = find(_this3.teamCourseTreeList, {\n          id: i\n        });\n\n        if (item) {\n          var isExist = item.children.filter(function (childrenItem) {\n            return _this3.teamCourseIds.includes(childrenItem.id);\n          });\n\n          if (isExist.length <= 0) {\n            _this3.teamCourseIds.splice(index, 1);\n          } else if (isExist.length !== item.children.length) {\n            var _index = _this3.teamCourseIds.indexOf(item.id);\n\n            _this3.teamCourseIds.splice(_index, 1);\n          }\n        }\n      });\n    },\n    onPersonalTree: function onPersonalTree() {\n      var _this4 = this;\n\n      this.personalChildrenIds = this.personalCourseIds.filter(function (i) {\n        return !find(_this4.personalCourseTreeList, {\n          id: i\n        });\n      });\n      this.personalCourseIds.forEach(function (i, index) {\n        var item = find(_this4.personalCourseTreeList, {\n          id: i\n        });\n\n        if (item) {\n          var isExist = item.children.filter(function (childrenItem) {\n            return _this4.personalCourseIds.includes(childrenItem.id);\n          });\n\n          if (isExist.length <= 0) {\n            _this4.personalCourseIds.splice(index, 1);\n          } else if (isExist.length !== item.children.length) {\n            var _index2 = _this4.personalCourseIds.indexOf(item.id);\n\n            _this4.personalCourseIds.splice(_index2, 1);\n          }\n        }\n      });\n    },\n    coachItemChange: function coachItemChange(item, index) {\n      var arr = this.coachList.filter(function (i) {\n        return item.coachGradeList.includes(i.id);\n      });\n      var total = 0;\n      arr.forEach(function (i) {\n        total += i.coach_number;\n      });\n      item.coach = total;\n    },\n    onClickDeleteTeam: function onClickDeleteTeam(i, index) {\n      this.teamCourseIds = this.teamCourseIds.filter(function (item) {\n        return item !== i.id;\n      });\n      this.onTeamTree();\n    },\n    onClickDeletePersonal: function onClickDeletePersonal(i, index) {\n      this.personalCourseIds = this.personalCourseIds.filter(function (item) {\n        return item !== i.id;\n      });\n      this.onPersonalTree();\n    },\n    checkAllChange: function checkAllChange(type) {\n      var _this5 = this;\n\n      if (type === 'team') {\n        this.teamCheckAll = !this.teamCheckAll;\n        this.teamCourseShowList.forEach(function (item) {\n          item.checked = _this5.teamCheckAll;\n        });\n      }\n\n      if (type === 'personal') {\n        this.personalCheckAll = !this.personalCheckAll;\n        this.personalCourseShowList.forEach(function (item) {\n          item.checked = _this5.personalCheckAll;\n        });\n      }\n    },\n    removeCourseItems: function removeCourseItems(type) {\n      if (type === 'team') {\n        if (this.teamCheckAll) {\n          this.teamCourseIds = [];\n          this.teamCheckAll = false;\n          this.onTeamTree();\n        }\n      }\n\n      if (type === 'personal') {\n        if (this.personalCheckAll) {\n          this.personalCourseIds = [];\n          this.personalCheckAll = false;\n          this.onPersonalTree();\n        }\n      }\n    },\n    filterCourseList: function filterCourseList(e) {\n      var _this6 = this;\n\n      var value = e.target.value;\n      var expandedKeysCourse = this.teamCourseList.map(function (item) {\n        if (item.name.indexOf(value) > -1) {\n          return _this6.getParentKey(item.name, cloneDeep(_this6.teamCourseTreeList));\n        }\n\n        return null;\n      }).filter(function (item, i, self) {\n        return item && self.indexOf(item) === i;\n      });\n      Object.assign(this, {\n        expandedKeysCourse: expandedKeysCourse,\n        searchCourseValue: value,\n        autoExpandParentCourse: true\n      });\n    },\n    filterPersonalList: function filterPersonalList(e) {\n      var _this7 = this;\n\n      var value = e.target.value;\n      var expandedKeysPersonal = this.personalCourseList.map(function (item) {\n        if (item.name.indexOf(value) > -1) {\n          return _this7.getParentKey(item.name, cloneDeep(_this7.personalCourseTreeList));\n        }\n\n        return null;\n      }).filter(function (item, i, self) {\n        return item && self.indexOf(item) === i;\n      });\n      Object.assign(this, {\n        expandedKeysPersonal: expandedKeysPersonal,\n        searchPersonalValue: value,\n        autoExpandParentPersonal: true\n      });\n    },\n    getParentKey: function getParentKey(key, tree) {\n      var parentKey;\n\n      for (var i = 0; i < tree.length; i++) {\n        var node = tree[i];\n\n        if (node.children) {\n          if (node.children.some(function (item) {\n            return item.name === key;\n          })) {\n            parentKey = node.key;\n          } else if (this.getParentKey(key, node.children)) {\n            parentKey = this.getParentKey(key, node.children);\n          }\n        }\n      }\n\n      return parentKey;\n    },\n    onExpandCourse: function onExpandCourse(expandedKeys) {\n      this.expandedKeysCourse = expandedKeys;\n      this.autoExpandParentCourse = false;\n    },\n    onExpandPersonal: function onExpandPersonal(expandedKeys) {\n      this.expandedKeysPersonal = expandedKeys;\n      this.autoExpandParentPersonal = false;\n    },\n    coachAllChange: function coachAllChange() {\n      var _this8 = this;\n\n      var arr = this.coachList.filter(function (i) {\n        return _this8.personalAllOperationCoachList.includes(i.id);\n      });\n      var total = 0;\n      arr.forEach(function (i) {\n        total += i.coach_number;\n      });\n      this.personalAllOperationCoachTotal = total;\n    },\n    coachAllOperationOk: function coachAllOperationOk() {\n      var _this9 = this;\n\n      var arr = this.coachList.filter(function (i) {\n        return _this9.personalAllOperationCoachList.includes(i.id);\n      });\n      var total = 0;\n      arr.forEach(function (i) {\n        total += i.coach_number;\n      });\n      this.personalCourseShowList.forEach(function (item) {\n        item.coachGradeList = cloneDeep(_this9.personalAllOperationCoachList);\n        item.coach = total;\n      }); // 清空\n\n      this.personalAllOperationCoachList = [];\n      this.personalAllOperationCoachTotal = 0; // 收起\n\n      this.coachAllOperationDropdownIsShow = false;\n    },\n    onSubmit: function onSubmit() {\n      var _this10 = this;\n\n      this.form.validate().then(function (values) {\n        var arr = [];\n\n        _this10.personalCourseShowList.forEach(function (item) {\n          arr.push({\n            id: item.id,\n            level_ids: item.coachGradeList\n          });\n        });\n\n        _this10.scopeService.changePackageRange({\n          batch_type: _this10.batch_type,\n          sold_ids: _this10.ids,\n          conditions: _this10.searchQuery,\n          range_teams: _this10.teamChildrenIds,\n          range_personals: arr\n        }).subscribe(function (res) {\n          _this10.$emit('success');\n\n          _this10.show = false;\n        });\n      });\n    }\n  }\n};",null]}