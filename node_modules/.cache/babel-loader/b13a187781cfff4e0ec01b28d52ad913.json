{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/image-upload#/image-upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/image-upload#/image-upload.vue","mtime":1600926556045},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _construct from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/construct\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { OssService } from '@/services/oss.service';\nimport { AppConfig } from '@/constants/config';\nimport { MessageService } from '@/services/message.service';\nimport ImageCropper from '@/views/biz-modals/image-cropper.vue';\nimport 'viewerjs/dist/viewer.css';\nimport Viewer from 'v-viewer/src/component.vue';\nvar defaultSize = {\n  w: '182px',\n  h: '114px'\n};\nexport default {\n  name: 'StImageUpload',\n  serviceInject: function serviceInject() {\n    return {\n      oss: OssService,\n      appConfig: AppConfig,\n      messageService: MessageService\n    };\n  },\n  modals: {\n    ImageCropper: ImageCropper\n  },\n  props: {\n    /**\n     * 上传按钮的文字\n     */\n    placeholder: {\n      type: String,\n      default: '上传照片'\n    },\n\n    /**\n     * 规则展示\n     */\n    ruleShowType: {\n      type: Number,\n      default: 1 // 1 默认展示 2 规则展示与图片右侧\n\n    },\n\n    /**\n     * 上传规则描述\n     */\n    description: {\n      type: String,\n      default: ''\n    },\n\n    /**\n     * 截图模态窗 相关选项\n     */\n    cropperModal: {\n      type: Object\n    },\n\n    /**\n     * 最多可上传图片数量\n     */\n    numLimit: {\n      type: Number,\n      default: 1\n    },\n\n    /**\n     * 单张图片最大 size，单位 M\n     */\n    sizeLimit: {\n      type: Number,\n      default: 2\n    },\n\n    /**\n     * 图片类型\n     */\n    fileType: {\n      type: String,\n      default: 'jpg, jpeg, png, bmp'\n    },\n\n    /**\n     * 图片及上传按钮的宽度\n     */\n    width: {\n      type: String,\n      default: defaultSize.w\n    },\n\n    /**\n     * 图片及上传按钮的宽度\n     */\n    height: {\n      type: String,\n      default: defaultSize.h\n    },\n\n    /**\n     * 初始图片列表 example: [{ image_id: 10000, image_key: 'http://styd-saas-test.oss-cn-shanghai.aliyuncs.com/image/pLOFb5kCPN4gPQ8H',image_url:'http://...' }]\n     */\n    list: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n\n    /**\n     * 缩略图filter选项 同imgFilter选项\n     */\n    filterOptions: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n\n    /**\n     * 是否使用oss私有空间\n     */\n    isPrivate: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * 预览时是否需要加上蒙版 蒙版和上传的图片一样大小\n     * flag 是否需要加上蒙版\n     * width 图片绘制宽度\n     * height 图片绘制高度\n     * maskUrl 蒙版的url\n     */\n    maskOptions: {\n      type: Object // default: () => ({\n      //   width: 750,\n      //   height: 1334,\n      //   maskUrl: 'https://styd-saas-test.oss-cn-shanghai.aliyuncs.com/image/default/bg-invitation-4.png'\n      // })\n\n    },\n\n    /**\n     * 后端字段映射 image_id,image_key,image_url\n     */\n    props: {\n      type: Object,\n      default: function _default() {\n        return {\n          image_id: 'image_id',\n          image_key: 'image_key',\n          image_url: 'image_url',\n          image_host: 'image_host'\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      fileList: [],\n      isLoading: false,\n      progress: 0,\n      defaultMaskOptions: {\n        width: 750,\n        height: 1334,\n        maskUrl: 'https://styd-saas-test.oss-cn-shanghai.aliyuncs.com/image/default/bg-invitation-4.png'\n      }\n    };\n  },\n  computed: {\n    imageId: function imageId() {\n      return this.props.image_id;\n    },\n    imageKey: function imageKey() {\n      return this.props.image_key;\n    },\n    imageUrl: function imageUrl() {\n      return this.props.image_url;\n    },\n    imageHost: function imageHost() {\n      return this.props.image_host;\n    },\n    isShowUploadBtn: function isShowUploadBtn() {\n      return this.fileList.length < this.numLimit;\n    },\n    isShowFileList: function isShowFileList() {\n      return this.fileList.length;\n    },\n    isUploadBtnInvisible: function isUploadBtnInvisible() {\n      return this.numLimit === 1 && this.fileList.length;\n    },\n    sizeStyle: function sizeStyle() {\n      return \"width: \".concat(this.width, \";  height: \").concat(this.height);\n    },\n    computedFilterOptions: function computedFilterOptions() {\n      var w = parseInt(this.width) * 2;\n      var h = parseInt(this.height) * 2;\n      return Object.assign({\n        w: w,\n        h: h\n      }, this.filterOptions);\n    }\n  },\n  watch: {\n    list: function list(newList) {\n      this.fileList = this.list;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.fileList = _construct(Array, _toConsumableArray(this.list));\n\n    if (this.maskOptions && this.fileList.length > 0) {\n      this.maskOptions = Object.assign(this.maskOptions, this.defaultMaskOptions);\n      this.drawMaskImage(this.fileList[0][this.imageUrl]).then(function (resSrc) {\n        _this.fileList[0][_this.imageUrl] = resSrc;\n      });\n    }\n  },\n  methods: {\n    onReUpload: function onReUpload(e) {\n      console.log(e);\n\n      if (!e.target.files || !e.target.files.length) {\n        return;\n      }\n\n      this.upload({\n        file: e.target.files[0]\n      });\n    },\n    upload: function upload(data) {\n      var fileCheckRet = this.fileCheck(data);\n\n      if (!fileCheckRet.isValid) {\n        this.messageService.error({\n          content: fileCheckRet.msg\n        });\n        return;\n      }\n\n      if (this.cropperModal) {\n        this.processCropper(data);\n      } else {\n        this.processUpload(data);\n      }\n    },\n    processCropper: function processCropper(data) {\n      var _this2 = this;\n\n      this.$modalRouter.push({\n        name: 'image-cropper',\n        props: _objectSpread({\n          file: data.file\n        }, this.cropperModal),\n        on: {\n          ok: function ok(res) {\n            var croppedData = res;\n\n            _this2.processUpload(croppedData);\n          }\n        }\n      });\n    },\n    processUpload: function processUpload(data) {\n      var _this3 = this;\n\n      this.isLoading = true; // 业务\n\n      this.oss.put({\n        business: 'image',\n        isPrivate: this.isPrivate,\n        file: data.file,\n        uploadProgress: function uploadProgress(e) {\n          _this3.progress = parseInt(e.loaded / e.total * 100);\n        }\n      }).subscribe({\n        next: function next(val) {\n          console.log(val);\n\n          if (_this3.maskOptions) {\n            _this3.drawMaskImage(val.url).then(function (resSrc) {\n              var _this3$fileList$push;\n\n              _this3.fileList.push((_this3$fileList$push = {}, _defineProperty(_this3$fileList$push, _this3.imageId, 0), _defineProperty(_this3$fileList$push, _this3.imageKey, val.fileKey), _defineProperty(_this3$fileList$push, _this3.imageHost, val.host), _defineProperty(_this3$fileList$push, _this3.imageUrl, resSrc), _this3$fileList$push));\n\n              _this3.$emit('change', _this3.fileList);\n            });\n          } else {\n            var _this3$fileList$push2;\n\n            _this3.fileList.push((_this3$fileList$push2 = {}, _defineProperty(_this3$fileList$push2, _this3.imageId, 0), _defineProperty(_this3$fileList$push2, _this3.imageKey, val.fileKey), _defineProperty(_this3$fileList$push2, _this3.imageHost, val.host), _defineProperty(_this3$fileList$push2, _this3.imageUrl, val.url), _this3$fileList$push2));\n\n            _this3.$emit('change', _this3.fileList);\n          }\n        },\n        error: function error(val) {\n          _this3.messageService.error({\n            content: \"Error \".concat(val.message)\n          });\n\n          _this3.isLoading = false;\n        },\n        complete: function complete() {\n          _this3.isLoading = false;\n        }\n      });\n    },\n    onDel: function onDel(index) {\n      var fileList = this.fileList;\n      var deletedFile = fileList.splice(index, 1);\n      this.fileList = fileList;\n      this.$emit('delete', deletedFile[0]);\n      this.$emit('change', this.fileList);\n    },\n    fileCheck: function fileCheck(data) {\n      var _data$file = data.file,\n          size = _data$file.size,\n          type = _data$file.type;\n      var sizeLimit = this.sizeLimit,\n          fileType = this.fileType;\n\n      if (!fileType.includes(type.split('/')[1])) {\n        return {\n          isValid: false,\n          msg: \"\\u8BF7\\u4E0A\\u4F20\".concat(fileType, \"\\u683C\\u5F0F\\u7684\\u6587\\u4EF6\")\n        };\n      }\n\n      console.log(size, sizeLimit);\n\n      if (size > sizeLimit * 1024 * 1024) {\n        return {\n          isValid: false,\n          msg: \"\\u6700\\u5927\\u4E0D\\u80FD\\u8D85\\u8FC7\".concat(sizeLimit, \"M\")\n        };\n      }\n\n      return {\n        isValid: true\n      };\n    },\n    drawMaskImage: function drawMaskImage(userImgSrc) {\n      var _this4 = this;\n\n      var myCanvas = document.getElementById('myCanvas');\n      var ctx = myCanvas.getContext('2d');\n      ctx.globalCompositeOperation = 'source-over';\n      var logo_img = new Image();\n      logo_img.setAttribute('crossOrigin', 'anonymous');\n      logo_img.src = this.maskOptions.maskUrl;\n      var user_img = new Image();\n      user_img.setAttribute('crossOrigin', 'anonymous');\n      user_img.src = userImgSrc;\n      var promise1 = new Promise(function (resolve, reject) {\n        logo_img.onload = function () {\n          resolve();\n        };\n      });\n      var promise2 = new Promise(function (resolve, reject) {\n        user_img.onload = function () {\n          resolve();\n        };\n      });\n      return new Promise(function (resolve, reject) {\n        Promise.all([promise1, promise2]).then(function (result) {\n          ctx.clearRect(0, 0, myCanvas.width, myCanvas.height);\n          ctx.drawImage(user_img, 0, 0, _this4.maskOptions.width, _this4.maskOptions.height);\n          ctx.drawImage(logo_img, 0, 0, _this4.maskOptions.width, _this4.maskOptions.height);\n          ctx.stroke();\n          myCanvas.toBlob(function (blob) {\n            var objectURL = URL.createObjectURL(blob);\n            resolve(objectURL);\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["image-upload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"st-image-upload\">\n    <div\n      class=\"st-image-upload__item st-preview-item\"\n      v-for=\"(item, index) in fileList\"\n      v-viewer=\"{ url: 'data-src', toolbar: false }\"\n      :style=\"sizeStyle\"\n      :key=\"index\"\n    >\n      <img\n        class=\"st-image-upload__item-img\"\n        :src=\"\n          (item[imageUrl] || item[imageKey]) | imgFilter(computedFilterOptions)\n        \"\n        :data-src=\"(item[imageUrl] || item[imageKey]) | imgFilter\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n      <slot name=\"item-extra\" :item=\"item\" :index=\"index\"></slot>\n      <div class=\"st-image-upload__actions\">\n        <slot name=\"actions\" :item=\"item\" :index=\"index\">\n          <span class=\"action action--re-upload\" @click=\"onDel(index)\">\n            <input type=\"file\" accept @change=\"onReUpload($event)\" />\n            重新上传\n          </span>\n          <!-- <span class=\"action\" @click=\"onDel(index)\">\n            删除\n          </span> -->\n        </slot>\n      </div>\n    </div>\n    <a-upload\n      v-show=\"isShowUploadBtn\"\n      listType=\"picture-card\"\n      :showUploadList=\"false\"\n      :customRequest=\"upload\"\n      class=\"st-image-upload__btn\"\n      :style=\"sizeStyle\"\n    >\n      <a-spin :spinning=\"isLoading\" :tip=\"progress + '%'\">\n        <slot>\n          <st-icon type=\"plus-circle\" size=\"32px\" color=\"#9BACB9\"></st-icon>\n          <div class=\"st-image-upload__placeholder\">{{ placeholder }}</div>\n          <div\n            v-if=\"ruleShowType === 1 && (description || $slots.description)\"\n            class=\"st-image-upload__description\"\n          >\n            <slot name=\"description\">{{ description }}</slot>\n          </div>\n        </slot>\n      </a-spin>\n    </a-upload>\n    <div\n      class=\"st-image-upload__ruleBox\"\n      v-if=\"ruleShowType === 2 && (description || $slots.description)\"\n    >\n      <slot name=\"description\"></slot>\n    </div>\n    <canvas\n      id=\"myCanvas\"\n      v-if=\"maskOptions\"\n      :width=\"maskOptions.width\"\n      :height=\"maskOptions.height\"\n      v-show=\"false\"\n    ></canvas>\n  </div>\n</template>\n<script>\nimport { OssService } from '@/services/oss.service'\nimport { AppConfig } from '@/constants/config'\nimport { MessageService } from '@/services/message.service'\nimport ImageCropper from '@/views/biz-modals/image-cropper.vue'\nimport 'viewerjs/dist/viewer.css'\nimport Viewer from 'v-viewer/src/component.vue'\n\nconst defaultSize = {\n  w: '182px',\n  h: '114px'\n}\nexport default {\n  name: 'StImageUpload',\n  serviceInject() {\n    return {\n      oss: OssService,\n      appConfig: AppConfig,\n      messageService: MessageService\n    }\n  },\n  modals: {\n    ImageCropper\n  },\n  props: {\n    /**\n     * 上传按钮的文字\n     */\n    placeholder: {\n      type: String,\n      default: '上传照片'\n    },\n    /**\n     * 规则展示\n     */\n    ruleShowType: {\n      type: Number,\n      default: 1 // 1 默认展示 2 规则展示与图片右侧\n    },\n    /**\n     * 上传规则描述\n     */\n    description: {\n      type: String,\n      default: ''\n    },\n    /**\n     * 截图模态窗 相关选项\n     */\n    cropperModal: {\n      type: Object\n    },\n    /**\n     * 最多可上传图片数量\n     */\n    numLimit: {\n      type: Number,\n      default: 1\n    },\n    /**\n     * 单张图片最大 size，单位 M\n     */\n    sizeLimit: {\n      type: Number,\n      default: 2\n    },\n    /**\n     * 图片类型\n     */\n    fileType: {\n      type: String,\n      default: 'jpg, jpeg, png, bmp'\n    },\n    /**\n     * 图片及上传按钮的宽度\n     */\n    width: {\n      type: String,\n      default: defaultSize.w\n    },\n    /**\n     * 图片及上传按钮的宽度\n     */\n    height: {\n      type: String,\n      default: defaultSize.h\n    },\n    /**\n     * 初始图片列表 example: [{ image_id: 10000, image_key: 'http://styd-saas-test.oss-cn-shanghai.aliyuncs.com/image/pLOFb5kCPN4gPQ8H',image_url:'http://...' }]\n     */\n    list: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * 缩略图filter选项 同imgFilter选项\n     */\n    filterOptions: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * 是否使用oss私有空间\n     */\n    isPrivate: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * 预览时是否需要加上蒙版 蒙版和上传的图片一样大小\n     * flag 是否需要加上蒙版\n     * width 图片绘制宽度\n     * height 图片绘制高度\n     * maskUrl 蒙版的url\n     */\n    maskOptions: {\n      type: Object\n      // default: () => ({\n      //   width: 750,\n      //   height: 1334,\n      //   maskUrl: 'https://styd-saas-test.oss-cn-shanghai.aliyuncs.com/image/default/bg-invitation-4.png'\n      // })\n    },\n    /**\n     * 后端字段映射 image_id,image_key,image_url\n     */\n    props: {\n      type: Object,\n      default: () => ({\n        image_id: 'image_id',\n        image_key: 'image_key',\n        image_url: 'image_url',\n        image_host: 'image_host'\n      })\n    }\n  },\n  data() {\n    return {\n      fileList: [],\n      isLoading: false,\n      progress: 0,\n      defaultMaskOptions: {\n        width: 750,\n        height: 1334,\n        maskUrl:\n          'https://styd-saas-test.oss-cn-shanghai.aliyuncs.com/image/default/bg-invitation-4.png'\n      }\n    }\n  },\n  computed: {\n    imageId() {\n      return this.props.image_id\n    },\n    imageKey() {\n      return this.props.image_key\n    },\n    imageUrl() {\n      return this.props.image_url\n    },\n    imageHost() {\n      return this.props.image_host\n    },\n    isShowUploadBtn() {\n      return this.fileList.length < this.numLimit\n    },\n    isShowFileList() {\n      return this.fileList.length\n    },\n    isUploadBtnInvisible() {\n      return this.numLimit === 1 && this.fileList.length\n    },\n    sizeStyle() {\n      return `width: ${this.width};  height: ${this.height}`\n    },\n    computedFilterOptions() {\n      const w = parseInt(this.width) * 2\n      const h = parseInt(this.height) * 2\n      return Object.assign({ w, h }, this.filterOptions)\n    }\n  },\n  watch: {\n    list(newList) {\n      this.fileList = this.list\n    }\n  },\n  mounted() {\n    this.fileList = new Array(...this.list)\n    if (this.maskOptions && this.fileList.length > 0) {\n      this.maskOptions = Object.assign(\n        this.maskOptions,\n        this.defaultMaskOptions\n      )\n      this.drawMaskImage(this.fileList[0][this.imageUrl]).then(resSrc => {\n        this.fileList[0][this.imageUrl] = resSrc\n      })\n    }\n  },\n  methods: {\n    onReUpload(e) {\n      console.log(e)\n      if (!e.target.files || !e.target.files.length) {\n        return\n      }\n      this.upload({\n        file: e.target.files[0]\n      })\n    },\n    upload(data) {\n      const fileCheckRet = this.fileCheck(data)\n      if (!fileCheckRet.isValid) {\n        this.messageService.error({ content: fileCheckRet.msg })\n        return\n      }\n      if (this.cropperModal) {\n        this.processCropper(data)\n      } else {\n        this.processUpload(data)\n      }\n    },\n    processCropper(data) {\n      this.$modalRouter.push({\n        name: 'image-cropper',\n        props: {\n          file: data.file,\n          ...this.cropperModal\n        },\n        on: {\n          ok: res => {\n            const croppedData = res\n            this.processUpload(croppedData)\n          }\n        }\n      })\n    },\n    processUpload(data) {\n      this.isLoading = true\n      // 业务\n      this.oss\n        .put({\n          business: 'image',\n          isPrivate: this.isPrivate,\n          file: data.file,\n          uploadProgress: e => {\n            this.progress = parseInt((e.loaded / e.total) * 100)\n          }\n        })\n        .subscribe({\n          next: val => {\n            console.log(val)\n            if (this.maskOptions) {\n              this.drawMaskImage(val.url).then(resSrc => {\n                this.fileList.push({\n                  [this.imageId]: 0,\n                  [this.imageKey]: val.fileKey,\n                  [this.imageHost]: val.host,\n                  [this.imageUrl]: resSrc\n                })\n                this.$emit('change', this.fileList)\n              })\n            } else {\n              this.fileList.push({\n                [this.imageId]: 0,\n                [this.imageKey]: val.fileKey,\n                [this.imageHost]: val.host,\n                [this.imageUrl]: val.url\n              })\n              this.$emit('change', this.fileList)\n            }\n          },\n          error: val => {\n            this.messageService.error({ content: `Error ${val.message}` })\n            this.isLoading = false\n          },\n          complete: () => {\n            this.isLoading = false\n          }\n        })\n    },\n    onDel(index) {\n      const { fileList } = this\n      const deletedFile = fileList.splice(index, 1)\n      this.fileList = fileList\n      this.$emit('delete', deletedFile[0])\n      this.$emit('change', this.fileList)\n    },\n    fileCheck(data) {\n      const { size, type } = data.file\n      const { sizeLimit, fileType } = this\n      if (!fileType.includes(type.split('/')[1])) {\n        return {\n          isValid: false,\n          msg: `请上传${fileType}格式的文件`\n        }\n      }\n      console.log(size, sizeLimit)\n      if (size > sizeLimit * 1024 * 1024) {\n        return {\n          isValid: false,\n          msg: `最大不能超过${sizeLimit}M`\n        }\n      }\n      return {\n        isValid: true\n      }\n    },\n    drawMaskImage(userImgSrc) {\n      const myCanvas = document.getElementById('myCanvas')\n      const ctx = myCanvas.getContext('2d')\n      ctx.globalCompositeOperation = 'source-over'\n      const logo_img = new Image()\n      logo_img.setAttribute('crossOrigin', 'anonymous')\n      logo_img.src = this.maskOptions.maskUrl\n      const user_img = new Image()\n      user_img.setAttribute('crossOrigin', 'anonymous')\n      user_img.src = userImgSrc\n      const promise1 = new Promise((resolve, reject) => {\n        logo_img.onload = () => {\n          resolve()\n        }\n      })\n      const promise2 = new Promise((resolve, reject) => {\n        user_img.onload = () => {\n          resolve()\n        }\n      })\n      return new Promise((resolve, reject) => {\n        Promise.all([promise1, promise2]).then(result => {\n          ctx.clearRect(0, 0, myCanvas.width, myCanvas.height)\n          ctx.drawImage(\n            user_img,\n            0,\n            0,\n            this.maskOptions.width,\n            this.maskOptions.height\n          )\n          ctx.drawImage(\n            logo_img,\n            0,\n            0,\n            this.maskOptions.width,\n            this.maskOptions.height\n          )\n          ctx.stroke()\n          myCanvas.toBlob(function(blob) {\n            const objectURL = URL.createObjectURL(blob)\n            resolve(objectURL)\n          })\n        })\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/components/image-upload#"}]}