{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/common/notify/config.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/common/notify/config.service.ts","mtime":1591147717160},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State } from 'rx-state';\nimport { NotifyApi } from '@/api/v1/notify';\nimport { tap } from 'rxjs/operators';\nimport { MessageService } from '@/services/message.service';\n\nvar ConfigService = /*#__PURE__*/function () {\n  function ConfigService(api, msg) {\n    _classCallCheck(this, ConfigService);\n\n    this.api = api;\n    this.msg = msg;\n    this.notifyTypes$ = new State({});\n    this.loading$ = new State({});\n  }\n\n  _createClass(ConfigService, [{\n    key: \"updateNoticeSetting\",\n    value: function updateNoticeSetting(params) {\n      var _this = this;\n\n      var form = {\n        setting: params\n      };\n      return this.api.updateNoticeSetting(form).pipe(tap(function () {\n        _this.msg.success({\n          content: '设置成功'\n        });\n      }));\n    }\n  }, {\n    key: \"getNoticeSettingInfo\",\n    value: function getNoticeSettingInfo() {\n      var _this2 = this;\n\n      return this.api.getNoticeSettingInfo().pipe(tap(function (res) {\n        _this2.notifyTypes$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }]);\n\n  return ConfigService;\n}();\n\nConfigService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof NotifyApi !== \"undefined\" && NotifyApi) === \"function\" ? _a : Object, typeof (_b = typeof MessageService !== \"undefined\" && MessageService) === \"function\" ? _b : Object])], ConfigService);\nexport { ConfigService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/common/notify/config.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAiB,KAAjB,QAA8B,UAA9B;AACA,SAAS,SAAT,QAA0B,iBAA1B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,cAAT,QAA+B,4BAA/B;;AAGA,IAAa,aAAb;AAGE,yBAAoB,GAApB,EAA4C,GAA5C,EAA+D;AAAA;;AAA3C,SAAA,GAAA,GAAA,GAAA;AAAwB,SAAA,GAAA,GAAA,GAAA;AAF5C,SAAA,YAAA,GAAe,IAAI,KAAJ,CAAU,EAAV,CAAf;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACmE;;AAHrE;AAAA;AAAA,wCAIsB,MAJtB,EAIiC;AAAA;;AAC7B,UAAM,IAAI,GAAG;AAAE,QAAA,OAAO,EAAE;AAAX,OAAb;AACA,aAAO,KAAK,GAAL,CAAS,mBAAT,CAA6B,IAA7B,EAAmC,IAAnC,CACL,GAAG,CAAC,YAAK;AACP,QAAA,KAAI,CAAC,GAAL,CAAS,OAAT,CAAiB;AAAE,UAAA,OAAO,EAAE;AAAX,SAAjB;AACD,OAFE,CADE,CAAP;AAKD;AAXH;AAAA;AAAA,2CAYsB;AAAA;;AAClB,aAAO,KAAK,GAAL,CAAS,oBAAT,GAAgC,IAAhC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,YAAL,CAAkB,MAAlB,CAAyB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAzB;AACD,OAFE,CADE,CAAP;AAKD;AAlBH;;AAAA;AAAA,GAAA;;AAAa,aAAa,GAAA,UAAA,CAAA,CADzB,UAAU,EACe,E,qDAGC,S,KAAS,W,IAAT,S,MAAS,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAe,cAAf,KAA6B,WAA7B,IAAe,cAAf,MAA6B,UAA7B,GAA6B,EAA7B,GAA6B,M,EAHvC,CAAA,EAAb,aAAa,CAAb;SAAA,a","sourcesContent":["import { Injectable } from 'vue-service-app'\nimport { Effect, State } from 'rx-state'\nimport { NotifyApi } from '@/api/v1/notify'\nimport { tap } from 'rxjs/operators'\nimport { MessageService } from '@/services/message.service'\n\n@Injectable()\nexport class ConfigService {\n  notifyTypes$ = new State({})\n  loading$ = new State({})\n  constructor(private api: NotifyApi, private msg: MessageService) {}\n  updateNoticeSetting(params: any) {\n    const form = { setting: params }\n    return this.api.updateNoticeSetting(form).pipe(\n      tap(() => {\n        this.msg.success({ content: '设置成功' })\n      })\n    )\n  }\n  getNoticeSettingInfo() {\n    return this.api.getNoticeSettingInfo().pipe(\n      tap((res: any) => {\n        this.notifyTypes$.commit(() => res.list)\n      })\n    )\n  }\n}\n"],"sourceRoot":""}]}