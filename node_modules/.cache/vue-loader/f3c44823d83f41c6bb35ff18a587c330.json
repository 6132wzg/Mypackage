{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/overflow-text/overflow-text.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/overflow-text/overflow-text.vue","mtime":1594718340294},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'StOverflowText',\n  props: {\n    title: {\n      type: String\n    },\n    value: {\n      type: [Array, String]\n    },\n    maxWidth: {\n      type: String,\n      default: '1000px'\n    },\n    needOverflowTextContainer: {\n      type: Boolean,\n      default: false\n    },\n    needMaxContainerWidth: {\n      type: Boolean,\n      default: false\n    },\n    placement: {\n      type: String,\n      default: 'topLeft'\n    }\n  },\n  computed: {\n    overlayClassName() {\n      return this.needMaxContainerWidth\n        ? 'st-overflow-text__max'\n        : 'st-overflow-text__overlay'\n    },\n    getPopupContainer() {\n      return () =>\n        this.needOverflowTextContainer\n          ? this.$refs.StOverflowText\n          : document.body\n    },\n    isArray() {\n      return Array.isArray(this.value)\n    },\n    isPopover() {\n      let width = 0\n      let html = document.createElement('span')\n      html.innerText = this.value\n      html.className = 'getTextWidth'\n      document.querySelector('body').appendChild(html)\n      width = document.querySelector('.getTextWidth').offsetWidth\n      document.querySelector('.getTextWidth').remove()\n\n      return width > +this.maxWidth.replace('px', '')\n    },\n    showValue() {\n      return this.value && this.value.toString() ? this.value.toString() : '--'\n    }\n  }\n}\n",null]}