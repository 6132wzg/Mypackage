{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/components#/step3-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/components#/step3-form.vue","mtime":1597396799953},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable'\nimport { Step3FormService } from './step3-form.service'\nimport MarketingAddSignup from '@/views/biz-modals/marketing/add-signup'\nimport { CopyService } from '../copy.service'\nimport { cloneDeep } from 'lodash-es'\nimport { ACTIVITY_STATUS } from '@/constants/brand/marketing'\nimport { MessageService } from '../../../../../../../services/message.service'\nexport default {\n  name: 'Step3Form',\n  bem: {\n    pComponents: 'step-form-signup'\n  },\n  modals: {\n    MarketingAddSignup\n  },\n  serviceInject() {\n    return {\n      service: Step3FormService,\n      msg: MessageService,\n      copyService: CopyService\n    }\n  },\n  rxState() {\n    const { defaultExtInfo$ } = this.service\n    const { defaultForm$ } = this.copyService\n    return {\n      defaultExtInfo$,\n      defaultForm$\n    }\n  },\n  data() {\n    return {\n      ACTIVITY_STATUS,\n      checkedShopIds: [],\n      addDataSource: [],\n      formData: [],\n      isStep3: 0,\n      extraSort: 3,\n      list: []\n    }\n  },\n  components: {\n    draggable\n  },\n  props: {\n    isCopy: {\n      type: Boolean,\n      default: false\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean\n    }\n  },\n  created() {\n    this.service.getDefaultExtInfo().subscribe()\n    if (!this.isCopy && !this.isEdit) return\n    this.initForm()\n  },\n  computed: {\n    colspanNum() {\n      return 5\n    },\n    activityStatus() {\n      return this.defaultForm$.activity_status\n    },\n    // 如果是编辑的时候，需要活动id\n    activity_id() {\n      return this.defaultForm$.activity_id\n    },\n    isSaveDraft() {\n      return (\n        this.$route.path.includes('/activity-registration/edit') &&\n        this.activityStatus === ACTIVITY_STATUS.PUBLISHED\n      )\n    },\n    dataSource() {\n      let isDefault = false\n      this.addDataSource.forEach(item => {\n        if (item.extra_key === 'username') {\n          isDefault = true\n        }\n      })\n      if (isDefault) {\n        return [...this.addDataSource]\n      } else {\n        return [...this.defaultExtInfo$, ...this.addDataSource]\n      }\n    }\n  },\n  methods: {\n    onEnd() {\n      const list = this.addDataSource.map((item, index) => {\n        item.extra_sort = index\n        return item\n      })\n      this.$set(this, 'addDataSource', list)\n      this.$emit('change', this.dataSource)\n    },\n    isDel(value) {\n      if (value.extra_sort === 0 || value.extra_sort === 1) {\n        return false\n      } else if (this.activityStatus === ACTIVITY_STATUS.DRAFT) {\n        return true\n      } else if (this.isEdit) {\n        const extraSortArr = cloneDeep(\n          this.defaultForm$.rule_settings.join_ext_info\n        ).extra_data.map(item => item.extra_sort)\n        return !extraSortArr.includes(value.extra_sort)\n      }\n      return true\n    },\n    initForm() {\n      this.$nextTick().then(() => {\n        const joinExtInfo = cloneDeep(\n          this.defaultForm$.rule_settings.join_ext_info\n        )\n        const extraData = joinExtInfo.extra_data\n        this.isStep3 = this.isEdit ? joinExtInfo.extra_type : 0\n\n        this.$set(this, 'addDataSource', extraData)\n        this.formData = [...extraData]\n        this.$emit('change', this.dataSource)\n      })\n    },\n    onClickBack() {\n      this.$emit('back', 1)\n    },\n    onCLickOpenmodal() {\n      this.extraSort =\n        Math.max(...this.dataSource.map(item => item.extra_sort)) + 1\n      this.$modalRouter.push({\n        name: 'marketing-add-signup',\n        props: {\n          signUpList: this.dataSource,\n          extra_sort: this.extraSort\n        },\n        on: {\n          show: this.getTableItem,\n          submit: this.getFormItem\n        }\n      })\n    },\n    getTableItem(item) {\n      this.addDataSource.push(item)\n      this.$emit('change', this.dataSource)\n    },\n    getFormItem(item) {\n      this.formData.push(item)\n    },\n    getStepForm() {\n      let isDefault = false\n      let extra_data = []\n      this.formData.forEach(item => {\n        if (item.extra_key === 'username') {\n          isDefault = true\n        }\n      })\n      if (isDefault) {\n        extra_data = [...(this.isStep3 ? this.formData : [])]\n      } else {\n        extra_data = [\n          ...this.defaultExtInfo$,\n          ...(this.isStep3 ? this.formData : [])\n        ]\n      }\n      return {\n        join_ext_info: {\n          extra_type: this.isStep3,\n          extra_data\n        }\n      }\n    },\n    delExtraItemRecord(extraKey) {\n      this.addDataSource = this.addDataSource.filter(\n        item => item.extra_key !== extraKey\n      )\n      this.formData = this.formData.filter(item => item.extra_key !== extraKey)\n      this.$emit('change', this.addDataSource)\n    },\n    onClickRelease() {\n      this.$emit('release', this.getStepForm())\n    },\n    onClickSaveDraft() {\n      this.$emit('save-draft', this.getStepForm())\n    },\n    onChangeIsShow() {\n      if (\n        this.isEdit &&\n        this.defaultForm$.activity_status === ACTIVITY_STATUS.PUBLISHED &&\n        this.defaultForm$.rule_settings.join_ext_info.extra_type === 1\n      ) {\n        this.isStep3 = this.defaultForm$.rule_settings.join_ext_info.extra_type\n        this.msg.error({ content: '已发布的活动，不能关闭活动信息' })\n      }\n      const data = this.isStep3 ? this.dataSource : []\n      this.$emit('change', data)\n    }\n  }\n}\n",null]}