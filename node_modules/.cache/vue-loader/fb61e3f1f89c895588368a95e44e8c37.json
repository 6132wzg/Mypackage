{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/member/period/edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/card/member/period/edit.vue","mtime":1597396799987},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserService } from '@/services/user.service'\nimport moment from 'moment'\nimport { PatternService } from '@/services/pattern.service'\nimport { cloneDeep, remove } from 'lodash-es'\nimport { EditService } from './edit.service'\nimport MemberCard from '@/views/biz-components/h5/pages/member-card'\nimport H5Container from '@/views/biz-components/h5/h5-container'\nimport h5mixin from './h5mixin'\nimport { MEMBER_CARD } from '@/views/biz-components/h5/pages/member-card.config'\nimport CardBgRadio from '@/views/biz-components/card-bg-radio/card-bg-radio'\nimport FormBanner from '@/views/biz-components/card/form-banner'\nimport { SELL_TYPE, UNIT, CARD_TYPE } from '@/constants/card/member'\nimport { ruleOptions } from './period.config'\nimport StEditor from '@/views/biz-components/st/editor/editor.vue'\n\nexport default {\n  name: 'PageShopPeriodCardAdd',\n  mixins: [h5mixin],\n  components: {\n    StEditor,\n    MemberCard,\n    H5Container,\n    CardBgRadio,\n    FormBanner\n  },\n  serviceInject() {\n    return {\n      pattern: PatternService,\n      editService: EditService,\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      cardInfo: this.editService.cardInfo$,\n      loading: this.editService.loading$,\n      shopName: this.userService.shop$,\n      cardBgList: this.editService.cardBgList$,\n      admissionRange: this.editService.admissionRange$,\n      priceSetting: this.editService.priceSetting$,\n      supportSales: this.editService.supportSales$,\n      unit: this.editService.unit$,\n      sellType: this.editService.sellType$,\n      isShelfCard: this.editService.isShelfCard$,\n      supportMemberNums: this.editService.supportMemberNums$\n    }\n  },\n  bem: {\n    b: 'st-help-popover'\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      SELL_TYPE,\n      UNIT,\n      cardType: MEMBER_CARD.PERIOD_CARD,\n      MEMBER_CARD,\n      // 结束时间面板是否显示\n      endOpen: false,\n      priceColumns: [\n        {\n          title: '期限',\n          scopedSlots: { customRender: 'time' },\n          dataIndex: 'time'\n        },\n        {\n          title: '售价/元',\n          scopedSlots: { customRender: 'rally_price' },\n          dataIndex: 'rally_price'\n        },\n        {\n          title: '允许冻结/天',\n          scopedSlots: { customRender: 'frozen_day' },\n          dataIndex: 'frozen_day'\n        },\n        {\n          title: '赠送上限/天',\n          scopedSlots: { customRender: 'gift_unit' },\n          dataIndex: 'gift_unit'\n        },\n        {\n          title: '操作',\n          dataIndex: 'operation',\n          width: '60px',\n          scopedSlots: { customRender: 'operation' }\n        }\n      ],\n      // 价格梯度\n      rallyPriceList: [],\n      // 价格检验是否通过\n      rallyPriceIsOk: true,\n      // 价格是否未输入过\n      rallyPriceIsNoInput: true,\n      // 价格校验文案\n      rallyPriceValidText: '',\n      nuit_list: [\n        {\n          value: 2,\n          label: '天'\n        },\n        {\n          value: 3,\n          label: '月'\n        },\n        {\n          value: 4,\n          label: '年'\n        }\n      ],\n      // 售卖时间\n      startTime: null,\n      endTime: null,\n      // 是否支持转让\n      is_transfer: false,\n      // 转让单位\n      transferUnit: UNIT.RMB,\n      // 转让手续费\n      transferNum: 0,\n      transfer_unit_is_first: true,\n      // 售卖方式\n      sell_type: [SELL_TYPE.OFFLINE],\n      // 卡背景\n      cardBg: {\n        image_id: 0,\n        image_key: this.cardBgList[0].image_key,\n        image_url: '',\n        index: 1\n      },\n      // 卡背景的help文本\n      cardBgValidatorText: '',\n      // 卡介绍\n      cardIntroduction: '',\n      // 备注\n      cardContents: '',\n      // 是否配置了用户端\n      appConfig: true,\n      // 是否禁止选择开始时间,如果卡状态是可售卖，则需要禁止修改开始时间\n      startTimeIsDisabled: false\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    // init\n    init() {\n      // 价格设置\n      this.cardInfo.price_gradient.forEach(i => {\n        this.rallyPriceList.push({\n          key: i.id,\n          time: {\n            unit: +i.unit,\n            num: +i.num\n          },\n          rally_price: +i.rally_price,\n          frozen_day: +i.frozen_day,\n          gift_unit: +i.gift_unit\n        })\n      })\n      // 支持售卖时间\n      this.form.setFieldsValue({\n        special_note: this.cardInfo.special_note,\n        start_time: moment(this.cardInfo.start_time * 1000),\n        end_time: moment(this.cardInfo.end_time * 1000),\n        transferNum: this.cardInfo.transfer_num\n      })\n      if (this.isFamilyCard) {\n        this.form.setFieldsValue({\n          support_member_num: this.cardInfo.support_member_num\n        })\n      }\n      this.startTimeIsDisabled =\n        this.cardInfo.start_time * 1000 <\n          moment()\n            .startOf('day')\n            .valueOf() && this.cardInfo.end_time * 1000 > moment().valueOf()\n      this.startTime = moment(this.cardInfo.start_time * 1000)\n      this.endTime = moment(this.cardInfo.end_time * 1000)\n      // 转让设置\n      this.is_transfer = !!this.cardInfo.is_transfer\n      this.transferUnit = this.cardInfo.transfer_unit\n      this.transferNum = this.cardInfo.transfer_num\n      // 售卖方式\n      this.sell_type = this.cardInfo.sell_type\n      // 卡背景\n      this.cardBg = cloneDeep(this.cardInfo.card_bg)\n      // 卡介绍\n      this.cardIntroduction = this.cardInfo.card_introduction\n      // 卡备注\n      this.cardContents = this.cardInfo.card_contents\n      this.initH5CardInfo()\n    },\n    // 保存\n    onHandleSubmit(e) {\n      this.form.validateFieldsAndScroll((err, values) => {\n        this.validatePrice()\n        this.cardBgValidator()\n        if (!err && this.priceValidateStatus === 'success' && this.cardBgIsOk) {\n          let unit = this.is_transfer ? this.transferUnit : undefined\n          let num = this.is_transfer ? this.transferNum : undefined\n          let price_gradient = []\n          this.rallyPriceList.forEach(i => {\n            price_gradient.push({\n              unit: i.time.unit,\n              num: i.time.num,\n              rally_price: i.rally_price,\n              frozen_day: i.frozen_day,\n              gift_unit: i.gift_unit\n            })\n          })\n          this.editService\n            .editCard({\n              id: this.cardInfo.card_id,\n              card_type: this.isFamilyCard\n                ? CARD_TYPE.MORE_PERIOD\n                : CARD_TYPE.PERIOD,\n              card_name: values.card_name,\n              special_note: values.special_note,\n              start_time: `${this.startTime.format('YYYY-MM-DD')}`,\n              end_time: `${this.endTime.format('YYYY-MM-DD')}`,\n              is_transfer: +this.is_transfer,\n              unit,\n              num,\n              sell_type: this.sell_type,\n              card_introduction: this.cardIntroduction,\n              card_contents: this.cardContents,\n              card_bg: this.cardBg,\n              price_gradient,\n              support_member_num: this.isFamilyCard\n                ? values.support_member_num\n                : 1\n            })\n            .subscribe(res => {\n              // 编辑成功\n              this.$router.push({\n                name: 'shop-product-card-member-list-all'\n              })\n            })\n        }\n      })\n    },\n    // 价格梯度\n    brandPriceSettingHandleChange({ value, key, col, prop }) {\n      this.rallyPriceIsNoInput = false\n      if (prop !== undefined) {\n        this.rallyPriceList[key][col][prop] = value\n      } else {\n        this.rallyPriceList[key][col] = value\n      }\n    },\n    // 删除价格\n    brand_price_delete(index) {\n      this.rallyPriceList.splice(index, 1)\n    },\n    // 增加价格\n    brand_price_add() {\n      let key = parseInt(Math.random() * 999999).toString()\n      this.rallyPriceList.push({\n        key,\n        time: {\n          unit: 2,\n          num: null\n        },\n        rally_price: null,\n        frozen_day: null,\n        gift_unit: null\n      })\n    },\n    // 开始时间\n    disabledStartDate(startValue) {\n      const endValue = this.end_time\n      if (!endValue) {\n        // 结束时间未选择\n        return (\n          startValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      let start =\n        endValue.valueOf() >\n        moment()\n          .add(30, 'y')\n          .valueOf()\n          ? moment(endValue)\n              .subtract(30, 'y')\n              .valueOf()\n          : moment()\n              .startOf('day')\n              .valueOf()\n      return (\n        startValue.valueOf() < start ||\n        startValue.valueOf() > moment(endValue).valueOf()\n      )\n    },\n    handleStartOpenChange(open) {\n      if (!open) {\n        this.endOpen = true\n      }\n    },\n    start_time_change(data) {\n      this.startTime = cloneDeep(data)\n    },\n    // 结束时间\n    disabledEndDate(endValue) {\n      const startValue = this.start_time\n      if (!startValue) {\n        // 开始时间未选择\n        return (\n          endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      return (\n        endValue.valueOf() >=\n          moment(startValue)\n            .add(30, 'y')\n            .valueOf() ||\n        endValue.valueOf() < moment(startValue).valueOf() ||\n        endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n      )\n    },\n    handleEndOpenChange(open) {\n      this.endOpen = open\n    },\n    end_time_change(data) {\n      this.endTime = cloneDeep(data)\n    },\n    // 转让\n    transfer(e) {\n      this.is_transfer = e.target.checked\n      // 重置转让费用的校验\n      this.form.resetFields(['transferNum'])\n    },\n    transfter_change(data) {\n      this.transferNum = data\n    },\n    // moment\n    moment,\n    // 检验price\n    validatePrice() {\n      this.rallyPriceIsNoInput = false\n      if (!this.priceValidateRuleText.length) {\n        this.rallyPriceIsOk = false\n      } else {\n        this.rallyPriceIsOk = this.priceValidateRuleText.every(i =>\n          this.pattern.NUM_FLOAT(1).test(i)\n        )\n      }\n    },\n    onCardBgChange(e) {\n      this.cardBgValidatorText = ''\n    },\n    // 卡背景校验\n    cardBgValidator() {\n      let validata = this.cardBg.image_key !== ''\n      this.cardBgValidatorText = validata ? '' : '请上传卡背景'\n    }\n  },\n  watch: {\n    priceValidateStatus(newVal) {\n      this.rallyPriceValidText = newVal === 'success' ? '' : '请输入正确的数值'\n    },\n    transferUnit: {\n      deep: true,\n      handler() {\n        if (!this.transfer_unit_is_first) {\n          this.form.resetFields(['transferNum'])\n        }\n        this.transfer_unit_is_first = false\n      }\n    }\n  },\n  computed: {\n    priceValidateStatus() {\n      if (this.rallyPriceIsNoInput) {\n        return 'success'\n      } else {\n        return this.rallyPriceIsOk ? 'success' : 'error'\n      }\n    },\n    priceValidateRuleText() {\n      let text = []\n      this.rallyPriceList.forEach(i => {\n        Object.keys(i).forEach(o => {\n          if (o !== 'key' && o !== 'time' && o !== '$_oddEvenKey') {\n            text.push(i[o])\n          } else if (o === 'time') {\n            text.push(i[o].num)\n          }\n        })\n      })\n      return text\n    },\n    // 售卖方式\n    sellTypeList() {\n      let sell_type = cloneDeep(this.sellType)\n      let arr = []\n      sell_type.forEach(i => {\n        arr.push({\n          value: i.value,\n          label: i.label\n        })\n      })\n      if (!this.appConfig) {\n        remove(arr, i => i.value === SELL_TYPE.CLIENT)\n      }\n      return arr\n    },\n    // 卡背景是否校验通过\n    cardBgIsOk() {\n      return this.cardBgValidatorText === ''\n    },\n    // 转让设置的min\n    transferMin() {\n      return 0\n    },\n    // 转让设置的max\n    transferMax() {\n      return this.transferUnit === UNIT.PERCENT ? 100 : 999999.9\n    },\n    // 是否是多人卡\n    isFamilyCard() {\n      return this.$searchQuery.type === 'family-card'\n    }\n  }\n}\n",null]}