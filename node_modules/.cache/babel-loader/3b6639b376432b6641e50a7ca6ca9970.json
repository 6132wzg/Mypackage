{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/utils/tree-to-map.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/utils/tree-to-map.js","mtime":1591147717094},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n\n/**\n * 通过树对象转换为map对象\n * @param { Array<Object> } treeData\n * @param { string } keyFiled 键名字段\n * @param { string } childrenField 孩子字段\n * @return { Object }\n *\n */\nexport var treeToMap = function treeToMap() {\n  var treeData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$keyFiled = _ref.keyFiled,\n      keyFiled = _ref$keyFiled === void 0 ? 'id' : _ref$keyFiled,\n      _ref$childrenField = _ref.childrenField,\n      childrenField = _ref$childrenField === void 0 ? 'children' : _ref$childrenField;\n\n  var map = {};\n\n  var walk = function walk(tree) {\n    tree.forEach(function (node) {\n      map[node[keyFiled]] = node;\n\n      if (node[childrenField] && node[childrenField].length) {\n        walk(node[childrenField]);\n      }\n    });\n  };\n\n  walk(treeData);\n  return map;\n};",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/utils/tree-to-map.js"],"names":["treeToMap","treeData","keyFiled","childrenField","map","walk","tree","forEach","node","length"],"mappings":";;AAAA;;;;;;;;AASA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAGpB;AAAA,MAFHC,QAEG,uEAFQ,EAER;;AAAA,iFAD+C,EAC/C;AAAA,2BADDC,QACC;AAAA,MADDA,QACC,8BADU,IACV;AAAA,gCADgBC,aAChB;AAAA,MADgBA,aAChB,mCADgC,UAChC;;AACH,MAAMC,GAAG,GAAG,EAAZ;;AACA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,IAAI,EAAI;AACnBA,IAAAA,IAAI,CAACC,OAAL,CAAa,UAAAC,IAAI,EAAI;AACnBJ,MAAAA,GAAG,CAACI,IAAI,CAACN,QAAD,CAAL,CAAH,GAAsBM,IAAtB;;AACA,UAAIA,IAAI,CAACL,aAAD,CAAJ,IAAuBK,IAAI,CAACL,aAAD,CAAJ,CAAoBM,MAA/C,EAAuD;AACrDJ,QAAAA,IAAI,CAACG,IAAI,CAACL,aAAD,CAAL,CAAJ;AACD;AACF,KALD;AAMD,GAPD;;AASAE,EAAAA,IAAI,CAACJ,QAAD,CAAJ;AACA,SAAOG,GAAP;AACD,CAhBM","sourcesContent":["/**\n * 通过树对象转换为map对象\n * @param { Array<Object> } treeData\n * @param { string } keyFiled 键名字段\n * @param { string } childrenField 孩子字段\n * @return { Object }\n *\n */\n\nexport const treeToMap = (\n  treeData = [],\n  { keyFiled = 'id', childrenField = 'children' } = {}\n) => {\n  const map = {}\n  const walk = tree => {\n    tree.forEach(node => {\n      map[node[keyFiled]] = node\n      if (node[childrenField] && node[childrenField].length) {\n        walk(node[childrenField])\n      }\n    })\n  }\n\n  walk(treeData)\n  return map\n}\n"]}]}