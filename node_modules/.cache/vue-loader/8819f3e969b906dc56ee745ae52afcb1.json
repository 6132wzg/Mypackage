{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/personal-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/personal-table.vue","mtime":1600926556397},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableMixin from '@/mixins/table.mixin'\nimport { PersonalTableService } from './personal-table.service'\nimport { PersonalScheduleScheduleService } from './schedule/personal/service#/schedule.service'\nimport date from '@/views/biz-components/schedule/date#/date-component.vue'\nimport SchedulePersonalEdit from '@/views/biz-modals/schedule/personal/edit'\nimport SchedulePersonalInbatchAdd from '@/views/biz-modals/schedule/personal/inbatch-add'\nexport default {\n  name: 'PersonalTable',\n  mixins: [tableMixin],\n  modals: {\n    SchedulePersonalEdit,\n    SchedulePersonalInbatchAdd\n  },\n  serviceInject() {\n    return {\n      tableService: PersonalTableService,\n      scheduleService: PersonalScheduleScheduleService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.tableService.auth$,\n      scheduleTime: this.tableService.scheduleTime$,\n      scheduleColumns: this.tableService.scheduleColumns$,\n      scheduleList: this.tableService.scheduleList$,\n      formPage: this.tableService.formPage$\n    }\n  },\n  computed: {\n    isBatchDel() {\n      return !this.selectedRowKeys.length\n    }\n  },\n  filters: {\n    getWeek(index) {\n      const weekList = ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n      return weekList[index]\n    },\n    timingFilter(val) {\n      if (val.length) {\n        return `${val[0].start_time} ~ ${val[0].end_time}`\n      } else {\n        return '--'\n      }\n    },\n    getDate(date) {\n      return moment(date)\n        .format('MM/DD')\n        .valueOf()\n    }\n  },\n  data() {\n    return {\n      page: {},\n      currentTime: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      diffSelectedRows: []\n    }\n  },\n  components: {\n    date\n  },\n  methods: {\n    onSuccess() {\n      this.$router.reload()\n    },\n    // 返回列表\n    onClickSkipSchedule() {\n      this.$router.go(-1)\n    },\n    onClickDeleteSchedule(scheduleInfo) {\n      this.$confirm({\n        title: '提示',\n        content: '确认删除？',\n        onOk: () => {\n          const ids = scheduleInfo\n            .filter(item => {\n              return item.id\n            })\n            .map(item => {\n              return item.id\n            })\n          this.scheduleService.delInBatch(ids).subscribe(res => {\n            this.$router.reload()\n          })\n        },\n        onCancel() {}\n      })\n    },\n    onClickDeleteInBatchSchedule() {\n      let ids = []\n      this.$confirm({\n        title: '提示',\n        content: '确认删除？',\n        onOk: () => {\n          this.selectedRows.forEach(item => {\n            ids = [\n              ...ids,\n              ...item.schedule_info\n                .filter(ele => {\n                  return ele.id\n                })\n                .map(ele => {\n                  return ele.id\n                })\n            ]\n          })\n          this.onSelectionReset()\n          this.scheduleService.delInBatch(ids).subscribe(res => {\n            this.$router.reload()\n          })\n        },\n        onCancel() {}\n      })\n    },\n    onSelectChange(selectedRowKeys, selectedRows) {\n      if (selectedRows && selectedRows.length > 0) {\n        const firstItem = selectedRows[0]\n        this.diffSelectedRows = selectedRows.filter(\n          item => item.card_type !== firstItem.card_type\n        )\n      }\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    getList(val = {}) {\n      const query = {\n        ...this.$searchQuery,\n        start_date: val.start_date,\n        end_date: val.end_date\n      }\n      this.$router.replace({ query })\n    },\n    onTableChange() {}\n  }\n}\n",{"version":3,"sources":["personal-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"personal-table.vue","sourceRoot":"src/views/pages/shop/product/course","sourcesContent":["<template>\n  <st-panel initial app>\n    <div class=\"page-personal-table schedule-table\">\n      <div\n        class=\"page-personal-table__title pd-x24 pd-y16 schedule-table__title schedule-table__title--fixed\"\n        slot=\"title\"\n      >\n        <div class=\"title__left\">\n          <st-button @click=\"onClickSkipSchedule\" type=\"primary\">\n            返回预约列表\n          </st-button>\n        </div>\n        <div class=\"title__center\">\n          <date\n            @today=\"getList\"\n            :start=\"$searchQuery.start_date\"\n            @pre=\"getList\"\n            @next=\"getList\"\n          />\n        </div>\n        <div class=\"title__right schedule-button\">\n          <st-button v-if=\"auth.addBatch\" class=\"mg-r8\" type=\"primary\">\n            <a\n              v-modal-link=\"{\n                name: 'schedule-personal-inbatch-add',\n                props: { id: 1 }\n              }\"\n            >\n              设置{{ $c('coach') }}工作时间\n            </a>\n          </st-button>\n          <st-button :disabled=\"isBatchDel\">\n            <a herf=\"javascript:;\" @click=\"onClickDeleteInBatchSchedule\">\n              批量删除\n            </a>\n          </st-button>\n        </div>\n      </div>\n      <div class=\"schedule-table__content  mg-r24 mg-l24\">\n        <st-table\n          :columns=\"scheduleColumns\"\n          rowKey=\"staff_id\"\n          :alertSelection=\"{ onReset: onSelectionReset }\"\n          :rowSelection=\"{\n            fixed: true,\n            selectedRowKeys: selectedRowKeys,\n            onChange: onSelectChange\n          }\"\n          :page=\"false\"\n          @change=\"onTableChange\"\n          :dataSource=\"scheduleList\"\n        >\n          <template slot=\"staff_name\" slot-scope=\"text\">\n            {{ text }}\n          </template>\n          <template v-for=\"item in scheduleTime\" :slot=\"item\" slot-scope=\"text\">\n            <a-popover\n              :key=\"item\"\n              v-if=\"text.timing.length\"\n              placement=\"rightTop\"\n            >\n              <template slot=\"content\">\n                <template v-for=\"timingItem in text.timing\">\n                  <p :key=\"timingItem.start_time\">\n                    {{ timingItem.start_time }}~{{ timingItem.end_time }}\n                  </p>\n                </template>\n              </template>\n              <template slot=\"title\">\n                <span>排期</span>\n              </template>\n              {{ text.timing | timingFilter }}\n            </a-popover>\n            <span :key=\"item\" v-else>{{ text.timing | timingFilter }}</span>\n          </template>\n          <div slot=\"action\" slot-scope=\"text, record\">\n            <a\n              class=\"mg-r8\"\n              v-modal-link=\"{\n                name: 'schedule-personal-edit',\n                props: { id: record.staff_id, start: scheduleTime[0] },\n                on: {\n                  success: onSuccess\n                }\n              }\"\n            >\n              编辑\n            </a>\n            <a\n              href=\"javascript:;\"\n              @click=\"onClickDeleteSchedule(record.schedule_info)\"\n            >\n              删除\n            </a>\n          </div>\n        </st-table>\n      </div>\n    </div>\n  </st-panel>\n</template>\n\n<script>\nimport tableMixin from '@/mixins/table.mixin'\nimport { PersonalTableService } from './personal-table.service'\nimport { PersonalScheduleScheduleService } from './schedule/personal/service#/schedule.service'\nimport date from '@/views/biz-components/schedule/date#/date-component.vue'\nimport SchedulePersonalEdit from '@/views/biz-modals/schedule/personal/edit'\nimport SchedulePersonalInbatchAdd from '@/views/biz-modals/schedule/personal/inbatch-add'\nexport default {\n  name: 'PersonalTable',\n  mixins: [tableMixin],\n  modals: {\n    SchedulePersonalEdit,\n    SchedulePersonalInbatchAdd\n  },\n  serviceInject() {\n    return {\n      tableService: PersonalTableService,\n      scheduleService: PersonalScheduleScheduleService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.tableService.auth$,\n      scheduleTime: this.tableService.scheduleTime$,\n      scheduleColumns: this.tableService.scheduleColumns$,\n      scheduleList: this.tableService.scheduleList$,\n      formPage: this.tableService.formPage$\n    }\n  },\n  computed: {\n    isBatchDel() {\n      return !this.selectedRowKeys.length\n    }\n  },\n  filters: {\n    getWeek(index) {\n      const weekList = ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n      return weekList[index]\n    },\n    timingFilter(val) {\n      if (val.length) {\n        return `${val[0].start_time} ~ ${val[0].end_time}`\n      } else {\n        return '--'\n      }\n    },\n    getDate(date) {\n      return moment(date)\n        .format('MM/DD')\n        .valueOf()\n    }\n  },\n  data() {\n    return {\n      page: {},\n      currentTime: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      diffSelectedRows: []\n    }\n  },\n  components: {\n    date\n  },\n  methods: {\n    onSuccess() {\n      this.$router.reload()\n    },\n    // 返回列表\n    onClickSkipSchedule() {\n      this.$router.go(-1)\n    },\n    onClickDeleteSchedule(scheduleInfo) {\n      this.$confirm({\n        title: '提示',\n        content: '确认删除？',\n        onOk: () => {\n          const ids = scheduleInfo\n            .filter(item => {\n              return item.id\n            })\n            .map(item => {\n              return item.id\n            })\n          this.scheduleService.delInBatch(ids).subscribe(res => {\n            this.$router.reload()\n          })\n        },\n        onCancel() {}\n      })\n    },\n    onClickDeleteInBatchSchedule() {\n      let ids = []\n      this.$confirm({\n        title: '提示',\n        content: '确认删除？',\n        onOk: () => {\n          this.selectedRows.forEach(item => {\n            ids = [\n              ...ids,\n              ...item.schedule_info\n                .filter(ele => {\n                  return ele.id\n                })\n                .map(ele => {\n                  return ele.id\n                })\n            ]\n          })\n          this.onSelectionReset()\n          this.scheduleService.delInBatch(ids).subscribe(res => {\n            this.$router.reload()\n          })\n        },\n        onCancel() {}\n      })\n    },\n    onSelectChange(selectedRowKeys, selectedRows) {\n      if (selectedRows && selectedRows.length > 0) {\n        const firstItem = selectedRows[0]\n        this.diffSelectedRows = selectedRows.filter(\n          item => item.card_type !== firstItem.card_type\n        )\n      }\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    getList(val = {}) {\n      const query = {\n        ...this.$searchQuery,\n        start_date: val.start_date,\n        end_date: val.end_date\n      }\n      this.$router.replace({ query })\n    },\n    onTableChange() {}\n  }\n}\n</script>\n"]}]}