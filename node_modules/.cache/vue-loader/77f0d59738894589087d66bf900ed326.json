{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/course/personal/list/brand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/course/personal/list/brand.vue","mtime":1600926556168},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ListService } from '../list.service'\nimport { BrandService } from './brand.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './brand.config'\nimport CourseSupportCourseCocahesBrand from '@/views/biz-modals/course/support-course-cocahes-brand'\nimport CourseSupportCourseShops from '@/views/biz-modals/course/support-course-shops'\nimport { SHOP_SETTING, IS_AVAILABLE } from '@/constants/course/personal'\nexport default {\n  name: 'PersonalCourseListInBrand',\n  mixins: [tableMixin],\n  modals: {\n    CourseSupportCourseCocahesBrand,\n    CourseSupportCourseShops\n  },\n  serviceInject() {\n    return {\n      listService: ListService,\n      brandService: BrandService\n    }\n  },\n  data() {\n    return {\n      SHOP_SETTING,\n      IS_AVAILABLE,\n      defaultValue: -1\n    }\n  },\n  computed: {\n    columns\n  },\n  rxState() {\n    return {\n      categoryList: this.listService.categoryList$,\n      loading: this.brandService.loading$,\n      list: this.brandService.list$,\n      page: this.brandService.page$,\n      auth: this.brandService.auth$\n    }\n  },\n  methods: {\n    onDeleteCourse(record) {\n      this.brandService.deleteCourse(record.course_id).subscribe(() => {\n        this.$router.push({ query: this.$searchQuery })\n      })\n    },\n    onSetAvailable(record) {\n      const available =\n        record.is_available.id === IS_AVAILABLE.VALID\n          ? IS_AVAILABLE.INVALID\n          : IS_AVAILABLE.VALID\n      this.brandService\n        .setAvailable({ course_id: record.course_id, available })\n        .subscribe(() => {\n          this.$router.push({ query: this.$searchQuery })\n        })\n    },\n    filterOption(input, option) {\n      return (\n        option.componentOptions.children[0].text\n          .toLowerCase()\n          .indexOf(input.toLowerCase()) >= 0\n      )\n    },\n    onChange() {\n      this.$router.push({ query: { ...this.$searchQuery, course_name: '' } })\n    },\n    addPersonalCourse() {\n      this.$router.push({ name: 'brand-product-course-personal-add' })\n    }\n  }\n}\n",{"version":3,"sources":["brand.vue"],"names":[],"mappingsfile":"brand.vue","sourceRoot":"src/views/pages/brand/product/course/personal/list","sourcesContent":["<template>\n  <div class=\"page-shop-sale-list-brand\">\n    <header>\n      <div\n        class=\"page-shop-sale-list-brand__opreation page-shop-sale-list__opreation\"\n      >\n        <st-button\n          icon=\"add\"\n          type=\"primary\"\n          v-if=\"auth.add\"\n          @click=\"addPersonalCourse\"\n        >\n          新增私教课程\n        </st-button>\n        <div>\n          <a-select\n            showSearch\n            :defaultValue=\"defaultValue\"\n            v-model=\"$searchQuery.category_id\"\n            :filterOption=\"filterOption\"\n            optionFilterProp=\"children\"\n            class=\"mg-r8\"\n            style=\"width: 160px\"\n            @change=\"onSingleSearch('category_id', $event)\"\n          >\n            <a-select-option\n              v-for=\"category in categoryList\"\n              :key=\"category.id\"\n              :value=\"category.id\"\n            >\n              {{ category.setting_name }}\n            </a-select-option>\n          </a-select>\n        </div>\n      </div>\n    </header>\n    <main class=\"page-shop-sale-list-brand__table mg-t8\">\n      <st-table\n        class=\"mg-t16\"\n        rowKey=\"course_id\"\n        :columns=\"columns\"\n        :page=\"page\"\n        :dataSource=\"list\"\n        :loading=\"loading.getList\"\n        @change=\"onTableChange\"\n      >\n        <div slot=\"shops\" slot-scope=\"shops, record\">\n          <a\n            v-if=\"record.shop_setting === SHOP_SETTING.SPECIFIED_STORE\"\n            v-modal-link=\"{\n              name: 'course-support-course-shops',\n              props: { courseId: record.course_id }\n            }\"\n          >\n            共{{ shops }}家门店\n          </a>\n          <span v-else>\n            {{\n              record.shop_setting | enumFilter('personal_course.shop_setting')\n            }}\n          </span>\n        </div>\n        <div slot=\"coaches\" slot-scope=\"coaches, record\">\n          <span v-if=\"!coaches\">{{ coaches }}</span>\n          <a\n            v-else\n            v-modal-link=\"{\n              name: 'course-support-course-cocahes-brand',\n              props: { course: record }\n            }\"\n          >\n            {{ coaches }}\n          </a>\n        </div>\n        <router-link\n          class=\"mg-r8\"\n          :to=\"{\n            name: 'brand-product-course-personal-info',\n            query: { id: record.course_id }\n          }\"\n          slot=\"course_name\"\n          slot-scope=\"course_name, record\"\n        >\n          {{ course_name }}\n        </router-link>\n\n        <div slot=\"price_setting\" slot-scope=\"price_setting\">\n          {{ price_setting | enumFilter('personal_course.price_setting') }}\n        </div>\n        <div slot=\"sell_price\" slot-scope=\"sell_price\">\n          <span>{{ sell_price }}</span>\n        </div>\n        <!-- <div slot=\"is_available\" slot-scope=\"is_available\">\n          <span>\n            <a-badge\n              :status=\"\n                is_available === IS_AVAILABLE.VALID ? 'success' : 'error'\n              \"\n            />\n            {{ is_available | enumFilter('personal_course.is_available') }}\n          </span>\n        </div> -->\n        <div slot=\"action\" slot-scope=\"text, record\">\n          <st-table-actions>\n            <router-link\n              class=\"mg-r8\"\n              v-if=\"record.auth['brand:product:personal_course|get']\"\n              :to=\"{\n                name: 'brand-product-course-personal-info',\n                query: { id: record.course_id }\n              }\"\n            >\n              详情\n            </router-link>\n            <router-link\n              v-if=\"record.auth['brand:product:personal_course|edit']\"\n              :to=\"{\n                name: 'brand-product-course-personal-edit',\n                query: { id: record.course_id }\n              }\"\n            >\n              编辑\n            </router-link>\n            <a v-if=\"record.auth['brand:product:personal_course|del']\">\n              <st-popconfirm\n                :title=\"\n                  '一旦删除则无法恢复，确认删除' + record.course_name + '？'\n                \"\n                @confirm=\"onDeleteCourse(record)\"\n                okText=\"确定\"\n                cancelText=\"取消\"\n              >\n                删除\n              </st-popconfirm>\n            </a>\n          </st-table-actions>\n        </div>\n      </st-table>\n    </main>\n  </div>\n</template>\n\n<script>\nimport { ListService } from '../list.service'\nimport { BrandService } from './brand.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './brand.config'\nimport CourseSupportCourseCocahesBrand from '@/views/biz-modals/course/support-course-cocahes-brand'\nimport CourseSupportCourseShops from '@/views/biz-modals/course/support-course-shops'\nimport { SHOP_SETTING, IS_AVAILABLE } from '@/constants/course/personal'\nexport default {\n  name: 'PersonalCourseListInBrand',\n  mixins: [tableMixin],\n  modals: {\n    CourseSupportCourseCocahesBrand,\n    CourseSupportCourseShops\n  },\n  serviceInject() {\n    return {\n      listService: ListService,\n      brandService: BrandService\n    }\n  },\n  data() {\n    return {\n      SHOP_SETTING,\n      IS_AVAILABLE,\n      defaultValue: -1\n    }\n  },\n  computed: {\n    columns\n  },\n  rxState() {\n    return {\n      categoryList: this.listService.categoryList$,\n      loading: this.brandService.loading$,\n      list: this.brandService.list$,\n      page: this.brandService.page$,\n      auth: this.brandService.auth$\n    }\n  },\n  methods: {\n    onDeleteCourse(record) {\n      this.brandService.deleteCourse(record.course_id).subscribe(() => {\n        this.$router.push({ query: this.$searchQuery })\n      })\n    },\n    onSetAvailable(record) {\n      const available =\n        record.is_available.id === IS_AVAILABLE.VALID\n          ? IS_AVAILABLE.INVALID\n          : IS_AVAILABLE.VALID\n      this.brandService\n        .setAvailable({ course_id: record.course_id, available })\n        .subscribe(() => {\n          this.$router.push({ query: this.$searchQuery })\n        })\n    },\n    filterOption(input, option) {\n      return (\n        option.componentOptions.children[0].text\n          .toLowerCase()\n          .indexOf(input.toLowerCase()) >= 0\n      )\n    },\n    onChange() {\n      this.$router.push({ query: { ...this.$searchQuery, course_name: '' } })\n    },\n    addPersonalCourse() {\n      this.$router.push({ name: 'brand-product-course-personal-add' })\n    }\n  }\n}\n</script>\n"]}]}