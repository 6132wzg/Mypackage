{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-stat-revenue-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-stat-revenue-line.vue","mtime":1591924922831},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport { toKFilter, thousandsFilter } from \"./filters\";\nimport { View } from 'st-data-set';\nimport { Chart } from '@antv/g2';\nimport chartMixin from \"./mixin\";\nexport default {\n  name: 'BrandStatRevenueLine',\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05-28',私教课:20,团体课:50,储值卡:78}]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 280\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: function _default() {\n        var member_card = this.$c('member_card');\n        var small_course = this.$c('small_course');\n        return [member_card, '私教课', '团体课', // '储值卡',\n        '课程包', small_course, '云店', // '定金',\n        // '押金',\n        '其它'];\n      }\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#4677F9', '#06DB8C', '#009DFF', '#00F7e6', '#B8F10F', '#3F66F6', '#FF6466'];\n      }\n    },\n    shadowColors: {\n      type: Array,\n      default: function _default() {\n        return ['rgba(70,119,249,.4)', 'rgba(6,219,140,.4)', 'rgba(0,157,255,.4)', 'rgba(184,241,15,.4)', 'rgba(63,102,246,.4)', 'rgba(255,100,102,.4)'];\n      }\n    }\n  },\n  computed: {\n    colorMap: function colorMap() {\n      var _this = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this.colors[idx % _this.colors.length];\n        return res;\n      }, {});\n    },\n    shadowColorMap: function shadowColorMap() {\n      var _this2 = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this2.shadowColors[idx % _this2.shadowColors.length];\n        return res;\n      }, {});\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      }).transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +row.value;\n          return row;\n        }\n      });\n    },\n    initChart: function initChart() {\n      var _this3 = this;\n\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [8, 160, 'auto', 'auto'],\n        renderer: 'svg'\n      });\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 5,\n          formatter: toKFilter,\n          sync: true\n        }\n      });\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      });\n      this.chart.legend('name', {\n        position: 'right-center',\n        itemWidth: 80,\n        useHtml: true,\n        textStyle: {\n          fill: '#3E4D5C'\n        },\n        itemTpl: function itemTpl() {\n          return '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + \"<span class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></span>\" + \" <span class=\\\"g2-legend-text\\\">{value}</span>\" + '</li>';\n        }\n      });\n      this.chart.line().style('name', {\n        shadowColor: function shadowColor(name) {\n          return _this3.shadowColorMap[name];\n        },\n        // shadowColor: '#70b2ec',\n        shadowBlur: 20,\n        shadowOffsetY: 4\n      }).tooltip('name*value', function (name, value) {\n        return {\n          name: name,\n          value: '¥' + thousandsFilter(value)\n        };\n      }).shape('smooth').size(2).position('date*value').color('name', this.colors);\n      this.chart.render();\n    }\n  }\n};",{"version":3,"sources":["brand-stat-revenue-line.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"brand-stat-revenue-line\"></div>\n</template>\n\n<script>\nimport { toKFilter, thousandsFilter } from './filters'\nimport { View } from 'st-data-set'\nimport { Chart } from '@antv/g2'\nimport chartMixin from './mixin'\n\nexport default {\n  name: 'BrandStatRevenueLine',\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05-28',私教课:20,团体课:50,储值卡:78}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 280\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default() {\n        const member_card = this.$c('member_card')\n        const small_course = this.$c('small_course')\n        return [\n          member_card,\n          '私教课',\n          '团体课',\n          // '储值卡',\n          '课程包',\n          small_course,\n          '云店',\n          // '定金',\n          // '押金',\n          '其它'\n        ]\n      }\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: () => [\n        '#4677F9',\n        '#06DB8C',\n        '#009DFF',\n        '#00F7e6',\n        '#B8F10F',\n        '#3F66F6',\n        '#FF6466'\n      ]\n    },\n    shadowColors: {\n      type: Array,\n      default: () => [\n        'rgba(70,119,249,.4)',\n        'rgba(6,219,140,.4)',\n        'rgba(0,157,255,.4)',\n        'rgba(184,241,15,.4)',\n        'rgba(63,102,246,.4)',\n        'rgba(255,100,102,.4)'\n      ]\n    }\n  },\n  computed: {\n    colorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.colors[idx % this.colors.length]\n        return res\n      }, {})\n    },\n    shadowColorMap() {\n      return this.fields.reduce((res, field, idx) => {\n        res[field] = this.shadowColors[idx % this.shadowColors.length]\n        return res\n      }, {})\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv\n        .transform({\n          type: 'fold',\n          fields: this.fields,\n          key: 'name',\n          value: 'value'\n        })\n        .transform({\n          type: 'map',\n          callback: row => {\n            row.value = +row.value\n            return row\n          }\n        })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [8, 160, 'auto', 'auto'],\n        renderer: 'svg'\n      })\n\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 5,\n          formatter: toKFilter,\n          sync: true\n        }\n      })\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      })\n      this.chart.legend('name', {\n        position: 'right-center',\n        itemWidth: 80,\n        useHtml: true,\n        textStyle: {\n          fill: '#3E4D5C'\n        },\n        itemTpl: () => {\n          return (\n            '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' +\n            `<span class=\"g2-legend-marker\" style=\"background-color:{color};\"></span>` +\n            ` <span class=\"g2-legend-text\">{value}</span>` +\n            '</li>'\n          )\n        }\n      })\n      this.chart\n        .line()\n        .style('name', {\n          shadowColor: name => this.shadowColorMap[name],\n          // shadowColor: '#70b2ec',\n          shadowBlur: 20,\n          shadowOffsetY: 4\n        })\n        .tooltip('name*value', (name, value) => {\n          return {\n            name,\n            value: '¥' + thousandsFilter(value)\n          }\n        })\n        .shape('smooth')\n        .size(2)\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}