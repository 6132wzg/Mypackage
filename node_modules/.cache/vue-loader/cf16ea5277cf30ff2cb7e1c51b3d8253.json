{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/components#/select-condition.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/components#/select-condition.vue","mtime":1591147717345},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'SelectCondition',\n  props: {\n    value: {\n      type: Array,\n      default() {\n        return []\n      }\n    }\n  },\n  data() {\n    return {\n      checked: []\n    }\n  },\n  watch: {\n    value(val) {\n      this.setChecked()\n    },\n    checked(val) {\n      this.$emit('change', val)\n    }\n  },\n  created() {\n    this.setChecked()\n  },\n  methods: {\n    setChecked() {\n      const value = this.value\n      const checked = []\n      value.forEach(item => {\n        if (item.checked) {\n          checked.push(item.id)\n        }\n      })\n      this.checked = checked\n    }\n  }\n}\n",{"version":3,"sources":["select-condition.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"select-condition.vue","sourceRoot":"src/views/pages/brand/setting/general/components#","sourcesContent":["<template>\n  <a-popover placement=\"bottomRight\" trigger=\"click\" class=\"slider-copy-bottom\">\n    <template slot=\"content\">\n      <a-checkbox-group class=\"slider-copy\" v-model=\"checked\">\n        <div v-for=\"(item, index) in value\" :key=\"index\">\n          <a-checkbox :value=\"item.id\">\n            {{ item.condition_name }}\n          </a-checkbox>\n        </div>\n      </a-checkbox-group>\n    </template>\n    <a href=\"javascript: void(0);\">\n      任选其一即升级\n      <st-icon type=\"down\"></st-icon>\n    </a>\n  </a-popover>\n</template>\n<script>\nexport default {\n  name: 'SelectCondition',\n  props: {\n    value: {\n      type: Array,\n      default() {\n        return []\n      }\n    }\n  },\n  data() {\n    return {\n      checked: []\n    }\n  },\n  watch: {\n    value(val) {\n      this.setChecked()\n    },\n    checked(val) {\n      this.$emit('change', val)\n    }\n  },\n  created() {\n    this.setChecked()\n  },\n  methods: {\n    setChecked() {\n      const value = this.value\n      const checked = []\n      value.forEach(item => {\n        if (item.checked) {\n          checked.push(item.id)\n        }\n      })\n      this.checked = checked\n    }\n  }\n}\n</script>\n"]}]}