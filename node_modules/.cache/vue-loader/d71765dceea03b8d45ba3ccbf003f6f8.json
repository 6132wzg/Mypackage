{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/hardware/area.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/hardware/area.vue","mtime":1596188219490},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  ruleOptions,\n  formItemSwitches,\n  alertMsg,\n  timesCardRules\n} from './area.config'\nimport { AreaService } from './area.service'\nimport {\n  LEAVE_LIMIT,\n  CHECKIN,\n  PEOPLE_TYPE,\n  ENTRY\n} from '@/constants/setting/hardware'\n\nexport default {\n  name: 'Area',\n  serviceProviders() {\n    return [AreaService]\n  },\n  serviceInject() {\n    return {\n      areaService: AreaService\n    }\n  },\n  rxState() {\n    const { areaService } = this\n    return {\n      rule: areaService.rule$,\n      timeCardRange: areaService.timeCardRange$,\n      info: areaService.info$,\n      loading: areaService.loading$,\n      whiteList: areaService.whiteList$\n    }\n  },\n  bem: {\n    bPage: 'modal-shop-blacklist'\n  },\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: Number\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      show: false,\n      form,\n      decorators,\n      LEAVE_LIMIT,\n      ENTRY,\n      CHECKIN,\n      PEOPLE_TYPE,\n      peopleType: 0,\n      white_list: [],\n      type: ENTRY.GATE // area类型\n    }\n  },\n  computed: {\n    /**\n     * 根据场地类型控制特定 form-item 的显示隐藏\n     */\n    formItemSwitches,\n    alertMsg,\n    timesCardRules\n  },\n  mounted() {\n    this.getWhiteList('')\n    this.getInfo()\n  },\n  methods: {\n    getWhiteList(val) {\n      this.areaService.getWhiteList(val).subscribe()\n    },\n    getInfo() {\n      this.areaService.getAreaInfo(this.id).subscribe(res => {\n        const {\n          area_id,\n          course_time,\n          people_type,\n          leave_limit,\n          checkin,\n          white_list,\n          charge_type,\n          charge_value,\n          is_course\n        } = res.info\n        this.peopleType = people_type\n        this.$nextTick(() => {\n          this.form.setFieldsValue({\n            area_id,\n            course_time,\n            people_type,\n            /**\n             * 请不要再这么定义了！\n             */\n            leave_limit: leave_limit === LEAVE_LIMIT.TRUE,\n            checkin,\n            white_list,\n            charge_type,\n            charge_value,\n            is_course\n          })\n        })\n      })\n    },\n    getCurPeopleType(e) {\n      this.peopleType = e.target.value\n    },\n    putAreaSetting(e) {\n      if (!this.isEdit) {\n        this.show = false\n      }\n      e.preventDefault()\n      this.form.validate().then(values => {\n        values.area_type = this.type\n        values.leave_limit = values.leave_limit\n          ? LEAVE_LIMIT.TRUE\n          : LEAVE_LIMIT.FALSE\n        this.areaService.putAreaSetting(values).subscribe(() => {\n          this.$emit('success')\n          this.show = false\n        })\n      })\n    }\n  }\n}\n",null]}