{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/styleguide/plugin#/cropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/styleguide/plugin#/cropper.vue","mtime":1597369899420},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Cropper from 'cropperjs';\nimport { AppConfig } from '@/constants/config';\nvar cropper;\nexport default {\n  name: 'CropperDemo',\n  serviceInject: function serviceInject() {\n    return {\n      appConfig: AppConfig\n    };\n  },\n  data: function data() {\n    return {\n      fileList: []\n    };\n  },\n  mounted: function mounted() {\n    var image = document.getElementById('image');\n    Cropper.setDefaults(this.appConfig.CROPPER_DEFAULT_CONFIG);\n    cropper = new Cropper(image);\n  },\n  methods: {\n    beforeUpload: function beforeUpload(file) {\n      if (/^image\\/\\w+/.test(file.type)) {\n        var URL = window.URL || window.webkitURL;\n        var blobURL = URL.createObjectURL(file);\n        cropper.reset().replace(blobURL);\n      }\n\n      return false;\n    },\n    crop: function crop() {\n      cropper.getCroppedCanvas().toBlob(function (blob) {\n        var formData = new FormData();\n        formData.append('croppedImage', blob);\n        console.log(blob);\n      });\n      console.log(cropper.getCroppedCanvas().toDataURL());\n    }\n  }\n};",null]}