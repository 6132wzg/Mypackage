{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-3!/Users/wangzhigang/Desktop/styd/web/src/operators/then.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/operators/then.ts","mtime":1591147717083},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nexport var then = function then(fn) {\n  return function (source$) {\n    var target$ = source$.pipe(switchMap(function (prevRes) {\n      var ret = fn(prevRes);\n\n      if (ret instanceof Observable) {\n        return ret;\n      } else {\n        return of(ret);\n      }\n    }));\n    return target$;\n  };\n};\nexport default then;",null]}