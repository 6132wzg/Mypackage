{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/checkbox-facility/checkbox-facility-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/checkbox-facility/checkbox-facility-group.vue","mtime":1591147717099},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\nexport default {\n  name: 'StCheckboxFacilityGroup',\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      checkboxFacilityGroupProvide: {\n        groupValue: this.stValueData\n      },\n      emitCheckboxFacilityGroup: function emitCheckboxFacilityGroup(data) {\n        var arr = _toConsumableArray(new Set(_toConsumableArray(_this.stValueData.value)));\n\n        var newArr = [];\n\n        if (data.value) {\n          // 选中\n          arr.push(data.key);\n        } else {\n          // 移除\n          if (arr.includes(data.key)) {\n            arr.splice(arr.indexOf(data.key), 1);\n          }\n        } // 去除value里无用的key\n\n\n        arr.forEach(function (i, index) {\n          if (_this.initArr.includes(i)) {\n            newArr.push(i);\n          }\n        });\n        newArr = _toConsumableArray(new Set(newArr));\n\n        _this.$set(_this.stValueData, 'value', newArr);\n\n        _this.$emit('modelCheckboxFacilityChange', newArr);\n\n        _this.$emit('change', newArr);\n      },\n      initCheckboxFacilityGroup: function initCheckboxFacilityGroup(data) {\n        _this.initArr.push(data);\n      }\n    };\n  },\n  data: function data() {\n    return {\n      initArr: [],\n      stValueData: {\n        value: [],\n        disabled: false\n      }\n    };\n  },\n  model: {\n    prop: 'value',\n    event: 'modelCheckboxFacilityChange'\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    value: {\n      deep: true,\n      handler: function handler(newVal, oldVal) {\n        this.stValueData.value = _toConsumableArray(newVal);\n      }\n    },\n    disabled: function disabled(newVal, oldVal) {\n      this.stValueData.disabled = newVal;\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.stValueData.value = _toConsumableArray(this.value);\n      this.stValueData.disabled = this.disabled;\n    }\n  }\n};",{"version":3,"sources":["checkbox-facility-group.vue"],"names":[],"mappings":";;;;;;;;;;;AAMA,eAAA;AACA,EAAA,IAAA,EAAA,yBADA;AAEA,EAAA,OAFA,qBAEA;AAAA;;AACA,WAAA;AACA,MAAA,4BAAA,EAAA;AACA,QAAA,UAAA,EAAA,KAAA;AADA,OADA;AAIA,MAAA,yBAAA,EAAA,mCAAA,IAAA,EAAA;AACA,YAAA,GAAA,sBAAA,IAAA,GAAA,oBAAA,KAAA,CAAA,WAAA,CAAA,KAAA,EAAA,CAAA;;AACA,YAAA,MAAA,GAAA,EAAA;;AACA,YAAA,IAAA,CAAA,KAAA,EAAA;AACA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,SAHA,MAGA;AACA;AACA,cAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA;AACA;AACA,SAXA,CAYA;;;AACA,QAAA,GAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,KAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA,SAJA;AAKA,QAAA,MAAA,sBAAA,IAAA,GAAA,CAAA,MAAA,CAAA,CAAA;;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA,OAAA,EAAA,MAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,6BAAA,EAAA,MAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,MAAA;AACA,OA1BA;AA2BA,MAAA,yBAAA,EAAA,mCAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA;AACA;AA7BA,KAAA;AA+BA,GAlCA;AAmCA,EAAA,IAnCA,kBAmCA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA;AAFA,KAAA;AAOA,GA3CA;AA4CA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,OADA;AAEA,IAAA,KAAA,EAAA;AAFA,GA5CA;AAgDA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,EAAA;AACA;AAJA,KADA;AAOA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAPA,GAhDA;AA4DA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,MAFA,EAEA,MAFA,EAEA;AACA,aAAA,WAAA,CAAA,KAAA,sBAAA,MAAA;AACA;AAJA,KADA;AAOA,IAAA,QAPA,oBAOA,MAPA,EAOA,MAPA,EAOA;AACA,WAAA,WAAA,CAAA,QAAA,GAAA,MAAA;AACA;AATA,GA5DA;AAuEA,EAAA,OAvEA,qBAuEA;AACA,SAAA,IAAA;AACA,GAzEA;AA0EA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,WAAA,CAAA,KAAA,sBAAA,KAAA,KAAA;AACA,WAAA,WAAA,CAAA,QAAA,GAAA,KAAA,QAAA;AACA;AAJA;AA1EA,CAAA","sourcesContent":["<template>\n  <div class=\"st-checkbox-facility-group\">\n    <slot></slot>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'StCheckboxFacilityGroup',\n  provide() {\n    return {\n      checkboxFacilityGroupProvide: {\n        groupValue: this.stValueData\n      },\n      emitCheckboxFacilityGroup: data => {\n        let arr = [...new Set([...this.stValueData.value])]\n        let newArr = []\n        if (data.value) {\n          // 选中\n          arr.push(data.key)\n        } else {\n          // 移除\n          if (arr.includes(data.key)) {\n            arr.splice(arr.indexOf(data.key), 1)\n          }\n        }\n        // 去除value里无用的key\n        arr.forEach((i, index) => {\n          if (this.initArr.includes(i)) {\n            newArr.push(i)\n          }\n        })\n        newArr = [...new Set(newArr)]\n        this.$set(this.stValueData, 'value', newArr)\n        this.$emit('modelCheckboxFacilityChange', newArr)\n        this.$emit('change', newArr)\n      },\n      initCheckboxFacilityGroup: data => {\n        this.initArr.push(data)\n      }\n    }\n  },\n  data() {\n    return {\n      initArr: [],\n      stValueData: {\n        value: [],\n        disabled: false\n      }\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'modelCheckboxFacilityChange'\n  },\n  props: {\n    value: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    value: {\n      deep: true,\n      handler(newVal, oldVal) {\n        this.stValueData.value = [...newVal]\n      }\n    },\n    disabled(newVal, oldVal) {\n      this.stValueData.disabled = newVal\n    }\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    init() {\n      this.stValueData.value = [...this.value]\n      this.stValueData.disabled = this.disabled\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/checkbox-facility"}]}