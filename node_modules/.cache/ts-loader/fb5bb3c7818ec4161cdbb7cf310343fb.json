{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/api/v1/cards.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/api/v1/cards.ts","mtime":1600926555415},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"../api\";\nexport var CardsApi = /*#__PURE__*/function (_Api) {\n  _inherits(CardsApi, _Api);\n\n  var _super = _createSuper(CardsApi);\n\n  function CardsApi() {\n    _classCallCheck(this, CardsApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CardsApi, [{\n    key: \"getCardShelfList\",\n\n    /**\n     * 卡已上架列表\n     */\n    value: function getCardShelfList(query, type, cardType) {\n      return this.http.get(\"/v1/cards/\".concat(cardType, \"/\").concat(type, \"/shelf\"), {\n        query: query\n      });\n    }\n    /**\n     * 卡列表\n     */\n\n  }, {\n    key: \"getCardList\",\n    value: function getCardList(query, type, cardType) {\n      return this.http.get(\"/v1/cards/\".concat(cardType, \"/\").concat(type), {\n        query: query\n      });\n    }\n    /**\n     * 卡上架详情\n     */\n\n  }, {\n    key: \"getCardShelfInfo\",\n    value: function getCardShelfInfo(id, type, cardType) {\n      var query = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return this.http.get(\"/v1/cards/\".concat(cardType, \"/\").concat(type, \"/shelf/\").concat(id), {\n        query: query\n      });\n    }\n    /**\n     * 卡上架\n     */\n\n  }, {\n    key: \"setCardShelf\",\n    value: function setCardShelf(params, id, type, cardType) {\n      return this.http.put(\"/v1/cards/\".concat(cardType, \"/\").concat(type, \"/shelf/\").concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 会员卡新增\n     */\n\n  }, {\n    key: \"addCard\",\n    value: function addCard(params, type) {\n      return this.http.post(\"/v1/cards/member/\".concat(type), {\n        params: params\n      });\n    }\n    /**\n     * 会员卡详情\n     */\n\n  }, {\n    key: \"getCardInfo\",\n    value: function getCardInfo(id, type) {\n      return this.http.get(\"/v1/cards/member/\".concat(type, \"/\").concat(id));\n    }\n    /**\n     * 会员卡编辑详情\n     */\n\n  }, {\n    key: \"getCardInfoBack\",\n    value: function getCardInfoBack(id, type) {\n      return this.http.get(\"/v1/cards/member/\".concat(type, \"/back/\").concat(id));\n    }\n    /**\n     * 会员卡编辑\n     */\n\n  }, {\n    key: \"editCard\",\n    value: function editCard(params, type) {\n      return this.http.put(\"/v1/cards/member/\".concat(type), {\n        params: params\n      });\n    }\n    /**\n     * 储值卡新增\n     */\n\n  }, {\n    key: \"addCardsDeposit\",\n    value: function addCardsDeposit(params, type) {\n      return this.http.post(\"/v1/cards/\".concat(type, \"/deposit\"), {\n        params: params\n      });\n    }\n    /**\n     * 储值卡详情\n     */\n\n  }, {\n    key: \"getCardDepositInfo\",\n    value: function getCardDepositInfo(id, type) {\n      return this.http.get(\"/v1/cards/\".concat(type, \"/deposit/\").concat(id));\n    }\n    /**\n     * 储值卡编辑详情\n     */\n\n  }, {\n    key: \"getCardDepositInfoBackBrand\",\n    value: function getCardDepositInfoBackBrand(id) {\n      return this.http.get(\"/v1/cards/brand/deposit/back/\".concat(id));\n    }\n    /**\n     * 储值卡编辑\n     */\n\n  }, {\n    key: \"editCardDeposit\",\n    value: function editCardDeposit(params, type) {\n      return this.http.put(\"/v1/cards/\".concat(type, \"/deposit\"), {\n        params: params\n      });\n    }\n    /**\n     * 卡停售信息回传\n     */\n\n  }, {\n    key: \"getCardSaleStopInfo\",\n    value: function getCardSaleStopInfo(id, type, cardType) {\n      return this.http.get(\"/v1/cards/\".concat(cardType, \"/\").concat(type, \"/sale/info/\").concat(id));\n    }\n    /**\n     * 卡停售\n     */\n\n  }, {\n    key: \"setCardsSaleStop\",\n    value: function setCardsSaleStop(params, id, type, cardType) {\n      return this.http.put(\"/v1/cards/\".concat(cardType, \"/\").concat(type, \"/stop/\").concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 获取服务器系统时间\n     */\n\n  }, {\n    key: \"getServiceTime\",\n    value: function getServiceTime() {\n      return this.http.get(\"/time\");\n    }\n    /**\n     * 卡恢复售卖\n     */\n\n  }, {\n    key: \"setCardsSaleRecover\",\n    value: function setCardsSaleRecover(params, id, type, cardType) {\n      return this.http.put(\"/v1/cards/\".concat(cardType, \"/\").concat(type, \"/recover/\").concat(id), {\n        params: params\n      });\n    }\n    /**\n     *  卡删除\n     */\n\n  }, {\n    key: \"setCardsDelete\",\n    value: function setCardsDelete(id, type, cardType) {\n      return this.http.delete(\"/v1/cards/\".concat(cardType, \"/\").concat(type, \"/\").concat(id));\n    }\n    /**\n     * 卡下架\n     */\n\n  }, {\n    key: \"setCardsShelfDown\",\n    value: function setCardsShelfDown(id, type, cardType) {\n      return this.http.put(\"/v1/cards/\".concat(cardType, \"/\").concat(type, \"/shelf/down/\").concat(id));\n    }\n    /***\n     *  品牌会员卡下架\n     */\n\n  }, {\n    key: \"setBrandCardsShelfDown\",\n    value: function setBrandCardsShelfDown(params) {\n      return this.http.put(\"/v1/cards/member/brand/shelf/down\", {\n        params: params\n      });\n    }\n    /***\n     *  品牌储值卡下架\n     */\n\n  }, {\n    key: \"setBrandDepositShelfDown\",\n    value: function setBrandDepositShelfDown(params) {\n      return this.http.put(\"/v1/cards/deposit/brand/shelf/down\", {\n        params: params\n      });\n    }\n    /**\n     *  储值卡消费门店列表\n     */\n\n  }, {\n    key: \"getCardsDepositConsumeShop\",\n    value: function getCardsDepositConsumeShop(query, id) {\n      return this.http.get(\"/v1/cards/deposit/consume/shop/\".concat(id), {\n        query: query\n      });\n    }\n    /**\n     *  储值卡支持售卖门店列表\n     */\n\n  }, {\n    key: \"getCardsDepositSaleShop\",\n    value: function getCardsDepositSaleShop(query, id) {\n      return this.http.get(\"/v1/cards/deposit/sale/shop/\".concat(id), {\n        query: query\n      });\n    }\n    /**\n     *  会员支持入场门店列表\n     */\n\n  }, {\n    key: \"getCardsMemberConsumeShop\",\n    value: function getCardsMemberConsumeShop(query, id) {\n      return this.http.get(\"/v1/cards/member/use/shop/\".concat(id), {\n        query: query\n      });\n    }\n    /**\n     *  会员卡支持售卖门店列表\n     */\n\n  }, {\n    key: \"getCardsMemberSaleShop\",\n    value: function getCardsMemberSaleShop(query, id) {\n      return this.http.get(\"/v1/cards/member/sale/shop/\".concat(id), {\n        query: query\n      });\n    }\n    /**\n     * 储值卡上架\n     */\n\n  }, {\n    key: \"setCardsDepositShelf\",\n    value: function setCardsDepositShelf(id, type) {\n      return this.http.put(\"/v1/cards/deposit/\".concat(type, \"/shelf/\").concat(id));\n    }\n    /**\n     * 上架会员卡团体课列表\n     */\n\n  }, {\n    key: \"getCourseTeamShelfList\",\n    value: function getCourseTeamShelfList(query, type) {\n      return this.http.get(\"/v1/course/team/\".concat(type, \"/shelf\"), {\n        query: query\n      });\n    }\n    /**\n     * 获取拼团支持门店列表\n     */\n\n  }, {\n    key: \"getGroupShelfList\",\n    value: function getGroupShelfList(query, id) {\n      return this.http.get(\"/v1/plugin/group_buy/shop/\".concat(id), {\n        query: query\n      });\n    }\n    /***\n     *  变更会员卡上架\n     *  type brand|shop\n     */\n\n  }, {\n    key: \"updateCardShelf\",\n    value: function updateCardShelf(id, params, type) {\n      return this.http.put(\"/v1/cards/member/\".concat(type, \"/shelf/update/\").concat(id), {\n        params: params\n      });\n    }\n  }]);\n\n  return CardsApi;\n}(Api);",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/api/v1/cards.ts"],"names":[],"mappings":"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","sourcesContent":["import { Api } from '../api'\nexport interface CardShelfListInput {\n  current_page?: number\n  size?: number\n  card_type?: number\n  publish_channel?: number\n  card_name?: string\n}\nexport interface CardListInput {\n  current_page?: number\n  size?: number\n  card_type?: number\n  publish_channel?: number\n  card_name?: string\n  sell_status?: number\n  shelf_status?: number\n}\nexport interface CardSaleStopInput {\n  reason: string\n}\nexport interface CardSaleRecoverInput {\n  start_time: string\n  end_time: string\n}\nexport interface BrandShelfDownCardShopInput {\n  card_id: number\n  shop_id: number\n}\nexport interface BrandCardShelfDownInput {\n  card_shop: Array<BrandShelfDownCardShopInput>\n}\nexport interface ListPageInput {\n  current_page: number\n  size: number\n}\nexport interface CourseTeamShelfListInput {\n  course_name?: string\n}\nexport class CardsApi extends Api {\n  /**\n   * 卡已上架列表\n   */\n  getCardShelfList(query: CardShelfListInput, type: string, cardType: string) {\n    return this.http.get(`/v1/cards/${cardType}/${type}/shelf`, {\n      query\n    })\n  }\n  /**\n   * 卡列表\n   */\n  getCardList(query: CardListInput, type: string, cardType: string) {\n    return this.http.get(`/v1/cards/${cardType}/${type}`, { query })\n  }\n  /**\n   * 卡上架详情\n   */\n  getCardShelfInfo(\n    id: string,\n    type: string,\n    cardType: string,\n    query: GetCardShelfInfoInput = {}\n  ) {\n    return this.http.get(`/v1/cards/${cardType}/${type}/shelf/${id}`, {\n      query\n    })\n  }\n  /**\n   * 卡上架\n   */\n  setCardShelf(params: any, id: string, type: string, cardType: string) {\n    return this.http.put(`/v1/cards/${cardType}/${type}/shelf/${id}`, {\n      params\n    })\n  }\n  /**\n   * 会员卡新增\n   */\n  addCard(params: CardsInput, type: string) {\n    return this.http.post(`/v1/cards/member/${type}`, { params })\n  }\n  /**\n   * 会员卡详情\n   */\n  getCardInfo(id: string, type: string) {\n    return this.http.get(`/v1/cards/member/${type}/${id}`)\n  }\n  /**\n   * 会员卡编辑详情\n   */\n  getCardInfoBack(id: string, type: string) {\n    return this.http.get(`/v1/cards/member/${type}/back/${id}`)\n  }\n  /**\n   * 会员卡编辑\n   */\n  editCard(params: CardsInput, type: string) {\n    return this.http.put(`/v1/cards/member/${type}`, { params })\n  }\n  /**\n   * 储值卡新增\n   */\n  addCardsDeposit(params: CardsInput, type: string) {\n    return this.http.post(`/v1/cards/${type}/deposit`, { params })\n  }\n  /**\n   * 储值卡详情\n   */\n  getCardDepositInfo(id: string, type: string) {\n    return this.http.get(`/v1/cards/${type}/deposit/${id}`)\n  }\n  /**\n   * 储值卡编辑详情\n   */\n  getCardDepositInfoBackBrand(id: string) {\n    return this.http.get(`/v1/cards/brand/deposit/back/${id}`)\n  }\n  /**\n   * 储值卡编辑\n   */\n  editCardDeposit(params: CardsInput, type: string) {\n    return this.http.put(`/v1/cards/${type}/deposit`, { params })\n  }\n  /**\n   * 卡停售信息回传\n   */\n  getCardSaleStopInfo(id: string, type: string, cardType: string) {\n    return this.http.get(`/v1/cards/${cardType}/${type}/sale/info/${id}`)\n  }\n  /**\n   * 卡停售\n   */\n  setCardsSaleStop(\n    params: CardSaleStopInput,\n    id: string,\n    type: string,\n    cardType: string\n  ) {\n    return this.http.put(`/v1/cards/${cardType}/${type}/stop/${id}`, {\n      params\n    })\n  }\n  /**\n   * 获取服务器系统时间\n   */\n  getServiceTime() {\n    return this.http.get(`/time`)\n  }\n  /**\n   * 卡恢复售卖\n   */\n  setCardsSaleRecover(\n    params: CardSaleRecoverInput,\n    id: string,\n    type: string,\n    cardType: string\n  ) {\n    return this.http.put(`/v1/cards/${cardType}/${type}/recover/${id}`, {\n      params\n    })\n  }\n  /**\n   *  卡删除\n   */\n  setCardsDelete(id: string, type: string, cardType: string) {\n    return this.http.delete(`/v1/cards/${cardType}/${type}/${id}`)\n  }\n  /**\n   * 卡下架\n   */\n  setCardsShelfDown(id: string, type: string, cardType: string) {\n    return this.http.put(`/v1/cards/${cardType}/${type}/shelf/down/${id}`)\n  }\n  /***\n   *  品牌会员卡下架\n   */\n  setBrandCardsShelfDown(params: BrandCardShelfDownInput) {\n    return this.http.put(`/v1/cards/member/brand/shelf/down`, { params })\n  }\n  /***\n   *  品牌储值卡下架\n   */\n  setBrandDepositShelfDown(params: BrandCardShelfDownInput) {\n    return this.http.put(`/v1/cards/deposit/brand/shelf/down`, {\n      params\n    })\n  }\n  /**\n   *  储值卡消费门店列表\n   */\n  getCardsDepositConsumeShop(query: ListPageInput, id: string) {\n    return this.http.get(`/v1/cards/deposit/consume/shop/${id}`, {\n      query\n    })\n  }\n  /**\n   *  储值卡支持售卖门店列表\n   */\n  getCardsDepositSaleShop(query: ListPageInput, id: string) {\n    return this.http.get(`/v1/cards/deposit/sale/shop/${id}`, { query })\n  }\n  /**\n   *  会员支持入场门店列表\n   */\n  getCardsMemberConsumeShop(query: ListPageInput, id: string) {\n    return this.http.get(`/v1/cards/member/use/shop/${id}`, { query })\n  }\n  /**\n   *  会员卡支持售卖门店列表\n   */\n  getCardsMemberSaleShop(query: ListPageInput, id: string) {\n    return this.http.get(`/v1/cards/member/sale/shop/${id}`, { query })\n  }\n  /**\n   * 储值卡上架\n   */\n  setCardsDepositShelf(id: string, type: string) {\n    return this.http.put(`/v1/cards/deposit/${type}/shelf/${id}`)\n  }\n  /**\n   * 上架会员卡团体课列表\n   */\n  getCourseTeamShelfList(query: CourseTeamShelfListInput, type: string) {\n    return this.http.get(`/v1/course/team/${type}/shelf`, { query })\n  }\n  /**\n   * 获取拼团支持门店列表\n   */\n  getGroupShelfList(query: ListPageInput, id: number) {\n    return this.http.get(`/v1/plugin/group_buy/shop/${id}`, { query })\n  }\n  /***\n   *  变更会员卡上架\n   *  type brand|shop\n   */\n  updateCardShelf(id: number, params: UpdateCardShelfInput, type) {\n    return this.http.put(`/v1/cards/member/${type}/shelf/update/${id}`, {\n      params\n    })\n  }\n}\nexport interface CardsInput {\n  [propName: string]: any\n}\n\nexport interface UpdateCardShelfInput {\n  /**\n   * 上架门店ID列表\n   */\n  sell_shops: any[]\n  /**\n   *  开卡方式 1购买即开卡 2到店开卡 3到期开卡\n   */\n  open_type?: number\n  /**\n   * 多少天后自动开卡，当open_type=2必传\n   */\n  activate_duration\n  /**\n   * 约课权益 1无 2全部团体课 3指定课程 团体课\n   */\n  course_interests: number\n  /**\n   * 课程ID列表 当course_interests=3时必传\n   */\n  courses?: any[]\n  /**\n   * 入场时段类型 1不限制 2自定义\n   */\n  inout_type: number\n  /**\n   * 入场时间段\n   */\n  inout_time: object\n  /**\n   * 规格\n   */\n  specs: any[]\n  /**\n   * vip区域\n   */\n  areas: any[]\n  /**\n   * 上架ID\n   */\n  shelf_id: number\n}\n\nexport interface GetCardShelfInfoInput {\n  /**\n   * 上架卡 id\n   */\n  shelf_id?: number\n}\n"],"sourceRoot":""}]}