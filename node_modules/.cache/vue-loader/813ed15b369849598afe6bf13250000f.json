{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/mini-schedule/add-course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/mini-schedule/add-course.vue","mtime":1597396799993},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SmallCourseScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service'\nimport { SmallCourseScheduleCommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service'\nimport { MessageService } from '@/services/message.service'\nimport { ruleOptions } from './add-course.config'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'ModalShopMiniAddCourse',\n  bem: {\n    b: 'modal-shop-mini-add-course'\n  },\n  serviceInject() {\n    return {\n      smallCourseScheduleService: SmallCourseScheduleService,\n      smallCourseScheduleCommonService: SmallCourseScheduleCommonService,\n      msg: MessageService\n    }\n  },\n  rxState() {\n    const scsc = this.smallCourseScheduleCommonService\n    return {\n      loading: this.smallCourseScheduleService.loading$,\n      coachSmallCourseOptions: scsc.coachBindOptions$,\n      courseSmallCourseOptions: scsc.courseSmallCourseOptions$,\n      courtOptions: scsc.courtOptions$\n    }\n  },\n  props: {\n    item: {\n      type: Array,\n      default() {\n        return [{}]\n      }\n    },\n    customizeShow: {\n      type: Boolean,\n      default: false\n    },\n    disabledCustomBtn: {\n      type: Boolean,\n      default: true\n    },\n    disabledAddCourseBtn: {\n      type: Boolean,\n      default: true\n    },\n    cycleIndex: {\n      type: Number,\n      default: 0\n    },\n    cycle: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    week: {\n      type: Number,\n      default: 0\n    },\n    cycle_type: {\n      type: Number,\n      default: 1\n    },\n    courseInfo: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    editScheduleCycleFlag: {\n      type: Boolean,\n      default: () => {\n        return false\n      }\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      coachId: '',\n      form,\n      decorators,\n      showFlag: false,\n      params: {},\n      cycle_start_date: '',\n      cycle_end_date: ''\n    }\n  },\n  computed: {\n    DisabledAddCourseBtn() {\n      return this.cycle_type === 1\n        ? this.disabledAddCourseBtn\n        : this.disabledCustomBtn\n    }\n  },\n  created() {\n    this.showFlag = this.item[0].show || this.customizeShow\n  },\n  methods: {\n    hide() {\n      this.showFlag = false\n      this.resetForm()\n    },\n    onChangeCoach(value) {\n      this.coachSmallCourseOptions.forEach((item, index) => {\n        if (item.id === value) {\n          this.params.coach_name = item.name\n        }\n      })\n    },\n    onChangeCourt(data) {\n      this.courtOptions.forEach((item, index) => {\n        if (item.id === data[0]) {\n          this.params.court_name = item.name\n          if (data[1]) {\n            item.children.forEach((childrenItem, index) => {\n              if (childrenItem.id === data[1]) {\n                this.params.court_site_name = childrenItem.name\n              }\n            })\n          } else {\n            this.params.court_site_name = ''\n          }\n        }\n        return\n      })\n    },\n    addCourse(cycleIndex, conflict, params, list) {\n      this.$emit('addCourse', cycleIndex, conflict, params, list)\n      this.showFlag = false\n    },\n    addCustomCourse(params) {\n      this.$emit('addCustomCourse', params)\n      this.showFlag = false\n    },\n    addSchedule(verifyParams) {\n      this.smallCourseScheduleService\n        .addScheduleInBatch(verifyParams)\n        .subscribe(res => {\n          console.log(res)\n          if (!res.conflict) {\n            verifyParams.schedule_ids = res.schedule_ids\n          }\n          this.addCourse(this.cycleIndex, res.conflict, verifyParams, res.list)\n          this.resetForm()\n        })\n    },\n    addScheduleCustom(verifyParams) {\n      this.smallCourseScheduleService\n        .addScheduleInBatchCustom(verifyParams)\n        .subscribe(res => {\n          console.log(res)\n          if (!res.conflict) {\n            verifyParams.id = res.schedule_id\n            this.addCustomCourse(verifyParams)\n            this.resetForm()\n          }\n        })\n    },\n    resetForm() {\n      this.form.resetFields()\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const form = cloneDeep(values)\n        if (this.cycle_type === 2) {\n          const start_days = values.start_days.format('YYYY-MM-DD')\n          const start_time = values.start_time.format('HH:mm')\n          const end_time = values.end_time.format('HH:mm')\n          form.start_time = start_days + ' ' + start_time\n          form.end_time = start_days + ' ' + end_time\n        } else {\n          form.start_time = values.start_time.format('HH:mm')\n          form.end_time = values.end_time.format('HH:mm')\n        }\n        form.court_id = values.court_id[0]\n        form.court_site_id = values.court_id[1] || 0\n        form.week = this.week\n        form.cycle_start_date = this.cycle[0].format('YYYY-MM-DD')\n        form.cycle_end_date = this.cycle[1].format('YYYY-MM-DD')\n        form.course_id = this.courseInfo.course_id\n        const verifyParams = Object.assign(this.params, form)\n        console.log(verifyParams)\n        console.log(this.cycle_type)\n        if (this.cycle_type === 1) {\n          this.addSchedule(verifyParams)\n        } else {\n          console.log(verifyParams)\n          this.addScheduleCustom(verifyParams)\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["add-course.vue"],"names":[],"mappingsfile":"add-course.vue","sourceRoot":"src/views/pages/shop/product/course/mini-schedule","sourcesContent":["<template>\n  <a-popover\n    trigger=\"click\"\n    overlayClassName=\"modal-shop-mini-add-course\"\n    v-model=\"showFlag\"\n    placement=\"bottom\"\n    title=\"新增课程\"\n  >\n    <template :class=\"b('wrapper')\" slot=\"content\">\n      <span :class=\"b('head-close')\" @click=\"hide\">\n        <st-icon type=\"modal-close\" :class=\"b('modal-close-btn')\"></st-icon>\n      </span>\n      <div class=\"add-course-conent\">\n        <st-form labelWidth=\"68px\" :form=\"form\">\n          <st-form-item label=\"排课名称\" class=\"mg-t12\">\n            <a-input\n              placeholder=\"请输入\"\n              v-decorator=\"decorators.current_course_name\"\n            />\n          </st-form-item>\n          <st-form-item label=\"日期\" required v-if=\"cycle_type === 2\">\n            <a-date-picker\n              style=\"width:100%\"\n              v-decorator=\"decorators.start_days\"\n            />\n          </st-form-item>\n          <st-form-item label=\"开始时间\" required>\n            <a-time-picker\n              format=\"HH:mm\"\n              style=\"width:100%\"\n              v-decorator=\"decorators.start_time\"\n            />\n          </st-form-item>\n          <st-form-item label=\"结束时间\" required>\n            <a-time-picker\n              format=\"HH:mm\"\n              style=\"width:100%\"\n              v-decorator=\"decorators.end_time\"\n            />\n          </st-form-item>\n          <st-form-item label=\"场地\" required>\n            <a-cascader\n              placeholder=\"请选择场地\"\n              :options=\"courtOptions\"\n              :fieldNames=\"{ label: 'name', value: 'id', children: 'children' }\"\n              v-decorator=\"decorators.court_id\"\n              @change=\"onChangeCourt\"\n            />\n          </st-form-item>\n          <st-form-item :label=\"`${$c('coach')}`\" required>\n            <a-select\n              :placeholder=\"`请选择${$c('coach')}`\"\n              @change=\"onChangeCoach\"\n              v-decorator=\"decorators.coach_id\"\n            >\n              <a-select-option\n                v-for=\"coach in coachSmallCourseOptions\"\n                :key=\"coach.id\"\n                :value=\"coach.id\"\n              >\n                {{ coach.name }}\n              </a-select-option>\n            </a-select>\n          </st-form-item>\n        </st-form>\n      </div>\n      <div :class=\"b('footer')\">\n        <div :class=\"b('save-schedule-btn')\">\n          <st-button @click=\"hide\">\n            取消\n          </st-button>\n          <st-button type=\"primary\" class=\"mg-l12\" @click=\"onSubmit\">\n            提交\n          </st-button>\n        </div>\n      </div>\n    </template>\n    <st-button\n      :class=\"b('add-btn')\"\n      block\n      type=\"dashed\"\n      icon=\"add\"\n      :disabled=\"DisabledAddCourseBtn\"\n    >\n      新增课程\n    </st-button>\n  </a-popover>\n</template>\n\n<script>\nimport { SmallCourseScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service'\nimport { SmallCourseScheduleCommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service'\nimport { MessageService } from '@/services/message.service'\nimport { ruleOptions } from './add-course.config'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'ModalShopMiniAddCourse',\n  bem: {\n    b: 'modal-shop-mini-add-course'\n  },\n  serviceInject() {\n    return {\n      smallCourseScheduleService: SmallCourseScheduleService,\n      smallCourseScheduleCommonService: SmallCourseScheduleCommonService,\n      msg: MessageService\n    }\n  },\n  rxState() {\n    const scsc = this.smallCourseScheduleCommonService\n    return {\n      loading: this.smallCourseScheduleService.loading$,\n      coachSmallCourseOptions: scsc.coachBindOptions$,\n      courseSmallCourseOptions: scsc.courseSmallCourseOptions$,\n      courtOptions: scsc.courtOptions$\n    }\n  },\n  props: {\n    item: {\n      type: Array,\n      default() {\n        return [{}]\n      }\n    },\n    customizeShow: {\n      type: Boolean,\n      default: false\n    },\n    disabledCustomBtn: {\n      type: Boolean,\n      default: true\n    },\n    disabledAddCourseBtn: {\n      type: Boolean,\n      default: true\n    },\n    cycleIndex: {\n      type: Number,\n      default: 0\n    },\n    cycle: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    week: {\n      type: Number,\n      default: 0\n    },\n    cycle_type: {\n      type: Number,\n      default: 1\n    },\n    courseInfo: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    editScheduleCycleFlag: {\n      type: Boolean,\n      default: () => {\n        return false\n      }\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      coachId: '',\n      form,\n      decorators,\n      showFlag: false,\n      params: {},\n      cycle_start_date: '',\n      cycle_end_date: ''\n    }\n  },\n  computed: {\n    DisabledAddCourseBtn() {\n      return this.cycle_type === 1\n        ? this.disabledAddCourseBtn\n        : this.disabledCustomBtn\n    }\n  },\n  created() {\n    this.showFlag = this.item[0].show || this.customizeShow\n  },\n  methods: {\n    hide() {\n      this.showFlag = false\n      this.resetForm()\n    },\n    onChangeCoach(value) {\n      this.coachSmallCourseOptions.forEach((item, index) => {\n        if (item.id === value) {\n          this.params.coach_name = item.name\n        }\n      })\n    },\n    onChangeCourt(data) {\n      this.courtOptions.forEach((item, index) => {\n        if (item.id === data[0]) {\n          this.params.court_name = item.name\n          if (data[1]) {\n            item.children.forEach((childrenItem, index) => {\n              if (childrenItem.id === data[1]) {\n                this.params.court_site_name = childrenItem.name\n              }\n            })\n          } else {\n            this.params.court_site_name = ''\n          }\n        }\n        return\n      })\n    },\n    addCourse(cycleIndex, conflict, params, list) {\n      this.$emit('addCourse', cycleIndex, conflict, params, list)\n      this.showFlag = false\n    },\n    addCustomCourse(params) {\n      this.$emit('addCustomCourse', params)\n      this.showFlag = false\n    },\n    addSchedule(verifyParams) {\n      this.smallCourseScheduleService\n        .addScheduleInBatch(verifyParams)\n        .subscribe(res => {\n          console.log(res)\n          if (!res.conflict) {\n            verifyParams.schedule_ids = res.schedule_ids\n          }\n          this.addCourse(this.cycleIndex, res.conflict, verifyParams, res.list)\n          this.resetForm()\n        })\n    },\n    addScheduleCustom(verifyParams) {\n      this.smallCourseScheduleService\n        .addScheduleInBatchCustom(verifyParams)\n        .subscribe(res => {\n          console.log(res)\n          if (!res.conflict) {\n            verifyParams.id = res.schedule_id\n            this.addCustomCourse(verifyParams)\n            this.resetForm()\n          }\n        })\n    },\n    resetForm() {\n      this.form.resetFields()\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const form = cloneDeep(values)\n        if (this.cycle_type === 2) {\n          const start_days = values.start_days.format('YYYY-MM-DD')\n          const start_time = values.start_time.format('HH:mm')\n          const end_time = values.end_time.format('HH:mm')\n          form.start_time = start_days + ' ' + start_time\n          form.end_time = start_days + ' ' + end_time\n        } else {\n          form.start_time = values.start_time.format('HH:mm')\n          form.end_time = values.end_time.format('HH:mm')\n        }\n        form.court_id = values.court_id[0]\n        form.court_site_id = values.court_id[1] || 0\n        form.week = this.week\n        form.cycle_start_date = this.cycle[0].format('YYYY-MM-DD')\n        form.cycle_end_date = this.cycle[1].format('YYYY-MM-DD')\n        form.course_id = this.courseInfo.course_id\n        const verifyParams = Object.assign(this.params, form)\n        console.log(verifyParams)\n        console.log(this.cycle_type)\n        if (this.cycle_type === 1) {\n          this.addSchedule(verifyParams)\n        } else {\n          console.log(verifyParams)\n          this.addScheduleCustom(verifyParams)\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}