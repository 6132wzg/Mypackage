{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/crowd-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/crowd-line.vue","mtime":1591147717121},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport chartMixin from './mixin'\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport { toKFilter, thousandsFilter } from './filters'\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05/19',入场人数:1346,领券人数:1023,交易人数:940,上课人数:680},{date:'05/20',入场人数:1346,领券人数:1023,交易人数:940,上课人数:680}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 324\n    },\n    fields: {\n      type: Array,\n      default: () => ['入场人数', '领券人数', '交易人数', '上课人数']\n    },\n    colors: {\n      type: Array,\n      default: () => ['#3F66F6', '#06DB8C', '#FFB946', '#C87FFF']\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv\n        .transform({\n          type: 'fold',\n          fields: this.fields,\n          key: 'name',\n          value: 'value'\n        })\n        .transform({\n          type: 'map',\n          callback(row) {\n            row.value = +row.value\n            return row\n          }\n        })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg'\n      })\n      this.chart.source(this.dv, {\n        date: {\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 8,\n          mix: 0,\n          formatter: toKFilter\n        }\n      })\n      this.chart.legend(false)\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        }\n      })\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        }\n      })\n      this.chart\n        .line()\n        .tooltip('name*value', (name, value) => {\n          return {\n            name,\n            value: thousandsFilter(value, 0) + '人'\n          }\n        })\n        .size(2)\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart.render()\n    }\n  }\n}\n",{"version":3,"sources":["crowd-line.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"crowd-line.vue","sourceRoot":"src/views/biz-components/stat","sourcesContent":["<template>\n  <div class=\"stat-crowd-line\"></div>\n</template>\n\n<script>\nimport chartMixin from './mixin'\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport { toKFilter, thousandsFilter } from './filters'\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05/19',入场人数:1346,领券人数:1023,交易人数:940,上课人数:680},{date:'05/20',入场人数:1346,领券人数:1023,交易人数:940,上课人数:680}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 324\n    },\n    fields: {\n      type: Array,\n      default: () => ['入场人数', '领券人数', '交易人数', '上课人数']\n    },\n    colors: {\n      type: Array,\n      default: () => ['#3F66F6', '#06DB8C', '#FFB946', '#C87FFF']\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv\n        .transform({\n          type: 'fold',\n          fields: this.fields,\n          key: 'name',\n          value: 'value'\n        })\n        .transform({\n          type: 'map',\n          callback(row) {\n            row.value = +row.value\n            return row\n          }\n        })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg'\n      })\n      this.chart.source(this.dv, {\n        date: {\n          range: [0, 1]\n        },\n        value: {\n          tickCount: 8,\n          mix: 0,\n          formatter: toKFilter\n        }\n      })\n      this.chart.legend(false)\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        }\n      })\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        }\n      })\n      this.chart\n        .line()\n        .tooltip('name*value', (name, value) => {\n          return {\n            name,\n            value: thousandsFilter(value, 0) + '人'\n          }\n        })\n        .size(2)\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"]}]}