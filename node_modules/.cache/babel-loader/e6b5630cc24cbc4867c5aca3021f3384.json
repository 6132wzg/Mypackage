{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/date-component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/schedule/date#/date-component.vue","mtime":1597396799923},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { TIME_UNIT } from '@/constants/course/team';\nexport default {\n  name: 'date',\n  data: function data() {\n    return {\n      startTime: moment().format('YYYY-MM-DD'),\n      TIME_UNIT: TIME_UNIT\n    };\n  },\n  props: {\n    end: {\n      type: String,\n      default: ''\n    }\n  },\n  created: function created() {\n    var weekOfday = moment(this.start).format('E');\n\n    if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n      this.startTime = moment(this.start).format('YYYY-MM-DD');\n    } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n      this.startTime = this.$searchQuery.start_date;\n    } else {\n      this.startTime = moment(this.start).subtract(weekOfday - 1, 'days').format('YYYY-MM-DD');\n    }\n  },\n  watch: {\n    start: function start(n, o) {\n      var weekOfday = moment(n).format('E');\n      this.startTime = this.$searchQuery.time_unit !== this.TIME_UNIT.TIME_WEEK ? moment(this.start).format('YYYY-MM-DD') : moment(this.start).subtract(weekOfday - 1, 'days').format('YYYY-MM-DD');\n    }\n  },\n  computed: {\n    isDay: function isDay() {\n      var start = this.$searchQuery.start_date;\n      var end = this.$searchQuery.end_date;\n      return start === end;\n    },\n    isCurrent: function isCurrent() {\n      var start = moment(this.$searchQuery.start_date).valueOf();\n      var end = moment(this.$searchQuery.end_date).valueOf();\n      var current = moment(moment().format('YYYY-MM-DD')).valueOf();\n      return current < start || end < current;\n    },\n    start: function start() {\n      return this.$searchQuery.start_date;\n    },\n    endTime: function endTime() {\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        return moment(this.startTime).format('YYYY-MM-DD');\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        return moment(this.startTime).endOf('month').add(1, 'days').format('YYYY-MM-DD');\n      } else {\n        return moment(this.startTime).add(6, 'days').format('YYYY-MM-DD');\n      }\n\n      return this.isDay ? moment(this.startTime).format('YYYY-MM-DD') : moment(this.startTime).add(6, 'days').format('YYYY-MM-DD');\n    },\n    rangeTime: function rangeTime() {\n      var start = moment(this.startTime).format('LL');\n      var end = moment(this.endTime).format('LL');\n      console.log(this.startTime, start, '这是开始时间');\n      return this.isDay ? moment(this.$searchQuery.start_date).format('LL') : \"\".concat(start, \" ~ \").concat(end);\n    }\n  },\n  methods: {\n    onClickPre: function onClickPre() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .subtract(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .subtract(7, 'days')\n      //       .format('YYYY-MM-DD')\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date).subtract(1, 'days').format('YYYY-MM-DD');\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime).subtract(1, 'months').format('YYYY-MM-DD');\n      } else {\n        this.startTime = moment(this.startTime).subtract(7, 'days').format('YYYY-MM-DD');\n      }\n\n      this.$emit('pre', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      });\n    },\n    onClickNext: function onClickNext() {\n      // this.startTime = this.isDay\n      //   ? moment(this.$searchQuery.start_date)\n      //       .add(1, 'days')\n      //       .format('YYYY-MM-DD')\n      //   : moment(this.startTime)\n      //       .add(7, 'days')\n      //       .format('YYYY-MM-DD')\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment(this.$searchQuery.start_date).add(1, 'days').format('YYYY-MM-DD');\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment(this.startTime).add(1, 'months').format('YYYY-MM-DD');\n      } else {\n        this.startTime = moment(this.startTime).add(7, 'days').format('YYYY-MM-DD');\n      }\n\n      this.$emit('next', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit,\n        date: this.startTime\n      });\n    },\n    onClickToday: function onClickToday() {\n      var weekOfday = moment().format('E'); // 计算今天是这周第几天\n      // this.startTime = this.isDay\n      //   ? moment().format('YYYY-MM-DD')\n      //   : moment()\n      //       .subtract(weekOfday - 1, 'days')\n      //       .format('YYYY-MM-DD') // 周一日期\n\n      if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_DAY) {\n        this.startTime = moment().format('YYYY-MM-DD');\n      } else if (this.$searchQuery.time_unit === this.TIME_UNIT.TIME_MONTH) {\n        this.startTime = moment().startOf('month').format('YYYY-MM-DD');\n      } else {\n        this.startTime = moment().subtract(weekOfday - 1, 'days').format('YYYY-MM-DD'); // 周一日期\n      }\n\n      this.$emit('today', {\n        start_date: this.startTime,\n        end_date: this.endTime,\n        time_unit: this.$searchQuery.time_unit\n      });\n    },\n    getMatrix: function getMatrix(n) {\n      var weekOfday = moment(this.start).format('E');\n      var date = moment(this.start).subtract(weekOfday - n, 'days').format('YYYY-MM-DD');\n      var sortedList = this.cardList.filter(function (item) {\n        return item.start_date === date;\n      }).map(function (item) {\n        if (moment(item.end_date) > moment(item.start_date)) {\n          item.overload = 1;\n        }\n\n        item.start = toTen(item.start_time);\n        item.end = toTen(item.end_time);\n        return item;\n      }).sort(function (a, b) {\n        return a.start - b.start;\n      });\n      var timeMatrix = [];\n      var prevStart;\n      var prevEnd;\n      var group = [];\n      var groupIndex = 0;\n      sortedList.forEach(function (item) {\n        if (prevStart === undefined) {\n          prevStart = item.start;\n          prevEnd = item.end;\n        } else {\n          if (item.start < prevEnd) {\n            if (item.end > prevEnd) {\n              prevEnd = item.end;\n            }\n          } else {\n            // 以当前item标记开始位和结束位\n            prevStart = item.start;\n            prevEnd = item.end; // 新增分组\n\n            group = [];\n            groupIndex++;\n          }\n        }\n\n        group.push(item);\n        timeMatrix[groupIndex] = group;\n      });\n      return timeMatrix;\n    },\n    itemStyle: function itemStyle(item) {\n      return {\n        top: \"\".concat(item.start / 24 * 100, \"%\"),\n        height: \"\".concat((item.end - item.start) / 24 * 100, \"%\")\n      };\n    }\n  }\n};",null]}