{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/roster.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/roster.service.ts","mtime":1591147717302},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { SignUpApi } from '@/api/v1/marketing/sign-up';\nimport { UserService } from '@/services/user.service';\nimport { MessageService } from '@/services/message.service';\n\nvar RosterService = /*#__PURE__*/function () {\n  function RosterService(signUpApi, userService, msg) {\n    _classCallCheck(this, RosterService);\n\n    this.signUpApi = signUpApi;\n    this.userService = userService;\n    this.msg = msg;\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.loading$ = new State({});\n    this.activityInfo$ = new State({});\n    this.ticketTypeOptions$ = new State({});\n    this.ticketStatus$ = this.userService.getOptions$('plugin.ticket_status', {\n      addAll: true\n    });\n    this.PLUGIN_TYPE_ACTIVITY = 4;\n  }\n\n  _createClass(RosterService, [{\n    key: \"getList\",\n    value: function getList(params) {\n      var _this = this;\n\n      return this.signUpApi.getSignUpRoster(params).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"getActivityInfo\",\n    value: function getActivityInfo(activity_id) {\n      var _this2 = this;\n\n      return this.signUpApi.getActivityInfo(activity_id).pipe(tap(function (res) {\n        _this2.activityInfo$.commit(function () {\n          return res.info;\n        });\n\n        _this2.ticketTypeOptions$.commit(function () {\n          var list = [{\n            label: '全部',\n            value: -1\n          }];\n          var resList = res.info.ticket_list.map(function (item) {\n            return {\n              label: item.name,\n              value: item.id\n            };\n          });\n          return [].concat(list, _toConsumableArray(resList));\n        });\n      }));\n    }\n  }, {\n    key: \"updateSignUpChecked\",\n    value: function updateSignUpChecked(id) {\n      var _this3 = this;\n\n      return this.signUpApi.updateSignUpChecked(id).pipe(tap(function (res) {\n        _this3.msg.success({\n          content: '票种签到成功'\n        });\n      }));\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter(to, from) {\n      return this.getActivityInfo(to.meta.query.id);\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return this.getList(to.meta.query);\n    }\n  }]);\n\n  return RosterService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], RosterService.prototype, \"getList\", null);\n\nRosterService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof SignUpApi !== \"undefined\" && SignUpApi) === \"function\" ? _a : Object, typeof (_b = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _b : Object, typeof (_c = typeof MessageService !== \"undefined\" && MessageService) === \"function\" ? _c : Object])], RosterService);\nexport { RosterService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-registration/roster.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { SignUpApi, GetSignUpList } from '@/api/v1/marketing/sign-up'\nimport { UserService } from '@/services/user.service'\nimport { MessageService } from '@/services/message.service'\n\n@Injectable()\nexport class RosterService implements Controller {\n  list$ = new State([])\n  page$ = new State({})\n  loading$ = new State({})\n  activityInfo$ = new State({})\n  ticketTypeOptions$ = new State({})\n  ticketStatus$ = this.userService.getOptions$('plugin.ticket_status', {\n    addAll: true\n  })\n  PLUGIN_TYPE_ACTIVITY = 4\n  constructor(\n    private signUpApi: SignUpApi,\n    private userService: UserService,\n    private msg: MessageService\n  ) {}\n  @Effect()\n  getList(params: any) {\n    return this.signUpApi.getSignUpRoster(params).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  getActivityInfo(activity_id: number) {\n    return this.signUpApi.getActivityInfo(activity_id).pipe(\n      tap(res => {\n        this.activityInfo$.commit(() => res.info)\n        this.ticketTypeOptions$.commit(() => {\n          const list = [{ label: '全部', value: -1 }]\n          const resList = res.info.ticket_list.map((item: any) => {\n            return {\n              label: item.name,\n              value: item.id\n            }\n          })\n          return [...list, ...resList]\n        })\n      })\n    )\n  }\n  updateSignUpChecked(id: number) {\n    return this.signUpApi.updateSignUpChecked(id).pipe(\n      tap(res => {\n        this.msg.success({ content: '票种签到成功' })\n      })\n    )\n  }\n  beforeRouteEnter(to: ServiceRoute, from: ServiceRoute) {\n    return this.getActivityInfo(to.meta.query.id)\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return this.getList(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}