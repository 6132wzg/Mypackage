{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/dashboard/studio.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/dashboard/studio.service.ts","mtime":1591147717289},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state/src';\nimport { tap } from 'rxjs/operators';\nimport { StatApi } from '@/api/v1/stat/brand';\nimport { forkJoin } from 'rxjs';\nimport { anyAll } from '@/operators/any-all';\nimport { UserService } from '@/services/user.service';\n\nvar StudioService = /*#__PURE__*/function () {\n  function StudioService(statApi, userService) {\n    _classCallCheck(this, StudioService);\n\n    this.statApi = statApi;\n    this.userService = userService;\n    this.loading$ = new State({});\n    this.top$ = new State({\n      order: {\n        chart: []\n      },\n      revenue: {\n        chart: []\n      },\n      user: {\n        chart: []\n      },\n      visit: {\n        chart: []\n      }\n    });\n    this.userFunnel$ = new State([]);\n    this.user$ = new State([]);\n    this.avg$ = new State([]);\n    this.entry$ = new State([]);\n    this.marketing$ = new State([]);\n    this.marketingFunnel$ = new State([]);\n  }\n\n  _createClass(StudioService, [{\n    key: \"getTop\",\n    value: function getTop() {\n      var _this = this;\n\n      return this.statApi.getTop({\n        version: 'studio'\n      }).pipe(tap(function (res) {\n        _this.top$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser(query) {\n      var _this2 = this;\n\n      return this.statApi.getUser({\n        version: 'studio'\n      }, query).pipe(tap(function (res) {\n        var data = res.info;\n        var chartData = [];\n        data.register_chart.forEach(function (item, idx) {\n          var chartItem = {\n            date: item.date,\n            注册用户: data.register_chart[idx].num,\n            消费用户: data.consume_chart[idx].num,\n            购买私教: data.personal_chart[idx].num,\n            消课人数: data.checkin_chart[idx].num\n          };\n          chartData.push(chartItem);\n        });\n\n        _this2.user$.commit(function () {\n          return chartData;\n        });\n      }));\n    }\n  }, {\n    key: \"getUserFunnel\",\n    value: function getUserFunnel() {\n      var _this3 = this;\n\n      return this.statApi.getUserFunnel({\n        version: 'studio'\n      }).pipe(tap(function (res) {\n        _this3.userFunnel$.commit(function () {\n          return [{\n            name: '注册用户',\n            value: res.info.register\n          }, {\n            name: '消费用户',\n            value: res.info.consume\n          }, {\n            name: '购买私教',\n            value: res.info.personal\n          }, {\n            name: '消课人数',\n            value: res.info.checkin\n          }];\n        });\n      }));\n    } // 客单价\n\n  }, {\n    key: \"getAvg\",\n    value: function getAvg() {\n      var _this4 = this;\n\n      return this.statApi.getAvg({\n        version: 'studio'\n      }).pipe(tap(function (res) {\n        _this4.avg$.commit(function () {\n          return [{\n            name: _this4.userService.c('member_card'),\n            value: res.info.member_card_amount\n          }, {\n            name: '储值卡',\n            value: res.info.deposit_card_amount\n          }, {\n            name: '团体课',\n            value: res.info.team_course_amount\n          }, {\n            name: '私教课',\n            value: res.info.personal_course_amount\n          }, {\n            name: '课程包',\n            value: res.info.package_course_amount\n          }, {\n            name: _this4.userService.c('small_course'),\n            value: res.info.small_course_amount\n          }];\n        });\n      }));\n    } // 营销分析\n\n  }, {\n    key: \"getMarketing\",\n    value: function getMarketing(query) {\n      var _this5 = this;\n\n      return this.statApi.getMarketing({\n        version: 'studio'\n      }, query).pipe(tap(function (res) {\n        var data = res.info;\n        var chartData = [];\n        data.register_chart.forEach(function (item, idx) {\n          var chartItem = {\n            date: item.date,\n            注册用户: data.register_chart[idx].num,\n            消费用户: data.consume_chart[idx].num,\n            购买私教: data.personal_chart[idx].num\n          };\n          chartData.push(chartItem);\n        });\n\n        _this5.marketing$.commit(function () {\n          return chartData;\n        });\n      }));\n    } // 营销分析\n\n  }, {\n    key: \"getMarketingFunnel\",\n    value: function getMarketingFunnel() {\n      var _this6 = this;\n\n      return this.statApi.getMarketingFunnel({\n        version: 'studio'\n      }).pipe(tap(function (res) {\n        _this6.marketingFunnel$.commit(function () {\n          return [{\n            name: '注册用户',\n            value: res.info.register\n          }, {\n            name: '消费用户',\n            value: res.info.consume\n          }, {\n            name: '购买私教',\n            value: res.info.personal\n          }];\n        });\n      }));\n    }\n  }, {\n    key: \"getUserAll\",\n    value: function getUserAll(query) {\n      return forkJoin(this.getUser(query), this.getUserFunnel());\n    }\n  }, {\n    key: \"getMarketingAll\",\n    value: function getMarketingAll(query) {\n      return forkJoin(this.getMarketing(query), this.getMarketingFunnel());\n    }\n  }, {\n    key: \"getEntry\",\n    value: function getEntry() {\n      var _this7 = this;\n\n      return this.statApi.getEntry({\n        version: 'studio'\n      }).pipe(tap(function (res) {\n        _this7.entry$.commit(function () {\n          return [{\n            name: '0次百分比',\n            value: res.info.level_0_num\n          }, {\n            name: '1-4次人数',\n            value: res.info.level_1_num\n          }, {\n            name: '5-8次人数',\n            value: res.info.level_2_num\n          }, {\n            name: '9-12次人数',\n            value: res.info.level_3_num\n          }, {\n            name: '13-16次人数',\n            value: res.info.level_4_num\n          }, {\n            name: '16+次人数',\n            value: res.info.level_5_num\n          }];\n        });\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return anyAll(this.getTop(), this.getAvg(), this.getUserAll({\n        recently_day: 7\n      }), this.getMarketingAll({\n        recently_day: 7\n      }), this.getEntry());\n    }\n  }, {\n    key: \"beforeCreate\",\n    value: function beforeCreate() {\n      return this.init();\n    }\n  }]);\n\n  return StudioService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], StudioService.prototype, \"init\", null);\n\nStudioService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof StatApi !== \"undefined\" && StatApi) === \"function\" ? _a : Object, typeof (_b = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _b : Object])], StudioService);\nexport { StudioService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/dashboard/studio.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state/src'\nimport { tap, catchError } from 'rxjs/operators'\nimport { StatApi, RecentQuery } from '@/api/v1/stat/brand'\nimport { forkJoin, of } from 'rxjs'\nimport { anyAll } from '@/operators/any-all'\nimport { UserService } from '@/services/user.service'\n@Injectable()\nexport class StudioService implements Controller {\n  loading$ = new State({})\n  top$ = new State({\n    order: {\n      chart: []\n    },\n    revenue: {\n      chart: []\n    },\n    user: {\n      chart: []\n    },\n    visit: {\n      chart: []\n    }\n  })\n  userFunnel$ = new State([])\n  user$ = new State([])\n  avg$ = new State([])\n  entry$ = new State([])\n  marketing$ = new State([])\n  marketingFunnel$ = new State([])\n  constructor(private statApi: StatApi, private userService: UserService) {}\n  getTop() {\n    return this.statApi.getTop({ version: 'studio' }).pipe(\n      tap(res => {\n        this.top$.commit(() => res.info)\n      })\n    )\n  }\n  getUser(query: RecentQuery) {\n    return this.statApi.getUser({ version: 'studio' }, query).pipe(\n      tap(res => {\n        const data = res.info\n        const chartData: any = []\n\n        data.register_chart.forEach((item: any, idx: number) => {\n          const chartItem = {\n            date: item.date,\n            注册用户: data.register_chart[idx].num,\n            消费用户: data.consume_chart[idx].num,\n            购买私教: data.personal_chart[idx].num,\n            消课人数: data.checkin_chart[idx].num\n          }\n          chartData.push(chartItem)\n        })\n        this.user$.commit(() => chartData)\n      })\n    )\n  }\n  getUserFunnel() {\n    return this.statApi.getUserFunnel({ version: 'studio' }).pipe(\n      tap(res => {\n        this.userFunnel$.commit(() => [\n          { name: '注册用户', value: res.info.register },\n          { name: '消费用户', value: res.info.consume },\n          { name: '购买私教', value: res.info.personal },\n          { name: '消课人数', value: res.info.checkin }\n        ])\n      })\n    )\n  }\n  // 客单价\n  getAvg() {\n    return this.statApi.getAvg({ version: 'studio' }).pipe(\n      tap(res => {\n        this.avg$.commit(() => [\n          {\n            name: this.userService.c('member_card'),\n            value: res.info.member_card_amount\n          },\n          { name: '储值卡', value: res.info.deposit_card_amount },\n          { name: '团体课', value: res.info.team_course_amount },\n          { name: '私教课', value: res.info.personal_course_amount },\n          { name: '课程包', value: res.info.package_course_amount },\n          {\n            name: this.userService.c('small_course'),\n            value: res.info.small_course_amount\n          }\n        ])\n      })\n    )\n  }\n  // 营销分析\n  getMarketing(query: RecentQuery) {\n    return this.statApi.getMarketing({ version: 'studio' }, query).pipe(\n      tap(res => {\n        const data = res.info\n        const chartData: any = []\n\n        data.register_chart.forEach((item: any, idx: number) => {\n          const chartItem = {\n            date: item.date,\n            注册用户: data.register_chart[idx].num,\n            消费用户: data.consume_chart[idx].num,\n            购买私教: data.personal_chart[idx].num\n          }\n          chartData.push(chartItem)\n        })\n        this.marketing$.commit(() => chartData)\n      })\n    )\n  }\n  // 营销分析\n  getMarketingFunnel() {\n    return this.statApi.getMarketingFunnel({ version: 'studio' }).pipe(\n      tap(res => {\n        this.marketingFunnel$.commit(() => [\n          { name: '注册用户', value: res.info.register },\n          { name: '消费用户', value: res.info.consume },\n          { name: '购买私教', value: res.info.personal }\n        ])\n      })\n    )\n  }\n  getUserAll(query: RecentQuery) {\n    return forkJoin(this.getUser(query), this.getUserFunnel())\n  }\n  getMarketingAll(query: RecentQuery) {\n    return forkJoin(this.getMarketing(query), this.getMarketingFunnel())\n  }\n  getEntry() {\n    return this.statApi.getEntry({ version: 'studio' }).pipe(\n      tap(res => {\n        this.entry$.commit(() => [\n          { name: '0次百分比', value: res.info.level_0_num },\n          { name: '1-4次人数', value: res.info.level_1_num },\n          { name: '5-8次人数', value: res.info.level_2_num },\n          { name: '9-12次人数', value: res.info.level_3_num },\n          { name: '13-16次人数', value: res.info.level_4_num },\n          { name: '16+次人数', value: res.info.level_5_num }\n        ])\n      })\n    )\n  }\n  @Effect()\n  init() {\n    return anyAll(\n      this.getTop(),\n      this.getAvg(),\n      this.getUserAll({ recently_day: 7 }),\n      this.getMarketingAll({ recently_day: 7 }),\n      this.getEntry()\n    )\n  }\n  beforeCreate() {\n    return this.init()\n  }\n}\n"],"sourceRoot":""}]}