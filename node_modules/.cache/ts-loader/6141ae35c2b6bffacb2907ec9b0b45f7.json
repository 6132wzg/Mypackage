{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-3!/Users/wangzhigang/Desktop/styd/web/src/api/v1/setting/contract.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/api/v1/setting/contract.ts","mtime":1591147717023},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"../../api\";\nexport var ContractApi = /*#__PURE__*/function (_Api) {\n  _inherits(ContractApi, _Api);\n\n  var _super = _createSuper(ContractApi);\n\n  function ContractApi() {\n    _classCallCheck(this, ContractApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ContractApi, [{\n    key: \"getList\",\n\n    /**\n     * 合同模版列表\n     */\n    value: function getList() {\n      return this.http.get('/v1/setting/contract');\n    }\n    /**\n     * 合同模版信息\n     */\n\n  }, {\n    key: \"getInfo\",\n    value: function getInfo(id) {\n      return this.http.get(\"/v1/setting/contract/\".concat(id), {});\n    }\n    /**\n     * 合同设置更新\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(params) {\n      return this.http.put(\"/v1/setting/contract/\".concat(params.id), {\n        params: params\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(params) {\n      return this.http.post('/v1/setting/contract', {\n        params: params\n      });\n    }\n    /**\n     * 获取合同章程\n     */\n\n  }, {\n    key: \"getConstitutionInfo\",\n    value: function getConstitutionInfo(id) {\n      return this.http.get(\"/v1/setting/contract/constitution/\".concat(id), {});\n    }\n    /**\n     * 更新合同章程\n     */\n\n  }, {\n    key: \"updateConstitution\",\n    value: function updateConstitution(params) {\n      return this.http.put(\"/v1/setting/contract/constitution/\".concat(params.id), {\n        params: params\n      });\n    }\n    /**\n     * 获取合同编码信息\n     */\n\n  }, {\n    key: \"getCodeInfo\",\n    value: function getCodeInfo(id) {\n      return this.http.get(\"/v1/setting/contract/code/\".concat(id), {});\n    }\n    /**\n     * 更新合同编号\n     */\n\n  }, {\n    key: \"updateCode\",\n    value: function updateCode(params) {\n      return this.http.put(\"/v1/setting/contract/code/\".concat(params.id), {\n        params: params\n      });\n    }\n    /**\n     * 合同编号自动生成\n     */\n\n  }, {\n    key: \"getCodeNumber\",\n    value: function getCodeNumber(id) {\n      return this.http.get(\"/v1/setting/contract/codenumber/\".concat(id));\n    }\n  }]);\n\n  return ContractApi;\n}(Api);",null]}