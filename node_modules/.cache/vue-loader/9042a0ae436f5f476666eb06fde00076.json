{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/list.vue","mtime":1597895242004},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserService } from '@/services/user.service'\nimport { ListService } from './list.service'\nimport MarkteingPluginTitle from '../../components#/marketing-title'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, shopListColumns } from './list.config'\nimport { TYPE } from '@/constants/marketing/plugin'\nimport BrandMarketingBind from '@/views/biz-modals/brand/marketing/bind'\nimport useShare from '@/hooks/marketing/share.hook'\nimport CardBrandMemberShopTable from '@/views/biz-modals/card/brand-member/shop-table'\n\nexport default {\n  name: 'PageBrandMarketingPluginGroupList',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'page-brand-plugin-group-list'\n  },\n  modals: {\n    BrandMarketingBind,\n    CardBrandMemberShopTable\n  },\n  serviceInject() {\n    return {\n      listService: ListService,\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      list: this.listService.list$,\n      page: this.listService.page$,\n      loading: this.listService.loading$,\n      auth: this.listService.auth$,\n      info: this.listService.info$,\n      groupBuyEnums: this.listService.groupBuyEnums$,\n      shopList: this.listService.shopList$,\n      shopPage: this.listService.shopPage$,\n      isAuth: this.listService.isAuth$\n    }\n  },\n  hooks() {\n    return {\n      share: useShare()\n    }\n  },\n  data(vm) {\n    return {\n      TYPE,\n      activityName: '',\n      activityStatus: -1,\n      columns: columns,\n      shopListColumns: shopListColumns,\n      modalShow: false, // 控制选择门店\n      title: '选择门店',\n      groupId: ''\n    }\n  },\n  computed: {},\n  mounted() {\n    this.setSearchData()\n  },\n  watch: {\n    query(newVal) {\n      this.setSearchData()\n    }\n  },\n  methods: {\n    onConfigHandle() {\n      this.$router.push({\n        path: '/brand/setting/mina/index'\n      })\n    },\n    // 选择门店推广\n    onSelect(record) {\n      this.listService\n        .getSharePosterInfo(this.groupId, { shop_id: record.id })\n        .subscribe(res => {\n          this.modalShow = false\n          let isAuth = this.isAuth\n          const shsInfo = {\n            person_num: this.info.group_sum,\n            name: this.info.product_name,\n            qrcode_url: this.info.qrcode_base,\n            logo: this.info.brand_logo,\n            brand_name: this.info.brand_name,\n            price: this.info.price,\n            image: this.info.product_logo\n          }\n          this.share.poster({\n            isAuth,\n            shsInfo,\n            hasQrCodeBtn: true,\n            shsPath: '/saas-mina/groupbuy'\n          })\n        })\n    },\n    // 设置状态&名称\n    setSearchData() {\n      let { activity_name, activity_status } = this.$searchQuery\n      this.activityName = activity_name\n      this.activityStatus = activity_status || -1\n    },\n    // 活动发布\n    onRelease(record) {\n      let that = this\n      this.$confirm({\n        title: '提示',\n        content: '确定发布该活动?发布成功后，用户即可在小程序端看到该活动。',\n        onOk() {\n          that.listService.releaseGroup(record.id).subscribe(res => {\n            that.$router.reload()\n          })\n        },\n        onCancel() {}\n      })\n    },\n\n    // 数据\n    onData(record) {\n      this.$router.push({\n        path: './data',\n        query: { id: record.id }\n      })\n    },\n    // 选择门店\n    onGeneralize(record) {\n      this.groupId = record.id\n      this.listService\n        .getShopList(record.id, {\n          size: record.size || 20,\n          current_page: record.current_page || 1\n        })\n        .subscribe(res => {\n          this.modalShow = true\n        })\n    },\n    // 门店分页\n    onShopTableChange(data) {\n      console.log(data)\n      this.onGeneralize({\n        id: this.groupId,\n        size: data.pageSize,\n        current_page: data.current\n      })\n    },\n    // 编辑列表\n    onEdit(record) {\n      let typeId = record.product_type.id\n      let id = record.id\n      switch (typeId) {\n        case 3:\n          this.$router.push({\n            path: './edit-personal',\n            query: { id: id }\n          })\n          break\n        case 2:\n          this.$router.push({\n            path: './edit-deposit',\n            query: { id: id }\n          })\n          break\n        case 1:\n          this.$router.push({\n            path: './edit-member',\n            query: { id: id }\n          })\n          break\n        case 4:\n          this.$router.push({\n            path: './edit-package-course',\n            query: { id: id }\n          })\n          break\n        default:\n      }\n    },\n    // 结束活动\n    onStop(record) {\n      let that = this\n      this.$confirm({\n        title: '提示',\n        content: '确定停止该活动吗？活动停止后，未成团订单将自动关闭并退款。',\n        onOk() {\n          that.listService.stopGroup(record.id).subscribe(res => {\n            that.$router.reload()\n          })\n        },\n        onCancel() {}\n      })\n    },\n    // 新增活动\n    onAddGroup() {\n      this.$router.push({\n        path: './choose'\n      })\n    }\n  },\n  components: {\n    MarkteingPluginTitle\n  }\n}\n",null]}