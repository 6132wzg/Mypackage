{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/entrance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/entrance.vue","mtime":1598250255730},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport infoEdit from '@/views/biz-components/info-edit/info-edit';\nimport faceUpload from '@/views/biz-components/face-upload/face-upload';\nimport ShopAddLable from '@/views/biz-modals/shop/add-lable';\nimport { MessageService } from '@/services/message.service';\nimport { EntranceService } from \"./entrance.service\";\nimport { cloneDeep, get, debounce } from 'lodash-es';\nexport default {\n  name: 'modal-shop-reception-entrance',\n  props: {\n    member_id: {\n      type: [String, Number]\n    }\n  },\n  components: {\n    faceUpload: faceUpload,\n    infoEdit: infoEdit\n  },\n  modals: {\n    ShopAddLable: ShopAddLable\n  },\n  serviceInject: function serviceInject() {\n    return {\n      messageService: MessageService,\n      entranceService: EntranceService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      cabinetList: this.entranceService.cabinetList$,\n      loading: this.entranceService.loading$,\n      page: this.entranceService.page$,\n      sellerList: this.entranceService.sellerList$,\n      coachList: this.entranceService.coachList$,\n      entranceOptionList: this.entranceService.entranceOptionList$,\n      parent_types: this.entranceService.parent_types$,\n      auth: this.entranceService.auth$\n    };\n  },\n  data: function data() {\n    return {\n      show: false,\n      isAnyEdit: false,\n      // 是否处于编辑状态\n      memberInfo: {},\n      // 会员详细信息\n      photoList: [],\n      list: [],\n      cabinets: [],\n      tags: [],\n      proof: '',\n      temporary_cabinet: '',\n      // 临时租赁柜\n      seller: '',\n      coach: '',\n      entranceOptionType: {\n        '1': 'reception-period-card',\n        '2': 'reception-number-card',\n        '3': 'reception-visit-appointment',\n        '4': 'reception-personal-course',\n        '5': 'reception-personal-team-course',\n        '6': 'reception-team-course',\n        '7': 'reception-small-course',\n        '8': 'reception-site-appointment'\n      },\n      isCheckinCourse: 1\n    };\n  },\n  computed: {\n    // 是否已入场\n    isEntry: function isEntry() {\n      return this.memberInfo.entry_status && +this.memberInfo.entry_status.value === 1;\n    },\n    canEntry: function canEntry() {\n      return (this.proof && this.proof !== -1 || this.proof === 0) && this.auth.checkin;\n    },\n    memberIsBirthday: function memberIsBirthday() {\n      return get(this.memberInfo, 'is_birthday', false);\n    },\n    memberType: function memberType() {\n      return get(this.memberInfo, 'member_type', {});\n    },\n    memberProof: function memberProof() {\n      return get(this.memberInfo, 'proof', {});\n    },\n    temporaryCabinet: function temporaryCabinet() {\n      var temporary_cabinet = get(this.memberInfo, 'temporary_cabinet', []);\n      var cabinet = temporary_cabinet.length ? temporary_cabinet[0] : {}; // 临时\n\n      return cabinet;\n    },\n    leasingCabinets: function leasingCabinets() {\n      // 长期\n      return get(this.memberInfo, 'leasing_cabinet', []);\n    },\n    leasingCabinetText: function leasingCabinetText() {\n      if (!this.leasingCabinets.length) return '暂无';\n      return this.leasingCabinets.reduce(function (str, cur) {\n        var prefix = str ? ' / ' : '';\n        str += prefix + cur.name;\n        return str;\n      }, '');\n    },\n    coachName: function coachName() {\n      return get(this.memberInfo.coach, 'name', '');\n    },\n    sellerName: function sellerName() {\n      return get(this.memberInfo.seller, 'name', '');\n    },\n    cardNum: function cardNum() {\n      return get(this.memberInfo, 'card_num', '');\n    },\n    rfid: function rfid() {\n      return get(this.memberInfo, 'rfid', '');\n    }\n  },\n  created: function created() {\n    this.entranceService.init().subscribe();\n  },\n  mounted: function mounted() {\n    // 获取会员详情\n    this.init();\n    document.addEventListener('keydown', this.onInputKeyPress);\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('keydown', this.onInputKeyPress);\n  },\n  methods: {\n    handleProofChange: function handleProofChange(e) {\n      this.proof = e.target.value;\n    },\n    cabinetSearch: debounce(function (keyword) {\n      this.entranceService.getCabinetList(this.member_id, {\n        keyword: keyword\n      }).subscribe();\n    }, 400),\n    onInputKeyPress: function onInputKeyPress(e) {\n      var keyCode = e.keyCode;\n\n      if (this.isAnyEdit) {\n        return false;\n      }\n\n      if (keyCode === 13) {\n        if (this.isEntry) {\n          if (this.auth.checkout) this.onLeaveConfirm();\n        } else {\n          if (this.canEntry) this.onEntry();\n        }\n      }\n    },\n    init: function init() {\n      var _this = this;\n\n      this.entranceService.getMemberInfo(this.member_id).subscribe(function (res) {\n        _this.memberInfo = cloneDeep(res.info);\n        _this.seller = get(res.info.seller, 'id', -1);\n        _this.coach = get(res.info.coach, 'id', -1);\n        _this.proof = get(res.info.proof, 'proof_type', -1);\n        _this.temporary_cabinet = get(_this.temporaryCabinet, 'id', -1);\n        _this.tags = res.info.member_tag;\n        _this.photoList = !Array.isArray(res.info.face_url) ? [res.info.face_url] : [];\n        _this.isCheckinCourse = res.info.is_checkin_course; // 获取会员入场凭证列表\n\n        if (!_this.isEntry) {\n          _this.entranceService.getEntranceOptionList(_this.member_id).subscribe(function (res) {\n            var proofs = _this.entranceOptionList.filter(function (option) {\n              return option.is_able;\n            });\n\n            if (proofs.length === 1 && proofs[0]['id'] === 0) {\n              _this.proof = -1;\n            } else {\n              _this.proof = proofs.length ? proofs[0]['id'] : _this.entranceOptionList[0]['id'];\n            }\n          });\n        } // 获取会员储物柜列表\n\n\n        _this.entranceService.getCabinetList(_this.member_id).subscribe();\n      });\n    },\n    // 删除标签\n    handleRemoveTag: function handleRemoveTag(tag) {\n      var _this2 = this;\n\n      this.entranceService.getMemberLabelDelete({\n        user_id: this.member_id,\n        tag_id: tag.id\n      }).subscribe(function (res) {\n        _this2.handleGetMemberInfo();\n      });\n    },\n    // 获取会员详情\n    handleGetMemberInfo: function handleGetMemberInfo() {\n      var _this3 = this;\n\n      console.log('handleGetMemberInfo');\n      this.entranceService.getMemberInfo(this.member_id).subscribe(function (res) {\n        _this3.memberInfo = cloneDeep(res.info);\n        _this3.seller = get(res.info.seller, 'id', -1);\n        _this3.coach = get(res.info.coach, 'id', -1);\n        _this3.proof = get(res.info.proof, 'proof_type', -1);\n        _this3.temporary_cabinet = get(_this3.temporaryCabinet, 'id', -1);\n        _this3.isCheckinCourse = res.info.isCheckinCourse;\n        _this3.tags = res.info.member_tag;\n        _this3.photoList = !Array.isArray(res.info.face_url) ? [res.info.face_url] : [];\n\n        if (!_this3.isEntry && (!_this3.proof || _this3.proof === -1)) {\n          var proofs = _this3.entranceOptionList.filter(function (option) {\n            return option.is_able;\n          });\n\n          _this3.proof = proofs.length ? proofs[0]['id'] : _this3.entranceOptionList[0]['id'];\n        }\n      });\n    },\n    // 头像变更\n    handlePhotoChange: function handlePhotoChange(list) {\n      var _this4 = this;\n\n      this.entranceService.editFace(this.member_id, {\n        image_face: list[0]\n      }).subscribe(function (res) {\n        _this4.handleGetMemberInfo();\n      });\n    },\n    // 物理卡号变更\n    handleRfidChange: function handleRfidChange(rfid) {\n      var _this5 = this;\n\n      this.entranceService.getMemberPhysicalBind(+this.member_id, {\n        card_num: typeof this.memberInfo.card_num === 'string' ? this.memberInfo.card_num.trim() : this.memberInfo.card_num,\n        rfid: typeof rfid === 'string' ? rfid.trim() : rfid // 物理ID\n\n      }).subscribe(function (res) {\n        _this5.handleGetMemberInfo();\n      });\n    },\n    // 实体卡号变更\n    handleCardNumChange: function handleCardNumChange(card_num) {\n      var _this6 = this;\n\n      this.entranceService.getMemberPhysicalBind(+this.member_id, {\n        card_num: typeof card_num === 'string' ? card_num.trim() : card_num,\n        rfid: typeof this.memberInfo.rfid === 'string' ? this.memberInfo.rfid.trim() : this.memberInfo.rfid // 实体卡号\n\n      }).subscribe(function (res) {\n        _this6.handleGetMemberInfo();\n      });\n    },\n    // 销售变更\n    handleEditSeller: function handleEditSeller(seller_id) {\n      var _this7 = this;\n\n      this.entranceService.editSeller({\n        member_id: +this.member_id,\n        seller_id: seller_id === -1 ? 0 : seller_id\n      }).subscribe(function (res) {\n        _this7.handleGetMemberInfo();\n      });\n    },\n    // 教练变更\n    handleEditCoach: function handleEditCoach(coach_id) {\n      var _this8 = this;\n\n      this.entranceService.editCoach({\n        member_id: +this.member_id,\n        coach_id: coach_id === -1 ? 0 : coach_id\n      }).subscribe(function (res) {\n        _this8.handleGetMemberInfo();\n      });\n    },\n    // 备注变更\n    handleRemarkChange: function handleRemarkChange(remark) {\n      var _this9 = this;\n\n      this.entranceService.updateMemberEdit(+this.member_id, {\n        remark: remark\n      }).subscribe(function (res) {\n        _this9.handleGetMemberInfo();\n      });\n    },\n    // 修改编辑状态\n    handleChangeEditStatus: function handleChangeEditStatus(val) {\n      this.isAnyEdit = val;\n    },\n    // 入场会员修改储物柜\n    handleEditCabinet: function handleEditCabinet(cabinet_id) {\n      var _this10 = this;\n\n      this.entranceService.editEntranceCabinet({\n        member_id: +this.member_id,\n        cabinet_id: cabinet_id === -1 ? 0 : +cabinet_id\n      }).subscribe(function (res) {\n        _this10.handleGetMemberInfo();\n      });\n    },\n    // 入场\n    onEntry: function onEntry() {\n      var _this11 = this;\n\n      var cabinet_id = this.temporary_cabinet === -1 ? undefined : +this.temporary_cabinet;\n      var proof_type = this.entranceOptionList.length > 0 && this.entranceOptionList.filter(function (i) {\n        return i.id === _this11.proof;\n      })[0].proof_type;\n      var proof_value = +this.proof;\n      var seller_id = this.seller === -1 ? undefined : +this.seller;\n      var coach_id = this.coach === -1 ? undefined : +this.coach;\n      var member_id = +this.member_id;\n      var is_checkin_course = this.isCheckinCourse;\n      this.entranceService.setEntrance({\n        member_id: member_id,\n        cabinet_id: cabinet_id,\n        proof_type: proof_type,\n        proof_value: proof_value,\n        seller_id: seller_id,\n        coach_id: coach_id,\n        is_checkin_course: is_checkin_course\n      }).subscribe(function (res) {\n        _this11.show = false;\n\n        _this11.messageService.success({\n          content: '入场成功'\n        });\n\n        _this11.$emit('done');\n      });\n    },\n    // 离场之前的确认\n    onLeaveConfirm: function onLeaveConfirm() {\n      var _this12 = this;\n\n      console.log('entranceService', this.entranceService);\n      this.entranceService.getCabinetInfo(this.member_id).subscribe(function (res) {\n        if (res.info.is_smart) {\n          _this12.$error({\n            title: \"\\u5F53\\u524D\\u4F1A\\u5458\\u6709\\u50A8\\u7269\\u67DC\\u300C\".concat(res.info.cabinet_area_name, \"\\u300D\\u300C\").concat(res.info.serial_num, \"\\u300D\\u5C1A\\u672A\\u5F52\\u8FD8\\uFF0C\\u8BF7\\u5148\\u5F52\\u8FD8\\uFF01\"),\n            okText: '知道了'\n          });\n        } else {\n          _this12.onLeave();\n        }\n      });\n    },\n    // 离场\n    onLeave: function onLeave() {\n      var _this13 = this;\n\n      this.entranceService.setEntranceLeave(this.member_id).subscribe(function (res) {\n        _this13.show = false;\n\n        _this13.messageService.success({\n          content: '离场成功'\n        });\n\n        _this13.$emit('done');\n      });\n    },\n    handleClose: function handleClose() {\n      this.show = false;\n      this.$emit('done');\n    }\n  }\n};",null]}