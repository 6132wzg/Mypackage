{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/cabinet-list.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/cabinet-list.service.ts","mtime":1600926556415},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable, ServiceRouter } from 'vue-service-app';\nimport { tap } from 'rxjs/operators';\nimport { State } from 'rx-state';\nimport { CabinetApi } from '@/api/v1/setting/cabinet';\nimport { AuthService } from '@/services/auth.service';\nimport { CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet';\n\nvar CabinetListService = /*#__PURE__*/function () {\n  function CabinetListService(cabinetApi, authService, router) {\n    _classCallCheck(this, CabinetListService);\n\n    this.cabinetApi = cabinetApi;\n    this.authService = authService;\n    this.router = router;\n    this.state$ = new State({});\n    this.list$ = new State([]);\n    this.auth$ = this.authService.authMap$({\n      edit: 'shop:cabinet:cabinet|edit'\n    });\n  }\n\n  _createClass(CabinetListService, [{\n    key: \"getList\",\n    value: function getList(type, id, keywords) {\n      var _this = this;\n\n      return this.cabinetApi.getList(id, type, keywords).pipe(tap(function (res) {\n        res.list.map(function (item) {\n          item.cabinetClass = _this.cabinetClass(item);\n          return item;\n        });\n\n        _this.list$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }, {\n    key: \"cabinetUsingItem\",\n    value: function cabinetUsingItem(item) {\n      var isCabinetType = this.router.to.meta.type === 'long-term';\n\n      if (isCabinetType && item.sale_status === 1) {\n        item.cabinet_business_type = 2;\n      }\n\n      return item;\n    }\n  }, {\n    key: \"cabinetClass\",\n    value: function cabinetClass(item) {\n      var cabinet = '';\n\n      switch (this.cabinetUsingItem(item).cabinet_business_type) {\n        case CABINET_BUSINESS_TYPE.AVAILABLE:\n          cabinet = '';\n          break;\n\n        case CABINET_BUSINESS_TYPE.USING:\n          cabinet = 'shop-reception-cabinet__item--normal-using';\n\n          if (item.is_smart) {\n            cabinet = 'shop-reception-cabinet__item--using';\n          }\n\n          break;\n\n        case CABINET_BUSINESS_TYPE.BROKEN:\n          cabinet = 'shop-reception-cabinet__item--broken';\n          break;\n\n        case CABINET_BUSINESS_TYPE.REPAIR:\n          cabinet = 'shop-reception-cabinet__item--repair';\n          break;\n      }\n\n      return cabinet;\n    }\n  }]);\n\n  return CabinetListService;\n}();\n\nCabinetListService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof CabinetApi !== \"undefined\" && CabinetApi) === \"function\" ? _a : Object, typeof (_b = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _b : Object, typeof (_c = typeof ServiceRouter !== \"undefined\" && ServiceRouter) === \"function\" ? _c : Object])], CabinetListService);\nexport { CabinetListService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/cabinet-list.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,EAAqB,aAArB,QAA0C,iBAA1C;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,KAAT,QAAsB,UAAtB;AACA,SAAS,UAAT,QAA2B,0BAA3B;AACA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAS,qBAAT,QAAsC,+BAAtC;;AAGA,IAAa,kBAAb;AAME,8BACU,UADV,EAEU,WAFV,EAGU,MAHV,EAG+B;AAAA;;AAFrB,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,MAAA,GAAA,MAAA;AARV,SAAA,MAAA,GAAS,IAAI,KAAJ,CAAe,EAAf,CAAT;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,QAAjB,CAA0B;AAChC,MAAA,IAAI,EAAE;AAD0B,KAA1B,CAAR;AAOI;;AAVN;AAAA;AAAA,4BAWU,IAXV,EAWwB,EAXxB,EAWoC,QAXpC,EAWoD;AAAA;;AAChD,aAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,EAAxB,EAA4B,IAA5B,EAAkC,QAAlC,EAA4C,IAA5C,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAa,UAAC,IAAD,EAAc;AACzB,UAAA,IAAI,CAAC,YAAL,GAAoB,KAAI,CAAC,YAAL,CAAkB,IAAlB,CAApB;AACA,iBAAO,IAAP;AACD,SAHD;;AAIA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OANE,CADE,CAAP;AASD;AArBH;AAAA;AAAA,qCAsBmB,IAtBnB,EAsB4B;AACxB,UAAM,aAAa,GAAG,KAAK,MAAL,CAAY,EAAZ,CAAe,IAAf,CAAoB,IAApB,KAA6B,WAAnD;;AACA,UAAI,aAAa,IAAI,IAAI,CAAC,WAAL,KAAqB,CAA1C,EAA6C;AAC3C,QAAA,IAAI,CAAC,qBAAL,GAA6B,CAA7B;AACD;;AACD,aAAO,IAAP;AACD;AA5BH;AAAA;AAAA,iCA6Be,IA7Bf,EA6BwB;AACpB,UAAI,OAAO,GAAG,EAAd;;AACA,cAAQ,KAAK,gBAAL,CAAsB,IAAtB,EAA4B,qBAApC;AACE,aAAK,qBAAqB,CAAC,SAA3B;AACE,UAAA,OAAO,GAAG,EAAV;AACA;;AACF,aAAK,qBAAqB,CAAC,KAA3B;AACE,UAAA,OAAO,GAAG,4CAAV;;AACA,cAAI,IAAI,CAAC,QAAT,EAAmB;AACjB,YAAA,OAAO,GAAG,qCAAV;AACD;;AACD;;AACF,aAAK,qBAAqB,CAAC,MAA3B;AACE,UAAA,OAAO,GAAG,sCAAV;AACA;;AACF,aAAK,qBAAqB,CAAC,MAA3B;AACE,UAAA,OAAO,GAAG,sCAAV;AACA;AAfJ;;AAiBA,aAAO,OAAP;AACD;AAjDH;;AAAA;AAAA,GAAA;;AAAa,kBAAkB,GAAA,UAAA,CAAA,CAD9B,UAAU,EACoB,E,qDAOP,U,KAAU,W,IAAV,U,MAAU,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACT,WADS,KACE,WADF,IACT,WADS,MACE,UADF,GACE,EADF,GACE,M,EAAA,QAAA,EAAA,GAAA,OAChB,aADgB,KACH,WADG,IAChB,aADgB,MACH,UADG,GACH,EADG,GACH,M,EATF,CAAA,EAAlB,kBAAkB,CAAlB;SAAA,kB","sourcesContent":["import { Injectable, ServiceRouter } from 'vue-service-app'\nimport { tap } from 'rxjs/operators'\nimport { State } from 'rx-state'\nimport { CabinetApi } from '@/api/v1/setting/cabinet'\nimport { AuthService } from '@/services/auth.service'\nimport { CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet'\n\n@Injectable()\nexport class CabinetListService {\n  state$ = new State<any>({})\n  list$ = new State([])\n  auth$ = this.authService.authMap$({\n    edit: 'shop:cabinet:cabinet|edit'\n  })\n  constructor(\n    private cabinetApi: CabinetApi,\n    private authService: AuthService,\n    private router: ServiceRouter\n  ) {}\n  getList(type: string, id: number, keywords: string) {\n    return this.cabinetApi.getList(id, type, keywords).pipe(\n      tap(res => {\n        res.list.map((item: any) => {\n          item.cabinetClass = this.cabinetClass(item)\n          return item\n        })\n        this.list$.commit(() => res.list)\n      })\n    )\n  }\n  cabinetUsingItem(item: any) {\n    const isCabinetType = this.router.to.meta.type === 'long-term'\n    if (isCabinetType && item.sale_status === 1) {\n      item.cabinet_business_type = 2\n    }\n    return item\n  }\n  cabinetClass(item: any) {\n    let cabinet = ''\n    switch (this.cabinetUsingItem(item).cabinet_business_type) {\n      case CABINET_BUSINESS_TYPE.AVAILABLE:\n        cabinet = ''\n        break\n      case CABINET_BUSINESS_TYPE.USING:\n        cabinet = 'shop-reception-cabinet__item--normal-using'\n        if (item.is_smart) {\n          cabinet = 'shop-reception-cabinet__item--using'\n        }\n        break\n      case CABINET_BUSINESS_TYPE.BROKEN:\n        cabinet = 'shop-reception-cabinet__item--broken'\n        break\n      case CABINET_BUSINESS_TYPE.REPAIR:\n        cabinet = 'shop-reception-cabinet__item--repair'\n        break\n    }\n    return cabinet\n  }\n}\n"],"sourceRoot":""}]}