{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/checkbox-facility/checkbox-facility-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/checkbox-facility/checkbox-facility-group.vue","mtime":1591147717099},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\nexport default {\n  name: 'StCheckboxFacilityGroup',\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      checkboxFacilityGroupProvide: {\n        groupValue: this.stValueData\n      },\n      emitCheckboxFacilityGroup: function emitCheckboxFacilityGroup(data) {\n        var arr = _toConsumableArray(new Set(_toConsumableArray(_this.stValueData.value)));\n\n        var newArr = [];\n\n        if (data.value) {\n          // 选中\n          arr.push(data.key);\n        } else {\n          // 移除\n          if (arr.includes(data.key)) {\n            arr.splice(arr.indexOf(data.key), 1);\n          }\n        } // 去除value里无用的key\n\n\n        arr.forEach(function (i, index) {\n          if (_this.initArr.includes(i)) {\n            newArr.push(i);\n          }\n        });\n        newArr = _toConsumableArray(new Set(newArr));\n\n        _this.$set(_this.stValueData, 'value', newArr);\n\n        _this.$emit('modelCheckboxFacilityChange', newArr);\n\n        _this.$emit('change', newArr);\n      },\n      initCheckboxFacilityGroup: function initCheckboxFacilityGroup(data) {\n        _this.initArr.push(data);\n      }\n    };\n  },\n  data: function data() {\n    return {\n      initArr: [],\n      stValueData: {\n        value: [],\n        disabled: false\n      }\n    };\n  },\n  model: {\n    prop: 'value',\n    event: 'modelCheckboxFacilityChange'\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    value: {\n      deep: true,\n      handler: function handler(newVal, oldVal) {\n        this.stValueData.value = _toConsumableArray(newVal);\n      }\n    },\n    disabled: function disabled(newVal, oldVal) {\n      this.stValueData.disabled = newVal;\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.stValueData.value = _toConsumableArray(this.value);\n      this.stValueData.disabled = this.disabled;\n    }\n  }\n};",null]}