{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/hardware/area.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/hardware/area.service.ts","mtime":1600926555858},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { UserService } from '@/services/user.service';\nimport { HareWareApi, GetWhiteListQuery, GetAreaInfoQuery } from '@/api/v1/setting/hardware';\nimport { tap } from 'rxjs/operators';\n\nvar AreaService = /*#__PURE__*/function () {\n  function AreaService(HareWareApi, userService) {\n    _classCallCheck(this, AreaService);\n\n    this.HareWareApi = HareWareApi;\n    this.userService = userService;\n    this.loading$ = new State({});\n    this.rule$ = this.userService.getOptions$('entrance.entry_limit');\n    this.timeCardRange$ = this.userService.getOptions$('setting.time_card_range');\n    this.info$ = new State({});\n    this.whiteList$ = new State([]);\n  }\n\n  _createClass(AreaService, [{\n    key: \"getWhiteList\",\n    value: function getWhiteList(query) {\n      var _this = this;\n\n      return this.HareWareApi.getWhiteList(query).pipe(tap(function (res) {\n        _this.whiteList$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }, {\n    key: \"putAreaSetting\",\n    value: function putAreaSetting(params) {\n      return this.HareWareApi.putAreaSettingParams(params);\n    }\n  }, {\n    key: \"getAreaInfo\",\n    value: function getAreaInfo(query) {\n      var _this2 = this;\n\n      return this.HareWareApi.getAreaInfo(query).pipe(tap(function (res) {\n        _this2.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }]);\n\n  return AreaService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof GetWhiteListQuery !== \"undefined\" && GetWhiteListQuery) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], AreaService.prototype, \"getWhiteList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_b = typeof GetAreaInfoQuery !== \"undefined\" && GetAreaInfoQuery) === \"function\" ? _b : Object]), __metadata(\"design:returntype\", void 0)], AreaService.prototype, \"getAreaInfo\", null);\n\nAreaService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_c = typeof HareWareApi !== \"undefined\" && HareWareApi) === \"function\" ? _c : Object, typeof (_d = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _d : Object])], AreaService);\nexport { AreaService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/hardware/area.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SACE,WADF,EAEE,iBAFF,EAIE,gBAJF,QAKO,2BALP;AAMA,SAAS,GAAT,QAAoB,gBAApB;;AAIA,IAAa,WAAb;AAME,uBACU,WADV,EAEU,WAFV,EAEkC;AAAA;;AADxB,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAA,WAAA;AAPV,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,WAAjB,CAA6B,sBAA7B,CAAR;AACA,SAAA,cAAA,GAAiB,KAAK,WAAL,CAAiB,WAAjB,CAA6B,yBAA7B,CAAjB;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,UAAA,GAAa,IAAI,KAAJ,CAAU,EAAV,CAAb;AAII;;AATN;AAAA;AAAA,iCAWe,KAXf,EAWuC;AAAA;;AACnC,aAAO,KAAK,WAAL,CAAiB,YAAjB,CAA8B,KAA9B,EAAqC,IAArC,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,KAAI,CAAC,UAAL,CAAgB,MAAhB,CAAuB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAvB;AACD,OAFE,CADE,CAAP;AAKD;AAjBH;AAAA;AAAA,mCAkBiB,MAlBjB,EAkB6C;AACzC,aAAO,KAAK,WAAL,CAAiB,oBAAjB,CAAsC,MAAtC,CAAP;AACD;AApBH;AAAA;AAAA,gCAsBc,KAtBd,EAsBqC;AAAA;;AACjC,aAAO,KAAK,WAAL,CAAiB,WAAjB,CAA6B,KAA7B,EAAoC,IAApC,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,MAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AA5BH;;AAAA;AAAA,GAAA;;AAWE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAoB,iB,KAAiB,W,IAAjB,iB,MAAiB,U,GAAA,E,GAAA,M,EAArC,E,uCAAA,CAAA,E,qBAAA,E,cAAA,EAMC,IAND,CAAA;;AAWA,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAmB,gB,KAAgB,W,IAAhB,gB,MAAgB,U,GAAA,E,GAAA,M,EAAnC,E,uCAAA,CAAA,E,qBAAA,E,aAAA,EAMC,IAND,CAAA;;AAtBW,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDAOC,W,KAAW,W,IAAX,W,MAAW,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACX,WADW,KACA,WADA,IACX,WADW,MACA,UADA,GACA,EADA,GACA,M,EARZ,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { UserService } from '@/services/user.service'\nimport {\n  HareWareApi,\n  GetWhiteListQuery,\n  PutAreaSettingParams,\n  GetAreaInfoQuery\n} from '@/api/v1/setting/hardware'\nimport { tap } from 'rxjs/operators'\nimport { forkJoin } from 'rxjs'\n\n@Injectable()\nexport class AreaService {\n  loading$ = new State({})\n  rule$ = this.userService.getOptions$('entrance.entry_limit')\n  timeCardRange$ = this.userService.getOptions$('setting.time_card_range')\n  info$ = new State({})\n  whiteList$ = new State([])\n  constructor(\n    private HareWareApi: HareWareApi,\n    private userService: UserService\n  ) {}\n  @Effect()\n  getWhiteList(query: GetWhiteListQuery) {\n    return this.HareWareApi.getWhiteList(query).pipe(\n      tap(res => {\n        this.whiteList$.commit(() => res.list)\n      })\n    )\n  }\n  putAreaSetting(params: PutAreaSettingParams) {\n    return this.HareWareApi.putAreaSettingParams(params)\n  }\n  @Effect()\n  getAreaInfo(query: GetAreaInfoQuery) {\n    return this.HareWareApi.getAreaInfo(query).pipe(\n      tap(res => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n}\n"],"sourceRoot":""}]}