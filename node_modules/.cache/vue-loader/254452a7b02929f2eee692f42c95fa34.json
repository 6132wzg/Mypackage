{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/cabinet/components#/module.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/cabinet/components#/module.vue","mtime":1601345845209},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { MessageService } from '@/services/message.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { AreaService } from '../area.service'\nimport CabinetEdit from './edit'\nexport default {\n  name: 'EditCabinetArea',\n  bem: {\n    b: 'st-cabinet-area'\n  },\n  components: { CabinetEdit },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: AreaService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.cabinetService.auth$\n    }\n  },\n  props: {\n    info: {\n      type: Object,\n      default: () => {}\n    },\n    isActive: {\n      type: Boolean,\n      default: false\n    },\n    isAdd: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isEdit: false,\n      canDrag: true,\n      areaName: ''\n    }\n  },\n  watch: {\n    info: {\n      handler(newV) {\n        if (!newV.isEdit) {\n          this.isEdit = false\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    onChangeEditStatus(status) {\n      if (this.isAdd) {\n        this.$emit('onAddStatusChange', status)\n        return false\n      }\n      if (status) {\n        this.$emit('onEditStatusChange', {\n          id: this.info.id\n        })\n      }\n      this.isEdit = status\n    },\n    handleDelArea() {\n      this.cabinetService.del(this.info.id).subscribe(res => {\n        console.log('储物柜区域删除')\n        this.$emit('refresh')\n      })\n    }\n  }\n}\n",{"version":3,"sources":["module.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"module.vue","sourceRoot":"src/views/biz-components/shop/cabinet/components#","sourcesContent":["<template>\n  <div :class=\"b({ active: isActive, canDrag: !isEdit && !isAdd })\">\n    <a-tooltip :class=\"b('draggable')\" placement=\"top\">\n      <template slot=\"title\">\n        <span>拖拽调整顺序</span>\n      </template>\n      <div>\n        <st-icon size=\"16px\" class=\"tooltip-draggable\" type=\"tuozhuai\" />\n      </div>\n    </a-tooltip>\n    <div :class=\"b('info')\" v-if=\"!isEdit && !isAdd\">\n      <div :class=\"b('info-left')\">\n        <div :class=\"b('info-base')\">\n          <span :class=\"b('info-base-free')\">\n            空闲{{ info.free_cabinet_count }}\n          </span>\n          <span :class=\"b('info-base-total')\">/总数{{ info.cabinet_num }}</span>\n        </div>\n        <div :class=\"b('info-detail')\">\n          <div :class=\"b('info-detail-content')\">\n            {{ info.area_name }}\n            <span v-if=\"auth.areaEdit\" @click=\"onChangeEditStatus(true)\">\n              <st-icon size=\"12px\" color=\"#9BACB9\" type=\"edit\"></st-icon>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div\n        :class=\"b('info-right')\"\n        v-if=\"auth.areaDel && isActive\"\n        @click.stop=\"handleDelArea\"\n      >\n        <st-icon size=\"14px\" color=\"#FF5E41\" type=\"delete\" />\n      </div>\n    </div>\n    <div :class=\"b('info')\" v-else>\n      <cabinet-edit\n        :id=\"info.id\"\n        :name=\"info.area_name\"\n        :isEdit=\"!isAdd\"\n        @refresh=\"$listeners.refresh\"\n        @onChangeEditStatus=\"onChangeEditStatus\"\n      ></cabinet-edit>\n    </div>\n  </div>\n</template>\n<script>\nimport { MessageService } from '@/services/message.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { AreaService } from '../area.service'\nimport CabinetEdit from './edit'\nexport default {\n  name: 'EditCabinetArea',\n  bem: {\n    b: 'st-cabinet-area'\n  },\n  components: { CabinetEdit },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: AreaService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.cabinetService.auth$\n    }\n  },\n  props: {\n    info: {\n      type: Object,\n      default: () => {}\n    },\n    isActive: {\n      type: Boolean,\n      default: false\n    },\n    isAdd: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isEdit: false,\n      canDrag: true,\n      areaName: ''\n    }\n  },\n  watch: {\n    info: {\n      handler(newV) {\n        if (!newV.isEdit) {\n          this.isEdit = false\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    onChangeEditStatus(status) {\n      if (this.isAdd) {\n        this.$emit('onAddStatusChange', status)\n        return false\n      }\n      if (status) {\n        this.$emit('onEditStatusChange', {\n          id: this.info.id\n        })\n      }\n      this.isEdit = status\n    },\n    handleDelArea() {\n      this.cabinetService.del(this.info.id).subscribe(res => {\n        console.log('储物柜区域删除')\n        this.$emit('refresh')\n      })\n    }\n  }\n}\n</script>\n"]}]}