{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/package/onSales.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/package/onSales.vue","mtime":1594718339918},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { OnSalesService } from './on-sales.service'\nimport { ruleOptions } from './onSales.config'\nexport default {\n  name: 'ModalPackageOnSale',\n  bem: {\n    bModal: 'modal-package-on-sale'\n  },\n  serviceInject() {\n    return {\n      service: OnSalesService\n    }\n  },\n  serviceProviders() {\n    return [OnSalesService]\n  },\n  rxState() {\n    const { info$, loading$ } = this.service\n    return { info$, loading$ }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      sale_start_time: '',\n      sale_end_time: ''\n    }\n  },\n  props: {\n    id: {\n      type: [String, Number]\n    },\n    channel: {\n      type: String\n    }\n  },\n  computed: {\n    saleDate() {\n      return `${moment(this.sale_start_time).format('YYYY-MM-DD')} ~ ${moment(\n        this.sale_end_time\n      ).format('YYYY-MM-DD')}`\n    }\n  },\n  methods: {\n    onOnsale() {\n      this.form.validate().then(values => {\n        let form = { id: this.id }\n        if (this.channel === 'shop') {\n          form = {\n            ...form,\n            sale_start_time: this.sale_start_time,\n            sale_end_time: this.sale_end_time\n          }\n        }\n        this.service.setUpShelf(form).subscribe(res => {\n          this.$emit('success')\n          this.show = false\n        })\n      })\n    },\n    onSaleDate(value) {\n      this.sale_start_time = moment(value[0]).format('YYYY-MM-DD')\n      this.sale_end_time = moment(value[1]).format('YYYY-MM-DD')\n    }\n  },\n  created() {\n    this.service.getUpShelfInfo({ id: this.id }).subscribe(res => {\n      this.$nextTick().then(() => {\n        this.form.setFieldsValue({\n          sale_date: [res.info.sale_start_time, res.info.sale_end_time]\n        })\n        this.sale_start_time = moment(res.info.sale_start_time).format(\n          'YYYY-MM-DD'\n        )\n        this.sale_end_time = moment(res.info.sale_end_time).format('YYYY-MM-DD')\n      })\n    })\n  }\n}\n",null]}