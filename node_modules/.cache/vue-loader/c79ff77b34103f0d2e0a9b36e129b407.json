{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/task/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/task/list.vue","mtime":1596188219699},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ListService } from './list.service'\nimport { columns } from './list.config.ts'\nimport tableMixin from '@/mixins/table.mixin'\nimport { TASK_STATUS } from '@/constants/brand/setting/task'\nimport BrandTaskDetail from '@/views/biz-modals/brand/task/detail'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  mixins: [tableMixin],\n  name: 'PageBrandSettingShopList',\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      listService: ListService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.listService.loading$,\n      last_updated_time: this.listService.last_updated_time$,\n      list: this.listService.list$,\n      page: this.listService.page$\n    }\n  },\n  computed: {\n    columns\n  },\n  modals: {\n    BrandTaskDetail\n  },\n  data() {\n    return {\n      TASK_STATUS\n    }\n  },\n  methods: {\n    refresh() {\n      return this.listService.getList(this.$searchQuery)\n    },\n    onClickModal(id, type) {\n      this.$modalRouter.push({\n        name: 'brand-task-detail',\n        props: {\n          task_id: id,\n          popup_type: type\n        },\n        on: {}\n      })\n    },\n    stopTask(item) {\n      this.listService.stopTask(item.id).subscribe(res => {\n        this.messageService.success({ content: '终止任务成功!' })\n        this.$router.reload()\n      })\n    }\n  }\n}\n",{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/pages/brand/setting/task","sourcesContent":["<template>\n  <st-panel app>\n    <st-refresh-btn\n      :date=\"last_updated_time\"\n      :action=\"refresh\"\n      class=\"mg-b16\"\n      :rangeTime=\"120\"\n    />\n    <st-table\n      :page=\"page\"\n      @change=\"onTableChange\"\n      :loading=\"loading.getList\"\n      :columns=\"columns\"\n      :dataSource=\"list\"\n      rowKey=\"id\"\n    >\n      <!-- 任务状态 -->\n      <template slot=\"task_status\" slot-scope=\"text, record\">\n        <st-text\n          :status=\"{\n            default: record.task_status.code === TASK_STATUS.PENDING,\n            info: record.task_status.code === TASK_STATUS.IN_HAND,\n            warning: record.task_status.code === TASK_STATUS.PAUSE,\n            success: record.task_status.code === TASK_STATUS.SUCCESS\n          }\"\n        >\n          {{ record.task_status.status }}\n        </st-text>\n      </template>\n      <template slot=\"task_type\" slot-scope=\"text, record\">\n        {{ record.task_type.name }}\n      </template>\n      <!-- 总数 -->\n      <template slot=\"total_num\" slot-scope=\"text, record\">\n        <a @click=\"onClickModal(record.id, 'total')\">\n          {{ text }}\n        </a>\n      </template>\n      <!-- 成功数 -->\n      <template slot=\"success_num\" slot-scope=\"text, record\">\n        <a @click=\"onClickModal(record.id, 'success')\">\n          {{ text }}\n        </a>\n      </template>\n      <!-- 失败数 -->\n      <template slot=\"fail_num\" slot-scope=\"text, record\">\n        <a @click=\"onClickModal(record.id, 'fail')\">\n          {{ text }}\n        </a>\n      </template>\n      <!-- 操作 -->\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <st-table-actions>\n          <st-popconfirm\n            v-if=\"record.auth['brand:task:task_center|end']\"\n            @confirm=\"stopTask(record)\"\n            title=\"确认要终止该任务么？\"\n          >\n            <a>\n              终止任务\n            </a>\n          </st-popconfirm>\n        </st-table-actions>\n      </div>\n    </st-table>\n  </st-panel>\n</template>\n<script>\nimport { ListService } from './list.service'\nimport { columns } from './list.config.ts'\nimport tableMixin from '@/mixins/table.mixin'\nimport { TASK_STATUS } from '@/constants/brand/setting/task'\nimport BrandTaskDetail from '@/views/biz-modals/brand/task/detail'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  mixins: [tableMixin],\n  name: 'PageBrandSettingShopList',\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      listService: ListService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.listService.loading$,\n      last_updated_time: this.listService.last_updated_time$,\n      list: this.listService.list$,\n      page: this.listService.page$\n    }\n  },\n  computed: {\n    columns\n  },\n  modals: {\n    BrandTaskDetail\n  },\n  data() {\n    return {\n      TASK_STATUS\n    }\n  },\n  methods: {\n    refresh() {\n      return this.listService.getList(this.$searchQuery)\n    },\n    onClickModal(id, type) {\n      this.$modalRouter.push({\n        name: 'brand-task-detail',\n        props: {\n          task_id: id,\n          popup_type: type\n        },\n        on: {}\n      })\n    },\n    stopTask(item) {\n      this.listService.stopTask(item.id).subscribe(res => {\n        this.messageService.success({ content: '终止任务成功!' })\n        this.$router.reload()\n      })\n    }\n  }\n}\n</script>\n"]}]}