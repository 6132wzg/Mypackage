{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/stat/personal-consume.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/stat/personal-consume.vue","mtime":1591147717221},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { columns } from './personal-consume.config'\nimport { PersonalConsumeService } from './personal-consume.service'\nimport { COURSE_TYPE } from '@/constants/stat/course'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'PersonalConsume',\n  serviceInject() {\n    return {\n      personalConsumeService: PersonalConsumeService\n    }\n  },\n  rxState() {\n    const {\n      consumeList$,\n      page$,\n      loading$,\n      modalCoachList$,\n      modalCourseList$,\n      courseTypeList$,\n      auth$\n    } = this.personalConsumeService\n    return {\n      modalCoachList$,\n      modalCourseList$,\n      courseTypeList$,\n      consumeList$,\n      page$,\n      loading$,\n      auth$\n    }\n  },\n  props: {\n    record: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    type: String\n  },\n  data() {\n    return {\n      stat_date: '',\n      show: false,\n      consumeList: [],\n      course_type: COURSE_TYPE.PERSONAL,\n      coach_id: -1,\n      course_id: -1,\n      current_page: 1,\n      // TODO: 后端翻页\n      size: 99999\n    }\n  },\n  computed: {\n    columns,\n    showTable() {\n      return this.$route.path.includes('shop/course/summary') ? 'all' : 'coach'\n    },\n    exportParams() {\n      const type = 'shop/personal/course/checkin'\n      return this.type === 'total'\n        ? { type: `${type}/total`, query: this.totalQuery }\n        : { type, query: this.query }\n    },\n    totalQuery() {\n      let query = cloneDeep(this.$searchQuery)\n      delete query.showTable\n      delete query.current_page\n      delete query.size\n      query = {\n        course_type: this.course_type,\n        current_page: this.current_page,\n        size: this.size,\n\n        course_id: this.course_id,\n        type: '/total',\n        ...query\n      }\n      if (this.showTable) {\n        query.coach_id = this.coach_id\n      }\n      return query\n    },\n    query() {\n      return {\n        stat_date: this.stat_date,\n        course_type: this.course_type,\n        coach_id: this.coach_id,\n        course_id: this.course_id,\n        current_page: this.current_page,\n        size: this.size\n      }\n    },\n    courseTypeList() {\n      return this.courseTypeList$.filter(\n        item => item.value !== COURSE_TYPE.TEAM\n      )\n    }\n  },\n  methods: {\n    onChangeCourseType(val) {\n      this.course_id = -1\n      this.coach_id = -1\n      this.course_type = val\n      this.init()\n    },\n    getConsumeList() {\n      const query = this.type === 'total' ? this.totalQuery : this.query\n      this.personalConsumeService.getConsumeList(query).subscribe()\n    },\n    init() {\n      const course_type = this.course_type\n      this.coach_id = this.record.coach_id || -1\n      this.stat_date = this.record.stat_date\n      const query = this.type === 'total' ? this.totalQuery : this.query\n      this.personalConsumeService\n        .init({ course_type }, { ...query })\n        .subscribe()\n    },\n    filterOption(input, option) {\n      return (\n        option.componentOptions.children[0].text\n          .toLowerCase()\n          .indexOf(input.toLowerCase()) >= 0\n      )\n    }\n  },\n  mounted() {\n    this.init()\n  }\n}\n",null]}