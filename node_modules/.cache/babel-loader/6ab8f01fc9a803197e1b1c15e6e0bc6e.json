{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/list/shelves.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/list/shelves.vue","mtime":1596188219518},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ShelvesService } from \"./shelves.service\";\nimport { columns, CARD_TYPE } from \"./shelves.config.ts\";\nimport tableMixin from '@/mixins/table.mixin';\nimport CardBrandMemberShopTable from '@/views/biz-modals/card/brand-member/shop-table';\nimport { ADMISSION_RANGE, PUBLISH_CHANNEL } from '@/constants/card/member';\nimport CardSpecs from '@/views/biz-components/card/specs';\nimport CardBrandMemberShelf from '@/views/biz-modals/card/brand-member/shelf';\nexport default {\n  mixins: [tableMixin],\n  bem: {\n    shelves: 'page-brand-product-member-list-shelves'\n  },\n  components: {\n    CardSpecs: CardSpecs\n  },\n  modals: {\n    CardBrandMemberShelf: CardBrandMemberShelf,\n    CardBrandMemberShopTable: CardBrandMemberShopTable\n  },\n  serviceInject: function serviceInject() {\n    return {\n      shelvesService: ShelvesService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      // 服务数据订阅\n      publishChannel: this.shelvesService.publishChannel$,\n      cardType: this.shelvesService.cardType$,\n      auth: this.shelvesService.auth$,\n      loading: this.shelvesService.loading$,\n      shopList: this.shelvesService.shopList$,\n      list: this.shelvesService.list$,\n      page: this.shelvesService.page$\n    };\n  },\n  data: function data() {\n    return {\n      CARD_TYPE: CARD_TYPE,\n      ADMISSION_RANGE: ADMISSION_RANGE,\n      PUBLISH_CHANNEL: PUBLISH_CHANNEL\n    };\n  },\n  computed: {\n    columns: columns\n  },\n  methods: {\n    // 门店下拉名称搜索\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().includes(input);\n    },\n    // 批量下架\n    onBatchShelfDown: function onBatchShelfDown() {\n      var _this = this;\n\n      var params = [];\n      this.selectedRows.forEach(function (i) {\n        params.push({\n          card_id: i.id,\n          shop_id: i.shop_id\n        });\n      });\n      this.$confirm({\n        title: '批量下架',\n        content: \"\\u786E\\u5B9A\\u4E0B\\u67B6\\u6240\\u9009\\u7684\".concat(this.selectedRowKeys.length, \"\\u5F20\").concat(this.$c('member_card'), \"\\u5417\\uFF1F\"),\n        onOk: function onOk() {\n          return _this.shelvesService.setCardShelfDown({\n            card_shop: params\n          }).toPromise().then(function () {\n            _this.onSelectionReset();\n\n            _this.$router.push({\n              query: _objectSpread({}, _this.$searchQuery, {\n                current_page: 1\n              })\n            });\n          });\n        }\n      });\n    },\n    // 单个下架\n    onShelfDown: function onShelfDown(record) {\n      var _this2 = this;\n\n      this.$confirm({\n        title: '单个下架',\n        content: \"\\u786E\\u5B9A\\u4E0B\\u67B6\".concat(record.card_name).concat(this.$c('member_card'), \"\\u5417\\uFF1F\"),\n        onOk: function onOk() {\n          return _this2.shelvesService.setCardShelfDown({\n            card_shop: [{\n              card_id: record.id,\n              shop_id: record.shop_id\n            }]\n          }).toPromise().then(function () {\n            _this2.$router.push({\n              query: _objectSpread({}, _this2.$searchQuery, {\n                current_page: 1\n              })\n            });\n          });\n        }\n      });\n    },\n    // 变更上架\n    onUpdateShelf: function onUpdateShelf(record) {\n      var _this3 = this;\n\n      this.$modalRouter.push({\n        name: 'card-brand-member-shelf',\n        props: {\n          title: '变更上架信息',\n          id: record.id,\n          shelf_id: record.shelf_id,\n          actionType: 'updateShelf'\n        },\n        on: {\n          success: function success() {\n            _this3.$router.reload();\n          }\n        }\n      });\n    }\n  }\n};",null]}