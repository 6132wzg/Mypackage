{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/course/info/package/info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/course/info/package/info.vue","mtime":1601345845271},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { InfoService } from './info.service'\nimport { btnOptions } from './info.config'\nimport moment from 'moment'\nimport SoldCoursePackageUpgrade from '@/views/biz-modals/sold/course/package/upgrade'\nimport SoldCourseFreeze from '@/views/biz-modals/sold/course/freeze'\nimport SoldCourseRefund from '@/views/biz-modals/sold/course/refund'\nimport SoldCourseSurplus from '@/views/biz-modals/sold/course/surplus'\nimport SoldCourseTransfer from '@/views/biz-modals/sold/course/transfer'\nimport SoldCourseValid from '@/views/biz-modals/sold/course/valid'\nimport SoldCoursePackageUpdateExpirationDate from '@/views/biz-modals/sold/course/package/update-expiration-date'\nimport SoldCoursePackageDeduction from '@/views/biz-modals/sold/course/package/deduction'\nimport SoldCoursePackageMembeChange from '@/views/biz-modals/sold/course/package/member-change'\nimport DealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldCoursePackageUpdateRights from '@/views/biz-modals/sold/course/package/update-rights'\nimport { PACKAGE_TYPE, IS_LIMIT } from '@/constants/sold/package'\nimport useInternalNoteActions from '@/hooks/shop/sold-internal-note-actions.hook'\nimport contractActions from '@/hooks/contract.hook'\nimport { PrintService } from '@/services/print.service'\nexport default {\n  name: 'PageShopSoldCoursePackageInfo',\n  bem: {\n    basic: 'page-shop-sold-info'\n  },\n  modals: {\n    SoldCourseFreeze,\n    SoldCourseRefund,\n    SoldCourseSurplus,\n    SoldCourseValid,\n    DealGathering,\n    SoldCoursePackageDeduction,\n    SoldCoursePackageUpdateExpirationDate,\n    SoldCoursePackageMembeChange,\n    SoldCoursePackageUpgrade,\n    SoldCourseTransfer,\n    SoldCoursePackageUpdateRights\n  },\n  data() {\n    return {\n      PACKAGE_TYPE,\n      IS_LIMIT\n    }\n  },\n  serviceInject() {\n    return {\n      infoService: InfoService,\n      printService: PrintService\n    }\n  },\n  hooks() {\n    return {\n      internalNoteActions: useInternalNoteActions(),\n      contractActions: contractActions(this)\n    }\n  },\n  rxState() {\n    return {\n      packageInfo: this.infoService.packageInfo$,\n      authTabs: this.infoService.authTabs$,\n      auth: this.infoService.auth$\n    }\n  },\n  computed: {\n    btnOptions,\n    rangeType() {\n      return this.packageInfo.course_range\n        ? this.packageInfo.course_range.range_type\n        : 1\n    },\n    rangeColumns() {\n      return [\n        {\n          title: '课程类型',\n          dataIndex: 'course_type_name',\n          key: 'course_type_name'\n        },\n        {\n          title: '课程名称',\n          dataIndex: 'course_name',\n          key: 'course_name',\n          width: '120px'\n        },\n        {\n          title: '每次预约扣除次数',\n          dataIndex: 'course_weights',\n          key: 'course_weights'\n        },\n        { title: '上课门店', dataIndex: 'support_shop', key: 'support_shop' }\n      ]\n    },\n    courseColumns() {\n      const list = [\n        { title: '课程类型', dataIndex: 'course_name', key: 'course_name' },\n        {\n          title: '上课门店',\n          dataIndex: 'support_shop',\n          key: 'support_shop',\n          width: '120px',\n          scopedSlots: { customRender: 'support_shop' }\n        },\n        { title: '节数', dataIndex: 'course_num', key: 'course_num' },\n        { title: '课时费', dataIndex: 'course_price', key: 'course_price' },\n        { title: '小计', dataIndex: 'pay_amount', key: 'pay_amount' }\n      ]\n      if (this.rangeType === 3) {\n        list.splice(3, 1)\n      }\n      if (this.packageInfo.package_type !== PACKAGE_TYPE.ALL_COURSE) {\n        if (this.packageInfo.is_limit === IS_LIMIT.NO_LIMIT) {\n          list.splice(2, 1)\n          list.splice(3, 1)\n        }\n        list.splice(1, 1)\n      }\n      return list\n    },\n    courseTabData() {\n      let data = []\n      const team = this.packageInfo.course_range\n        ? this.packageInfo.course_range.team\n        : {}\n      const personal = this.packageInfo.course_range\n        ? this.packageInfo.course_range.personal\n        : {}\n      let support_shop = ''\n      if (team.support_shop) {\n        support_shop = team.support_shop\n      }\n      if (personal.support_shop) {\n        support_shop = personal.support_shop\n      }\n      if (team.course_name) {\n        data.push({\n          key: 0,\n          support_shop,\n          course_name: team.course_name,\n          course_num: team.course_num,\n          course_price: team.course_price,\n          pay_amount: team.pay_amount\n        })\n      }\n\n      if (personal.course_name) {\n        data.push({\n          key: 1,\n          support_shop,\n          course_name: personal.course_name,\n          course_num: personal.course_num,\n          course_price: personal.course_price,\n          pay_amount: personal.pay_amount\n        })\n      }\n      if (this.packageInfo.course_range.range_type === 2) {\n        data = this.packageInfo.course_range.courses\n      }\n      return data\n    },\n    // 范围内课程团体课\n    innerColumnsTeam() {\n      const list = [\n        {\n          title: '课程名称',\n          dataIndex: 'course_name',\n          key: 'course_name',\n          scopedSlots: { customRender: 'course_name' },\n          width: '120px'\n        },\n        {\n          title: '上课门店',\n          dataIndex: 'support_shop',\n          key: 'support_shop',\n          width: '120px',\n          scopedSlots: { customRender: 'support_shop' }\n        }\n      ]\n      return list\n    },\n    innerDataTeam() {\n      return this.packageInfo.course_range.team.courses\n    },\n    // 范围内课程私教课\n    innerColumnsPersonal() {\n      const list = [\n        {\n          title: '课程名称',\n          dataIndex: 'course_name',\n          key: 'course_name',\n          width: '120px',\n          scopedSlots: { customRender: 'course_name' }\n        },\n        {\n          title: '上课门店',\n          dataIndex: 'support_shop',\n          key: 'support_shop',\n          width: '120px',\n          scopedSlots: { customRender: 'support_shop' }\n        },\n        {\n          title: `${this.$c('coach')}等级`,\n          dataIndex: 'levels',\n          key: 'levels',\n          scopedSlots: { customRender: 'levels' }\n        }\n      ]\n      return list\n    },\n    innerDataPersonal() {\n      const innerData = []\n      for (\n        let i = 0;\n        i < this.packageInfo.course_range.personal.courses.length;\n        i++\n      ) {\n        innerData.push({\n          key: i,\n          support_shop: this.packageInfo.course_range.personal.courses[i]\n            .support_shop,\n          course_name: this.packageInfo.course_range.personal.courses[i]\n            .course_name,\n          levels: this.packageInfo.course_range.personal.courses[i].levels.join(\n            ','\n          )\n        })\n      }\n      return innerData\n    },\n    // 固定课程\n    innerColumnsFix() {\n      const list = [\n        { title: '课程名称', dataIndex: 'course_name', key: 'course_name' },\n        {\n          title: '上课门店',\n          dataIndex: 'support_shop',\n          key: 'support_shop',\n          scopedSlots: { customRender: 'support_shop' }\n        },\n        { title: '节数', dataIndex: 'course_num_init', key: 'course_num_init' },\n        { title: '课时费', dataIndex: 'course_price', key: 'course_price' },\n        { title: '总价', dataIndex: 'course_amount', key: 'course_amount' }\n      ]\n      return list\n    },\n    innerDataFixPersonal() {\n      const innerData = []\n      for (\n        let i = 0;\n        i < this.packageInfo.course_range.personal.courses.length;\n        i++\n      ) {\n        innerData.push({\n          key: i,\n          course_name: this.packageInfo.course_range.personal.courses[i]\n            .course_name,\n          support_shop: this.packageInfo.course_range.personal.courses[i]\n            .support_shop,\n          course_num_init: this.packageInfo.course_range.personal.courses[i]\n            .course_num_init,\n          course_price: this.packageInfo.course_range.personal.courses[i]\n            .course_price,\n          course_amount: this.packageInfo.course_range.personal.courses[i]\n            .course_amount,\n          levels: this.packageInfo.course_range.personal.courses[i].levels.join(\n            ','\n          )\n        })\n      }\n      return this.packageInfo.course_range.personal.courses\n    },\n    innerDataFixTeam() {\n      const innerData = []\n      for (\n        let i = 0;\n        i < this.packageInfo.course_range.team.courses.length;\n        i++\n      ) {\n        innerData.push({\n          key: i,\n          course_name: this.packageInfo.course_range.team.courses[i]\n            .course_name,\n          support_shop: this.packageInfo.course_range.team.courses[i]\n            .support_shop,\n          course_num_init: this.packageInfo.course_range.team.courses[i]\n            .course_num_init,\n          course_price: this.packageInfo.course_range.team.courses[i]\n            .course_price,\n          course_amount: this.packageInfo.course_range.team.courses[i]\n            .course_amount\n        })\n      }\n      return innerData\n    }\n  },\n  methods: {\n    moment,\n    onEditDate() {\n      let id = this.packageInfo.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-expiration-date',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            // this.successTip()\n          }\n        }\n      })\n    },\n    onMemberChange() {\n      let id = this.packageInfo.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-membe-change',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            // this.successTip()\n          }\n        }\n      })\n    },\n    onReduceTimes() {\n      let id = this.packageInfo.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-deduction',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n\n    // 修改剩余课时\n    onSurplus() {\n      // 后端返回的时间戳\n      const time = this.packageInfo.effective_state\n        ? `${moment(this.packageInfo.course_buy_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )} 至 ${moment(this.packageInfo.course_end_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )}`\n        : '--'\n      let data = {\n        id: this.infoService.id,\n        courseName: this.packageInfo.course_name,\n        time\n      }\n      this.$modalRouter.push({\n        name: 'sold-course-surplus',\n        props: {\n          courseType: 'coursePackage',\n          courseData: data\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 跳转合同\n    toContract() {\n      let record = this.packageInfo\n      let url = `${window.location.origin}/common/contract-preview?id=${record.order_id}`\n      window.open(url)\n    },\n    onUpgrade() {\n      let id = this.packageInfo.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-upgrade',\n        props: {\n          id\n        },\n        on: {\n          success: res => {\n            if (res.type === 'create') {\n              // 创建订单成功\n              this.$router.reload()\n              this.onClear()\n            } else if (res.type === 'createPay') {\n              // 创建订单成功 并且到支付页面\n              this.$modalRouter.push({\n                name: 'deal-gathering',\n                props: {\n                  order_id: res.orderId,\n                  type: 'package'\n                },\n                on: {\n                  success: () => {\n                    this.$router.reload()\n                    this.onClear()\n                  }\n                }\n              })\n            }\n          }\n        }\n      })\n    },\n    // 冻结\n    onFreeze() {\n      this.$modalRouter.push({\n        name: 'sold-course-freeze',\n        props: {\n          type: 'package',\n          id: this.infoService.id,\n          courseName: this.packageInfo.course_name,\n          courseNum: this.packageInfo.remain_course_num,\n          courseEndTime: moment(this.packageInfo.course_end_time * 1000),\n          time: `${moment(this.packageInfo.course_buy_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )} 至 ${moment(this.packageInfo.course_end_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )}`\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 取消冻结\n    onUnfreeze() {\n      this.$confirm({\n        title: '提示',\n        content: '是否取消冻结？',\n        maskClosable: true,\n        onOk: () => {\n          return this.infoService\n            .unFreeze(this.infoService.id)\n            .toPromise()\n            .then(() => {\n              this.$router.reload()\n            })\n        }\n      })\n    },\n    // 转让\n    onTransfer() {\n      this.$modalRouter.push({\n        name: 'sold-course-transfer',\n        props: {\n          type: 'package',\n          id: this.infoService.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onValid() {\n      this.$modalRouter.push({\n        name: 'sold-course-valid',\n        props: {\n          info: this.packageInfo\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 退款\n    onRefund() {\n      this.$modalRouter.push({\n        name: 'sold-course-refund',\n        props: {\n          id: this.infoService.id,\n          type: 'package'\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 对内备注\n    onInternalNote() {\n      this.internalNoteActions.onOpenModal({ id: this.infoService.id })\n    },\n    /**\n     * 修改合同备注\n     */\n    onEditContractDescription() {\n      const { order_id, description } = this.packageInfo\n      this.contractActions.editDescription({\n        order_id,\n        description\n      })\n    },\n    updateRight() {\n      const { id } = this.packageInfo\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-rights',\n        props: {\n          id\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"info.vue","sourceRoot":"src/views/pages/shop/sold/course/info/package","sourcesContent":["<template>\n  <st-panel-layout :class=\"basic()\">\n    <st-panel\n      :title=\"\n        `课程包详情(${packageInfo.effective_state ? '已生效' : '未生效'})`\n      \"\n    >\n      <div slot=\"actions\">\n        <st-btn-actions :options=\"btnOptions\" />\n      </div>\n      <a-row :gutter=\"24\">\n        <a-col :span=\"9\">\n          <st-info>\n            <st-info-item label=\"课程名称\">\n              {{ packageInfo.course_name }}\n            </st-info-item>\n            <st-info-item label=\"类型\">{{ packageInfo.type }}</st-info-item>\n            <st-info-item label=\"剩余课时\">\n              <span\n                v-if=\"\n                  packageInfo.is_limit === IS_LIMIT.NO_LIMIT &&\n                    packageInfo.package_type === PACKAGE_TYPE.RANGE_COURSE\n                \"\n              >\n                不限次\n              </span>\n              <span v-else-if=\"packageInfo.total_times_remain\">\n                私教课&团体课共{{ packageInfo.total_times_remain }}节\n              </span>\n              <span v-else>\n                {{ packageInfo.personal_course_remain }}节私教课,{{\n                  packageInfo.team_course_remain\n                }}节团体课\n              </span>\n            </st-info-item>\n            <st-info-item v-if=\"packageInfo.effective_state\" label=\"有效期\">\n              {{\n                moment(packageInfo.course_buy_time * 1000).format(\n                  'YYYY-MM-DD HH:mm'\n                )\n              }}\n              至\n              {{\n                moment(packageInfo.course_end_time * 1000).format(\n                  'YYYY-MM-DD HH:mm'\n                )\n              }}\n            </st-info-item>\n            <st-info-item label=\"合同编号\" class=\"mg-b16\">\n              {{ packageInfo.contract_number }}\n            </st-info-item>\n            <st-info-item label=\"约课限制\">\n              {{ packageInfo.reserve_limit }}\n            </st-info-item>\n          </st-info>\n        </a-col>\n        <a-col :span=\"9\">\n          <st-info>\n            <st-info-item label=\"所属会员\">\n              {{ packageInfo.member_name }}\n            </st-info-item>\n            <st-info-item\n              :label=\"packageInfo.is_minors ? '家长手机号' : '手机号'\"\n            >\n              <span v-if=\"packageInfo.is_minors\">\n                {{ packageInfo.parent_mobile }}({{\n                  packageInfo.parent_user_role\n                }})\n              </span>\n              <span v-else>{{ packageInfo.mobile }}</span>\n            </st-info-item>\n            <st-info-item label=\"订单号\">\n              {{ packageInfo.order_id }}\n            </st-info-item>\n            <st-info-item label=\"订单状态\">\n              {{\n                packageInfo.order_status\n                  | enumFilter('sold_common.order_status')\n              }}\n            </st-info-item>\n            <st-info-item label=\"成员\">\n              <st-overflow-text\n                :value=\"packageInfo.members\"\n                max-width=\"120px\"\n              ></st-overflow-text>\n            </st-info-item>\n          </st-info>\n        </a-col>\n        <a-col :span=\"6\">\n          <st-info>\n            <st-info-item label=\"允许转让\">\n              {{\n                packageInfo.is_transferable\n                  | enumFilter('sold_common.is_transferable')\n              }}\n            </st-info-item>\n            <st-info-item\n              label=\"转让手续费\"\n              v-if=\"packageInfo.is_transferable !== 0\"\n            >\n              {{ packageInfo.transfer_num\n              }}{{\n                packageInfo.transfer_unit\n                  | enumFilter('package_course.transfer_unit')\n              }}\n            </st-info-item>\n            <st-info-item label=\"当前状态\">\n              {{\n                packageInfo.course_status\n                  | enumFilter('sold_common.course_status')\n              }}\n            </st-info-item>\n            <st-info-item label=\"上课范围\">\n              <a-popover :title=\"packageInfo.course_range.range_name\">\n                <template slot=\"content\">\n                  <st-table\n                    v-if=\"rangeType === 1\"\n                    :columns=\"courseColumns\"\n                    :dataSource=\"courseTabData\"\n                    :pagination=\"false\"\n                    :class=\"basic('popover-content')\"\n                  >\n                    <template slot=\"support_shop\" slot-scope=\"text\">\n                      <st-overflow-text :value=\"text\" max-width=\"100px\" />\n                    </template>\n                  </st-table>\n                  <st-table\n                    v-if=\"rangeType === 2\"\n                    :columns=\"rangeColumns\"\n                    pageMode=\"client\"\n                    size=\"small\"\n                    simplePage\n                    :dataSource=\"courseTabData\"\n                    :class=\"basic('popover-content')\"\n                  ></st-table>\n                  <st-table\n                    v-if=\"rangeType === 3\"\n                    :columns=\"courseColumns\"\n                    :dataSource=\"courseTabData\"\n                    :pagination=\"false\"\n                    :class=\"basic('popover-content')\"\n                  >\n                    <st-table\n                      slot=\"expandedRowRender\"\n                      slot-scope=\"text, index\"\n                      :columns=\"innerColumnsFix\"\n                      :dataSource=\"\n                        index === 1 ? innerDataFixPersonal : innerDataFixTeam\n                      \"\n                      :pagination=\"false\"\n                    ></st-table>\n                  </st-table>\n                </template>\n                <a type=\"primary\">{{ packageInfo.course_range.range_name }}</a>\n              </a-popover>\n            </st-info-item>\n          </st-info>\n        </a-col>\n        <a-col :span=\"24\">\n          <st-info>\n            <st-info-item label=\"备注\" class=\"mg-b0\">\n              {{ packageInfo.description || '无' }}\n            </st-info-item>\n          </st-info>\n        </a-col>\n      </a-row>\n    </st-panel>\n    <st-panel app class=\"mg-t12\" :tabs=\"authTabs\">\n      <!-- TODO: 消费记录尚未实现 -->\n      <!-- {\n          label: '消费记录',\n          route: {\n            name: 'shop-sold-course-info-package-info-consumption-record',\n            query: { id: infoService.id }\n          }\n        }, -->\n      <router-view></router-view>\n    </st-panel>\n  </st-panel-layout>\n</template>\n<script>\nimport { InfoService } from './info.service'\nimport { btnOptions } from './info.config'\nimport moment from 'moment'\nimport SoldCoursePackageUpgrade from '@/views/biz-modals/sold/course/package/upgrade'\nimport SoldCourseFreeze from '@/views/biz-modals/sold/course/freeze'\nimport SoldCourseRefund from '@/views/biz-modals/sold/course/refund'\nimport SoldCourseSurplus from '@/views/biz-modals/sold/course/surplus'\nimport SoldCourseTransfer from '@/views/biz-modals/sold/course/transfer'\nimport SoldCourseValid from '@/views/biz-modals/sold/course/valid'\nimport SoldCoursePackageUpdateExpirationDate from '@/views/biz-modals/sold/course/package/update-expiration-date'\nimport SoldCoursePackageDeduction from '@/views/biz-modals/sold/course/package/deduction'\nimport SoldCoursePackageMembeChange from '@/views/biz-modals/sold/course/package/member-change'\nimport DealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldCoursePackageUpdateRights from '@/views/biz-modals/sold/course/package/update-rights'\nimport { PACKAGE_TYPE, IS_LIMIT } from '@/constants/sold/package'\nimport useInternalNoteActions from '@/hooks/shop/sold-internal-note-actions.hook'\nimport contractActions from '@/hooks/contract.hook'\nimport { PrintService } from '@/services/print.service'\nexport default {\n  name: 'PageShopSoldCoursePackageInfo',\n  bem: {\n    basic: 'page-shop-sold-info'\n  },\n  modals: {\n    SoldCourseFreeze,\n    SoldCourseRefund,\n    SoldCourseSurplus,\n    SoldCourseValid,\n    DealGathering,\n    SoldCoursePackageDeduction,\n    SoldCoursePackageUpdateExpirationDate,\n    SoldCoursePackageMembeChange,\n    SoldCoursePackageUpgrade,\n    SoldCourseTransfer,\n    SoldCoursePackageUpdateRights\n  },\n  data() {\n    return {\n      PACKAGE_TYPE,\n      IS_LIMIT\n    }\n  },\n  serviceInject() {\n    return {\n      infoService: InfoService,\n      printService: PrintService\n    }\n  },\n  hooks() {\n    return {\n      internalNoteActions: useInternalNoteActions(),\n      contractActions: contractActions(this)\n    }\n  },\n  rxState() {\n    return {\n      packageInfo: this.infoService.packageInfo$,\n      authTabs: this.infoService.authTabs$,\n      auth: this.infoService.auth$\n    }\n  },\n  computed: {\n    btnOptions,\n    rangeType() {\n      return this.packageInfo.course_range\n        ? this.packageInfo.course_range.range_type\n        : 1\n    },\n    rangeColumns() {\n      return [\n        {\n          title: '课程类型',\n          dataIndex: 'course_type_name',\n          key: 'course_type_name'\n        },\n        {\n          title: '课程名称',\n          dataIndex: 'course_name',\n          key: 'course_name',\n          width: '120px'\n        },\n        {\n          title: '每次预约扣除次数',\n          dataIndex: 'course_weights',\n          key: 'course_weights'\n        },\n        { title: '上课门店', dataIndex: 'support_shop', key: 'support_shop' }\n      ]\n    },\n    courseColumns() {\n      const list = [\n        { title: '课程类型', dataIndex: 'course_name', key: 'course_name' },\n        {\n          title: '上课门店',\n          dataIndex: 'support_shop',\n          key: 'support_shop',\n          width: '120px',\n          scopedSlots: { customRender: 'support_shop' }\n        },\n        { title: '节数', dataIndex: 'course_num', key: 'course_num' },\n        { title: '课时费', dataIndex: 'course_price', key: 'course_price' },\n        { title: '小计', dataIndex: 'pay_amount', key: 'pay_amount' }\n      ]\n      if (this.rangeType === 3) {\n        list.splice(3, 1)\n      }\n      if (this.packageInfo.package_type !== PACKAGE_TYPE.ALL_COURSE) {\n        if (this.packageInfo.is_limit === IS_LIMIT.NO_LIMIT) {\n          list.splice(2, 1)\n          list.splice(3, 1)\n        }\n        list.splice(1, 1)\n      }\n      return list\n    },\n    courseTabData() {\n      let data = []\n      const team = this.packageInfo.course_range\n        ? this.packageInfo.course_range.team\n        : {}\n      const personal = this.packageInfo.course_range\n        ? this.packageInfo.course_range.personal\n        : {}\n      let support_shop = ''\n      if (team.support_shop) {\n        support_shop = team.support_shop\n      }\n      if (personal.support_shop) {\n        support_shop = personal.support_shop\n      }\n      if (team.course_name) {\n        data.push({\n          key: 0,\n          support_shop,\n          course_name: team.course_name,\n          course_num: team.course_num,\n          course_price: team.course_price,\n          pay_amount: team.pay_amount\n        })\n      }\n\n      if (personal.course_name) {\n        data.push({\n          key: 1,\n          support_shop,\n          course_name: personal.course_name,\n          course_num: personal.course_num,\n          course_price: personal.course_price,\n          pay_amount: personal.pay_amount\n        })\n      }\n      if (this.packageInfo.course_range.range_type === 2) {\n        data = this.packageInfo.course_range.courses\n      }\n      return data\n    },\n    // 范围内课程团体课\n    innerColumnsTeam() {\n      const list = [\n        {\n          title: '课程名称',\n          dataIndex: 'course_name',\n          key: 'course_name',\n          scopedSlots: { customRender: 'course_name' },\n          width: '120px'\n        },\n        {\n          title: '上课门店',\n          dataIndex: 'support_shop',\n          key: 'support_shop',\n          width: '120px',\n          scopedSlots: { customRender: 'support_shop' }\n        }\n      ]\n      return list\n    },\n    innerDataTeam() {\n      return this.packageInfo.course_range.team.courses\n    },\n    // 范围内课程私教课\n    innerColumnsPersonal() {\n      const list = [\n        {\n          title: '课程名称',\n          dataIndex: 'course_name',\n          key: 'course_name',\n          width: '120px',\n          scopedSlots: { customRender: 'course_name' }\n        },\n        {\n          title: '上课门店',\n          dataIndex: 'support_shop',\n          key: 'support_shop',\n          width: '120px',\n          scopedSlots: { customRender: 'support_shop' }\n        },\n        {\n          title: `${this.$c('coach')}等级`,\n          dataIndex: 'levels',\n          key: 'levels',\n          scopedSlots: { customRender: 'levels' }\n        }\n      ]\n      return list\n    },\n    innerDataPersonal() {\n      const innerData = []\n      for (\n        let i = 0;\n        i < this.packageInfo.course_range.personal.courses.length;\n        i++\n      ) {\n        innerData.push({\n          key: i,\n          support_shop: this.packageInfo.course_range.personal.courses[i]\n            .support_shop,\n          course_name: this.packageInfo.course_range.personal.courses[i]\n            .course_name,\n          levels: this.packageInfo.course_range.personal.courses[i].levels.join(\n            ','\n          )\n        })\n      }\n      return innerData\n    },\n    // 固定课程\n    innerColumnsFix() {\n      const list = [\n        { title: '课程名称', dataIndex: 'course_name', key: 'course_name' },\n        {\n          title: '上课门店',\n          dataIndex: 'support_shop',\n          key: 'support_shop',\n          scopedSlots: { customRender: 'support_shop' }\n        },\n        { title: '节数', dataIndex: 'course_num_init', key: 'course_num_init' },\n        { title: '课时费', dataIndex: 'course_price', key: 'course_price' },\n        { title: '总价', dataIndex: 'course_amount', key: 'course_amount' }\n      ]\n      return list\n    },\n    innerDataFixPersonal() {\n      const innerData = []\n      for (\n        let i = 0;\n        i < this.packageInfo.course_range.personal.courses.length;\n        i++\n      ) {\n        innerData.push({\n          key: i,\n          course_name: this.packageInfo.course_range.personal.courses[i]\n            .course_name,\n          support_shop: this.packageInfo.course_range.personal.courses[i]\n            .support_shop,\n          course_num_init: this.packageInfo.course_range.personal.courses[i]\n            .course_num_init,\n          course_price: this.packageInfo.course_range.personal.courses[i]\n            .course_price,\n          course_amount: this.packageInfo.course_range.personal.courses[i]\n            .course_amount,\n          levels: this.packageInfo.course_range.personal.courses[i].levels.join(\n            ','\n          )\n        })\n      }\n      return this.packageInfo.course_range.personal.courses\n    },\n    innerDataFixTeam() {\n      const innerData = []\n      for (\n        let i = 0;\n        i < this.packageInfo.course_range.team.courses.length;\n        i++\n      ) {\n        innerData.push({\n          key: i,\n          course_name: this.packageInfo.course_range.team.courses[i]\n            .course_name,\n          support_shop: this.packageInfo.course_range.team.courses[i]\n            .support_shop,\n          course_num_init: this.packageInfo.course_range.team.courses[i]\n            .course_num_init,\n          course_price: this.packageInfo.course_range.team.courses[i]\n            .course_price,\n          course_amount: this.packageInfo.course_range.team.courses[i]\n            .course_amount\n        })\n      }\n      return innerData\n    }\n  },\n  methods: {\n    moment,\n    onEditDate() {\n      let id = this.packageInfo.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-expiration-date',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            // this.successTip()\n          }\n        }\n      })\n    },\n    onMemberChange() {\n      let id = this.packageInfo.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-membe-change',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            // this.successTip()\n          }\n        }\n      })\n    },\n    onReduceTimes() {\n      let id = this.packageInfo.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-deduction',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n\n    // 修改剩余课时\n    onSurplus() {\n      // 后端返回的时间戳\n      const time = this.packageInfo.effective_state\n        ? `${moment(this.packageInfo.course_buy_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )} 至 ${moment(this.packageInfo.course_end_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )}`\n        : '--'\n      let data = {\n        id: this.infoService.id,\n        courseName: this.packageInfo.course_name,\n        time\n      }\n      this.$modalRouter.push({\n        name: 'sold-course-surplus',\n        props: {\n          courseType: 'coursePackage',\n          courseData: data\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 跳转合同\n    toContract() {\n      let record = this.packageInfo\n      let url = `${window.location.origin}/common/contract-preview?id=${record.order_id}`\n      window.open(url)\n    },\n    onUpgrade() {\n      let id = this.packageInfo.id\n      this.$modalRouter.push({\n        name: 'sold-course-package-upgrade',\n        props: {\n          id\n        },\n        on: {\n          success: res => {\n            if (res.type === 'create') {\n              // 创建订单成功\n              this.$router.reload()\n              this.onClear()\n            } else if (res.type === 'createPay') {\n              // 创建订单成功 并且到支付页面\n              this.$modalRouter.push({\n                name: 'deal-gathering',\n                props: {\n                  order_id: res.orderId,\n                  type: 'package'\n                },\n                on: {\n                  success: () => {\n                    this.$router.reload()\n                    this.onClear()\n                  }\n                }\n              })\n            }\n          }\n        }\n      })\n    },\n    // 冻结\n    onFreeze() {\n      this.$modalRouter.push({\n        name: 'sold-course-freeze',\n        props: {\n          type: 'package',\n          id: this.infoService.id,\n          courseName: this.packageInfo.course_name,\n          courseNum: this.packageInfo.remain_course_num,\n          courseEndTime: moment(this.packageInfo.course_end_time * 1000),\n          time: `${moment(this.packageInfo.course_buy_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )} 至 ${moment(this.packageInfo.course_end_time * 1000).format(\n            'YYYY-MM-DD HH:mm'\n          )}`\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 取消冻结\n    onUnfreeze() {\n      this.$confirm({\n        title: '提示',\n        content: '是否取消冻结？',\n        maskClosable: true,\n        onOk: () => {\n          return this.infoService\n            .unFreeze(this.infoService.id)\n            .toPromise()\n            .then(() => {\n              this.$router.reload()\n            })\n        }\n      })\n    },\n    // 转让\n    onTransfer() {\n      this.$modalRouter.push({\n        name: 'sold-course-transfer',\n        props: {\n          type: 'package',\n          id: this.infoService.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onValid() {\n      this.$modalRouter.push({\n        name: 'sold-course-valid',\n        props: {\n          info: this.packageInfo\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 退款\n    onRefund() {\n      this.$modalRouter.push({\n        name: 'sold-course-refund',\n        props: {\n          id: this.infoService.id,\n          type: 'package'\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 对内备注\n    onInternalNote() {\n      this.internalNoteActions.onOpenModal({ id: this.infoService.id })\n    },\n    /**\n     * 修改合同备注\n     */\n    onEditContractDescription() {\n      const { order_id, description } = this.packageInfo\n      this.contractActions.editDescription({\n        order_id,\n        description\n      })\n    },\n    updateRight() {\n      const { id } = this.packageInfo\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-rights',\n        props: {\n          id\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}