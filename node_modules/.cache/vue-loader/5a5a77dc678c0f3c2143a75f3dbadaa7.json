{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/plugin/discount/components#/discount-add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/plugin/discount/components#/discount-add.vue","mtime":1599631070385},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ProductSetting from '../../components#/product-setting.vue'\nimport { merge } from 'lodash'\nimport moment from 'moment'\n\nexport default {\n  name: 'BrandAppPluginDiscountAdd',\n  bem: {\n    b: 'brand-app-plugin-discount-add'\n  },\n  components: {\n    ProductSetting\n  },\n  model: {\n    props: 'value',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: Object,\n      default: () => {}\n    },\n    form: {\n      type: Object,\n      default: () => {}\n    },\n    decorators: {\n      type: Object,\n      default: () => {}\n    },\n    isEdit: {\n      type: Boolean,\n      defalut: false\n    }\n  },\n  data() {\n    return {}\n  },\n  computed: {\n    formValue: {\n      get() {\n        // this.$nextTick(() => {\n        //   console.log('discount-add-formValue-model', { ...this.formValue })\n        //   this.setFieldsValue('formValue', {\n        //     activity_name: this.value.activity_name || ''\n        //   })\n        // })\n        return this.value\n      },\n      set(newVal) {\n        console.log('discount-add-formValue-change', { ...newVal })\n        this.$emit('change', { ...newVal })\n      }\n    },\n    startTime: {\n      get() {\n        return this.formValue.start_time ? moment(this.formValue.start_time) : undefined\n      },\n      set(value) {\n        this.formValue.start_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    endTime: {\n      get() {\n        return this.formValue.end_time ? moment(this.formValue.end_time) : undefined\n      },\n      set(value) {\n        this.formValue.end_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    isLimitStock: {\n      get() {\n        return this.formValue.is_limit_stock ? true : false\n      },\n      set(value) {\n        this.formValue.is_limit_stock = value ? 1 : 0\n      }\n    },\n    isLimitBuy: {\n      get() {\n        return this.formValue.is_limit_buy ? true : false\n      },\n      set(value) {\n        this.formValue.is_limit_buy = value ? 1 : 0\n      }\n    },\n    dataRange: {\n      get() {\n        const start = this.formValue.start_time\n          ? moment(this.formValue.start_time)\n          : undefined\n        const end = this.formValue.end_time ? moment(this.formValue.end_time) : undefined\n        return [start, end]\n      },\n      set(value) {\n        console.log(value)\n        this.formValue.start_time = value[0]\n          ? value[0].format('YYYY-MM-DD HH:mm:ss')\n          : undefined\n        this.formValue.end_time = value[1]\n          ? value[1].format('YYYY-MM-DD HH:mm:ss')\n          : undefined\n      }\n    }\n  },\n  mounted() {},\n  methods: {\n    moment,\n    valueChange(key, val) {\n      console.log('discount-add-formValue-value-change', key, val)\n      // this.formValue[key] = e\n      this.setValue(key, val)\n      this.$emit('change', this.formValue)\n    },\n    setFieldsValue(key, value) {\n      this.setValue(key, value)\n      this.$nextTick(() => {\n        this.form.setFieldsValue({ [key]: value })\n      })\n    },\n    setValue(key, value) {\n      if (typeof key === 'string') {\n        const keyArr = key.split('.')\n        const len = keyArr.length - 1\n        keyArr.reduce((cur, key, index) => {\n          if (!cur[key] && index < len) {\n            throw `${key}不存在`\n          }\n          if (index === len) {\n            cur[key] = value\n          }\n          return cur[key]\n        }, this)\n      } else {\n        merge(this, key)\n      }\n    },\n    range(start, end) {\n      const result = []\n      for (let i = start; i < end; i++) {\n        result.push(i)\n      }\n      return result\n    },\n    disabledDate(current) {\n      return (\n        current && current.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')\n      )\n    },\n    disabledStartTime() {\n      let hour = 0\n      let min = 0\n      if (\n        moment().format('YYYY-MM-DD') ===\n        moment(this.formValue.start_time).format('YYYY-MM-DD')\n      ) {\n        hour = moment().hours()\n        min = moment().minutes() + 1\n      }\n      return {\n        disabledHours: () => this.range(0, hour),\n        disabledMinutes: () => this.range(0, min),\n        disabledSeconds: () => []\n      }\n    },\n    disabledEndTime() {\n      let hour = 0\n      let min = 0\n      if (\n        moment(this.formValue.end_time).format('YYYY-MM-DD') ===\n        moment(this.formValue.start_time).format('YYYY-MM-DD')\n      ) {\n        hour = moment(this.formValue.start_time).hours()\n        min = moment(this.formValue.start_time).minutes() + 1\n      }\n      return {\n        disabledHours: () => this.range(0, hour),\n        disabledMinutes: () => this.range(0, min),\n        disabledSeconds: () => []\n      }\n    },\n    disabledVirDate(current) {\n      return (\n        current.format('YYYY-MM-DD') <\n          moment(this.formValue.start_time).format('YYYY-MM-DD') ||\n        current.format('YYYY-MM-DD') >\n          moment(this.formValue.end_time).format('YYYY-MM-DD')\n      )\n    },\n    // 保存\n    onSubmit(e) {\n      e.preventDefault()\n      this.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.$emit('submit', values)\n          // TODO:\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["discount-add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"discount-add.vue","sourceRoot":"src/views/pages/brand/app/plugin/discount/components#","sourcesContent":["<template>\n  <div>\n    <st-form-item required label=\"活动名称\">\n      <st-input\n        v-decorator=\"decorators.formValue.activity_name\"\n        placeholder=\"请输入活动名称\"\n        style=\"width: 470px\"\n        @change=\"valueChange('formValue.activity_name', $event)\"\n        :maxLength=\"30\"\n      ></st-input>\n    </st-form-item>\n    <!--  -->\n    <product-setting\n      v-model=\"formValue\"\n      :decorators=\"decorators\"\n      :form=\"form\"\n      :isEdit=\"isEdit\"\n    ></product-setting>\n    <st-form-item required label=\"活动时间\">\n      <st-range-picker\n        v-model=\"dataRange\"\n        :options=\"{\n          start: {\n            showTime: {\n              format: 'HH:mm:ss'\n            },\n            format: 'YYYY-MM-DD HH:mm:ss',\n            disabledBegin: moment().format('YYYY-MM-DD'),\n            disabledDateTime: disabledStartTime\n          },\n          end: {\n            showTime: {\n              format: 'HH:mm:ss'\n            },\n            format: 'YYYY-MM-DD HH:mm:ss',\n            disabledDateTime: disabledEndTime\n          }\n        }\"\n      />\n    </st-form-item>\n    <st-form-item required label=\"活动库存\">\n      <a-checkbox v-model=\"isLimitStock\">限制库存</a-checkbox>\n      <st-input-number\n        style=\"width: 150px\"\n        placeholder=\"\"\n        v-model=\"formValue.stock_num\"\n        :min=\"1\"\n        :max=\"99999\"\n        :disabled=\"!formValue.is_limit_stock\"\n      ></st-input-number>\n    </st-form-item>\n    <st-form-item label=\"单人购买限制\">\n      <a-checkbox v-model=\"isLimitBuy\">限制购买</a-checkbox>\n      <st-input-number\n        style=\"width: 150px\"\n        placeholder=\"\"\n        v-model=\"formValue.buy_num\"\n        :min=\"1\"\n        :max=\"999\"\n        :disabled=\"!formValue.is_limit_buy\"\n      >\n        <span slot=\"addonAfter\">笔订单</span>\n      </st-input-number>\n    </st-form-item>\n    <st-form-item label=\"备注\">\n      <st-textarea\n        style=\"width: 470px\"\n        placeholder=\"备注内容仅商家可见\"\n        v-model=\"formValue.description\"\n        :rows=\"2\"\n        :maxlength=\"200\"\n      ></st-textarea>\n    </st-form-item>\n    <st-form-item labelFix>\n      <st-button type=\"primary\" @click=\"onSubmit\">保存</st-button>\n    </st-form-item>\n  </div>\n</template>\n<script>\nimport ProductSetting from '../../components#/product-setting.vue'\nimport { merge } from 'lodash'\nimport moment from 'moment'\n\nexport default {\n  name: 'BrandAppPluginDiscountAdd',\n  bem: {\n    b: 'brand-app-plugin-discount-add'\n  },\n  components: {\n    ProductSetting\n  },\n  model: {\n    props: 'value',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: Object,\n      default: () => {}\n    },\n    form: {\n      type: Object,\n      default: () => {}\n    },\n    decorators: {\n      type: Object,\n      default: () => {}\n    },\n    isEdit: {\n      type: Boolean,\n      defalut: false\n    }\n  },\n  data() {\n    return {}\n  },\n  computed: {\n    formValue: {\n      get() {\n        // this.$nextTick(() => {\n        //   console.log('discount-add-formValue-model', { ...this.formValue })\n        //   this.setFieldsValue('formValue', {\n        //     activity_name: this.value.activity_name || ''\n        //   })\n        // })\n        return this.value\n      },\n      set(newVal) {\n        console.log('discount-add-formValue-change', { ...newVal })\n        this.$emit('change', { ...newVal })\n      }\n    },\n    startTime: {\n      get() {\n        return this.formValue.start_time ? moment(this.formValue.start_time) : undefined\n      },\n      set(value) {\n        this.formValue.start_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    endTime: {\n      get() {\n        return this.formValue.end_time ? moment(this.formValue.end_time) : undefined\n      },\n      set(value) {\n        this.formValue.end_time = value.format('YYYY-MM-DD HH:mm:ss')\n      }\n    },\n    isLimitStock: {\n      get() {\n        return this.formValue.is_limit_stock ? true : false\n      },\n      set(value) {\n        this.formValue.is_limit_stock = value ? 1 : 0\n      }\n    },\n    isLimitBuy: {\n      get() {\n        return this.formValue.is_limit_buy ? true : false\n      },\n      set(value) {\n        this.formValue.is_limit_buy = value ? 1 : 0\n      }\n    },\n    dataRange: {\n      get() {\n        const start = this.formValue.start_time\n          ? moment(this.formValue.start_time)\n          : undefined\n        const end = this.formValue.end_time ? moment(this.formValue.end_time) : undefined\n        return [start, end]\n      },\n      set(value) {\n        console.log(value)\n        this.formValue.start_time = value[0]\n          ? value[0].format('YYYY-MM-DD HH:mm:ss')\n          : undefined\n        this.formValue.end_time = value[1]\n          ? value[1].format('YYYY-MM-DD HH:mm:ss')\n          : undefined\n      }\n    }\n  },\n  mounted() {},\n  methods: {\n    moment,\n    valueChange(key, val) {\n      console.log('discount-add-formValue-value-change', key, val)\n      // this.formValue[key] = e\n      this.setValue(key, val)\n      this.$emit('change', this.formValue)\n    },\n    setFieldsValue(key, value) {\n      this.setValue(key, value)\n      this.$nextTick(() => {\n        this.form.setFieldsValue({ [key]: value })\n      })\n    },\n    setValue(key, value) {\n      if (typeof key === 'string') {\n        const keyArr = key.split('.')\n        const len = keyArr.length - 1\n        keyArr.reduce((cur, key, index) => {\n          if (!cur[key] && index < len) {\n            throw `${key}不存在`\n          }\n          if (index === len) {\n            cur[key] = value\n          }\n          return cur[key]\n        }, this)\n      } else {\n        merge(this, key)\n      }\n    },\n    range(start, end) {\n      const result = []\n      for (let i = start; i < end; i++) {\n        result.push(i)\n      }\n      return result\n    },\n    disabledDate(current) {\n      return (\n        current && current.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')\n      )\n    },\n    disabledStartTime() {\n      let hour = 0\n      let min = 0\n      if (\n        moment().format('YYYY-MM-DD') ===\n        moment(this.formValue.start_time).format('YYYY-MM-DD')\n      ) {\n        hour = moment().hours()\n        min = moment().minutes() + 1\n      }\n      return {\n        disabledHours: () => this.range(0, hour),\n        disabledMinutes: () => this.range(0, min),\n        disabledSeconds: () => []\n      }\n    },\n    disabledEndTime() {\n      let hour = 0\n      let min = 0\n      if (\n        moment(this.formValue.end_time).format('YYYY-MM-DD') ===\n        moment(this.formValue.start_time).format('YYYY-MM-DD')\n      ) {\n        hour = moment(this.formValue.start_time).hours()\n        min = moment(this.formValue.start_time).minutes() + 1\n      }\n      return {\n        disabledHours: () => this.range(0, hour),\n        disabledMinutes: () => this.range(0, min),\n        disabledSeconds: () => []\n      }\n    },\n    disabledVirDate(current) {\n      return (\n        current.format('YYYY-MM-DD') <\n          moment(this.formValue.start_time).format('YYYY-MM-DD') ||\n        current.format('YYYY-MM-DD') >\n          moment(this.formValue.end_time).format('YYYY-MM-DD')\n      )\n    },\n    // 保存\n    onSubmit(e) {\n      e.preventDefault()\n      this.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.$emit('submit', values)\n          // TODO:\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}