{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/package/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/package/list.vue","mtime":1596792848073},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport { cloneDeep } from 'lodash-es'\nimport { ListService } from './list.service'\nimport { UserService } from '@/services/user.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './list.config'\nimport Synchronize from '@/views/biz-modals/package/synchronize'\nimport { MessageService } from '@/services/message.service'\nimport { ruleOptions, ruleOffSaleOptions } from './list.config'\n\nexport default {\n  name: 'ShopPackageList',\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      userService: UserService,\n      messageService: MessageService,\n      listService: ListService\n    }\n  },\n  modals: {\n    Synchronize\n  },\n  rxState() {\n    return {\n      publicChannel$: this.listService.publicChannel$,\n      supportNum$: this.listService.supportNum$,\n      list: this.listService.list$,\n      page: this.listService.page$,\n      loading: this.listService.loading$,\n      package_types: this.userService.getOptions$(\n        'package_course.package_type'\n      ),\n      shelf_status: this.userService.getOptions$('package_course.shelf_status'),\n      auth: this.listService.auth$\n    }\n  },\n  bem: {\n    listClass: 'page-shop-package-list'\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      offsaleIsShow: false,\n      deleteIsShow: false,\n      onsaleIsShow: false,\n      packageId: '',\n      packageName: '',\n      start_time: null,\n      end_time: null,\n      endOpen: false,\n      offSaleText: '',\n      type: ['', 'unlimit', 'range', 'fix']\n    }\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    // 售卖时间-start\n    start_time_change(data) {\n      this.start_time = cloneDeep(data)\n    },\n    handleStartOpenChange(open) {\n      if (!open) {\n        this.endOpen = true\n      }\n    },\n    disabledStartDate(startValue) {\n      const endValue = this.end_time\n      if (!endValue) {\n        // 结束时间未选择\n        return (\n          startValue.valueOf() <\n          moment()\n            .subtract(1, 'd')\n            .valueOf()\n        )\n      }\n      let start =\n        endValue.valueOf() >\n        moment()\n          .add(30, 'y')\n          .valueOf()\n          ? moment(endValue)\n              .subtract(30, 'y')\n              .valueOf()\n          : moment()\n              .subtract(1, 'd')\n              .add(1, 'ms')\n              .valueOf()\n      return (\n        startValue.valueOf() < start ||\n        startValue.valueOf() >\n          moment(endValue)\n            .subtract(1, 'd')\n            .valueOf()\n      )\n    },\n    // 售卖时间-end\n    end_time_change(data) {\n      this.end_time = cloneDeep(data)\n    },\n    handleEndOpenChange(open) {\n      this.endOpen = open\n    },\n    disabledEndDate(endValue) {\n      const startValue = this.start_time\n      if (!startValue) {\n        // 开始时间未选择\n        return (\n          endValue.valueOf() >=\n            moment()\n              .add(30, 'y')\n              .valueOf() || endValue.valueOf() <= moment().valueOf()\n        )\n      }\n      return (\n        endValue.valueOf() >=\n          moment(startValue)\n            .add(30, 'y')\n            .valueOf() ||\n        endValue.valueOf() <\n          moment(startValue)\n            .add(1, 'd')\n            .valueOf()\n      )\n    },\n    // moment\n    moment,\n    onAddPackage() {\n      console.log('add')\n    },\n    onEdit(id, type) {\n      this.$router.push({\n        path: `/shop/product/course/manage/package/edit-${this.type[type]}-package`,\n        query: { id }\n      })\n    },\n    onDetail(id, type) {\n      this.$router.push({\n        path: `/shop/product/course/manage/package/info-${this.type[type]}-package`,\n        query: { id }\n      })\n    },\n    batchOperate(id) {\n      this.$modalRouter.push({\n        name: 'Synchronize',\n        on: {\n          success: () => {\n            this.$confirm({\n              title: '提示',\n              content: `请再次确认是否同步，同步后会覆盖售出课程包，将会有2～5s无法正常使用`,\n              onOk: () => {\n                this.listService.setSyncSold(id).subscribe(res => {\n                  this.$modalRouter.push({\n                    name: 'success-tip'\n                  })\n                  this.$router.reload()\n                })\n              },\n              onCancel() {}\n            })\n          }\n        }\n      })\n    },\n    onsalePackage(id, name, start, end) {\n      if (\n        end * 1000 >=\n        moment(\n          moment()\n            .format()\n            .replace(/\\d{2}:\\d{2}:\\d{2}/, '23:59:59')\n        ).valueOf()\n      ) {\n        this.listService\n          .onsalePackage({\n            id,\n            start_time: `${this.moment(start * 1000).format(\n              'YYYY-MM-DD'\n            )} 00:00:00`,\n            end_time: `${this.moment(end * 1000).format('YYYY-MM-DD')} 23:59:59`\n          })\n          .subscribe(res => {\n            this.messageService.success({\n              content: '上架成功'\n            })\n            this.$router.push({\n              query: { ...this.$searchQuery, page: 1 }\n            })\n          })\n      } else {\n        this.onsaleIsShow = true\n        this.packageId = id\n        this.packageName = name\n        this.$nextTick().then(res => {\n          this.form.setFieldsValue({\n            start_time: moment(start * 1000),\n            end_time: moment(end * 1000)\n          })\n          this.form.validate(['start_time', 'end_time'])\n        })\n      }\n    },\n    onOnsale() {\n      this.form.validate(['start_time', 'end_time']).then(res => {\n        this.listService\n          .onsalePackage({\n            id: this.packageId,\n            start_time: `${res.start_time.format('YYYY-MM-DD')} 00:00:00`,\n            end_time: `${res.end_time.format('YYYY-MM-DD')} 23:59:59`\n          })\n          .subscribe(res => {\n            this.onsaleIsShow = false\n            this.packageId = ''\n            this.packageName = ''\n            this.messageService.success({\n              content: '上架成功'\n            })\n            this.$router.push({\n              query: { ...this.$searchQuery, page: 1 }\n            })\n          })\n      })\n    },\n    offsalePackage(id, name) {\n      this.offsaleIsShow = true\n      this.packageId = id\n      this.packageName = name\n    },\n    onOffsale() {\n      this.form.validate().then(values => {\n        this.listService\n          .offsalePackage({ id: `${this.packageId}`, ...values })\n          .subscribe(() => {\n            this.offsaleIsShow = false\n            this.packageId = ''\n            this.packageName = ''\n            this.form.setFieldsValue({\n              reason: ''\n            })\n            this.messageService.success({\n              content: '下架成功'\n            })\n            this.$router.push({ query: { ...this.$searchQuery, page: 1 } })\n          })\n      })\n    },\n    deletePackage(id, name) {\n      this.deleteIsShow = true\n      this.packageId = id\n      this.packageName = name\n    },\n    onDelete() {\n      this.listService.deletePackage(`${this.packageId}`).subscribe(() => {\n        this.deleteIsShow = false\n        this.packageId = ''\n        this.packageName = ''\n        this.onSearch()\n      })\n    }\n  }\n}\n",null]}