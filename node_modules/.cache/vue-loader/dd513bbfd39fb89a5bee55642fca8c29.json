{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/giving.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/giving.vue","mtime":1591147717230},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { GivingService } from './giving.service'\nimport { ruleOptions } from './giving.config'\nimport { BATCH_TYPE, BATCH_INFO } from '@/constants/common/batch-operation'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'ModalSoldCardGiving',\n  bem: {\n    giving: 'modal-sold-card-giving'\n  },\n  serviceProviders() {\n    return [GivingService]\n  },\n  serviceInject() {\n    return {\n      givingService: GivingService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.givingService.loading$,\n      count: this.givingService.count$\n    }\n  },\n  props: {\n    ids: {\n      type: Array,\n      required: true\n    },\n    type: {\n      type: [String, Number],\n      required: true\n    },\n    unit: {\n      type: Number,\n      default: 1\n    },\n    searchQuery: Object\n  },\n  mounted() {\n    const params = cloneDeep(this.searchQuery)\n    params.card_type = this.type\n    this.givingService.fetchCardNum(params).subscribe()\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      BATCH_TYPE,\n      BATCH_INFO,\n      form,\n      decorators,\n      show: false,\n      batch_type: BATCH_TYPE.SELECTED\n    }\n  },\n  computed: {\n    helpText() {\n      return this.count > this.BATCH_INFO.LIMIT_NUM\n        ? this.BATCH_INFO.ERROR_TIP\n        : ''\n    },\n    helpShow() {\n      return this.count > this.BATCH_INFO.LIMIT_NUM\n    },\n    operateDataNum() {\n      return this.batch_type === this.BATCH_TYPE.SELECTED\n        ? this.ids.length\n        : this.count\n    }\n  },\n  methods: {\n    onSubmit() {\n      this.form.validate().then(values => {\n        this.givingService\n          .setGive({\n            sold_ids: this.ids,\n            batch_type: this.batch_type,\n            card_type: this.type,\n            conditions: this.searchQuery,\n            ...values\n          })\n          .subscribe(res => {\n            this.$emit('success')\n            this.show = false\n          })\n      })\n    }\n  }\n}\n",null]}