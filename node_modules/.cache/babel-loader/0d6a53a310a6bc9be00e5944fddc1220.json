{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-user-ring.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-user-ring.vue","mtime":1600926555737},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport { Chart } from '@antv/g2';\nimport { View } from 'st-data-set';\nimport chartMixin from \"./mixin\";\nimport { decimalFilter } from \"./filters\";\nimport { isEmpty } from 'lodash-es';\nexport default {\n  mixins: [chartMixin],\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 200\n    },\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#5C57FE', '#6332D1', '#009DFF', '#00D0F0', '#FFE679', '#aFa679'];\n      }\n    },\n    unit: {\n      type: String,\n      default: '人'\n    }\n  },\n  computed: {\n    dataSource: function dataSource() {\n      if (this.data.length === 0) return this.data;\n      var isEmpty = this.data.map(function (item) {\n        return item.value;\n      }).reduce(function (value, total) {\n        return value + total;\n      });\n      var emptyItem = {\n        name: 'empty',\n        value: 1\n      };\n      return !isEmpty ? [].concat(_toConsumableArray(this.data), [emptyItem]) : this.data;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.dataSource);\n      this.dv.transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +row.value;\n          return row;\n        }\n      }) // 计算百分比\n      .transform({\n        type: 'percent',\n        field: 'value',\n        dimension: 'name',\n        as: 'percent'\n      });\n    },\n    initChart: function initChart() {\n      var _this = this;\n\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: ['auto', 140, 'auto', 'auto'],\n        height: this.height\n      });\n      this.chart.source(this.dv, {\n        value: {\n          formatter: function formatter(v) {\n            return v + _this.unit;\n          }\n        }\n      });\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      });\n      this.chart.legend({\n        position: 'right-center',\n        useHtml: true,\n        clickable: false,\n        itemTpl: function itemTpl(name, color, checked, index) {\n          var row = _this.dv.findRow({\n            name: name\n          });\n\n          var percent = parseInt(row.percent * 100);\n          return \"<li class=\\\"g2-legend-list-item item-{index} {checked}\\\" data-color=\\\"{originColor}\\\" data-value=\\\"{originValue}\\\">\" + \"<i class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></i>\" + \"<span class=\\\"g2-legend-text\\\">\".concat(name, \"</span>\") + \"<div class='legend-right'>\" + \"<span class='legend-divider'>|</span>\" + \"<span class='legend-percent'>\".concat(percent, \"%</span>\") + \"</div>\" + \"</li>\";\n        },\n        onHover: function onHover(ev) {\n          // 总计为 0 是执行hover\n          var $s = _this.$el.querySelector.bind(_this.$el);\n\n          var name = ev.item.value;\n\n          var row = _this.dv.findRow({\n            name: name\n          });\n\n          var shapes = ev.shapes;\n          var geom = ev.geom;\n          var legend = ev.currentTarget; // 选中对应单元\n\n          row.value && geom.setShapesActived(shapes);\n          $s('.guide-value').textContent = row.value;\n          $s('.guide-name').textContent = row.name;\n        }\n      });\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: function html() {\n          var initRow = _this.data[0];\n          return \"<div class='guide'>\" + \"<div class='guide-title'><span class='guide-value'>\".concat(initRow.value, \"</span><span class='guide-unit'>\\u4EBA</span></div>\") + \"<div class='guide-name'>\".concat(initRow.name, \"</div>\") + \"</div>\";\n        }\n      });\n      this.chart.tooltip({\n        showTitle: false\n      });\n      var interval = this.chart.intervalStack().style({\n        fillOpacity: 1,\n        cursor: 'pointer'\n      }).position('value').color('name', [].concat(_toConsumableArray(this.colors), ['#e9edf2'])).select(false).active({\n        style: {\n          fillOpacity: 1,\n          lineWidth: 8\n        }\n      });\n      this.chart.render();\n      var shapes = interval.getShapes(); // 默认显示第一个 当有empty时第一个为零 不需要\n\n      if (origin.name === 'empty') {\n        var firstShape = shapes[0];\n        interval.setShapesActived(firstShape);\n      }\n\n      var $s = this.$el.querySelector.bind(this.$el);\n      this.chart.on('interval:mouseenter', function (e) {\n        var shape = e.shape;\n        var origin = e.data._origin;\n\n        if (origin.name === 'empty') {\n          _this.intervalStack.clearActivedShapes(shape);\n\n          return;\n        }\n\n        $s('.guide-value').textContent = origin.value;\n        $s('.guide-name').textContent = origin.name;\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      // 注销图形所有事件\n      this.chart.off();\n    }\n  }\n};",{"version":3,"sources":["brand-user-ring.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"stat-brand-user-ring\"></div>\n</template>\n\n<script>\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport chartMixin from './mixin'\nimport { decimalFilter } from './filters'\nimport { isEmpty } from 'lodash-es'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 200\n    },\n    colors: {\n      type: Array,\n      default: () => [\n        '#5C57FE',\n        '#6332D1',\n        '#009DFF',\n        '#00D0F0',\n        '#FFE679',\n        '#aFa679'\n      ]\n    },\n    unit: {\n      type: String,\n      default: '人'\n    }\n  },\n  computed: {\n    dataSource() {\n      if (this.data.length === 0) return this.data\n      const isEmpty = this.data\n        .map(item => item.value)\n        .reduce((value, total) => value + total)\n      const emptyItem = { name: 'empty', value: 1 }\n      return !isEmpty ? [...this.data, emptyItem] : this.data\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.dataSource)\n      this.dv\n        .transform({\n          type: 'map',\n          callback(row) {\n            row.value = +row.value\n            return row\n          }\n        })\n        // 计算百分比\n        .transform({\n          type: 'percent',\n          field: 'value',\n          dimension: 'name',\n          as: 'percent'\n        })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        padding: ['auto', 140, 'auto', 'auto'],\n        height: this.height\n      })\n      this.chart.source(this.dv, {\n        value: {\n          formatter: v => v + this.unit\n        }\n      })\n      this.chart.coord('theta', {\n        innerRadius: 0.65\n      })\n      this.chart.legend({\n        position: 'right-center',\n        useHtml: true,\n        clickable: false,\n        itemTpl: (name, color, checked, index) => {\n          const row = this.dv.findRow({ name })\n          const percent = parseInt(row.percent * 100)\n          return (\n            `<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">` +\n            `<i class=\"g2-legend-marker\" style=\"background-color:{color};\"></i>` +\n            `<span class=\"g2-legend-text\">${name}</span>` +\n            `<div class='legend-right'>` +\n            `<span class='legend-divider'>|</span>` +\n            `<span class='legend-percent'>${percent}%</span>` +\n            `</div>` +\n            `</li>`\n          )\n        },\n        onHover: ev => {\n          // 总计为 0 是执行hover\n\n          const $s = this.$el.querySelector.bind(this.$el)\n          const name = ev.item.value\n          const row = this.dv.findRow({ name })\n          const shapes = ev.shapes\n          const geom = ev.geom\n          const legend = ev.currentTarget\n          // 选中对应单元\n          row.value && geom.setShapesActived(shapes)\n          $s('.guide-value').textContent = row.value\n          $s('.guide-name').textContent = row.name\n        }\n      })\n      this.chart.guide().html({\n        position: ['50%', '50%'],\n        html: () => {\n          let initRow = this.data[0]\n          return (\n            `<div class='guide'>` +\n            `<div class='guide-title'><span class='guide-value'>${initRow.value}</span><span class='guide-unit'>人</span></div>` +\n            `<div class='guide-name'>${initRow.name}</div>` +\n            `</div>`\n          )\n        }\n      })\n      this.chart.tooltip({\n        showTitle: false\n      })\n\n      const interval = this.chart\n        .intervalStack()\n        .style({\n          fillOpacity: 1,\n          cursor: 'pointer'\n        })\n        .position('value')\n        .color('name', [...this.colors, '#e9edf2'])\n        .select(false)\n        .active({\n          style: {\n            fillOpacity: 1,\n            lineWidth: 8\n          }\n        })\n\n      this.chart.render()\n\n      const shapes = interval.getShapes()\n      // 默认显示第一个 当有empty时第一个为零 不需要\n      if (origin.name === 'empty') {\n        const firstShape = shapes[0]\n        interval.setShapesActived(firstShape)\n      }\n\n      const $s = this.$el.querySelector.bind(this.$el)\n\n      this.chart.on('interval:mouseenter', e => {\n        const shape = e.shape\n        const origin = e.data._origin\n        if (origin.name === 'empty') {\n          this.intervalStack.clearActivedShapes(shape)\n          return\n        }\n        $s('.guide-value').textContent = origin.value\n        $s('.guide-name').textContent = origin.name\n      })\n    }\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      // 注销图形所有事件\n      this.chart.off()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}