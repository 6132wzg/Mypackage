{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-simple-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-simple-line.vue","mtime":1594718339888},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport chartMixin from './mixin'\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [\n        { name: '1', value: 102  },\n        { name: '2', value: 12  },\n        { name: '3', value: 50  },\n        { name: '4', value: 30  },\n        { name: '5', value: 7  },\n        { name: '6', value: 6  },\n        { name: '7', value: 10  }\n      ]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    unit: {\n      type: String,\n      default: '元'\n    },\n    color: {\n      type: String,\n      default: '#3F67F5'\n    },\n    height: {\n      type: Number,\n      default: 68\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n      console.log(this.data)\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg',\n        padding: 'auto'\n      })\n      const maxValue = this.dv.max('value')\n      this.chart.source(this.dv, {\n        value: {\n          min: 0,\n          max: maxValue * 1.1\n        }\n      })\n      this.chart.axis('value', false)\n      this.chart.axis('name', {\n        nice: true,\n        label: false,\n        grid: {\n          lineStyle: {\n            stroke: '#EBEFF4',\n            lineWidth: 1\n          }\n        },\n        line: {\n          lineWidth: 0\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.scale('name', {\n        range: [0, 1]\n      })\n      this.chart.tooltip({\n        showTitle: false,\n        useHtml: true,\n        itemTpl:\n          `<li class='tooltip-item' data-index={index} style='background-color:${this.color};'>` +\n          `<span class='g2-tooltip-value'>{value}${this.unit}</span>` +\n          `</li>`\n      })\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .color(this.color)\n        .position('name*value')\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .color(this.color)\n        .style({\n          shadowColor: this.color,\n          shadowBlur: 20,\n          shadowOffsetY: 4,\n          opacity: 0.5\n        })\n        .position('name*value')\n\n      this.chart.render()\n    }\n  }\n}\n",{"version":3,"sources":["brand-simple-line.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"brand-simple-line.vue","sourceRoot":"src/views/biz-components/stat","sourcesContent":["<template>\n  <div class=\"stat-brand-simple-line\"></div>\n</template>\n\n<script>\nimport chartMixin from './mixin'\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [\n        { name: '1', value: 102  },\n        { name: '2', value: 12  },\n        { name: '3', value: 50  },\n        { name: '4', value: 30  },\n        { name: '5', value: 7  },\n        { name: '6', value: 6  },\n        { name: '7', value: 10  }\n      ]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    unit: {\n      type: String,\n      default: '元'\n    },\n    color: {\n      type: String,\n      default: '#3F67F5'\n    },\n    height: {\n      type: Number,\n      default: 68\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n      console.log(this.data)\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg',\n        padding: 'auto'\n      })\n      const maxValue = this.dv.max('value')\n      this.chart.source(this.dv, {\n        value: {\n          min: 0,\n          max: maxValue * 1.1\n        }\n      })\n      this.chart.axis('value', false)\n      this.chart.axis('name', {\n        nice: true,\n        label: false,\n        grid: {\n          lineStyle: {\n            stroke: '#EBEFF4',\n            lineWidth: 1\n          }\n        },\n        line: {\n          lineWidth: 0\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.scale('name', {\n        range: [0, 1]\n      })\n      this.chart.tooltip({\n        showTitle: false,\n        useHtml: true,\n        itemTpl:\n          `<li class='tooltip-item' data-index={index} style='background-color:${this.color};'>` +\n          `<span class='g2-tooltip-value'>{value}${this.unit}</span>` +\n          `</li>`\n      })\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .color(this.color)\n        .position('name*value')\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .color(this.color)\n        .style({\n          shadowColor: this.color,\n          shadowBlur: 20,\n          shadowOffsetY: 4,\n          opacity: 0.5\n        })\n        .position('name*value')\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"]}]}