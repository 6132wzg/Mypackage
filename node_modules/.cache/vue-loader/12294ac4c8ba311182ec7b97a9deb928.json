{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/member-select/select-search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/member-select/select-search.vue","mtime":1598321087552},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { debounce, isEqual } from 'lodash-es'\n\nexport default {\n  name: 'SelectSearch',\n  bem: {\n    b: 'member-select'\n  },\n\n  data() {\n    return {\n      // 搜索关键字\n      keyword: '',\n      // 选择的会员\n      selected: undefined\n    }\n  },\n  props: {\n    list: {\n      type: Array,\n      default: () => []\n    },\n    labelHtml: {\n      type: Function,\n      default: (label, keyword) => {\n        return label.replace(\n          new RegExp(keyword, 'g'),\n          `\\<span class='global-highlight-color'\\>${keyword}\\<\\/span\\>`\n        )\n      }\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    isSrcoll: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: String\n  },\n  model: {\n    props: 'value',\n    event: 'change'\n  },\n  computed: {\n    isSearchNone() {\n      return this.keyword !== '' && !this.list.length\n    }\n  },\n  watch: {\n    list(newValue, oldValue) {\n      if (isEqual(newValue, oldValue) || !newValue.length) return\n      // 默认选中第一项 blur时起作用\n      this.selected = newValue[0].value\n    }\n  },\n  components: {},\n  methods: {\n    // 搜索会员\n    onSearch: debounce(function(val) {\n      console.log(val)\n      let str = val.trim()\n      if (this.keyword === str) return\n      this.keyword = str\n      if (str !== '') {\n        this.$emit('search', str)\n      }\n    }, 200),\n    // 检测清空选中\n    onChange(val) {\n      console.log('onChange', val)\n      !val && this.$emit('change', this.selected)\n    },\n    // 选择发生变化\n    onSelect() {\n      console.log('onSelect')\n      this.$emit('change', this.selected)\n    },\n    // 会员搜索框失去焦点\n    onBlur() {\n      console.log('onBlur')\n      this.$emit('blur', this.selected)\n    },\n    // 聚焦时先清空历史搜索\n    onFocus() {\n      this.keyword = ''\n    },\n    scroll: debounce(function(e) {\n      const { target } = e\n      if (\n        Math.floor(target.scrollTop) + target.clientHeight >\n          target.scrollHeight - 20 &&\n        this.isSrcoll\n      ) {\n        if (!this.loading) {\n          this.$emit('onScroll', data)\n        }\n      }\n    }, 200)\n  }\n}\n",{"version":3,"sources":["select-search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"select-search.vue","sourceRoot":"src/views/biz-components/member-select","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <a-select\n      v-model=\"selected\"\n      class=\"-search-select\"\n      showSearch\n      allowClear\n      :placeholder=\"placeholder\"\n      :defaultActiveFirstOption=\"true\"\n      :filterOption=\"false\"\n      @popupScroll=\"scroll\"\n      @change=\"onChange\"\n      @search=\"onSearch\"\n      @select=\"onSelect\"\n      @blur=\"onBlur\"\n      @focus=\"onFocus\"\n      ref=\"searchSelect\"\n    >\n      <a-icon slot=\"suffixIcon\" type=\"search\" />\n      <!-- 无数据 -->\n      <slot name=\"notFoundContent\" v-bind=\"isSearchNone\">\n        <span slot=\"notFoundContent\" v-if=\"isSearchNone\">\n          查无此用户\n        </span>\n        <span slot=\"notFoundContent\" v-else>无数据</span>\n      </slot>\n      <a-select-option v-for=\"item in list\" :key=\"item.value\">\n        <span v-html=\"labelHtml(item.label, keyword)\">\n          {{ item.label }}\n        </span>\n      </a-select-option>\n      <!-- loading -->\n      <a-select-option\n        disabled\n        :key=\"new Date() + Math.random()\"\n        :class=\"reception('-search-tip')\"\n        v-if=\"loading\"\n      >\n        <a-spin size=\"small\"></a-spin>\n      </a-select-option>\n      <!-- <a-select-option\n        disabled\n        :class=\"reception('-search-tip')\"\n        :key=\"new Date() + Math.random()\"\n        v-if=\"!isSearchNone && page.current_page >= page.total_pages\"\n      >\n        已经到底啦\n      </a-select-option> -->\n    </a-select>\n  </div>\n</template>\n<script>\nimport { debounce, isEqual } from 'lodash-es'\n\nexport default {\n  name: 'SelectSearch',\n  bem: {\n    b: 'member-select'\n  },\n\n  data() {\n    return {\n      // 搜索关键字\n      keyword: '',\n      // 选择的会员\n      selected: undefined\n    }\n  },\n  props: {\n    list: {\n      type: Array,\n      default: () => []\n    },\n    labelHtml: {\n      type: Function,\n      default: (label, keyword) => {\n        return label.replace(\n          new RegExp(keyword, 'g'),\n          `\\<span class='global-highlight-color'\\>${keyword}\\<\\/span\\>`\n        )\n      }\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    isSrcoll: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: String\n  },\n  model: {\n    props: 'value',\n    event: 'change'\n  },\n  computed: {\n    isSearchNone() {\n      return this.keyword !== '' && !this.list.length\n    }\n  },\n  watch: {\n    list(newValue, oldValue) {\n      if (isEqual(newValue, oldValue) || !newValue.length) return\n      // 默认选中第一项 blur时起作用\n      this.selected = newValue[0].value\n    }\n  },\n  components: {},\n  methods: {\n    // 搜索会员\n    onSearch: debounce(function(val) {\n      console.log(val)\n      let str = val.trim()\n      if (this.keyword === str) return\n      this.keyword = str\n      if (str !== '') {\n        this.$emit('search', str)\n      }\n    }, 200),\n    // 检测清空选中\n    onChange(val) {\n      console.log('onChange', val)\n      !val && this.$emit('change', this.selected)\n    },\n    // 选择发生变化\n    onSelect() {\n      console.log('onSelect')\n      this.$emit('change', this.selected)\n    },\n    // 会员搜索框失去焦点\n    onBlur() {\n      console.log('onBlur')\n      this.$emit('blur', this.selected)\n    },\n    // 聚焦时先清空历史搜索\n    onFocus() {\n      this.keyword = ''\n    },\n    scroll: debounce(function(e) {\n      const { target } = e\n      if (\n        Math.floor(target.scrollTop) + target.clientHeight >\n          target.scrollHeight - 20 &&\n        this.isSrcoll\n      ) {\n        if (!this.loading) {\n          this.$emit('onScroll', data)\n        }\n      }\n    }, 200)\n  }\n}\n</script>\n"]}]}