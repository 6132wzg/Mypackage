{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/role.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/role.service.ts","mtime":1600926556251},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State } from 'rx-state';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { RoleApi } from '@/api/v1/staff/role';\nimport { AuthService } from '@/services/auth.service';\nimport { get } from 'lodash-es';\n\nvar RoleService = /*#__PURE__*/function () {\n  function RoleService(roleApi, authService) {\n    _classCallCheck(this, RoleService);\n\n    this.roleApi = roleApi;\n    this.authService = authService;\n    this.roleList$ = new State([]);\n    this.stat$ = new State({});\n    this.auth$ = this.authService.authMap$({\n      add: 'brand:auth:role|add',\n      del: 'brand:auth:role|del',\n      edit: 'brand:auth:role|edit'\n    });\n  }\n  /**\n   * 获取所有角色列表（角色编辑页面）\n   */\n\n\n  _createClass(RoleService, [{\n    key: \"getAllList\",\n    value: function getAllList() {\n      var _this = this;\n\n      return this.roleApi.getAllList().pipe(tap(function (res) {\n        _this.roleList$.commit(function () {\n          return res.roles;\n        });\n\n        _this.stat$.commit(function () {\n          return res.stat;\n        });\n      }));\n    }\n    /**\n     * 获取所有角色列表（角色编辑页面）\n     */\n\n  }, {\n    key: \"getInitInfo\",\n    value: function getInitInfo(query) {\n      return this.roleApi.getInitInfo(query);\n    }\n    /**\n     * 获取角色初始化菜单权限树\n     */\n\n  }, {\n    key: \"getInfo\",\n    value: function getInfo(query) {\n      return this.roleApi.getInfo(query);\n    }\n    /**\n     * 新增角色\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(params) {\n      var _this2 = this;\n\n      return this.roleApi.add(params).pipe(switchMap(function (state) {\n        return _this2.getAllList();\n      }));\n    }\n    /**\n     * 删除角色\n     */\n\n  }, {\n    key: \"del\",\n    value: function del(params) {\n      var _this3 = this;\n\n      return this.roleApi.del(params).pipe(switchMap(function (state) {\n        return _this3.getAllList();\n      }));\n    }\n    /**\n     * 编辑角色\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(params) {\n      var _this4 = this;\n\n      return this.roleApi.update(params).pipe(switchMap(function (state) {\n        return _this4.getAllList();\n      }));\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(to, from, next) {\n      if (to.name === 'brand-staff-role') {\n        next({\n          name: 'brand-staff-role-info',\n          query: {\n            id: get(this.roleList$.snapshot(), '0.id')\n          }\n        });\n      } else {\n        next();\n      }\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter(to, from, next) {\n      var _this5 = this;\n\n      console.log('beforeRouteEnter');\n      this.getAllList().subscribe(function () {\n        _this5.redirect(to, from, next);\n      });\n    }\n  }, {\n    key: \"beforeRouteUpdate\",\n    value: function beforeRouteUpdate(to, from, next) {\n      this.redirect(to, from, next);\n    }\n  }]);\n\n  return RoleService;\n}();\n\nRoleService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof RoleApi !== \"undefined\" && RoleApi) === \"function\" ? _a : Object, typeof (_b = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _b : Object])], RoleService);\nexport { RoleService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/role.service.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,QAAsB,UAAtB;AACA,SAAS,GAAT,EAAc,SAAd,QAA+B,gBAA/B;AACA,SAAmC,OAAnC,QAAkD,qBAAlD;AACA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAS,GAAT,QAAoB,WAApB;;AAGA,IAAa,WAAb;AAQE,uBAAoB,OAApB,EAA8C,WAA9C,EAAsE;AAAA;;AAAlD,SAAA,OAAA,GAAA,OAAA;AAA0B,SAAA,WAAA,GAAA,WAAA;AAP9C,SAAA,SAAA,GAAY,IAAI,KAAJ,CAAU,EAAV,CAAZ;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,QAAjB,CAA0B;AAChC,MAAA,GAAG,EAAE,qBAD2B;AAEhC,MAAA,GAAG,EAAE,qBAF2B;AAGhC,MAAA,IAAI,EAAE;AAH0B,KAA1B,CAAR;AAK0E;AAC1E;;;;;AATF;AAAA;AAAA,iCAYY;AAAA;;AACR,aAAO,KAAK,OAAL,CAAa,UAAb,GAA0B,IAA1B,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,KAAI,CAAC,SAAL,CAAe,MAAf,CAAsB;AAAA,iBAAM,GAAG,CAAC,KAAV;AAAA,SAAtB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAHE,CADE,CAAP;AAMD;AACD;;;;AApBF;AAAA;AAAA,gCAuBc,KAvBd,EAuBmC;AAC/B,aAAO,KAAK,OAAL,CAAa,WAAb,CAAyB,KAAzB,CAAP;AACD;AACD;;;;AA1BF;AAAA;AAAA,4BA6BU,KA7BV,EA6B+B;AAC3B,aAAO,KAAK,OAAL,CAAa,OAAb,CAAqB,KAArB,CAAP;AACD;AACD;;;;AAhCF;AAAA;AAAA,wBAmCM,MAnCN,EAmCsB;AAAA;;AAClB,aAAO,KAAK,OAAL,CAAa,GAAb,CAAiB,MAAjB,EAAyB,IAAzB,CACL,SAAS,CAAC,UAAA,KAAK,EAAG;AAChB,eAAO,MAAI,CAAC,UAAL,EAAP;AACD,OAFQ,CADJ,CAAP;AAKD;AACD;;;;AA1CF;AAAA;AAAA,wBA6CM,MA7CN,EA6C4B;AAAA;;AACxB,aAAO,KAAK,OAAL,CAAa,GAAb,CAAiB,MAAjB,EAAyB,IAAzB,CACL,SAAS,CAAC,UAAA,KAAK,EAAG;AAChB,eAAO,MAAI,CAAC,UAAL,EAAP;AACD,OAFQ,CADJ,CAAP;AAKD;AACD;;;;AApDF;AAAA;AAAA,2BAuDS,MAvDT,EAuDyB;AAAA;;AACrB,aAAO,KAAK,OAAL,CAAa,MAAb,CAAoB,MAApB,EAA4B,IAA5B,CACL,SAAS,CAAC,UAAA,KAAK,EAAG;AAChB,eAAO,MAAI,CAAC,UAAL,EAAP;AACD,OAFQ,CADJ,CAAP;AAKD;AA7DH;AAAA;AAAA,6BA+DW,EA/DX,EA+D6B,IA/D7B,EA+DiD,IA/DjD,EA+D0D;AACtD,UAAI,EAAE,CAAC,IAAH,KAAY,kBAAhB,EAAoC;AAClC,QAAA,IAAI,CAAC;AACH,UAAA,IAAI,EAAE,uBADH;AAEH,UAAA,KAAK,EAAE;AACL,YAAA,EAAE,EAAE,GAAG,CAAC,KAAK,SAAL,CAAe,QAAf,EAAD,EAA4B,MAA5B;AADF;AAFJ,SAAD,CAAJ;AAMD,OAPD,MAOO;AACL,QAAA,IAAI;AACL;AACF;AA1EH;AAAA;AAAA,qCA2EmB,EA3EnB,EA2EqC,IA3ErC,EA2EyD,IA3EzD,EA2EkE;AAAA;;AAC9D,MAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ;AACA,WAAK,UAAL,GAAkB,SAAlB,CAA4B,YAAK;AAC/B,QAAA,MAAI,CAAC,QAAL,CAAc,EAAd,EAAkB,IAAlB,EAAwB,IAAxB;AACD,OAFD;AAGD;AAhFH;AAAA;AAAA,sCAiFoB,EAjFpB,EAiFsC,IAjFtC,EAiF0D,IAjF1D,EAiFmE;AAC/D,WAAK,QAAL,CAAc,EAAd,EAAkB,IAAlB,EAAwB,IAAxB;AACD;AAnFH;;AAAA;AAAA,GAAA;;AAAa,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDAQO,O,KAAO,W,IAAP,O,MAAO,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAuB,WAAvB,KAAkC,WAAlC,IAAuB,WAAvB,MAAkC,UAAlC,GAAkC,EAAlC,GAAkC,M,EARhD,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State } from 'rx-state'\nimport { tap, switchMap } from 'rxjs/operators'\nimport { GetInitInfoPut, RoleInfo, RoleApi } from '@/api/v1/staff/role'\nimport { AuthService } from '@/services/auth.service'\nimport { get } from 'lodash-es'\n\n@Injectable()\nexport class RoleService implements Controller {\n  roleList$ = new State([])\n  stat$ = new State({})\n  auth$ = this.authService.authMap$({\n    add: 'brand:auth:role|add',\n    del: 'brand:auth:role|del',\n    edit: 'brand:auth:role|edit'\n  })\n  constructor(private roleApi: RoleApi, private authService: AuthService) {}\n  /**\n   * 获取所有角色列表（角色编辑页面）\n   */\n  getAllList() {\n    return this.roleApi.getAllList().pipe(\n      tap(res => {\n        this.roleList$.commit(() => res.roles)\n        this.stat$.commit(() => res.stat)\n      })\n    )\n  }\n  /**\n   * 获取所有角色列表（角色编辑页面）\n   */\n  getInitInfo(query: GetInitInfoPut) {\n    return this.roleApi.getInitInfo(query)\n  }\n  /**\n   * 获取角色初始化菜单权限树\n   */\n  getInfo(query: GetInitInfoPut) {\n    return this.roleApi.getInfo(query)\n  }\n  /**\n   * 新增角色\n   */\n  add(params: RoleInfo) {\n    return this.roleApi.add(params).pipe(\n      switchMap(state => {\n        return this.getAllList()\n      })\n    )\n  }\n  /**\n   * 删除角色\n   */\n  del(params: GetInitInfoPut) {\n    return this.roleApi.del(params).pipe(\n      switchMap(state => {\n        return this.getAllList()\n      })\n    )\n  }\n  /**\n   * 编辑角色\n   */\n  update(params: RoleInfo) {\n    return this.roleApi.update(params).pipe(\n      switchMap(state => {\n        return this.getAllList()\n      })\n    )\n  }\n\n  redirect(to: ServiceRoute, from: ServiceRoute, next: any) {\n    if (to.name === 'brand-staff-role') {\n      next({\n        name: 'brand-staff-role-info',\n        query: {\n          id: get(this.roleList$.snapshot(), '0.id')\n        }\n      })\n    } else {\n      next()\n    }\n  }\n  beforeRouteEnter(to: ServiceRoute, from: ServiceRoute, next: any) {\n    console.log('beforeRouteEnter')\n    this.getAllList().subscribe(() => {\n      this.redirect(to, from, next)\n    })\n  }\n  beforeRouteUpdate(to: ServiceRoute, from: ServiceRoute, next: any) {\n    this.redirect(to, from, next)\n  }\n}\n"],"sourceRoot":""}]}