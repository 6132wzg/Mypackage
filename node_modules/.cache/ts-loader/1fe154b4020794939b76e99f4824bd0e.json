{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-qrcode/list.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-qrcode/list.service.ts","mtime":1601345845255},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { AuthService } from '@/services/auth.service';\nimport { ActivityQrcodeApi, GetActivityQrcodeListQuery } from '@/api/v1/marketing/activity-qrcode';\nimport { tap } from 'rxjs/operators';\n\nvar ListService = /*#__PURE__*/function () {\n  function ListService(activityQrcodeApi, authService) {\n    _classCallCheck(this, ListService);\n\n    this.activityQrcodeApi = activityQrcodeApi;\n    this.authService = authService;\n    this.list$ = new State([]);\n    this.info$ = new State([]);\n    this.page$ = new State({});\n    this.loading$ = new State({});\n    this.auth$ = this.authService.authMap$({\n      page: 'brand:promote:qrcode|page'\n    });\n  }\n\n  _createClass(ListService, [{\n    key: \"getList\",\n    value: function getList(params) {\n      var _this = this;\n\n      return this.activityQrcodeApi.getList(params).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo(id) {\n      var _this2 = this;\n\n      return this.activityQrcodeApi.getInfo(id).pipe(tap(function (res) {\n        _this2.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return this.getList(to.meta.query);\n    }\n  }]);\n\n  return ListService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof GetActivityQrcodeListQuery !== \"undefined\" && GetActivityQrcodeListQuery) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], ListService.prototype, \"getList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Number]), __metadata(\"design:returntype\", void 0)], ListService.prototype, \"getInfo\", null);\n\nListService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof ActivityQrcodeApi !== \"undefined\" && ActivityQrcodeApi) === \"function\" ? _b : Object, typeof (_c = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _c : Object])], ListService);\nexport { ListService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/activity-qrcode/list.service.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SACE,iBADF,EAEE,0BAFF,QAGO,oCAHP;AAIA,SAAS,GAAT,QAAkC,gBAAlC;;AAGA,IAAa,WAAb;AAQE,uBACU,iBADV,EAEU,WAFV,EAEkC;AAAA;;AADxB,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,WAAA,GAAA,WAAA;AATV,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,KAAK,WAAL,CAAiB,QAAjB,CAA0B;AAChC,MAAA,IAAI,EAAE;AAD0B,KAA1B,CAAR;AAMI;;AAXN;AAAA;AAAA,4BAaU,MAbV,EAa4C;AAAA;;AACxC,aAAO,KAAK,iBAAL,CAAuB,OAAvB,CAA+B,MAA/B,EAAuC,IAAvC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAHE,CADE,CAAP;AAMD;AApBH;AAAA;AAAA,4BAsBU,EAtBV,EAsBoB;AAAA;;AAChB,aAAO,KAAK,iBAAL,CAAuB,OAAvB,CAA+B,EAA/B,EAAmC,IAAnC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD;AA5BH;AAAA;AAAA,+BA6Ba,EA7Bb,EA6B+B,IA7B/B,EA6BiD;AAC7C,aAAO,KAAK,OAAL,CAAa,EAAE,CAAC,IAAH,CAAQ,KAArB,CAAP;AACD;AA/BH;;AAAA;AAAA,GAAA;;AAaE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAgB,0B,KAA0B,W,IAA1B,0B,MAA0B,U,GAAA,E,GAAA,M,EAA1C,E,uCAAA,CAAA,E,qBAAA,E,SAAA,EAOC,IAPD,CAAA;;AASA,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,qBAAA,E,SAAA,EAMC,IAND,CAAA;;AAtBW,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDASO,iB,KAAiB,W,IAAjB,iB,MAAiB,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACvB,WADuB,KACZ,WADY,IACvB,WADuB,MACZ,UADY,GACZ,EADY,GACZ,M,EAVZ,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { AuthService } from '@/services/auth.service'\nimport {\n  ActivityQrcodeApi,\n  GetActivityQrcodeListQuery\n} from '@/api/v1/marketing/activity-qrcode'\nimport { tap, throttleTime } from 'rxjs/operators'\n\n@Injectable()\nexport class ListService implements Controller {\n  list$ = new State([])\n  info$ = new State([])\n  page$ = new State({})\n  loading$ = new State({})\n  auth$ = this.authService.authMap$({\n    page: 'brand:promote:qrcode|page'\n  })\n  constructor(\n    private activityQrcodeApi: ActivityQrcodeApi,\n    private authService: AuthService\n  ) {}\n  @Effect()\n  getList(params: GetActivityQrcodeListQuery) {\n    return this.activityQrcodeApi.getList(params).pipe(\n      tap((res: any) => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  @Effect()\n  getInfo(id: number) {\n    return this.activityQrcodeApi.getInfo(id).pipe(\n      tap((res: any) => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return this.getList(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}