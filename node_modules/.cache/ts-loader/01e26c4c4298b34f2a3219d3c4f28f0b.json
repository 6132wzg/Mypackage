{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/stat/revenue/gather.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/stat/revenue/gather.service.ts","mtime":1600926556304},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state/src';\nimport { tap } from 'rxjs/operators';\nimport { RevenueApi, RevenueDataParams } from '@/api/v1/stat/brand/revenue';\nimport { CommonApi } from '@/api/v1/stat/common/common.ts';\nimport { AuthService } from '@/services/auth.service';\nimport { anyAll } from '@/operators';\n\nvar GatherService = /*#__PURE__*/function () {\n  function GatherService(revenueApi, authService, commonApi) {\n    _classCallCheck(this, GatherService);\n\n    this.revenueApi = revenueApi;\n    this.authService = authService;\n    this.commonApi = commonApi;\n    this.loading$ = new State({});\n    this.dataToday$ = new State({});\n    this.list$ = new State([]);\n    this.total$ = new State({});\n    this.updateTime$ = new State(Date.now());\n    this.auth$ = this.authService.authMap$({\n      export: 'brand:stat:revenue|product_type_export'\n    });\n  } // 列表\n\n\n  _createClass(GatherService, [{\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      return this.revenueApi.getData(query).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        res.last_update_time && _this.updateTime$.commit(function () {\n          return res.last_update_time;\n        });\n      }));\n    }\n  }, {\n    key: \"getDataTotal\",\n    value: function getDataTotal(query) {\n      var _this2 = this;\n\n      return this.revenueApi.getDataTotal(query).pipe(tap(function (res) {\n        _this2.total$.commit(function () {\n          return res.info;\n        });\n\n        res.last_update_time && _this2.updateTime$.commit(function () {\n          return res.last_update_time;\n        });\n      }));\n    } // 获取今日实时数据\n\n  }, {\n    key: \"getDataToday\",\n    value: function getDataToday(query) {\n      var _this3 = this;\n\n      return this.revenueApi.getDataToady(query).pipe(tap(function (res) {\n        _this3.dataToday$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"getDataRefresh\",\n    value: function getDataRefresh() {\n      var _this4 = this;\n\n      return this.commonApi.getRevenueGatherRefresh().pipe(tap(function (res) {\n        res.last_update_time && _this4.updateTime$.commit(function () {\n          return res.last_update_time;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return anyAll(this.getList(to.meta.query), this.getDataTotal(to.meta.query));\n    }\n  }]);\n\n  return GatherService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof RevenueDataParams !== \"undefined\" && RevenueDataParams) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], GatherService.prototype, \"getList\", null);\n\nGatherService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof RevenueApi !== \"undefined\" && RevenueApi) === \"function\" ? _b : Object, typeof (_c = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _c : Object, typeof (_d = typeof CommonApi !== \"undefined\" && CommonApi) === \"function\" ? _d : Object])], GatherService);\nexport { GatherService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/stat/revenue/gather.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state/src'\nimport { tap } from 'rxjs/operators'\nimport { RevenueApi, RevenueDataParams } from '@/api/v1/stat/brand/revenue'\nimport { CommonApi } from '@/api/v1/stat/common/common.ts'\nimport { AuthService } from '@/services/auth.service'\nimport { anyAll } from '@/operators'\n\n@Injectable()\nexport class GatherService {\n  loading$ = new State({})\n  dataToday$ = new State({})\n  list$ = new State([])\n  total$ = new State({})\n  updateTime$ = new State(Date.now())\n\n  auth$ = this.authService.authMap$({\n    export: 'brand:stat:revenue|product_type_export'\n  })\n  constructor(\n    private revenueApi: RevenueApi,\n    private authService: AuthService,\n    private commonApi: CommonApi\n  ) {}\n  // 列表\n  @Effect()\n  getList(query: RevenueDataParams) {\n    return this.revenueApi.getData(query).pipe(\n      tap(res => {\n        this.list$.commit(() => res.list)\n        res.last_update_time &&\n          this.updateTime$.commit(() => res.last_update_time)\n      })\n    )\n  }\n  getDataTotal(query: RevenueDataParams) {\n    return this.revenueApi.getDataTotal(query).pipe(\n      tap(res => {\n        this.total$.commit(() => res.info)\n        res.last_update_time &&\n          this.updateTime$.commit(() => res.last_update_time)\n      })\n    )\n  }\n  // 获取今日实时数据\n  getDataToday(query: RevenueDataParams) {\n    return this.revenueApi.getDataToady(query).pipe(\n      tap(res => {\n        this.dataToday$.commit(() => res.info)\n      })\n    )\n  }\n  getDataRefresh() {\n    return this.commonApi.getRevenueGatherRefresh().pipe(\n      tap(res => {\n        res.last_update_time &&\n          this.updateTime$.commit(() => res.last_update_time)\n      })\n    )\n  }\n\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return anyAll(this.getList(to.meta.query), this.getDataTotal(to.meta.query))\n  }\n}\n"],"sourceRoot":""}]}