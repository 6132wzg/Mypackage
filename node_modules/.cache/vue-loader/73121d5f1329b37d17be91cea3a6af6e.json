{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/app/venue/setting/add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/app/venue/setting/add.vue","mtime":1597396799980},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from 'lodash-es'\nimport { AddService } from './add.service'\nimport { ruleOptions } from './add.config'\nimport { MessageService } from '@/services/message.service'\nimport { CAN_RESERVE, TIME_LIMIT_TYPE } from '@/constants/venue'\nimport { ManageService } from '../manage.service'\nexport default {\n  name: 'AddRole',\n  bem: {\n    b: 'page-shop-app-venue-setting-add'\n  },\n  serviceInject() {\n    return {\n      addService: AddService,\n      messageService: MessageService,\n      manageService: ManageService\n    }\n  },\n  rxState() {\n    return {\n      sites: this.addService.sites$,\n      halfEnums: this.addService.halfEnums$,\n      oneEnums: this.addService.oneEnums$,\n      timeEnums: this.addService.timeEnums$,\n      cyclicEnums: this.addService.cyclicEnums$,\n      priorityEnums: this.addService.priorityEnums$,\n      weeks: this.addService.weeks$,\n      reserveEnums: this.addService.reserveEnums$,\n      perTime: this.manageService.perTime$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      TIME_LIMIT_TYPE,\n      timeLimit: TIME_LIMIT_TYPE.UNLIMITED,\n      start_time: null,\n      end_time: null,\n      endOpen: false,\n      cyclicType: 1,\n      canReserve: true,\n      pertimeEnums: {\n        1: this.halfEnums,\n        2: this.oneEnums\n      }\n    }\n  },\n  methods: {\n    onChange(e) {\n      this.canReserve = e.target.value === CAN_RESERVE.YES\n    },\n    timeLimitChange(e) {\n      this.timeLimit = e.target.value\n    },\n    onCancel() {\n      this.$router.go(-1)\n    },\n    onClickSubmit(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        const data = {\n          venues_id: this.$searchQuery.venues_id,\n          site_ids: this.sites.map(item => item.id),\n          ...values\n        }\n        this.addService.add(data).subscribe(() => {\n          this.messageService.success({ content: '新增成功' })\n          this.$router.push({ name: 'shop-app-venue-manage' })\n        })\n      })\n    },\n    disabledStartDate(startValue) {\n      const endValue = this.end_time\n      if (!endValue) {\n        // 结束时间未选择\n        return startValue < moment().startOf('day')\n      }\n      let start =\n        endValue.valueOf() >\n        moment()\n          .add(30, 'y')\n          .valueOf()\n          ? moment(endValue)\n              .subtract(30, 'y')\n              .valueOf()\n          : moment()\n              .startOf('day')\n              .valueOf()\n      return (\n        startValue.valueOf() < start ||\n        startValue.valueOf() > moment(endValue).valueOf()\n      )\n    },\n    disabledEndDate(endValue) {\n      const startValue = this.start_time\n      if (!startValue) {\n        // 开始时间未选择\n        return (\n          endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n        )\n      }\n      return (\n        endValue.valueOf() >=\n          moment(startValue)\n            .add(30, 'y')\n            .valueOf() ||\n        endValue.valueOf() < moment(startValue).valueOf() ||\n        endValue.valueOf() <\n          moment()\n            .startOf('day')\n            .valueOf()\n      )\n    },\n    handleStartOpenChange(open) {\n      if (!open) {\n        this.endOpen = true\n      }\n    },\n    start_time_change(data) {\n      this.start_time = cloneDeep(data)\n    },\n    handleEndOpenChange(open) {\n      this.endOpen = open\n    },\n    end_time_change(data) {\n      this.end_time = cloneDeep(data)\n    },\n    cyclicTypeChange(e) {\n      this.cyclicType = e.target.value\n    }\n  }\n}\n",null]}