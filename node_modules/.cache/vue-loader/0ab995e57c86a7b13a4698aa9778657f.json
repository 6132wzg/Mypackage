{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/entrance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/entrance.vue","mtime":1600926555929},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport infoEdit from '@/views/components/info-edit#/info-edit'\nimport faceUpload from '@/views/biz-components/face-upload/face-upload'\nimport ShopAddLable from '@/views/biz-modals/shop/add-lable'\nimport { MessageService } from '@/services/message.service'\n\nimport { EntranceService } from './entrance.service'\nimport { cloneDeep, get, debounce } from 'lodash-es'\nexport default {\n  name: 'modal-shop-reception-entrance',\n  props: {\n    member_id: {\n      type: [String, Number]\n    }\n  },\n  components: { faceUpload, infoEdit },\n  modals: { ShopAddLable },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      entranceService: EntranceService\n    }\n  },\n  rxState() {\n    return {\n      cabinetList: this.entranceService.cabinetList$,\n      loading: this.entranceService.loading$,\n      page: this.entranceService.page$,\n      sellerList: this.entranceService.sellerList$,\n      coachList: this.entranceService.coachList$,\n      cardList: this.entranceService.cardList$,\n      courseList: this.entranceService.courseList$,\n      entranceList: this.entranceService.entranceList$,\n      parent_types: this.entranceService.parent_types$,\n      auth: this.entranceService.auth$\n    }\n  },\n  data() {\n    return {\n      show: false,\n      isAnyEdit: false, // 是否处于编辑状态\n      memberInfo: {}, // 会员详细信息\n      memberAuth: {},\n      photoList: [], // 会员头像\n      cabinets: [], // 柜子\n      tags: [], // 标签列表\n      proof: '', // 入场凭证\n      courseProof: [], // 课类入场凭证\n      cardProof: '', // 卡类入场凭证\n      temporary_cabinet: '', // 临时租赁柜\n      seller: '', // 销售\n      coach: '', // 教练\n      entranceOptionType: {\n        '1': 'reception-period-card',\n        '2': 'reception-number-card',\n        '3': 'reception-visit-appointment',\n        '4': 'reception-personal-course',\n        '5': 'reception-personal-team-course',\n        '6': 'reception-team-course',\n        '7': 'reception-small-course',\n        '8': 'reception-site-appointment'\n      },\n      isCheckinCourse: 1, // 凭课入场\n      cabinetSearchOpen: false, // 储物柜下拉列表开启\n      cabintSearchText: '', // 储物柜搜索词\n      isCabinetAllocation: false, // 是否在分配柜子的状态下\n      isCabinetFocus: false, // 是否为临时柜聚焦状态\n      timer: null\n    }\n  },\n  computed: {\n    // 是否已入场\n    isEntry() {\n      return (\n        this.memberInfo.entry_status &&\n        +this.memberInfo.entry_status.value === 1\n      )\n    },\n    canEntry() {\n      if (!this.auth.checkin) return false\n      if (this.courseProof.length) {\n        return true\n      }\n      return (this.cardProof && this.cardProof !== -1) || this.cardProof === 0\n    },\n    memberIsBirthday() {\n      return get(this.memberInfo, 'is_birthday', false)\n    },\n    memberType() {\n      return get(this.memberInfo, 'member_type', {})\n    },\n    memberProof() {\n      return get(this.memberInfo, 'proof', {})\n    },\n    temporaryCabinet() {\n      let temporary_cabinet = get(this.memberInfo, 'temporary_cabinet', [])\n      let cabinet = temporary_cabinet.length ? temporary_cabinet[0] : {}\n      // 临时\n      return cabinet\n    },\n    leasingCabinets() {\n      // 长期\n      return get(this.memberInfo, 'leasing_cabinet', [])\n    },\n    leasingCabinetText() {\n      if (!this.leasingCabinets.length) return '暂无'\n      return this.leasingCabinets.reduce((str, cur) => {\n        let prefix = str ? ' / ' : ''\n        str += prefix + cur.name\n        return str\n      }, '')\n    },\n    coachName() {\n      return get(this.memberInfo.coach, 'name', '')\n    },\n    sellerName() {\n      return get(this.memberInfo.seller, 'name', '')\n    },\n    cardNum() {\n      return get(this.memberInfo, 'card_num', '')\n    },\n    rfid() {\n      return get(this.memberInfo, 'rfid', '')\n    }\n  },\n  mounted() {\n    this.entranceService.init().subscribe()\n    // 获取会员详情\n    this.init()\n    document.addEventListener('keydown', this.onInputKeyPress)\n  },\n  destroyed() {\n    document.removeEventListener('keydown', this.onInputKeyPress)\n  },\n  methods: {\n    handleJudgeRemarkAuth(product_type, authList) {\n      if (Array.isArray(authList)) return false\n      // 不存在产品类型\n      if (!product_type) return false\n      // 场地预约\n      if (product_type === 8) return false\n      let mapOption = {\n        1: 'shop:sold:sold_personal_course|internal_description',\n        2: 'shop:sold:sold_small_class_course|internal_description',\n        3: 'shop:sold:sold_package_course|internal_description',\n        4: 'shop:sold:sold_deposit_card|internal_description',\n        5: 'shop:sold:sold_member_card|internal_description'\n      }\n      let auth = mapOption[product_type]\n      return !!authList[auth]\n    },\n    handleEntranceRemarkChange(description, remarkData) {\n      this.entranceService\n        .addDescription({\n          description,\n          order_id: remarkData.order_id\n        })\n        .subscribe(res => {\n          remarkData.description = description\n        })\n    },\n    handleCourseProofChange(proof) {\n      if (proof.length) {\n        // 卡课不能一起选择\n        this.cardProof = ''\n      }\n    },\n    // 分配柜子\n    handleAllocationCabint() {\n      if (!this.isCabinetAllocation) {\n        this.isCabinetAllocation = true\n        setTimeout(() => {\n          this.$refs.cabinet.$el.click()\n        }, 200)\n      } else {\n        if (!this.isCabinetFocus) {\n          if (!this.temporary_cabinet) {\n            this.messageService.error({ content: '请选择一个临时柜' })\n            setTimeout(() => {\n              this.$refs.cabinet.$el.click()\n            }, 200)\n          } else {\n            this.handleChangeUserCabint()\n          }\n        } else {\n          if (this.temporary_cabinet) {\n            this.handleChangeUserCabint()\n          }\n        }\n      }\n    },\n    handleCabinetBlur() {\n      this.cabinetSearchOpen = false\n      this.isCabinetFocus = false\n      this.cabintSearchText = ''\n    },\n    handleCabinetFocus() {\n      this.isCabinetFocus = true\n      if (!this.cabintSearchText) {\n        this.cabinetSearchOpen = false\n        return\n      }\n      if (!this.cabinetSearchOpen) this.cabinetSearchOpen = true\n    },\n    handleCabinetSearch: debounce(function(keyword) {\n      this.cabinetSearchOpen = true\n      this.cabintSearchText = keyword.trim()\n      if (!keyword.trim()) return false\n      console.log('keyword', keyword)\n      this.entranceService\n        .getCabinetList(this.member_id, {\n          keyword: this.cabintSearchText\n        })\n        .subscribe()\n    }, 100),\n    handleCabinetEnter(e) {\n      let keyCode = e.keyCode\n      let keyword = e.target.value\n      console.log('handleCabinetEnter', keyword)\n\n      if (this.loading.getCabinetList) return false\n      if (keyCode !== 13) return false\n      if (!this.isEntry) {\n        // 未入场并可以入场时\n        if (keyword) {\n          this.handleSearchCabintAndChange(keyword)\n        } else {\n          if (this.isCabinetFocus) this.onEntry()\n        }\n      } else {\n        // 已入场,在分配柜子状态下\n        if (keyword) {\n          this.handleSearchCabintAndChange(keyword)\n        } else {\n          if (!this.temporary_cabinet) {\n            this.messageService.error({ content: '请选择一个临时柜' })\n            setTimeout(() => {\n              this.$refs.cabinet.$el.click()\n            }, 200)\n          } else {\n            this.handleChangeUserCabint()\n          }\n        }\n      }\n    },\n    handleSearchCabintAndChange(keyword) {\n      this.entranceService\n        .getCabinetList(this.member_id, {\n          keyword\n        })\n        .subscribe(res => {\n          let list = res.list\n          let id = list.length ? list[0]['id'] : undefined\n          if (id) {\n            this.temporary_cabinet = id\n            console.log('id', id)\n            if (this.isEntry) {\n              this.handleChangeUserCabint()\n            } else {\n              this.onEntry()\n            }\n          } else {\n            this.messageService.error({ content: '未搜索到储物柜' })\n            clearTimeout(this.timer)\n            this.timer = setTimeout(() => {\n              this.$refs.cabinet.$children[0]['setInputValue']('')\n              this.$refs.cabinet.$el.click()\n            }, 200)\n          }\n        })\n    },\n    // 分配柜子\n    handleChangeUserCabint() {\n      this.entranceService\n        .editEntranceCabinet({\n          member_id: +this.member_id,\n          cabinet_id: this.temporary_cabinet\n        })\n        .subscribe(res => {\n          this.show = false\n          this.$emit('done')\n          // if (this.isCabinetAllocation) this.isCabinetAllocation = false\n          // this.cabintSearchText = ''\n          // this.handleGetMemberInfo()\n        })\n    },\n    onInputKeyPress(e) {\n      let keyCode = e.keyCode\n      // 判断是否在编辑状态,编辑状态下不可入离场\n      if (this.isAnyEdit) {\n        return false\n      }\n      if (keyCode === 13) {\n        if (this.isEntry) {\n          if (!this.isCabinetAllocation) {\n            this.onLeaveConfirm()\n          } else {\n            if (this.isCabinetFocus) return false\n            if (!this.temporary_cabinet) {\n              setTimeout(() => {\n                this.$refs.cabinet.$el.click()\n                this.messageService.error({ content: '请选择一个临时柜' })\n              }, 200)\n            } else {\n              this.handleChangeUserCabint()\n            }\n          }\n        } else {\n          // 在选择柜子\n          if (!this.isCabinetFocus) {\n            this.onEntry()\n          }\n        }\n      }\n      // 分配柜子\n      if (keyCode === 120) {\n        if (this.isEntry) this.handleAllocationCabint()\n      }\n    },\n    init() {\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.memberAuth = cloneDeep(res.auth)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.temporary_cabinet = get(this.temporaryCabinet, 'id', undefined)\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n        this.isCheckinCourse = res.info.is_checkin_course\n        this.proof = get(res.info.proof, 'proof_type')\n        // 获取会员入场凭证列表\n        if (!this.isEntry) {\n          this.entranceService\n            .getEntranceOptionList(this.member_id)\n            .subscribe(res => {\n              this.handleInitProof()\n              setTimeout(() => {\n                this.$refs.cabinet.$el.click()\n              }, 300)\n            })\n        } else {\n          if (this.isCabinetAllocation) {\n            setTimeout(() => {\n              this.$refs.cabinet.$el.click()\n            }, 300)\n          }\n        }\n        this.entranceService.setCabinetList(res.info.temporary_cabinet)\n        // 获取会员储物柜列表\n      })\n    },\n    handleProofChange(e) {\n      if (e.target.value) this.courseProof = []\n      this.cardProof = e.target.value\n    },\n    // 删除标签\n    handleRemoveTag(tag) {\n      this.entranceService\n        .getMemberLabelDelete({ user_id: this.member_id, tag_id: tag.id })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 获取会员详情\n    handleGetMemberInfo() {\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.memberAuth = cloneDeep(res.auth)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n\n        if (!this.isEntry) {\n          this.handleInitProof()\n        }\n      })\n    },\n    handleInitProof() {\n      if (this.courseList.length && !this.courseProof.length) {\n        let proofs = this.courseList.filter(option => option.is_able)\n        this.courseProof = proofs.length ? [proofs[0]['id']] : []\n      } else if (!this.proof) {\n        let proofs = this.cardList.filter(option => option.is_able)\n        if (proofs.length === 1 && proofs[0]['id'] === 0) {\n          this.cardProof = ''\n        } else {\n          this.cardProof = proofs.length\n            ? proofs[0]['id']\n            : this.cardList[0]['id']\n        }\n      }\n    },\n    // 头像变更\n    handlePhotoChange(list) {\n      this.entranceService\n        .editFace(this.member_id, {\n          image_face: list[0]\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 物理卡号变更\n    handleRfidChange(rfid) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num:\n            typeof this.memberInfo.card_num === 'string'\n              ? this.memberInfo.card_num.trim()\n              : this.memberInfo.card_num,\n          rfid: typeof rfid === 'string' ? rfid.trim() : rfid // 物理ID\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 实体卡号变更\n    handleCardNumChange(card_num) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num: typeof card_num === 'string' ? card_num.trim() : card_num,\n          rfid:\n            typeof this.memberInfo.rfid === 'string'\n              ? this.memberInfo.rfid.trim()\n              : this.memberInfo.rfid // 实体卡号\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 销售变更\n    handleEditSeller(seller_id) {\n      this.entranceService\n        .editSeller({\n          member_id: +this.member_id,\n          seller_id: seller_id === -1 ? 0 : seller_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 教练变更\n    handleEditCoach(coach_id) {\n      this.entranceService\n        .editCoach({\n          member_id: +this.member_id,\n          coach_id: coach_id === -1 ? 0 : coach_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 备注变更\n    handleRemarkChange(remark) {\n      this.entranceService\n        .updateMemberEdit(+this.member_id, {\n          remark\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 修改编辑状态\n    handleChangeEditStatus(val) {\n      this.isAnyEdit = val\n    },\n    // 入场\n    onEntry() {\n      // 编辑状态下不可入场\n      if (this.isAnyEdit) return false\n      // 未选择凭证不可入场\n      if (!this.canEntry) return false\n      let cabinet_id = this.temporary_cabinet\n        ? +this.temporary_cabinet\n        : undefined\n      let seller_id = this.seller === -1 ? undefined : +this.seller\n      let coach_id = this.coach === -1 ? undefined : +this.coach\n      let member_id = +this.member_id\n      let is_checkin_course = this.isCheckinCourse\n      let deduct_num\n      let proof = []\n      if (this.cardProof || this.cardProof === 0) {\n        console.log('this.cardProof', this.cardProof)\n        let currentProof =\n          this.cardList.length > 0 &&\n          this.cardList.filter(i => i.id === this.cardProof)[0]\n        proof = [\n          {\n            proof_value: +this.cardProof,\n            proof_type: currentProof.proof_type\n          }\n        ]\n        deduct_num = currentProof.deduct_num\n      } else {\n        proof = this.courseProof.map(i => {\n          let obj = this.courseList.filter(course => course.id === i)[0]\n          console.log('obj', obj)\n          return {\n            proof_value: obj.id,\n            proof_type: obj.proof_type\n          }\n        })\n      }\n      let reqParams = {\n        member_id,\n        seller_id,\n        coach_id,\n        cabinet_id,\n        proof,\n        is_checkin_course,\n        deduct_num\n      }\n      if (cabinet_id) {\n        reqParams = Object.assign(reqParams, {\n          cabinet_id\n        })\n      }\n      this.entranceService.setEntrance(reqParams).subscribe(res => {\n        this.show = false\n        this.messageService.success({ content: '入场成功' })\n        this.$emit('done')\n      })\n    },\n    // 离场之前的确认\n    onLeaveConfirm() {\n      if (!this.auth.checkout) return false\n      this.entranceService.getCabinetInfo(this.member_id).subscribe(res => {\n        if (res.info.is_smart) {\n          this.$error({\n            title: `当前会员有储物柜「${res.info.cabinet_area_name}」「${res.info.serial_num}」尚未归还，请先归还！`,\n            okText: '知道了'\n          })\n        } else {\n          this.onLeave()\n        }\n      })\n    },\n    // 离场\n    onLeave() {\n      this.entranceService.setEntranceLeave(this.member_id).subscribe(res => {\n        this.show = false\n        this.messageService.success({ content: '离场成功' })\n        this.$emit('done')\n      })\n    },\n    handleClose() {\n      this.show = false\n      this.$emit('done')\n    }\n  }\n}\n",{"version":3,"sources":["entrance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAilfile":"entrance.vue","sourceRoot":"src/views/biz-modals/shop/reception","sourcesContent":["<template>\n  <st-modal\n    :title=\"`${isEntry ? '离场' : '入场'}`\"\n    v-model=\"show\"\n    width=\"800px\"\n    wrapClassName=\"modal-shop-reception-entrance\"\n    @cancel=\"handleClose\"\n  >\n    <div class=\"member\">\n      <!-- 会员信息 -->\n      <div class=\"member-info\">\n        <div class=\"member-info-base\">\n          <!-- 头像 -->\n          <div class=\"member-info-base__avatar\">\n            <face-upload\n              width=\"146px\"\n              height=\"146px\"\n              placeholder=\"上传人脸\"\n              @change=\"handlePhotoChange\"\n              :list=\"photoList\"\n              :faceEditAuth=\"auth.editFace\"\n              :actionAuth=\"auth.delFace\"\n            >\n              <div\n                class=\"avatar-tip\"\n                v-if=\"memberType.name\"\n                slot=\"actionContent\"\n              >\n                {{ memberType.name }}\n              </div>\n            </face-upload>\n            <div class=\"avatar-tag\" v-if=\"memberIsBirthday\">\n              <img src=\"~@/assets/img/icon_face_birthday.png\" alt=\"\" />\n            </div>\n          </div>\n          <!-- 基本信息 -->\n          <div class=\"member-info-base__info\">\n            <!-- 姓名,手机号  -->\n            <div class=\"info-bar mg-b8\">\n              <div class=\"name\">\n                {{ memberInfo.member_name }}\n              </div>\n              <div class=\"sex\">\n                <st-icon\n                  :type=\"memberInfo.sex === 1 ? 'female' : 'male'\"\n                  :style=\"\n                    memberInfo.sex === 1 ? 'color:#FF5E41' : 'color:#3F66F6'\n                  \"\n                />\n              </div>\n\n              <div class=\"phone\">\n                {{ memberInfo.mobile }}\n              </div>\n            </div>\n            <!-- 标签 -->\n            <div class=\"info-bar mg-b4\">\n              <div class=\"tag\">\n                <div v-for=\"tag in tags\" :key=\"tag.id\">\n                  <a-tooltip :key=\"tag.id\" :title=\"tag.name\">\n                    <a-tag\n                      class=\"tag-item\"\n                      :key=\"tag.name\"\n                      :closable=\"auth.editMember\"\n                      @close=\"handleRemoveTag(tag)\"\n                    >\n                      {{ tag.name }}\n                    </a-tag>\n                  </a-tooltip>\n                </div>\n                <a\n                  v-modal-link=\"{\n                    name: 'shop-add-lable',\n                    props: {\n                      memberIds: [member_id]\n                    },\n                    on: { success: handleGetMemberInfo }\n                  }\"\n                >\n                  <a-tag style=\"background: #fff; borderStyle: dashed;\">\n                    <a-icon type=\"plus\" style=\"margin-right: 8px;\" />\n                    标签\n                  </a-tag>\n                </a>\n              </div>\n            </div>\n            <div class=\"info-bar\">\n              <!-- 卡号 -->\n              <info-edit\n                label=\"实体卡号：\"\n                :value=\"memberInfo.card_num\"\n                :canEdit=\"auth.editCardNum\"\n                :invisibleEdit=\"isAnyEdit\"\n                @confirm=\"handleCardNumChange\"\n                @changeEditStatus=\"handleChangeEditStatus\"\n              >\n                <st-overflow-text\n                  max-width=\"170px\"\n                  :value=\"cardNum\"\n                ></st-overflow-text>\n              </info-edit>\n              <!-- 物理卡号 -->\n              <info-edit\n                label=\"物理ID：\"\n                :value=\"memberInfo.rfid\"\n                :canEdit=\"auth.editCardNum\"\n                :invisibleEdit=\"isAnyEdit\"\n                @confirm=\"handleRfidChange\"\n                @changeEditStatus=\"handleChangeEditStatus\"\n              >\n                <st-overflow-text\n                  max-width=\"170px\"\n                  :value=\"rfid\"\n                ></st-overflow-text>\n              </info-edit>\n            </div>\n            <div class=\"info-bar\">\n              <!-- 跟进销售 -->\n              <info-edit\n                type=\"select\"\n                label=\"跟进销售：\"\n                :invisibleEdit=\"isAnyEdit\"\n                :canEdit=\"auth.bindSalesman\"\n                :value=\"seller\"\n                :options=\"sellerList\"\n                @confirm=\"handleEditSeller\"\n                @changeEditStatus=\"handleChangeEditStatus\"\n              >\n                <st-overflow-text\n                  max-width=\"170px\"\n                  :value=\"sellerName\"\n                ></st-overflow-text>\n              </info-edit>\n              <!-- 跟进教练 -->\n              <info-edit\n                type=\"select\"\n                :label=\"`跟进${$c('coach')}：`\"\n                :invisibleEdit=\"isAnyEdit\"\n                :canEdit=\"auth.bindCoach\"\n                :value=\"coach\"\n                :options=\"coachList\"\n                @confirm=\"handleEditCoach\"\n                @changeEditStatus=\"handleChangeEditStatus\"\n              >\n                <st-overflow-text\n                  max-width=\"170px\"\n                  :value=\"coachName\"\n                ></st-overflow-text>\n              </info-edit>\n            </div>\n          </div>\n        </div>\n        <div class=\"member-info-detail\">\n          <!-- 备注 -->\n          <div class=\"member-info-detail__remark\">\n            <info-edit\n              label=\"备注：\"\n              labelWidth=\"42\"\n              type=\"textarea\"\n              placeholder=\"添加备注信息\"\n              :canEdit=\"auth.editMember\"\n              :value=\"memberInfo.remark\"\n              :invisibleEdit=\"isAnyEdit\"\n              @confirm=\"handleRemarkChange\"\n              @changeEditStatus=\"handleChangeEditStatus\"\n              editBgColor=\"#f7f9fc\"\n              class=\"remark\"\n            >\n              <st-overflow-text\n                max-width=\"630px\"\n                needMaxContainerWidth\n                :defaultNoValueContent=\"auth.editMember ? '点击添加备注' : '--'\"\n                :value=\"memberInfo.remark\"\n              ></st-overflow-text>\n            </info-edit>\n          </div>\n        </div>\n      </div>\n      <!-- 入场凭证 -->\n      <div class=\"member-entrance\">\n        <div class=\"member-entrance-title\">\n          <div class=\"tip\">入场凭证</div>\n          <div v-if=\"!isEntry\">\n            <st-checkbox v-model=\"isCheckinCourse\" v-if=\"auth.entranceCheckin\">\n              凭课入场后直接签到课程\n            </st-checkbox>\n          </div>\n          <div v-else class=\"info\">\n            <div class=\"label\">入场时间：</div>\n            <div class=\"content\">{{ memberInfo.entry_time }}</div>\n          </div>\n        </div>\n        <!-- 入场 -->\n        <div v-if=\"!isEntry\">\n          <!-- 课类凭证 -->\n          <a-checkbox-group\n            v-model=\"courseProof\"\n            class=\"member-entrance-tickets mg-b16\"\n            @change=\"handleCourseProofChange\"\n            v-if=\"courseList.length\"\n          >\n            <div\n              class=\"member-entrance-ticket\"\n              v-for=\"entranceOption in courseList\"\n              :key=\"entranceOption.id\"\n            >\n              <a-checkbox\n                :value=\"entranceOption.id\"\n                :disabled=\"!entranceOption.is_able\"\n              />\n              <div\n                class=\"ticket-info\"\n                :class=\"{ disabled: !entranceOption.is_able }\"\n              >\n                <div class=\"ticket-info__base\">\n                  <div class=\"tag\">\n                    <st-tag\n                      :type=\"entranceOptionType[entranceOption.proof_type]\"\n                    ></st-tag>\n                  </div>\n                  <div class=\"name\">{{ entranceOption.proof_name }}</div>\n                  <div class=\"reason\">{{ entranceOption.reason }}</div>\n                  <div v-if=\"entranceOption.reason_hover.length\">\n                    <a-tooltip>\n                      <template slot=\"title\">\n                        <div\n                          v-for=\"(reson, index) in entranceOption.reason_hover\"\n                          :key=\"index\"\n                        >\n                          {{ reson }}\n                        </div>\n                      </template>\n                      <span class=\"st-help-tooltip-img tip\">\n                        <img\n                          height=\"14\"\n                          width=\"14\"\n                          src=\"~@/assets/img/tooltip-help.png\"\n                        />\n                      </span>\n                    </a-tooltip>\n                  </div>\n                </div>\n                <div\n                  class=\"ticket-info__detail\"\n                  v-if=\"\n                    entranceOption.proof_info &&\n                      entranceOption.proof_info.length\n                  \"\n                >\n                  <div\n                    class=\"info\"\n                    v-for=\"(info, index) in entranceOption.proof_info\"\n                    :key=\"index\"\n                  >\n                    <span class=\"label\">{{ info.key }}：</span>\n                    <span class=\"content\">{{ info.value }}</span>\n                  </div>\n                </div>\n                <!-- 备注 -->\n                <div\n                  class=\"ticket-info__remark\"\n                  v-if=\"entranceOption.description\"\n                >\n                  <info-edit\n                    label=\"备注：\"\n                    labelWidth=\"42\"\n                    type=\"textarea\"\n                    placeholder=\"添加备注信息\"\n                    :canEdit=\"\n                      handleJudgeRemarkAuth(\n                        entranceOption.description.product_type,\n                        entranceOption.auth\n                      )\n                    \"\n                    :value=\"entranceOption.description.description\"\n                    :invisibleEdit=\"isAnyEdit\"\n                    @confirm=\"\n                      e =>\n                        handleEntranceRemarkChange(\n                          e,\n                          entranceOption.description\n                        )\n                    \"\n                    @changeEditStatus=\"handleChangeEditStatus\"\n                    class=\"remark\"\n                    editBgColor=\"rgba(0,0,0,0.04)\"\n                  >\n                    <span\n                      v-if=\"!entranceOption.description.description\"\n                      class=\"ticket-info__remark-value\"\n                    >\n                      {{\n                        handleJudgeRemarkAuth(\n                          entranceOption.description.product_type,\n                          entranceOption.auth\n                        )\n                          ? '点击添加备注'\n                          : '--'\n                      }}\n                    </span>\n                    <span v-else class=\"ticket-info__remark-value\">\n                      {{ entranceOption.description.description }}\n                    </span>\n                  </info-edit>\n                </div>\n              </div>\n            </div>\n          </a-checkbox-group>\n          <!-- 卡类凭证 -->\n          <div class=\"member-entrance-tickets\" v-if=\"cardList.length\">\n            <div\n              class=\"member-entrance-ticket\"\n              v-for=\"entranceOption in cardList\"\n              :key=\"entranceOption.id\"\n              :class=\"{ temporary: entranceOption.id === 0 }\"\n            >\n              <a-radio\n                :value=\"entranceOption.id\"\n                :checked=\"entranceOption.id === cardProof\"\n                :disabled=\"!entranceOption.is_able\"\n                @change=\"handleProofChange\"\n              ></a-radio>\n              <div\n                class=\"ticket-info\"\n                :class=\"{ disabled: !entranceOption.is_able }\"\n              >\n                <div class=\"ticket-info__base\">\n                  <div class=\"tag\">\n                    <st-tag\n                      :type=\"entranceOptionType[entranceOption.proof_type]\"\n                    ></st-tag>\n                  </div>\n                  <div class=\"name\">{{ entranceOption.proof_name }}</div>\n                  <div class=\"reason\">{{ entranceOption.reason }}</div>\n                  <div v-if=\"entranceOption.reason_hover.length\">\n                    <a-tooltip>\n                      <template slot=\"title\">\n                        <div\n                          v-for=\"(reson, index) in entranceOption.reason_hover\"\n                          :key=\"index\"\n                        >\n                          {{ reson }}\n                        </div>\n                      </template>\n                      <span class=\"st-help-tooltip-img tip\">\n                        <img\n                          height=\"14\"\n                          width=\"14\"\n                          src=\"~@/assets/img/tooltip-help.png\"\n                        />\n                      </span>\n                    </a-tooltip>\n                  </div>\n                </div>\n                <div\n                  class=\"ticket-info__detail\"\n                  v-if=\"\n                    entranceOption.proof_info &&\n                      entranceOption.proof_info.length\n                  \"\n                >\n                  <div\n                    class=\"info\"\n                    v-for=\"(info, index) in entranceOption.proof_info\"\n                    :key=\"index\"\n                  >\n                    <span class=\"label\">{{ info.key }}：</span>\n                    <span class=\"content\">{{ info.value }}</span>\n                  </div>\n                </div>\n                <!-- 扣次 -->\n                <div\n                  class=\"ticket-info__deductNum\"\n                  v-if=\"\n                    entranceOption.proof_type === 2 && entranceOption.is_able\n                  \"\n                >\n                  本次入场扣次:\n                  <st-input-number\n                    :min=\"1\"\n                    :step=\"1\"\n                    :precision=\"0\"\n                    :disabled=\"!entranceOption.is_able\"\n                    v-model=\"entranceOption.deduct_num\"\n                    style=\"width: 65px\"\n                    class=\"ticket-info__deductNum-input\"\n                  ></st-input-number>\n                  次\n                </div>\n                <!-- 备注 -->\n                <div\n                  class=\"ticket-info__remark\"\n                  v-if=\"entranceOption.description\"\n                >\n                  <info-edit\n                    label=\"备注：\"\n                    labelWidth=\"42\"\n                    type=\"textarea\"\n                    placeholder=\"添加备注信息\"\n                    :canEdit=\"\n                      handleJudgeRemarkAuth(\n                        entranceOption.description.product_type,\n                        entranceOption.auth\n                      )\n                    \"\n                    :value=\"entranceOption.description.description\"\n                    :invisibleEdit=\"isAnyEdit\"\n                    @confirm=\"\n                      e =>\n                        handleEntranceRemarkChange(\n                          e,\n                          entranceOption.description\n                        )\n                    \"\n                    @changeEditStatus=\"handleChangeEditStatus\"\n                    class=\"remark\"\n                    editBgColor=\"rgba(0,0,0,0.04)\"\n                  >\n                    <span\n                      v-if=\"!entranceOption.description.description\"\n                      class=\"ticket-info__remark-value\"\n                    >\n                      {{\n                        handleJudgeRemarkAuth(\n                          entranceOption.description.product_type,\n                          entranceOption.auth\n                        )\n                          ? '点击添加备注'\n                          : '--'\n                      }}\n                    </span>\n                    <span v-else class=\"ticket-info__remark-value\">\n                      {{ entranceOption.description.description }}\n                    </span>\n                  </info-edit>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 离场 -->\n        <div class=\"member-entrance-ticket\" v-else>\n          <div class=\"ticket-info\">\n            <div class=\"ticket-info__base\">\n              <div class=\"tag\">\n                <st-tag\n                  :type=\"entranceOptionType[memberProof.proof_type]\"\n                ></st-tag>\n              </div>\n              <div class=\"name\">{{ memberProof.proof_name }}</div>\n            </div>\n            <div\n              class=\"ticket-info__detail\"\n              v-if=\"memberProof.proof_info.length\"\n            >\n              <div\n                class=\"info\"\n                v-for=\"(info, index) in memberProof.proof_info\"\n                :key=\"index\"\n              >\n                <span class=\"label\">{{ info.key }}：</span>\n                <span class=\"content\">{{ info.value }}</span>\n              </div>\n            </div>\n            <div class=\"ticket-info__remark\" v-if=\"memberProof.description\">\n              <info-edit\n                label=\"备注：\"\n                labelWidth=\"42\"\n                type=\"textarea\"\n                placeholder=\"添加备注信息\"\n                :canEdit=\"\n                  handleJudgeRemarkAuth(\n                    memberProof.description.product_type,\n                    memberAuth\n                  )\n                \"\n                :value=\"memberProof.description.description\"\n                :invisibleEdit=\"isAnyEdit\"\n                @confirm=\"\n                  e => handleEntranceRemarkChange(e, memberProof.description)\n                \"\n                @changeEditStatus=\"handleChangeEditStatus\"\n                class=\"remark\"\n                editBgColor=\"rgba(0,0,0,0.04)\"\n              >\n                <span\n                  v-if=\"!memberProof.description.description\"\n                  class=\"ticket-info__remark-value\"\n                >\n                  {{\n                    handleJudgeRemarkAuth(\n                      memberProof.description.product_type,\n                      memberAuth\n                    )\n                      ? '点击添加备注'\n                      : '--'\n                  }}\n                </span>\n                <span v-else class=\"ticket-info__remark-value\">\n                  {{ memberProof.description.description }}\n                </span>\n              </info-edit>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <template slot=\"footer\">\n      <div class=\"member-footer\">\n        <div class=\"member-footer-left\">\n          <div class=\"info\">\n            <div class=\"label\">租柜：</div>\n            <div class=\"content\">\n              <st-overflow-text\n                max-width=\"170px\"\n                :value=\"leasingCabinetText\"\n              ></st-overflow-text>\n            </div>\n          </div>\n          <div class=\"info\">\n            <div class=\"label\">临时柜：</div>\n            <div class=\"content\" v-if=\"!isEntry || isCabinetAllocation\">\n              <a-select\n                v-model=\"temporary_cabinet\"\n                placeholder=\"请选择\"\n                showSearch\n                allowClear\n                :open=\"cabinetSearchOpen\"\n                :filterOption=\"false\"\n                :defaultActiveFirstOption=\"true\"\n                @search=\"handleCabinetSearch\"\n                @blur=\"handleCabinetBlur\"\n                @focus=\"handleCabinetFocus\"\n                @inputKeydown=\"handleCabinetEnter\"\n                style=\"width: 156px\"\n                ref=\"cabinet\"\n              >\n                <a-select-option\n                  v-for=\"(item, index) in cabinetList\"\n                  :key=\"index\"\n                  :value=\"item.id\"\n                >\n                  {{ item.name }}\n                </a-select-option>\n              </a-select>\n            </div>\n            <div class=\"content\" v-else>\n              {{ temporaryCabinet.name || '暂无' }}\n            </div>\n          </div>\n        </div>\n        <div class=\"member-footer-button\">\n          <st-button\n            class=\"entryButton\"\n            type=\"primary\"\n            v-if=\"!isEntry\"\n            :disabled=\"!canEntry\"\n            :loading=\"loading.setEntrance\"\n            @click=\"onEntry\"\n          >\n            入场\n            <img src=\"~@/assets/img/icon_enter@2x.png\" alt=\"\" />\n          </st-button>\n          <st-button\n            class=\"entryButton\"\n            type=\"primary\"\n            v-if=\"isEntry\"\n            @click=\"handleAllocationCabint\"\n          >\n            分配柜子&nbsp;\n            <img\n              src=\"~@/assets/img/icon_enter@2x.png\"\n              alt=\"\"\n              v-if=\"isCabinetAllocation\"\n            />\n            <span v-else>F9</span>\n          </st-button>\n          <st-button\n            class=\"leaveButton\"\n            v-if=\"isEntry && !isCabinetAllocation\"\n            :disabled=\"!auth.checkout\"\n            @click=\"onLeaveConfirm\"\n          >\n            离场\n            <img src=\"~@/assets/img/icon_enter@2x.png\" alt=\"\" />\n          </st-button>\n        </div>\n      </div>\n    </template>\n  </st-modal>\n</template>\n<script>\nimport infoEdit from '@/views/components/info-edit#/info-edit'\nimport faceUpload from '@/views/biz-components/face-upload/face-upload'\nimport ShopAddLable from '@/views/biz-modals/shop/add-lable'\nimport { MessageService } from '@/services/message.service'\n\nimport { EntranceService } from './entrance.service'\nimport { cloneDeep, get, debounce } from 'lodash-es'\nexport default {\n  name: 'modal-shop-reception-entrance',\n  props: {\n    member_id: {\n      type: [String, Number]\n    }\n  },\n  components: { faceUpload, infoEdit },\n  modals: { ShopAddLable },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      entranceService: EntranceService\n    }\n  },\n  rxState() {\n    return {\n      cabinetList: this.entranceService.cabinetList$,\n      loading: this.entranceService.loading$,\n      page: this.entranceService.page$,\n      sellerList: this.entranceService.sellerList$,\n      coachList: this.entranceService.coachList$,\n      cardList: this.entranceService.cardList$,\n      courseList: this.entranceService.courseList$,\n      entranceList: this.entranceService.entranceList$,\n      parent_types: this.entranceService.parent_types$,\n      auth: this.entranceService.auth$\n    }\n  },\n  data() {\n    return {\n      show: false,\n      isAnyEdit: false, // 是否处于编辑状态\n      memberInfo: {}, // 会员详细信息\n      memberAuth: {},\n      photoList: [], // 会员头像\n      cabinets: [], // 柜子\n      tags: [], // 标签列表\n      proof: '', // 入场凭证\n      courseProof: [], // 课类入场凭证\n      cardProof: '', // 卡类入场凭证\n      temporary_cabinet: '', // 临时租赁柜\n      seller: '', // 销售\n      coach: '', // 教练\n      entranceOptionType: {\n        '1': 'reception-period-card',\n        '2': 'reception-number-card',\n        '3': 'reception-visit-appointment',\n        '4': 'reception-personal-course',\n        '5': 'reception-personal-team-course',\n        '6': 'reception-team-course',\n        '7': 'reception-small-course',\n        '8': 'reception-site-appointment'\n      },\n      isCheckinCourse: 1, // 凭课入场\n      cabinetSearchOpen: false, // 储物柜下拉列表开启\n      cabintSearchText: '', // 储物柜搜索词\n      isCabinetAllocation: false, // 是否在分配柜子的状态下\n      isCabinetFocus: false, // 是否为临时柜聚焦状态\n      timer: null\n    }\n  },\n  computed: {\n    // 是否已入场\n    isEntry() {\n      return (\n        this.memberInfo.entry_status &&\n        +this.memberInfo.entry_status.value === 1\n      )\n    },\n    canEntry() {\n      if (!this.auth.checkin) return false\n      if (this.courseProof.length) {\n        return true\n      }\n      return (this.cardProof && this.cardProof !== -1) || this.cardProof === 0\n    },\n    memberIsBirthday() {\n      return get(this.memberInfo, 'is_birthday', false)\n    },\n    memberType() {\n      return get(this.memberInfo, 'member_type', {})\n    },\n    memberProof() {\n      return get(this.memberInfo, 'proof', {})\n    },\n    temporaryCabinet() {\n      let temporary_cabinet = get(this.memberInfo, 'temporary_cabinet', [])\n      let cabinet = temporary_cabinet.length ? temporary_cabinet[0] : {}\n      // 临时\n      return cabinet\n    },\n    leasingCabinets() {\n      // 长期\n      return get(this.memberInfo, 'leasing_cabinet', [])\n    },\n    leasingCabinetText() {\n      if (!this.leasingCabinets.length) return '暂无'\n      return this.leasingCabinets.reduce((str, cur) => {\n        let prefix = str ? ' / ' : ''\n        str += prefix + cur.name\n        return str\n      }, '')\n    },\n    coachName() {\n      return get(this.memberInfo.coach, 'name', '')\n    },\n    sellerName() {\n      return get(this.memberInfo.seller, 'name', '')\n    },\n    cardNum() {\n      return get(this.memberInfo, 'card_num', '')\n    },\n    rfid() {\n      return get(this.memberInfo, 'rfid', '')\n    }\n  },\n  mounted() {\n    this.entranceService.init().subscribe()\n    // 获取会员详情\n    this.init()\n    document.addEventListener('keydown', this.onInputKeyPress)\n  },\n  destroyed() {\n    document.removeEventListener('keydown', this.onInputKeyPress)\n  },\n  methods: {\n    handleJudgeRemarkAuth(product_type, authList) {\n      if (Array.isArray(authList)) return false\n      // 不存在产品类型\n      if (!product_type) return false\n      // 场地预约\n      if (product_type === 8) return false\n      let mapOption = {\n        1: 'shop:sold:sold_personal_course|internal_description',\n        2: 'shop:sold:sold_small_class_course|internal_description',\n        3: 'shop:sold:sold_package_course|internal_description',\n        4: 'shop:sold:sold_deposit_card|internal_description',\n        5: 'shop:sold:sold_member_card|internal_description'\n      }\n      let auth = mapOption[product_type]\n      return !!authList[auth]\n    },\n    handleEntranceRemarkChange(description, remarkData) {\n      this.entranceService\n        .addDescription({\n          description,\n          order_id: remarkData.order_id\n        })\n        .subscribe(res => {\n          remarkData.description = description\n        })\n    },\n    handleCourseProofChange(proof) {\n      if (proof.length) {\n        // 卡课不能一起选择\n        this.cardProof = ''\n      }\n    },\n    // 分配柜子\n    handleAllocationCabint() {\n      if (!this.isCabinetAllocation) {\n        this.isCabinetAllocation = true\n        setTimeout(() => {\n          this.$refs.cabinet.$el.click()\n        }, 200)\n      } else {\n        if (!this.isCabinetFocus) {\n          if (!this.temporary_cabinet) {\n            this.messageService.error({ content: '请选择一个临时柜' })\n            setTimeout(() => {\n              this.$refs.cabinet.$el.click()\n            }, 200)\n          } else {\n            this.handleChangeUserCabint()\n          }\n        } else {\n          if (this.temporary_cabinet) {\n            this.handleChangeUserCabint()\n          }\n        }\n      }\n    },\n    handleCabinetBlur() {\n      this.cabinetSearchOpen = false\n      this.isCabinetFocus = false\n      this.cabintSearchText = ''\n    },\n    handleCabinetFocus() {\n      this.isCabinetFocus = true\n      if (!this.cabintSearchText) {\n        this.cabinetSearchOpen = false\n        return\n      }\n      if (!this.cabinetSearchOpen) this.cabinetSearchOpen = true\n    },\n    handleCabinetSearch: debounce(function(keyword) {\n      this.cabinetSearchOpen = true\n      this.cabintSearchText = keyword.trim()\n      if (!keyword.trim()) return false\n      console.log('keyword', keyword)\n      this.entranceService\n        .getCabinetList(this.member_id, {\n          keyword: this.cabintSearchText\n        })\n        .subscribe()\n    }, 100),\n    handleCabinetEnter(e) {\n      let keyCode = e.keyCode\n      let keyword = e.target.value\n      console.log('handleCabinetEnter', keyword)\n\n      if (this.loading.getCabinetList) return false\n      if (keyCode !== 13) return false\n      if (!this.isEntry) {\n        // 未入场并可以入场时\n        if (keyword) {\n          this.handleSearchCabintAndChange(keyword)\n        } else {\n          if (this.isCabinetFocus) this.onEntry()\n        }\n      } else {\n        // 已入场,在分配柜子状态下\n        if (keyword) {\n          this.handleSearchCabintAndChange(keyword)\n        } else {\n          if (!this.temporary_cabinet) {\n            this.messageService.error({ content: '请选择一个临时柜' })\n            setTimeout(() => {\n              this.$refs.cabinet.$el.click()\n            }, 200)\n          } else {\n            this.handleChangeUserCabint()\n          }\n        }\n      }\n    },\n    handleSearchCabintAndChange(keyword) {\n      this.entranceService\n        .getCabinetList(this.member_id, {\n          keyword\n        })\n        .subscribe(res => {\n          let list = res.list\n          let id = list.length ? list[0]['id'] : undefined\n          if (id) {\n            this.temporary_cabinet = id\n            console.log('id', id)\n            if (this.isEntry) {\n              this.handleChangeUserCabint()\n            } else {\n              this.onEntry()\n            }\n          } else {\n            this.messageService.error({ content: '未搜索到储物柜' })\n            clearTimeout(this.timer)\n            this.timer = setTimeout(() => {\n              this.$refs.cabinet.$children[0]['setInputValue']('')\n              this.$refs.cabinet.$el.click()\n            }, 200)\n          }\n        })\n    },\n    // 分配柜子\n    handleChangeUserCabint() {\n      this.entranceService\n        .editEntranceCabinet({\n          member_id: +this.member_id,\n          cabinet_id: this.temporary_cabinet\n        })\n        .subscribe(res => {\n          this.show = false\n          this.$emit('done')\n          // if (this.isCabinetAllocation) this.isCabinetAllocation = false\n          // this.cabintSearchText = ''\n          // this.handleGetMemberInfo()\n        })\n    },\n    onInputKeyPress(e) {\n      let keyCode = e.keyCode\n      // 判断是否在编辑状态,编辑状态下不可入离场\n      if (this.isAnyEdit) {\n        return false\n      }\n      if (keyCode === 13) {\n        if (this.isEntry) {\n          if (!this.isCabinetAllocation) {\n            this.onLeaveConfirm()\n          } else {\n            if (this.isCabinetFocus) return false\n            if (!this.temporary_cabinet) {\n              setTimeout(() => {\n                this.$refs.cabinet.$el.click()\n                this.messageService.error({ content: '请选择一个临时柜' })\n              }, 200)\n            } else {\n              this.handleChangeUserCabint()\n            }\n          }\n        } else {\n          // 在选择柜子\n          if (!this.isCabinetFocus) {\n            this.onEntry()\n          }\n        }\n      }\n      // 分配柜子\n      if (keyCode === 120) {\n        if (this.isEntry) this.handleAllocationCabint()\n      }\n    },\n    init() {\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.memberAuth = cloneDeep(res.auth)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.temporary_cabinet = get(this.temporaryCabinet, 'id', undefined)\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n        this.isCheckinCourse = res.info.is_checkin_course\n        this.proof = get(res.info.proof, 'proof_type')\n        // 获取会员入场凭证列表\n        if (!this.isEntry) {\n          this.entranceService\n            .getEntranceOptionList(this.member_id)\n            .subscribe(res => {\n              this.handleInitProof()\n              setTimeout(() => {\n                this.$refs.cabinet.$el.click()\n              }, 300)\n            })\n        } else {\n          if (this.isCabinetAllocation) {\n            setTimeout(() => {\n              this.$refs.cabinet.$el.click()\n            }, 300)\n          }\n        }\n        this.entranceService.setCabinetList(res.info.temporary_cabinet)\n        // 获取会员储物柜列表\n      })\n    },\n    handleProofChange(e) {\n      if (e.target.value) this.courseProof = []\n      this.cardProof = e.target.value\n    },\n    // 删除标签\n    handleRemoveTag(tag) {\n      this.entranceService\n        .getMemberLabelDelete({ user_id: this.member_id, tag_id: tag.id })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 获取会员详情\n    handleGetMemberInfo() {\n      this.entranceService.getMemberInfo(this.member_id).subscribe(res => {\n        this.memberInfo = cloneDeep(res.info)\n        this.memberAuth = cloneDeep(res.auth)\n        this.seller = get(res.info.seller, 'id', -1)\n        this.coach = get(res.info.coach, 'id', -1)\n        this.tags = res.info.member_tag\n        this.photoList = !Array.isArray(res.info.face_url)\n          ? [res.info.face_url]\n          : []\n\n        if (!this.isEntry) {\n          this.handleInitProof()\n        }\n      })\n    },\n    handleInitProof() {\n      if (this.courseList.length && !this.courseProof.length) {\n        let proofs = this.courseList.filter(option => option.is_able)\n        this.courseProof = proofs.length ? [proofs[0]['id']] : []\n      } else if (!this.proof) {\n        let proofs = this.cardList.filter(option => option.is_able)\n        if (proofs.length === 1 && proofs[0]['id'] === 0) {\n          this.cardProof = ''\n        } else {\n          this.cardProof = proofs.length\n            ? proofs[0]['id']\n            : this.cardList[0]['id']\n        }\n      }\n    },\n    // 头像变更\n    handlePhotoChange(list) {\n      this.entranceService\n        .editFace(this.member_id, {\n          image_face: list[0]\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 物理卡号变更\n    handleRfidChange(rfid) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num:\n            typeof this.memberInfo.card_num === 'string'\n              ? this.memberInfo.card_num.trim()\n              : this.memberInfo.card_num,\n          rfid: typeof rfid === 'string' ? rfid.trim() : rfid // 物理ID\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 实体卡号变更\n    handleCardNumChange(card_num) {\n      this.entranceService\n        .getMemberPhysicalBind(+this.member_id, {\n          card_num: typeof card_num === 'string' ? card_num.trim() : card_num,\n          rfid:\n            typeof this.memberInfo.rfid === 'string'\n              ? this.memberInfo.rfid.trim()\n              : this.memberInfo.rfid // 实体卡号\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 销售变更\n    handleEditSeller(seller_id) {\n      this.entranceService\n        .editSeller({\n          member_id: +this.member_id,\n          seller_id: seller_id === -1 ? 0 : seller_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 教练变更\n    handleEditCoach(coach_id) {\n      this.entranceService\n        .editCoach({\n          member_id: +this.member_id,\n          coach_id: coach_id === -1 ? 0 : coach_id\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 备注变更\n    handleRemarkChange(remark) {\n      this.entranceService\n        .updateMemberEdit(+this.member_id, {\n          remark\n        })\n        .subscribe(res => {\n          this.handleGetMemberInfo()\n        })\n    },\n    // 修改编辑状态\n    handleChangeEditStatus(val) {\n      this.isAnyEdit = val\n    },\n    // 入场\n    onEntry() {\n      // 编辑状态下不可入场\n      if (this.isAnyEdit) return false\n      // 未选择凭证不可入场\n      if (!this.canEntry) return false\n      let cabinet_id = this.temporary_cabinet\n        ? +this.temporary_cabinet\n        : undefined\n      let seller_id = this.seller === -1 ? undefined : +this.seller\n      let coach_id = this.coach === -1 ? undefined : +this.coach\n      let member_id = +this.member_id\n      let is_checkin_course = this.isCheckinCourse\n      let deduct_num\n      let proof = []\n      if (this.cardProof || this.cardProof === 0) {\n        console.log('this.cardProof', this.cardProof)\n        let currentProof =\n          this.cardList.length > 0 &&\n          this.cardList.filter(i => i.id === this.cardProof)[0]\n        proof = [\n          {\n            proof_value: +this.cardProof,\n            proof_type: currentProof.proof_type\n          }\n        ]\n        deduct_num = currentProof.deduct_num\n      } else {\n        proof = this.courseProof.map(i => {\n          let obj = this.courseList.filter(course => course.id === i)[0]\n          console.log('obj', obj)\n          return {\n            proof_value: obj.id,\n            proof_type: obj.proof_type\n          }\n        })\n      }\n      let reqParams = {\n        member_id,\n        seller_id,\n        coach_id,\n        cabinet_id,\n        proof,\n        is_checkin_course,\n        deduct_num\n      }\n      if (cabinet_id) {\n        reqParams = Object.assign(reqParams, {\n          cabinet_id\n        })\n      }\n      this.entranceService.setEntrance(reqParams).subscribe(res => {\n        this.show = false\n        this.messageService.success({ content: '入场成功' })\n        this.$emit('done')\n      })\n    },\n    // 离场之前的确认\n    onLeaveConfirm() {\n      if (!this.auth.checkout) return false\n      this.entranceService.getCabinetInfo(this.member_id).subscribe(res => {\n        if (res.info.is_smart) {\n          this.$error({\n            title: `当前会员有储物柜「${res.info.cabinet_area_name}」「${res.info.serial_num}」尚未归还，请先归还！`,\n            okText: '知道了'\n          })\n        } else {\n          this.onLeave()\n        }\n      })\n    },\n    // 离场\n    onLeave() {\n      this.entranceService.setEntranceLeave(this.member_id).subscribe(res => {\n        this.show = false\n        this.messageService.success({ content: '离场成功' })\n        this.$emit('done')\n      })\n    },\n    handleClose() {\n      this.show = false\n      this.$emit('done')\n    }\n  }\n}\n</script>\n"]}]}