{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/custom-decorate/product-table-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/custom-decorate/product-table-select.vue","mtime":1597895241991},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Cardcolumns, TeamCoursecolumns, PersonalCoursecolumns, SmallCoursecolumns, Packagecolumns, GroupBuycolumns, Couponcolumns, Wheelcolumns, SignUpcolumns, Coachcolumns } from \"./product-table-select.config\";\nimport { ProductTableSelectService } from \"./product-table-select.service\";\nimport { MessageService } from '@/services/message.service';\nimport { MODULE_TYPES } from '@/constants/setting/mina';\nexport default {\n  bem: {\n    b: 'custom-decorate-product-table-select'\n  },\n  props: {\n    module_type: {\n      type: Number,\n      default: 1\n    },\n    title: {\n      type: String\n    },\n    defaultSelectedRowKeys: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    defaultSelectedRows: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    idKeyName: {\n      type: String,\n      default: 'id'\n    },\n\n    /**\n     * 最大选择数量\n     */\n    max: {\n      type: Number,\n      default: 10\n    },\n    shopId: {\n      type: Number,\n      default: 0\n    }\n  },\n  serviceInject: function serviceInject() {\n    return {\n      messageService: MessageService,\n      productTableSelectService: ProductTableSelectService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.productTableSelectService.loading$,\n      list: this.productTableSelectService.list$,\n      page: this.productTableSelectService.page$,\n      cocach_type: this.productTableSelectService.cocach_type$,\n      card_type: this.productTableSelectService.card_type$,\n      package_type: this.productTableSelectService.package_type$,\n      coupon_type: this.productTableSelectService.coupon_type$\n    };\n  },\n  data: function data() {\n    return {\n      show: false,\n      MODULE_TYPES: MODULE_TYPES,\n      keywords: '',\n      selectedRowKeys: [],\n      selectedRow: [],\n      filterOption: -1,\n      courseType: 1,\n\n      /**\n       * 用于缓存选择过的 rows\n       */\n      rowMap: {}\n    };\n  },\n  computed: {\n    computedRowKey: function computedRowKey() {\n      var _MODULE_TYPES$COUPON$;\n\n      var module_type = this.module_type;\n      return (_MODULE_TYPES$COUPON$ = {}, _defineProperty(_MODULE_TYPES$COUPON$, MODULE_TYPES.COUPON, 'activity_id'), _defineProperty(_MODULE_TYPES$COUPON$, MODULE_TYPES.LUCKY_WHEEL, 'activity_id'), _defineProperty(_MODULE_TYPES$COUPON$, MODULE_TYPES.ACTIVITY, 'activity_id'), _defineProperty(_MODULE_TYPES$COUPON$, MODULE_TYPES.GROUP, 'activity_id'), _MODULE_TYPES$COUPON$)[module_type] || 'id';\n    },\n    columns: function columns() {\n      var _ModuleTypeMapFn;\n\n      var module_type = this.module_type;\n      var course_type = this.courseType;\n      var ModuleTypeMapFn = (_ModuleTypeMapFn = {}, _defineProperty(_ModuleTypeMapFn, MODULE_TYPES.COACH, Coachcolumns), _defineProperty(_ModuleTypeMapFn, MODULE_TYPES.RECOMMEND_CARD, Cardcolumns), _defineProperty(_ModuleTypeMapFn, MODULE_TYPES.RECOMMEND_PACKAGE, Packagecolumns), _defineProperty(_ModuleTypeMapFn, MODULE_TYPES.COUPON, Couponcolumns), _defineProperty(_ModuleTypeMapFn, MODULE_TYPES.LUCKY_WHEEL, Wheelcolumns), _defineProperty(_ModuleTypeMapFn, MODULE_TYPES.ACTIVITY, SignUpcolumns), _defineProperty(_ModuleTypeMapFn, MODULE_TYPES.GROUP, GroupBuycolumns), _ModuleTypeMapFn);\n      var cl;\n\n      if (module_type === MODULE_TYPES.RECOMMEND_COURSE) {\n        var fns = {\n          1: TeamCoursecolumns,\n          2: PersonalCoursecolumns,\n          3: SmallCoursecolumns\n        };\n        cl = fns[course_type];\n      } else {\n        cl = ModuleTypeMapFn[module_type];\n      }\n\n      return cl();\n    },\n    fnLoading: function fnLoading() {\n      var module_type = this.module_type;\n      var card_type = this.card_type;\n      var ModuleTypeMapFn = {\n        3: this.loading.getCoachList,\n        4: this.loading.getCardList,\n        6: this.loading.getPackageList,\n        12: this.loading.getCouponList,\n        14: this.loading.getWheelList,\n        15: this.loading.getSignUpList,\n        16: this.loading.getGroupBuyList\n      };\n      var fn;\n\n      if (module_type === MODULE_TYPES.RECOMMEND_COURSE) {\n        var fns = {\n          1: this.loading.getPersonalCourseList,\n          2: this.loading.getSmallCourseList,\n          3: this.loading.getTeamCourseList\n        };\n        fn = fns[card_type];\n      } else {\n        fn = ModuleTypeMapFn[module_type];\n      }\n\n      return fn;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      // 推荐卡项\n      if (this.module_type === MODULE_TYPES.RECOMMEND_CARD) {\n        this.filterOption = 1;\n      }\n\n      var defaultSelectedRows = this.defaultSelectedRows;\n      this.selectedRowKeys = this.defaultSelectedRowKeys;\n      this.selectedRows = defaultSelectedRows;\n      console.log('init', this.defaultSelectedRowKeys, this.defaultSelectedRows);\n      this.updateRowMap(defaultSelectedRows);\n      this.getList();\n    },\n    handleOnChangeCourseType: function handleOnChangeCourseType() {\n      this.getList();\n    },\n    handleOnSearch: function handleOnSearch() {\n      this.getList({\n        keywords: this.keywords\n      });\n    },\n    handleOnChangeOption: function handleOnChangeOption(option) {\n      var moduleTypeMap = {\n        3: 'coach_identity',\n        4: 'type',\n        6: 'type',\n        12: 'coupon_status'\n      };\n      var key = moduleTypeMap[this.module_type];\n      this.getList(_defineProperty({}, key, option));\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      console.log('changed', selectedRowKeys, selectedRows);\n      this.selectedRowKeys = selectedRowKeys;\n      this.updateRowMap(selectedRows);\n      this.selectedRows = this.calcSelectedRows(selectedRowKeys);\n    },\n    updateRowMap: function updateRowMap(selectedRows) {\n      var _this = this;\n\n      var rowMap = this.rowMap;\n\n      if (selectedRows instanceof Array) {\n        selectedRows.forEach(function (row) {\n          rowMap[row[_this.idKeyName] || row['id']] = row;\n        });\n        this.rowMap = rowMap;\n      }\n\n      console.log('rowMap', this.rowMap);\n    },\n    calcSelectedRows: function calcSelectedRows(selectedRowKeys) {\n      var _selectedRows = [];\n      var rowMap = this.rowMap;\n      selectedRowKeys.forEach(function (key) {\n        if (rowMap[key]) {\n          _selectedRows.push(rowMap[key]);\n        }\n      });\n      return _selectedRows;\n    },\n    onSubmit: function onSubmit() {\n      if (this.selectedRowKeys.length > this.max) {\n        return this.messageService.error({\n          content: '当前数量已达上限，请在删除后重新添加'\n        });\n      }\n\n      console.log('complete', {\n        selected: this.selectedRowKeys,\n        selectedRows: this.selectedRows || []\n      });\n      this.show = false;\n      this.$emit('complete', {\n        selected: this.selectedRowKeys,\n        selectedRows: this.selectedRows || []\n      });\n    },\n    onCancel: function onCancel() {\n      this.show = false;\n    },\n    onPageChange: function onPageChange(data) {\n      this.getList({\n        current_page: data.current\n      });\n    },\n    getList: function getList(query) {\n      var defaultQuery = {\n        shop_id: this.shopId,\n        module_type: this.module_type,\n        current_page: 1,\n        size: 10\n      };\n      var extraQueryMap = {\n        /**\n         * 卡项去掉全部卡项\n         */\n        4: {\n          type: this.filterOption\n        },\n        5: {\n          course_type: this.courseType\n        }\n      };\n      this.productTableSelectService.getList(Object.assign(defaultQuery, extraQueryMap[this.module_type] || {}, query)).subscribe();\n    }\n  }\n};",null]}