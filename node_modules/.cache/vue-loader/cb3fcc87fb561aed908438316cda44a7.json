{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/contract/editable-contract-number.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/contract/editable-contract-number.vue","mtime":1600926555672},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ruleOptions } from './editable-contract-number.config'\nexport default {\n  props: {\n    value: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    }\n  },\n  data() {\n    return {\n      isEdit: false,\n      contractNumber: ''\n    }\n  },\n  watch: {\n    value(val) {\n      this.setContractNumber(val)\n    }\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    }\n  },\n  methods: {\n    setContractNumber(val = '') {\n      this.form.setFieldsValue({\n        contract_number: val\n      })\n      this.contractNumber = val\n    },\n    onEdit() {\n      this.isEdit = true\n    },\n    onConfirm() {\n      this.form.validateFields(['contract_number']).then(() => {\n        this.isEdit = false\n        this.$emit('ok', this.contractNumber)\n      })\n    },\n    onChange(e) {\n      const contractNumber = e.target.value\n      this.setContractNumber(contractNumber)\n      this.$emit('input', contractNumber)\n      this.$emit('change', contractNumber)\n    }\n  }\n}\n",{"version":3,"sources":["editable-contract-number.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editable-contract-number.vue","sourceRoot":"src/views/biz-components/contract","sourcesContent":["<template>\n  <st-form-item :labelGutter=\"labelGutter\" required>\n    <template slot=\"label\">\n      合同编号\n      <st-help-tooltip id=\"TSSD001\" />\n    </template>\n    <div v-show=\"isEdit\">\n      <a-input\n        style=\"width: 240px\"\n        placeholder=\"请输入合同编号\"\n        v-decorator=\"decorators.contract_number\"\n        @change=\"onChange\"\n      />\n      <st-button class=\"mg-l8\" @click=\"onConfirm\">确定</st-button>\n    </div>\n    <div v-show=\"!isEdit\">\n      {{ value }}\n      <st-button class=\"mg-l8\" @click=\"onEdit\">编辑</st-button>\n    </div>\n  </st-form-item>\n</template>\n<script>\nimport { ruleOptions } from './editable-contract-number.config'\nexport default {\n  props: {\n    value: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    }\n  },\n  data() {\n    return {\n      isEdit: false,\n      contractNumber: ''\n    }\n  },\n  watch: {\n    value(val) {\n      this.setContractNumber(val)\n    }\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    }\n  },\n  methods: {\n    setContractNumber(val = '') {\n      this.form.setFieldsValue({\n        contract_number: val\n      })\n      this.contractNumber = val\n    },\n    onEdit() {\n      this.isEdit = true\n    },\n    onConfirm() {\n      this.form.validateFields(['contract_number']).then(() => {\n        this.isEdit = false\n        this.$emit('ok', this.contractNumber)\n      })\n    },\n    onChange(e) {\n      const contractNumber = e.target.value\n      this.setContractNumber(contractNumber)\n      this.$emit('input', contractNumber)\n      this.$emit('change', contractNumber)\n    }\n  }\n}\n</script>\n"]}]}