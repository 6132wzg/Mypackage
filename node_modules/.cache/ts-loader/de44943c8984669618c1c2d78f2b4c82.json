{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/crowd/add.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/crowd/add.service.ts","mtime":1591147717306},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { TitleService } from '@/services/title.service';\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { CrowdAPI } from '@/api/v1/crowd';\nimport { forkJoin } from 'rxjs';\n\nvar AddService = /*#__PURE__*/function () {\n  function AddService(crowdAPI, titleService) {\n    _classCallCheck(this, AddService);\n\n    this.crowdAPI = crowdAPI;\n    this.titleService = titleService;\n    this.loading$ = new State({});\n    this.crowdInfo$ = new State({});\n  } // 获取列表\n\n\n  _createClass(AddService, [{\n    key: \"getListInfo\",\n    value: function getListInfo() {\n      var _this = this;\n\n      return this.crowdAPI.getCrowdBrandField().pipe(tap(function (res) {\n        _this.crowdInfo$.commit(function () {\n          return res;\n        });\n      }));\n    } // 新增\n\n  }, {\n    key: \"setCrowdBrandField\",\n    value: function setCrowdBrandField(params) {\n      return this.crowdAPI.setCrowdBrandField(params);\n    } // 详情\n\n  }, {\n    key: \"getCrowdBrand\",\n    value: function getCrowdBrand(params) {\n      return this.crowdAPI.getCrowdBrand(params);\n    } // 编辑\n\n  }, {\n    key: \"updateCrowdBrandCrowd\",\n    value: function updateCrowdBrandCrowd(id, params) {\n      return this.crowdAPI.updateCrowdBrandCrowd(id, params);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return forkJoin(this.getListInfo());\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      if (to.meta.query.id) {\n        this.titleService.SET_TITLE('编辑人群');\n      } else {\n        this.titleService.SET_TITLE('新增人群');\n      }\n\n      return this.init();\n    }\n  }]);\n\n  return AddService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], AddService.prototype, \"setCrowdBrandField\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String, Object]), __metadata(\"design:returntype\", void 0)], AddService.prototype, \"updateCrowdBrandCrowd\", null);\n\nAddService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof CrowdAPI !== \"undefined\" && CrowdAPI) === \"function\" ? _a : Object, typeof (_b = typeof TitleService !== \"undefined\" && TitleService) === \"function\" ? _b : Object])], AddService);\nexport { AddService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/crowd/add.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,YAAT,QAA6B,0BAA7B;AACA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,QAAT,QAAyB,MAAzB;;AAGA,IAAa,UAAb;AAGE,sBAAoB,QAApB,EAAgD,YAAhD,EAA0E;AAAA;;AAAtD,SAAA,QAAA,GAAA,QAAA;AAA4B,SAAA,YAAA,GAAA,YAAA;AAFhD,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,UAAA,GAAa,IAAI,KAAJ,CAAU,EAAV,CAAb;AAC8E,GAHhF,CAIE;;;AAJF;AAAA;AAAA,kCAKa;AAAA;;AACT,aAAO,KAAK,QAAL,CAAc,kBAAd,GAAmC,IAAnC,CACL,GAAG,CAAC,UAAA,GAAG,EAAG;AACR,QAAA,KAAI,CAAC,UAAL,CAAgB,MAAhB,CAAuB;AAAA,iBAAM,GAAN;AAAA,SAAvB;AACD,OAFE,CADE,CAAP;AAKD,KAXH,CAaO;;AAbP;AAAA;AAAA,uCAcqB,MAdrB,EAcgC;AAC5B,aAAO,KAAK,QAAL,CAAc,kBAAd,CAAiC,MAAjC,CAAP;AACD,KAhBH,CAiBE;;AAjBF;AAAA;AAAA,kCAkBgB,MAlBhB,EAkB8B;AAC1B,aAAO,KAAK,QAAL,CAAc,aAAd,CAA4B,MAA5B,CAAP;AACD,KApBH,CAsBO;;AAtBP;AAAA;AAAA,0CAuBwB,EAvBxB,EAuBoC,MAvBpC,EAuB+C;AAC3C,aAAO,KAAK,QAAL,CAAc,qBAAd,CAAoC,EAApC,EAAwC,MAAxC,CAAP;AACD;AAzBH;AAAA;AAAA,2BA0BM;AACF,aAAO,QAAQ,CAAC,KAAK,WAAL,EAAD,CAAf;AACD;AA5BH;AAAA;AAAA,+BA6Ba,EA7Bb,EA6B+B,IA7B/B,EA6BiD;AAC7C,UAAI,EAAE,CAAC,IAAH,CAAQ,KAAR,CAAc,EAAlB,EAAsB;AACpB,aAAK,YAAL,CAAkB,SAAlB,CAA4B,MAA5B;AACD,OAFD,MAEO;AACL,aAAK,YAAL,CAAkB,SAAlB,CAA4B,MAA5B;AACD;;AACD,aAAO,KAAK,IAAL,EAAP;AACD;AApCH;;AAAA;AAAA,GAAA;;AAcE,UAAA,CAAA,CAFC,MAAM,EAEP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,oBAAA,E,oBAAA,EAEC,IAFD,CAAA;;AASA,UAAA,CAAA,CAFC,MAAM,EAEP,E,mCAAA,E,iDAAA,E,uCAAA,CAAA,E,oBAAA,E,uBAAA,EAEC,IAFD,CAAA;;AAvBW,UAAU,GAAA,UAAA,CAAA,CADtB,UAAU,EACY,E,qDAGS,Q,KAAQ,W,IAAR,Q,MAAQ,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAwB,YAAxB,KAAoC,WAApC,IAAwB,YAAxB,MAAoC,UAApC,GAAoC,EAApC,GAAoC,M,EAHrD,CAAA,EAAV,UAAU,CAAV;SAAA,U","sourcesContent":["import { TitleService } from '@/services/title.service'\nimport { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { CrowdAPI } from '@/api/v1/crowd'\nimport { forkJoin } from 'rxjs'\n\n@Injectable()\nexport class AddService implements Controller {\n  loading$ = new State({})\n  crowdInfo$ = new State({})\n  constructor(private crowdAPI: CrowdAPI, private titleService: TitleService) {}\n  // 获取列表\n  getListInfo() {\n    return this.crowdAPI.getCrowdBrandField().pipe(\n      tap(res => {\n        this.crowdInfo$.commit(() => res)\n      })\n    )\n  }\n  @Effect()\n  // 新增\n  setCrowdBrandField(params: any) {\n    return this.crowdAPI.setCrowdBrandField(params)\n  }\n  // 详情\n  getCrowdBrand(params: string) {\n    return this.crowdAPI.getCrowdBrand(params)\n  }\n  @Effect()\n  // 编辑\n  updateCrowdBrandCrowd(id: string, params: any) {\n    return this.crowdAPI.updateCrowdBrandCrowd(id, params)\n  }\n  init() {\n    return forkJoin(this.getListInfo())\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    if (to.meta.query.id) {\n      this.titleService.SET_TITLE('编辑人群')\n    } else {\n      this.titleService.SET_TITLE('新增人群')\n    }\n    return this.init()\n  }\n}\n"],"sourceRoot":""}]}