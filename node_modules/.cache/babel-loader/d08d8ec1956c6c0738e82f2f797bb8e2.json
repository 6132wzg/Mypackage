{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/list/all.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/list/all.vue","mtime":1596792848056},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { AllService } from \"./all.service\";\nimport { columns, CARD_TYPE } from \"./all.config.ts\";\nimport tableMixin from '@/mixins/table.mixin';\nimport CardBrandMemberRecoverSale from '@/views/biz-modals/card/brand-member/recover-sale';\nimport CardBrandMemberShelf from '@/views/biz-modals/card/brand-member/shelf';\nimport CardBrandMemberShopTable from '@/views/biz-modals/card/brand-member/shop-table';\nimport CardBrandMemberStopSale from '@/views/biz-modals/card/brand-member/stop-sale';\nimport CardShelfShops from '@/views/biz-modals/card/shelf-shops';\nimport CardSpecs from '@/views/biz-components/card/specs';\nimport { ADMISSION_RANGE, SUPPORT_SALES, SELL_STATUS } from '@/constants/card/member';\nexport default {\n  mixins: [tableMixin],\n  name: 'PageBrandProductMemberAll',\n  bem: {\n    all: 'page-brand-product-member-list-all'\n  },\n  components: {\n    CardSpecs: CardSpecs\n  },\n  modals: {\n    CardBrandMemberRecoverSale: CardBrandMemberRecoverSale,\n    CardBrandMemberShelf: CardBrandMemberShelf,\n    CardBrandMemberShopTable: CardBrandMemberShopTable,\n    CardBrandMemberStopSale: CardBrandMemberStopSale,\n    CardShelfShops: CardShelfShops\n  },\n  serviceInject: function serviceInject() {\n    return {\n      allService: AllService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list: this.allService.list$,\n      page: this.allService.page$,\n      auth: this.allService.auth$,\n      loading: this.allService.loading$,\n      publishChannel: this.allService.publishChannel$,\n      cardType: this.allService.cardType$,\n      sellStatus: this.allService.sellStatus$,\n      cardNumberTypeOptions: this.allService.cardNumberTypeOptions$\n    };\n  },\n  data: function data() {\n    return {\n      CARD_TYPE: CARD_TYPE,\n      ADMISSION_RANGE: ADMISSION_RANGE,\n      SUPPORT_SALES: SUPPORT_SALES,\n      SELL_STATUS: SELL_STATUS\n    };\n  },\n  computed: {\n    columns: columns\n  },\n  methods: {\n    /**\n     * 查看详情\n     */\n    goToCardInfo: function goToCardInfo(record) {\n      this.$router.push({\n        path: \"/brand/product/card/member/\".concat(CARD_TYPE[record.card_type.id], \"/info\"),\n        query: {\n          id: record.id\n        }\n      });\n    },\n    // 编辑\n    onEdit: function onEdit(record) {\n      var query = {\n        id: record.id\n      };\n\n      if (record.card_number_type.id === 2) {\n        query.type = 'family-card';\n      }\n\n      this.$router.push({\n        path: \"/brand/product/card/member/\".concat(this.CARD_TYPE[record.card_type.id], \"/edit\"),\n        query: query\n      });\n    },\n    // 上架\n    onShelf: function onShelf(record) {\n      var _this = this;\n\n      this.$modalRouter.push({\n        name: 'card-brand-member-shelf',\n        props: {\n          id: record.id,\n          title: \"\\u6279\\u91CF\\u4E0A\\u67B6\".concat(this.$c('member_card'))\n        },\n        on: {\n          success: function success() {\n            _this.$router.push({\n              query: _objectSpread({}, _this.$searchQuery, {\n                current_page: 1\n              })\n            });\n          }\n        }\n      });\n    },\n    // 停售\n    onStopSale: function onStopSale(record) {\n      var _this2 = this;\n\n      this.$modalRouter.push({\n        name: 'card-brand-member-stop-sale',\n        props: {\n          id: +record.id,\n          cardType: record.card_type.id,\n          cardName: record.card_name\n        },\n        on: {\n          success: function success() {\n            _this2.$router.push({\n              query: _objectSpread({}, _this2.$searchQuery, {\n                current_page: 1\n              })\n            });\n          }\n        }\n      });\n    },\n    // 恢复售卖\n    onRecoverSale: function onRecoverSale(record) {\n      var _this3 = this;\n\n      this.$modalRouter.push({\n        name: 'card-brand-member-recover-sale',\n        props: {\n          id: record.id,\n          cardType: record.card_type.id,\n          cardName: record.card_name\n        },\n        on: {\n          success: function success() {\n            _this3.$router.push({\n              query: _objectSpread({}, _this3.$searchQuery, {\n                current_page: 1\n              })\n            });\n          }\n        }\n      });\n    },\n    // 删除\n    onDelete: function onDelete(record) {\n      var _this4 = this;\n\n      this.$confirm({\n        title: '确认要删除',\n        content: \"\\u786E\\u8BA4\\u5220\\u9664\".concat(record.card_name).concat(this.$c('member_card'), \"\\uFF1F\"),\n        onOk: function onOk() {\n          return _this4.allService.deleteCard(record.id).toPromise().then(function () {\n            _this4.$router.push({\n              query: _objectSpread({}, _this4.$searchQuery, {\n                current_page: 1\n              })\n            });\n          });\n        }\n      });\n    },\n    showShelfShops: function showShelfShops(record) {\n      this.$modalRouter.push({\n        name: 'card-shelf-shops',\n        props: {\n          id: record.id,\n          title: \"\\u4E0A\\u67B6\".concat(record.shelf_upper, \"\\u5BB6/\\u4E0B\\u67B6\").concat(record.shelf_lower, \"\\u5BB6\")\n        }\n      });\n    }\n  }\n};",null]}