{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login.vue","mtime":1600926555412},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserService } from '@/services/user.service'\nimport { AuthService } from '@/services/auth.service'\nimport { LoginService } from './login.service'\nimport mobile from './login#/mobile'\nimport user from './login#/user'\nimport bind from './login#/bind'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport { throwError } from 'rxjs'\nimport Copyright from '@/views/biz-components/copyright/copyright'\n\nexport default {\n  name: 'Login',\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      userService: UserService,\n      authService: AuthService,\n      noCaptchaService: NoCaptchaService\n    }\n  },\n  data() {\n    return {\n      loginType: '',\n      typeNames: {\n        weibo: '微博登录',\n        qq: 'qq登录',\n        alipay: '支付宝登录',\n        wechat: '微信登录'\n      },\n      findPasswordTypes: [\n        { key: 'mobilefind', name: '手机找回' },\n        { key: 'emailfind', name: '邮件找回' }\n      ],\n      loginTypes: [\n        { key: 'user', name: '用户密码登录' },\n        { key: 'mobile', name: '手机验证码登录' }\n      ],\n      countryInfo: {}\n    }\n  },\n  components: {\n    LoginMobile: mobile,\n    LoginBind: bind,\n    LoginUser: user,\n    Copyright\n  },\n  rxState() {\n    return {\n      isBind: this.loginService.isBind$,\n      loading: this.loginService.loading$\n    }\n  },\n  mounted() {\n    if (this.isBind) {\n      this.loginType = 'bind'\n    } else {\n      this.loginType = 'user'\n    }\n  },\n  computed: {\n    switchLoginTypeIsShow() {\n      let types = ['user', 'mobile', 'qrcode', 'bind']\n      return types.includes(this.loginType)\n    }\n  },\n  methods: {\n    onClickChangeType(key) {\n      this.loginType = key\n    },\n    onFindPassword() {\n      this.loginType = 'mobilefind'\n    },\n    onThird(type) {\n      this.loginType = type\n    },\n    onClickBack() {\n      this.loginType = 'user'\n    },\n    bindBackLogin() {\n      if (this.loginType === 'bind') {\n        this.loginType = 'mobile'\n      }\n    },\n    onLogin(params) {\n      // params.nvc_val = window.getNVCVal()\n      const nvc_val = this.noCaptchaService.generateNVCVal()\n      if (!nvc_val) {\n        return\n      }\n      params.nvc_val = nvc_val\n      this.loginService.loginAccount(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        localStorage.clear()\n        location.href = '/'\n      }, this.loginErrorHandler)\n    },\n    loginErrorHandler(err) {\n      const code = err.response.code\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    // 切换登录方式\n    switchLoginType() {\n      this.loginType = this.loginType === 'qrcode' ? 'user' : 'qrcode'\n    },\n    onBind(event) {\n      this.loginType = 'bind'\n      this.countryInfo = event\n    },\n    onClickBind(params) {\n      this.loginService.bindPhoneForAccount(params).subscribe(res => {\n        this.countryInfo = {}\n        location.href = '/'\n      })\n    }\n  }\n}\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"login.vue","sourceRoot":"src-entries/account/views/pages/account","sourcesContent":["<template>\n  <div class=\"page-login-wapper\">\n    <img src=\"~@/assets/img/logo.png\" alt=\"三体云动\" class=\"page-login-logo\" />\n    <div class=\"page-login-ch-en\">\n      <!-- <span class=\"mg-r24 active\">中文</span>\n      <span class=\"mg-r24\">English</span> -->\n    </div>\n    <div class=\"page-login\">\n      <!-- <img src=\"~@/assets/img/login-bg-title.png\" class=\"page-login-bg-title\" /> -->\n      <!-- 密码/二维码 -->\n      <!-- <i\n        class=\"page-switch-login-type cursor-pointer\"\n        :class=\"{ 'qrcode-login': this.loginType === 'qrcode' }\"\n        @click=\"switchLoginType\"\n        v-if=\"switchLoginTypeIsShow\"\n      ></i> -->\n      <i\n        class=\"cursor-pointer\"\n        :class=\"{\n          'qrcode-login': this.loginType === 'qrcode',\n          'page-switch-bind': this.loginType === 'bind'\n        }\"\n        v-if=\"switchLoginTypeIsShow\"\n        @click=\"bindBackLogin\"\n      ></i>\n      <!-- NOTE: 功能暂未实现，不开放 -->\n      <!-- 'page-switch-login-typQe': this.loginType !== 'bind', -->\n      <section class=\"lf\">\n        <div class=\"lf-bg\"></div>\n      </section>\n      <section class=\"rt\">\n        <div\n          v-if=\"loginType === 'user' || loginType === 'mobile'\"\n          class=\"login-user-and-mobile\"\n        >\n          <ul class=\"page-login-tabs mg-b24\">\n            <li\n              v-for=\"item in loginTypes\"\n              :key=\"item.key\"\n              class=\"page-login-tab-item\"\n              :class=\"{ 'page-login-tab-item--active': item.key === loginType }\"\n            >\n              <span @click.stop=\"onClickChangeType(item.key)\">\n                {{ item.name }}\n              </span>\n            </li>\n          </ul>\n          <login-user\n            @findps=\"onFindPassword\"\n            @third=\"onThird\"\n            @login=\"onLogin\"\n            v-if=\"loginType === 'user'\"\n          ></login-user>\n          <login-mobile\n            v-if=\"loginType === 'mobile'\"\n            @bind=\"onBind\"\n            :value=\"countryInfo\"\n          ></login-mobile>\n        </div>\n\n        <div v-if=\"loginType === 'bind'\">\n          <login-bind :value=\"countryInfo\" @click=\"onClickBind\"></login-bind>\n        </div>\n\n        <div\n          v-if=\"loginType === 'mobilefind' || loginType === 'emailfind'\"\n          class=\"login-user-and-mobile\"\n        >\n          <ul class=\"page-login-tabs mg-b24\">\n            <li\n              v-for=\"item in findPasswordTypes\"\n              :key=\"item.key\"\n              class=\"page-login-tab-item\"\n              :class=\"{ 'page-login-tab-item--active': item.key === loginType }\"\n            >\n              <span @click.stop=\"onClickChangeType(item.key)\">\n                {{ item.name }}\n              </span>\n            </li>\n          </ul>\n          <login-mobile v-show=\"loginType === 'mobilefind'\"></login-mobile>\n          <div v-show=\"loginType === 'emailfind'\">邮件找回表单</div>\n          <st-button @click=\"onClickBack\">返回</st-button>\n        </div>\n        <!-- <div v-else-if=\"loginType==='weibo' || loginType==='qq' || loginType==='alipay' || loginType==='wechat'\" class=\"page-login-wechat\">\n          <ul class=\"page-login-tabs mg-b24\">\n            <li  class=\"page-login-tab-item page-login-tab-item-wechat pd-y8\"><span>{{typeNames[loginType]}}</span></li>\n          </ul>\n          <login-third @back=\"loginType = 'user'\"></login-third>\n        </div> -->\n      </section>\n    </div>\n    <div class=\"page-login-footer\">\n      <p class=\"page-login-footer__text\">\n        三体云动Pro&nbsp;·&nbsp;用智能让世界更健康\n      </p>\n      <p class=\"page-login-footer__text page-login-footer__copyright\">\n        <copyright />\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { UserService } from '@/services/user.service'\nimport { AuthService } from '@/services/auth.service'\nimport { LoginService } from './login.service'\nimport mobile from './login#/mobile'\nimport user from './login#/user'\nimport bind from './login#/bind'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport { throwError } from 'rxjs'\nimport Copyright from '@/views/biz-components/copyright/copyright'\n\nexport default {\n  name: 'Login',\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      userService: UserService,\n      authService: AuthService,\n      noCaptchaService: NoCaptchaService\n    }\n  },\n  data() {\n    return {\n      loginType: '',\n      typeNames: {\n        weibo: '微博登录',\n        qq: 'qq登录',\n        alipay: '支付宝登录',\n        wechat: '微信登录'\n      },\n      findPasswordTypes: [\n        { key: 'mobilefind', name: '手机找回' },\n        { key: 'emailfind', name: '邮件找回' }\n      ],\n      loginTypes: [\n        { key: 'user', name: '用户密码登录' },\n        { key: 'mobile', name: '手机验证码登录' }\n      ],\n      countryInfo: {}\n    }\n  },\n  components: {\n    LoginMobile: mobile,\n    LoginBind: bind,\n    LoginUser: user,\n    Copyright\n  },\n  rxState() {\n    return {\n      isBind: this.loginService.isBind$,\n      loading: this.loginService.loading$\n    }\n  },\n  mounted() {\n    if (this.isBind) {\n      this.loginType = 'bind'\n    } else {\n      this.loginType = 'user'\n    }\n  },\n  computed: {\n    switchLoginTypeIsShow() {\n      let types = ['user', 'mobile', 'qrcode', 'bind']\n      return types.includes(this.loginType)\n    }\n  },\n  methods: {\n    onClickChangeType(key) {\n      this.loginType = key\n    },\n    onFindPassword() {\n      this.loginType = 'mobilefind'\n    },\n    onThird(type) {\n      this.loginType = type\n    },\n    onClickBack() {\n      this.loginType = 'user'\n    },\n    bindBackLogin() {\n      if (this.loginType === 'bind') {\n        this.loginType = 'mobile'\n      }\n    },\n    onLogin(params) {\n      // params.nvc_val = window.getNVCVal()\n      const nvc_val = this.noCaptchaService.generateNVCVal()\n      if (!nvc_val) {\n        return\n      }\n      params.nvc_val = nvc_val\n      this.loginService.loginAccount(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        localStorage.clear()\n        location.href = '/'\n      }, this.loginErrorHandler)\n    },\n    loginErrorHandler(err) {\n      const code = err.response.code\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    // 切换登录方式\n    switchLoginType() {\n      this.loginType = this.loginType === 'qrcode' ? 'user' : 'qrcode'\n    },\n    onBind(event) {\n      this.loginType = 'bind'\n      this.countryInfo = event\n    },\n    onClickBind(params) {\n      this.loginService.bindPhoneForAccount(params).subscribe(res => {\n        this.countryInfo = {}\n        location.href = '/'\n      })\n    }\n  }\n}\n</script>\n"]}]}