{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/custom-decorate/product-table-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/custom-decorate/product-table-select.vue","mtime":1597895241991},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Cardcolumns,\n  TeamCoursecolumns,\n  PersonalCoursecolumns,\n  SmallCoursecolumns,\n  Packagecolumns,\n  GroupBuycolumns,\n  Couponcolumns,\n  Wheelcolumns,\n  SignUpcolumns,\n  Coachcolumns\n} from './product-table-select.config'\nimport { ProductTableSelectService } from './product-table-select.service'\nimport { MessageService } from '@/services/message.service'\nimport { MODULE_TYPES } from '@/constants/setting/mina'\nexport default {\n  bem: {\n    b: 'custom-decorate-product-table-select'\n  },\n  props: {\n    module_type: {\n      type: Number,\n      default: 1\n    },\n    title: {\n      type: String\n    },\n    defaultSelectedRowKeys: {\n      type: Array,\n      default: () => []\n    },\n    defaultSelectedRows: {\n      type: Array,\n      default: () => []\n    },\n    idKeyName: {\n      type: String,\n      default: 'id'\n    },\n    /**\n     * 最大选择数量\n     */\n    max: {\n      type: Number,\n      default: 10\n    },\n    shopId: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      productTableSelectService: ProductTableSelectService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.productTableSelectService.loading$,\n      list: this.productTableSelectService.list$,\n      page: this.productTableSelectService.page$,\n      cocach_type: this.productTableSelectService.cocach_type$,\n      card_type: this.productTableSelectService.card_type$,\n      package_type: this.productTableSelectService.package_type$,\n      coupon_type: this.productTableSelectService.coupon_type$\n    }\n  },\n\n  data() {\n    return {\n      show: false,\n      MODULE_TYPES,\n      keywords: '',\n      selectedRowKeys: [],\n      selectedRow: [],\n      filterOption: -1,\n      courseType: 1,\n      /**\n       * 用于缓存选择过的 rows\n       */\n      rowMap: {}\n    }\n  },\n  computed: {\n    computedRowKey() {\n      const { module_type } = this\n      return (\n        {\n          [MODULE_TYPES.COUPON]: 'activity_id',\n          [MODULE_TYPES.LUCKY_WHEEL]: 'activity_id',\n          [MODULE_TYPES.ACTIVITY]: 'activity_id',\n          [MODULE_TYPES.GROUP]: 'activity_id'\n        }[module_type] || 'id'\n      )\n    },\n    columns() {\n      let module_type = this.module_type\n      let course_type = this.courseType\n      let ModuleTypeMapFn = {\n        [MODULE_TYPES.COACH]: Coachcolumns,\n        [MODULE_TYPES.RECOMMEND_CARD]: Cardcolumns,\n        [MODULE_TYPES.RECOMMEND_PACKAGE]: Packagecolumns,\n        [MODULE_TYPES.COUPON]: Couponcolumns,\n        [MODULE_TYPES.LUCKY_WHEEL]: Wheelcolumns,\n        [MODULE_TYPES.ACTIVITY]: SignUpcolumns,\n        [MODULE_TYPES.GROUP]: GroupBuycolumns\n      }\n      let cl\n      if (module_type === MODULE_TYPES.RECOMMEND_COURSE) {\n        let fns = {\n          1: TeamCoursecolumns,\n          2: PersonalCoursecolumns,\n          3: SmallCoursecolumns\n        }\n        cl = fns[course_type]\n      } else {\n        cl = ModuleTypeMapFn[module_type]\n      }\n      return cl()\n    },\n    fnLoading() {\n      let module_type = this.module_type\n      let card_type = this.card_type\n      let ModuleTypeMapFn = {\n        3: this.loading.getCoachList,\n        4: this.loading.getCardList,\n        6: this.loading.getPackageList,\n        12: this.loading.getCouponList,\n        14: this.loading.getWheelList,\n        15: this.loading.getSignUpList,\n        16: this.loading.getGroupBuyList\n      }\n      let fn\n      if (module_type === MODULE_TYPES.RECOMMEND_COURSE) {\n        let fns = {\n          1: this.loading.getPersonalCourseList,\n          2: this.loading.getSmallCourseList,\n          3: this.loading.getTeamCourseList\n        }\n        fn = fns[card_type]\n      } else {\n        fn = ModuleTypeMapFn[module_type]\n      }\n      return fn\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      // 推荐卡项\n      if (this.module_type === MODULE_TYPES.RECOMMEND_CARD) {\n        this.filterOption = 1\n      }\n      const { defaultSelectedRows } = this\n      this.selectedRowKeys = this.defaultSelectedRowKeys\n      this.selectedRows = defaultSelectedRows\n      console.log('init', this.defaultSelectedRowKeys, this.defaultSelectedRows)\n      this.updateRowMap(defaultSelectedRows)\n      this.getList()\n    },\n    handleOnChangeCourseType() {\n      this.getList()\n    },\n    handleOnSearch() {\n      this.getList({\n        keywords: this.keywords\n      })\n    },\n    handleOnChangeOption(option) {\n      let moduleTypeMap = {\n        3: 'coach_identity',\n        4: 'type',\n        6: 'type',\n        12: 'coupon_status'\n      }\n      let key = moduleTypeMap[this.module_type]\n      this.getList({\n        [key]: option\n      })\n    },\n    onSelectChange(selectedRowKeys, selectedRows) {\n      console.log('changed', selectedRowKeys, selectedRows)\n      this.selectedRowKeys = selectedRowKeys\n      this.updateRowMap(selectedRows)\n      this.selectedRows = this.calcSelectedRows(selectedRowKeys)\n    },\n    updateRowMap(selectedRows) {\n      const rowMap = this.rowMap\n      if (selectedRows instanceof Array) {\n        selectedRows.forEach(row => {\n          rowMap[row[this.idKeyName] || row['id']] = row\n        })\n        this.rowMap = rowMap\n      }\n      console.log('rowMap', this.rowMap)\n    },\n    calcSelectedRows(selectedRowKeys) {\n      const _selectedRows = []\n      const { rowMap } = this\n      selectedRowKeys.forEach(key => {\n        if (rowMap[key]) {\n          _selectedRows.push(rowMap[key])\n        }\n      })\n      return _selectedRows\n    },\n    onSubmit() {\n      if (this.selectedRowKeys.length > this.max) {\n        return this.messageService.error({\n          content: '当前数量已达上限，请在删除后重新添加'\n        })\n      }\n      console.log('complete', {\n        selected: this.selectedRowKeys,\n        selectedRows: this.selectedRows || []\n      })\n      this.show = false\n      this.$emit('complete', {\n        selected: this.selectedRowKeys,\n        selectedRows: this.selectedRows || []\n      })\n    },\n    onCancel() {\n      this.show = false\n    },\n    onPageChange(data) {\n      this.getList({\n        current_page: data.current\n      })\n    },\n    getList(query) {\n      const defaultQuery = {\n        shop_id: this.shopId,\n        module_type: this.module_type,\n        current_page: 1,\n        size: 10\n      }\n      const extraQueryMap = {\n        /**\n         * 卡项去掉全部卡项\n         */\n        4: {\n          type: this.filterOption\n        },\n        5: {\n          course_type: this.courseType\n        }\n      }\n\n      this.productTableSelectService\n        .getList(\n          Object.assign(\n            defaultQuery,\n            extraQueryMap[this.module_type] || {},\n            query\n          )\n        )\n        .subscribe()\n    }\n  }\n}\n",null]}