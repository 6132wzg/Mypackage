{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/user-level.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/user-level.service.ts","mtime":1591147717348},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { SettingMemberApi, UpdateInput } from '@/api/v1/setting/member';\nimport { AuthService } from '@/services/auth.service';\n\nvar UserLevelService = /*#__PURE__*/function () {\n  function UserLevelService(settingMemberApi, authService) {\n    _classCallCheck(this, UserLevelService);\n\n    this.settingMemberApi = settingMemberApi;\n    this.authService = authService;\n    this.list$ = new State([]);\n    this.info$ = new State({});\n    this.loading$ = new State({});\n    this.auth$ = this.authService.authMap$({\n      get: 'brand:setting:member_level|get',\n      edit: 'brand:setting:member_level|edit'\n    });\n  }\n\n  _createClass(UserLevelService, [{\n    key: \"getList\",\n    value: function getList() {\n      var _this = this;\n\n      return this.settingMemberApi.getList().pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo() {\n      var _this2 = this;\n\n      return this.settingMemberApi.getInfo().pipe(tap(function (res) {\n        _this2.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"update\",\n    value: function update(params) {\n      return this.settingMemberApi.update(params);\n    }\n  }, {\n    key: \"dataFilter\",\n    value: function dataFilter(info) {\n      var condition = info.condition,\n          rights = info.rights;\n      var checkedCondition = [];\n      var checkedRights = [];\n      condition.forEach(function (item) {\n        if (item.checked) {\n          checkedCondition.push(item.condition_id);\n        }\n      });\n      rights.forEach(function (item) {\n        if (item.checked) {\n          checkedRights.push(item.rights_id);\n        }\n      });\n      return {\n        condition: {\n          list: condition,\n          checked: checkedCondition\n        },\n        rights: {\n          list: rights,\n          checked: checkedRights\n        }\n      };\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from, next) {\n      var _this3 = this;\n\n      var type = to.meta.query.type;\n      this.getList().subscribe(function () {\n        if (type === 'edit') {\n          _this3.getInfo().subscribe(next, function () {\n            next(false);\n          });\n        } else {\n          next();\n        }\n      }, function () {\n        next(false);\n      });\n    }\n  }]);\n\n  return UserLevelService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof UpdateInput !== \"undefined\" && UpdateInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], UserLevelService.prototype, \"update\", null);\n\nUserLevelService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof SettingMemberApi !== \"undefined\" && SettingMemberApi) === \"function\" ? _b : Object, typeof (_c = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _c : Object])], UserLevelService);\nexport { UserLevelService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/user-level.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { SettingMemberApi, UpdateInput } from '@/api/v1/setting/member'\nimport { AuthService } from '@/services/auth.service'\n\n@Injectable()\nexport class UserLevelService {\n  list$ = new State<object[]>([])\n  info$ = new State<object>({})\n  loading$ = new State({})\n  auth$ = this.authService.authMap$({\n    get: 'brand:setting:member_level|get',\n    edit: 'brand:setting:member_level|edit'\n  })\n  constructor(\n    private settingMemberApi: SettingMemberApi,\n    private authService: AuthService\n  ) {}\n  getList() {\n    return this.settingMemberApi.getList().pipe(\n      tap(res => {\n        this.list$.commit(() => res.list)\n      })\n    )\n  }\n  getInfo() {\n    return this.settingMemberApi.getInfo().pipe(\n      tap(res => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n  @Effect()\n  update(params: UpdateInput) {\n    return this.settingMemberApi.update(params)\n  }\n  protected dataFilter(info: any) {\n    const { condition, rights } = info\n    const checkedCondition: number[] = []\n    const checkedRights: number[] = []\n    condition.forEach((item: any) => {\n      if (item.checked) {\n        checkedCondition.push(item.condition_id)\n      }\n    })\n    rights.forEach((item: any) => {\n      if (item.checked) {\n        checkedRights.push(item.rights_id)\n      }\n    })\n    return {\n      condition: {\n        list: condition,\n        checked: checkedCondition\n      },\n      rights: {\n        list: rights,\n        checked: checkedRights\n      }\n    }\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute, next: any) {\n    const { type } = to.meta.query\n    this.getList().subscribe(\n      () => {\n        if (type === 'edit') {\n          this.getInfo().subscribe(next, () => {\n            next(false)\n          })\n        } else {\n          next()\n        }\n      },\n      () => {\n        next(false)\n      }\n    )\n  }\n}\n"],"sourceRoot":""}]}