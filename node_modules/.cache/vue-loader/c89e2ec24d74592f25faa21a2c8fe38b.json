{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-stat-order-facet-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-stat-order-facet-bar.vue","mtime":1591147717120},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport chartMixin from './mixin'\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport Vue from 'vue'\nimport StHelpTooltip from '@/views/components/help-tooltip/help-tooltip'\nimport { debounce } from 'lodash-es'\nexport default {\n  mixins: [chartMixin],\n  data() {\n    return {\n      dataSource: []\n    }\n  },\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    fields: {\n      type: Array,\n      default: () => ['客单价', '成单数量']\n    },\n    colors: {\n      type: Array,\n      default: () => ['#3F66F6', '#06DB8C']\n      // default: () => ['l(270) 0:#3F66F6 1:#3F66F6', 'l(270) 0:#06DB8C 1:#3F66F6']\n    },\n    height: {\n      type: Number,\n      default: 280\n    }\n  },\n  mounted() {\n    window.addEventListener('resize', debounce(this.mountedTooltip, 200))\n  },\n  methods: {\n    mountedTooltip() {\n      setTimeout(this.changeData, 400)\n    },\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv\n        .transform({\n          type: 'fold',\n          fields: this.fields,\n          key: 'type',\n          value: 'value'\n        })\n        .transform({\n          type: 'map',\n          callback(row) {\n            row.value = row.value ? +row.value : 0\n            return row\n          }\n        })\n    },\n    initChart() {\n      let tooltipEl = new Vue({\n        components: {\n          StHelpTooltip\n        },\n        render: h => <st-help-tooltip />\n      }).$mount().$el\n      this.chart = new Chart({\n        container: this.$el,\n        padding: [0, 0, 18, 70],\n        renderer: 'svg',\n        forceFit: true,\n        height: this.height\n      })\n\n      this.chart.source(this.dv)\n      // 图例位置\n      this.chart.legend({\n        position: 'bottom-center',\n        useHtml: true,\n        itemTpl: (name, color, checked, index) => {\n          let idx = 0\n          if (name === '成单数量') {\n            idx = 1\n          }\n          return (\n            `<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">` +\n            `<i class=\"g2-legend-marker\" style=\"background-color:{color};\"></i>` +\n            `<span class=\"g2-legend-text\">${name}&nbsp;<span id='legend-${idx}' class=\"test test1\"></span></span>` +\n            `</li>`\n          )\n        }\n      })\n      // 图表分面 相当于两个柱状图\n      this.chart.facet('mirror', {\n        fields: ['type'],\n        padding: 4,\n        showTitle: false,\n        transpose: true,\n\n        eachView: (view, facet) => {\n          const facetIndex = facet.colIndex\n          view.axis('group', {\n            position: 'top',\n            label: {\n              offset: 70,\n              textStyle: {\n                fill: '#3E4D5C',\n                fontSize: 12\n              },\n              htmlTemplate: (text, item, index) => {\n                // 增加tooltipEl.outerHTML，防止mounted未完成导致的空白闪烁\n                return `<span style=\"width:70px;display:block;\">${text}</span>`\n              }\n            },\n            tickLine: {\n              alignWithLabel: false,\n              length: 0\n            },\n            line: {\n              lineWidth: 0\n            }\n          })\n\n          const color = this.colors[facetIndex]\n          view.axis('value', false)\n\n          const len = this.data.length\n          for (let i = 0; i < len; i++) {\n            const yaxis1 = 2.3 + (100 / len) * i\n            const yaxis2 = 12.3 + (100 / len) * i\n            view.guide().region({\n              start: ['0%', `${yaxis1}%`], // 辅助框起始位置，值为原始数据值，支持 callback\n              end: ['100%', `${yaxis2}%`], // 辅助框结束位置，值为原始数据值，支持 callback\n              style: {\n                lineWidth: 0, // 辅助框的边框宽度\n                fill: '#E9EDF2', // 辅助框填充的颜色\n                fillOpacity: 1, // 辅助框的背景透明度\n                stroke: '#ccc' // 辅助框的边框颜色设置\n              }\n            })\n          }\n          view\n            .interval()\n            .position('group*value')\n            .tooltip('type*value', (t, v) => {\n              return { name: t, value: v }\n            })\n            .color('type', value => {\n              return color\n            })\n            .size(24)\n            .opacity(1)\n            .label('value', val => {\n              const maxValue = this.dv.max('value')\n\n              let offset = -4\n              let textAlign = facetIndex === 1 ? 'end' : 'start'\n              let fill = 'white'\n              const shouldPutLeft = val / maxValue < 0.1\n              if (shouldPutLeft) {\n                offset = 4\n                textAlign = facetIndex === 1 ? 'start' : 'end'\n                fill = '#3E4D5C'\n              }\n\n              return {\n                offset: offset,\n                textStyle: {\n                  fill,\n                  textAlign: textAlign\n                }\n              }\n            })\n        }\n      })\n      this.chart.render()\n      this.changeData()\n    },\n    changeData() {\n      new Vue({\n        components: {\n          StHelpTooltip\n        },\n        render: h => <st-help-tooltip id=\"TBDAO001\" />\n      }).$mount('#legend-0')\n      new Vue({\n        components: {\n          StHelpTooltip\n        },\n        render: h => <st-help-tooltip id=\"TBDAO002\" />\n      }).$mount('#legend-1')\n    }\n  }\n}\n",null]}