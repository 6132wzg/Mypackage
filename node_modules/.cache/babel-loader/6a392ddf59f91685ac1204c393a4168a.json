{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/utils/tree.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/utils/tree.js","mtime":1591147717094},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport { merge, omit } from 'lodash-es';\n\nvar TreeNode = /*#__PURE__*/function () {\n  function TreeNode(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TreeNode);\n\n    this.data = omit(data, [options.children]);\n    this.id = data[options.id];\n    this.name = data[options.name];\n    this.parent = null;\n    this.children = [];\n  }\n\n  _createClass(TreeNode, [{\n    key: \"setParent\",\n    value: function setParent(parentNode) {\n      this.parent = parentNode;\n    }\n  }]);\n\n  return TreeNode;\n}();\n\nexport var Tree = /*#__PURE__*/function () {\n  function Tree() {\n    var treeData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Tree);\n\n    this.options = merge({\n      id: 'id',\n      children: 'children',\n      name: 'name'\n    }, options);\n    this._treeData = treeData;\n    this._tree = [];\n\n    this._init();\n  }\n\n  _createClass(Tree, [{\n    key: \"_init\",\n    value: function _init() {\n      var _this = this;\n\n      this._tree = [];\n\n      var walk = function walk(tree) {\n        var parentTreeNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var childrenInsert = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        tree.forEach(function (data) {\n          var treeNode = new TreeNode(data, _this.options);\n          treeNode.setParent(parentTreeNode);\n          childrenInsert.push(treeNode);\n\n          if (data.children && data.children.length) {\n            walk(data.children, treeNode, treeNode.children);\n          }\n        });\n      };\n\n      walk(this._treeData, null, this._tree);\n      console.log(this._tree);\n    }\n  }, {\n    key: \"findNodeById\",\n    value: function findNodeById(id) {\n      var find = undefined;\n\n      var walk = function walk(tree) {\n        tree.forEach(function (node) {\n          if (node.id === id) {\n            find = node;\n          }\n\n          if (!find && node.children && node.children.length) {\n            walk(node.children);\n          }\n        });\n      };\n\n      walk(this._tree);\n      return find;\n    }\n  }]);\n\n  return Tree;\n}();",null]}