{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/api/v1/setting/hardware.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/api/v1/setting/hardware.ts","mtime":1591147717024},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from '@/api/api';\nexport var HareWareApi = /*#__PURE__*/function (_Api) {\n  _inherits(HareWareApi, _Api);\n\n  var _super = _createSuper(HareWareApi);\n\n  function HareWareApi() {\n    _classCallCheck(this, HareWareApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HareWareApi, [{\n    key: \"getGlobalInfo\",\n    //全局详情\n    value: function getGlobalInfo() {\n      return this.http.get('/v1/setting/hardware/global');\n    } //\n\n  }, {\n    key: \"getStaffList\",\n    value: function getStaffList(query) {\n      return this.http.get('/v1/setting/hardware/area/staff/options?keyword=' + query);\n    } // 区域列表\n\n  }, {\n    key: \"getAreaList\",\n    value: function getAreaList(query) {\n      return this.http.get('/v1/setting/hardware/area', {\n        query: query\n      });\n    } // 单区域列表\n\n  }, {\n    key: \"getSingleAreaList\",\n    value: function getSingleAreaList() {\n      return this.http.get('/v1/setting/hardware/area/options');\n    } // 黑名单列表\n\n  }, {\n    key: \"getBlackList\",\n    value: function getBlackList(query) {\n      return this.http.get('/v1/setting/hardware/global/black', {\n        query: query\n      });\n    } // 模糊搜索\n\n  }, {\n    key: \"onSearchKeyWords\",\n    value: function onSearchKeyWords(query) {\n      return this.http.get('/v1/setting/hardware/global/options?keyword=' + query);\n    } // 黑名单设置\n\n  }, {\n    key: \"postBlackListSetting\",\n    value: function postBlackListSetting(params) {\n      return this.http.put('/v1/setting/hardware/global/black', {\n        params: params\n      });\n    } // 白名单列表\n\n  }, {\n    key: \"getWhiteList\",\n    value: function getWhiteList(query) {\n      return this.http.get('/v1/setting/hardware/area/staff/options?keyword=' + query);\n    } //区域设置\n\n  }, {\n    key: \"putAreaSettingParams\",\n    value: function putAreaSettingParams(params) {\n      return this.http.put('/v1/setting/hardware/area', {\n        params: params\n      });\n    } // 全局设置\n\n  }, {\n    key: \"postGlobalSetting\",\n    value: function postGlobalSetting(params) {\n      return this.http.put('/v1/setting/hardware/global', {\n        params: params\n      });\n    } // 区域设置详情\n\n  }, {\n    key: \"getAreaInfo\",\n    value: function getAreaInfo(query) {\n      return this.http.get('/v1/setting/hardware/area/info/' + query);\n    }\n  }]);\n\n  return HareWareApi;\n}(Api);",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/api/v1/setting/hardware.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,SAAS,GAAT,QAAoB,WAApB;AAEA,WAAa,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACE;AADF,oCAEe;AACX,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,6BAAd,CAAP;AACD,KAJH,CAKE;;AALF;AAAA;AAAA,iCAMe,KANf,EAMyB;AACrB,aAAO,KAAK,IAAL,CAAU,GAAV,CACL,qDAAqD,KADhD,CAAP;AAGD,KAVH,CAWE;;AAXF;AAAA;AAAA,gCAYc,KAZd,EAYqC;AACjC,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,2BAAd,EAA2C;AAAE,QAAA,KAAK,EAAL;AAAF,OAA3C,CAAP;AACD,KAdH,CAeE;;AAfF;AAAA;AAAA,wCAgBmB;AACf,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,mCAAd,CAAP;AACD,KAlBH,CAmBE;;AAnBF;AAAA;AAAA,iCAoBe,KApBf,EAoBuC;AACnC,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,mCAAd,EAAmD;AACxD,QAAA,KAAK,EAAL;AADwD,OAAnD,CAAP;AAGD,KAxBH,CAyBE;;AAzBF;AAAA;AAAA,qCA0BmB,KA1BnB,EA0BiD;AAC7C,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,iDAAiD,KAA/D,CAAP;AACD,KA5BH,CA6BE;;AA7BF;AAAA;AAAA,yCA8BuB,MA9BvB,EA8BkD;AAC9C,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,mCAAd,EAAmD;AACxD,QAAA,MAAM,EAAN;AADwD,OAAnD,CAAP;AAGD,KAlCH,CAmCE;;AAnCF;AAAA;AAAA,iCAoCe,KApCf,EAoCuC;AACnC,aAAO,KAAK,IAAL,CAAU,GAAV,CACL,qDAAqD,KADhD,CAAP;AAGD,KAxCH,CAyCE;;AAzCF;AAAA;AAAA,yCA0CuB,MA1CvB,EA0CmD;AAC/C,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,2BAAd,EAA2C;AAAE,QAAA,MAAM,EAAN;AAAF,OAA3C,CAAP;AACD,KA5CH,CA6CE;;AA7CF;AAAA;AAAA,sCA8CoB,MA9CpB,EA8CmD;AAC/C,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,6BAAd,EAA6C;AAClD,QAAA,MAAM,EAAN;AADkD,OAA7C,CAAP;AAGD,KAlDH,CAmDE;;AAnDF;AAAA;AAAA,gCAoDc,KApDd,EAoDqC;AACjC,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,oCAAoC,KAAlD,CAAP;AACD;AAtDH;;AAAA;AAAA,EAAiC,GAAjC","sourcesContent":["import { Api } from '@/api/api'\n\nexport class HareWareApi extends Api {\n  //全局详情\n  getGlobalInfo() {\n    return this.http.get('/v1/setting/hardware/global')\n  }\n  //\n  getStaffList(query: any) {\n    return this.http.get(\n      '/v1/setting/hardware/area/staff/options?keyword=' + query\n    )\n  }\n  // 区域列表\n  getAreaList(query: GetAreaListQuery) {\n    return this.http.get('/v1/setting/hardware/area', { query })\n  }\n  // 单区域列表\n  getSingleAreaList() {\n    return this.http.get('/v1/setting/hardware/area/options')\n  }\n  // 黑名单列表\n  getBlackList(query: GetBlackListQuery) {\n    return this.http.get('/v1/setting/hardware/global/black', {\n      query\n    })\n  }\n  // 模糊搜索\n  onSearchKeyWords(query: GetBlackListSelectQuery) {\n    return this.http.get('/v1/setting/hardware/global/options?keyword=' + query)\n  }\n  // 黑名单设置\n  postBlackListSetting(params: PostBlackListParams) {\n    return this.http.put('/v1/setting/hardware/global/black', {\n      params\n    })\n  }\n  // 白名单列表\n  getWhiteList(query: GetWhiteListQuery) {\n    return this.http.get(\n      '/v1/setting/hardware/area/staff/options?keyword=' + query\n    )\n  }\n  //区域设置\n  putAreaSettingParams(params: PutAreaSettingParams) {\n    return this.http.put('/v1/setting/hardware/area', { params })\n  }\n  // 全局设置\n  postGlobalSetting(params: PostGlobalSettingParams) {\n    return this.http.put('/v1/setting/hardware/global', {\n      params\n    })\n  }\n  // 区域设置详情\n  getAreaInfo(query: GetAreaInfoQuery) {\n    return this.http.get('/v1/setting/hardware/area/info/' + query)\n  }\n}\n\nexport interface GetAreaListQuery {\n  page?: number\n  size?: number\n}\nexport interface GetBlackListQuery {\n  page?: number\n  size?: number\n}\nexport interface GetWhiteListQuery {\n  page?: number\n  size?: number\n}\nexport interface GetBlackListSelectQuery {\n  mobile: string\n}\nexport interface PostBlackListParams {\n  black_list: object\n}\nexport interface PutAreaSettingParams {\n  black_list: object\n}\nexport interface PostGlobalSettingParams {\n  charge_type: number\n  charge_value: number\n}\nexport interface GetAreaInfoQuery {\n  area_id: number\n}\n"],"sourceRoot":""}]}