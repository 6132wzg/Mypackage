{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/venue/notice-tpl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/venue/notice-tpl.vue","mtime":1591147717287},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { NoticeTplService } from './notice-tpl.service'\nimport { thsMember, thsShop } from './notice-tpl.config'\nimport NoticeItem from '@/views/biz-components/notice-tpl/notice-item'\nconst pageName = 'page-brand-app-venue-notice-tpl'\n\nexport default {\n  name: 'PageBrandAppVenueNoticeTpl',\n  bem: {\n    bPage: pageName,\n    bTable: 'venue-notice-table'\n  },\n  serviceInject() {\n    return {\n      noticeService: NoticeTplService\n    }\n  },\n  rxState() {\n    return {\n      list: this.noticeService.list$,\n      auth: this.noticeService.auth$\n    }\n  },\n  data() {\n    return {\n      memberList: [],\n      shopList: []\n    }\n  },\n  computed: {\n    thsMember,\n    thsShop\n  },\n  created() {\n    this.getNoticeList()\n  },\n  methods: {\n    onSearch() {},\n    save(para) {\n      this.putNotice(para)\n    },\n    getNoticeList() {\n      return this.noticeService\n        .getNoticeList({ notify_type: 1 })\n        .subscribe(res => {\n          this.memberList = this.list.filter(\n            ({ notify_type }) => notify_type.value === 1\n          )\n          this.shopList = this.list.filter(\n            ({ notify_type }) => notify_type.value === 2\n          )\n        })\n    },\n    putNotice(para) {\n      return this.noticeService.putNotice({ ...para }).subscribe(res => {\n        this.$message.success({\n          content: '编辑成功'\n        })\n        this.getNoticeList()\n      })\n    }\n  },\n  components: {\n    NoticeItem\n  }\n}\n",null]}