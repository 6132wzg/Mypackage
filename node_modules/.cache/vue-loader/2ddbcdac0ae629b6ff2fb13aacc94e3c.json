{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-revenue-area.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/brand-revenue-area.vue","mtime":1600926555724},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport chartMixin from './mixin'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05-27',访问用户:20,办理入会:10,消费用户:20,注册用户:10,访问用户:10}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    fields: {\n      type: Array,\n      default: () => [\n        '访问用户',\n        '注册用户',\n        '消费用户',\n        '办理入会',\n        '购买私教'\n      ]\n    },\n    colors: {\n      type: Array,\n      default: () => ['#3F66F4', '#2B90D0', '#1EACB7', '#11C79F', '#00E881']\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data() {\n    return {\n      // MAX: 0\n    }\n  },\n  computed: {\n    areaColors() {\n      return this.colors.map(c => `l(90) 0:${c} 1:#ffffff`)\n    },\n    MAX() {\n      const maxValue = this.dv.max('value')\n      return maxValue > this.max ? maxValue : this.max\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv\n        .transform({\n          type: 'fold',\n          // 展开数据使用的字段\n          fields: this.fields,\n          key: 'name',\n          value: 'value'\n        })\n        .transform({\n          type: 'map',\n          callback(row) {\n            row.value = +row.value\n            return row\n          }\n        })\n    },\n    changeData() {\n      this.chart.destroy()\n      this.initChart()\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: 'auto',\n        renderer: 'svg'\n      })\n      this.chart.source(this.dv, {\n        value: {\n          max: +this.MAX,\n          min: 0\n        },\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        }\n      })\n      this.chart.axis('value', {\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        },\n        label: false\n      })\n      this.chart.axis('date', {\n        label: {\n          offsetY: 2,\n          textStyle: {\n            fontSize: 12,\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.legend({\n        position: 'top-right',\n        marker: 'circle',\n        offsetY: -24,\n        textStyle: {\n          fill: '#3E4D5C'\n        }\n      })\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .size(2)\n        .tooltip('name*value', (name, value) => {\n          return {\n            name,\n            value: value + '人'\n          }\n        })\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart\n        .area()\n        .shape('smooth')\n        .opacity(0.5)\n        .position('date*value')\n        .tooltip(false)\n        .color('name', this.areaColors)\n\n      this.chart.render()\n    }\n  }\n}\n",{"version":3,"sources":["brand-revenue-area.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"brand-revenue-area.vue","sourceRoot":"src/views/biz-components/stat","sourcesContent":["<template>\n  <div class=\"stat-brand-revenue-area\"></div>\n</template>\n\n<script>\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport chartMixin from './mixin'\n\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05-27',访问用户:20,办理入会:10,消费用户:20,注册用户:10,访问用户:10}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    fields: {\n      type: Array,\n      default: () => [\n        '访问用户',\n        '注册用户',\n        '消费用户',\n        '办理入会',\n        '购买私教'\n      ]\n    },\n    colors: {\n      type: Array,\n      default: () => ['#3F66F4', '#2B90D0', '#1EACB7', '#11C79F', '#00E881']\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data() {\n    return {\n      // MAX: 0\n    }\n  },\n  computed: {\n    areaColors() {\n      return this.colors.map(c => `l(90) 0:${c} 1:#ffffff`)\n    },\n    MAX() {\n      const maxValue = this.dv.max('value')\n      return maxValue > this.max ? maxValue : this.max\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv\n        .transform({\n          type: 'fold',\n          // 展开数据使用的字段\n          fields: this.fields,\n          key: 'name',\n          value: 'value'\n        })\n        .transform({\n          type: 'map',\n          callback(row) {\n            row.value = +row.value\n            return row\n          }\n        })\n    },\n    changeData() {\n      this.chart.destroy()\n      this.initChart()\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: 'auto',\n        renderer: 'svg'\n      })\n      this.chart.source(this.dv, {\n        value: {\n          max: +this.MAX,\n          min: 0\n        },\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        }\n      })\n      this.chart.axis('value', {\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        },\n        label: false\n      })\n      this.chart.axis('date', {\n        label: {\n          offsetY: 2,\n          textStyle: {\n            fontSize: 12,\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.legend({\n        position: 'top-right',\n        marker: 'circle',\n        offsetY: -24,\n        textStyle: {\n          fill: '#3E4D5C'\n        }\n      })\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .size(2)\n        .tooltip('name*value', (name, value) => {\n          return {\n            name,\n            value: value + '人'\n          }\n        })\n        .position('date*value')\n        .color('name', this.colors)\n\n      this.chart\n        .area()\n        .shape('smooth')\n        .opacity(0.5)\n        .position('date*value')\n        .tooltip(false)\n        .color('name', this.areaColors)\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"]}]}