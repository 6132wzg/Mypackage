{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/card/member-card-course-interests/member-card-course-interests.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/card/member-card-course-interests/member-card-course-interests.vue","mtime":1600926555658},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { CourseIntersetsService } from \"./member-card-course-interests.service\";\nimport { ruleOptions } from \"./member-card-course-interests.config\";\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      courseInterestsService: CourseIntersetsService\n    };\n  },\n  rxState: function rxState() {\n    var _this$courseInterests = this.courseInterestsService,\n        loading$ = _this$courseInterests.loading$,\n        types$ = _this$courseInterests.types$,\n        courseList$ = _this$courseInterests.courseList$;\n    return {\n      loading: loading$,\n      types: types$,\n      courseList: courseList$\n    };\n  },\n  decorators: function decorators() {\n    return this.form.addDecorators(this.ruleOptions);\n  },\n  props: {\n    /**\n     * 约课权益类型 1无 2全部团体课 3指定团体课\n     */\n    type: {\n      type: Number,\n      default: 1\n    },\n    courseIds: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    form: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    label: {\n      type: String,\n      default: '约课权益'\n    },\n    labelWidth: {\n      type: String,\n      default: '88px'\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    },\n    required: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      currentType: 1,\n\n      /**\n       * 多门店\n       */\n      TYPE_CUSTOM: 3\n    };\n  },\n  computed: {\n    ruleOptions: ruleOptions,\n    decorators: function decorators() {\n      return this.form.addDecorators(this.ruleOptions);\n    },\n    isShowCourseList: function isShowCourseList() {\n      /**\n       * 多店\n       */\n      return this.currentType === this.TYPE_CUSTOM;\n    },\n\n    /**\n     * 是否校验门店\n     */\n    isRequired: function isRequired() {\n      return this.required && this.currentType === this.TYPE_CUSTOM;\n    }\n  },\n  watch: {\n    type: function type(val) {\n      this.currentType = val;\n    },\n    courseIds: {\n      handler: function handler(val) {\n        this.getCourseListByCourseIds(val);\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      var type = this.type,\n          courseIds = this.courseIds;\n      this.currentType = type;\n      this.$nextTick(function () {\n        _this.getCourseListByCourseIds(courseIds);\n      });\n    },\n    getCourseListByCourseIds: function getCourseListByCourseIds(courseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds: courseIds\n      });\n\n      if (courseIds.length) {\n        this.getCourseList({\n          course_ids: courseIds\n        });\n      }\n    },\n    onCourseIdsChange: function onCourseIdsChange(currentCourseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds: currentCourseIds\n      });\n      this.onChange();\n    },\n    onTypeChange: function onTypeChange(e) {\n      var _this2 = this;\n\n      this.currentType = e.target.value;\n      this.$nextTick(function () {\n        _this2.form.validateFields(['currentCourseIds'], {\n          force: true\n        });\n      });\n      this.onChange();\n    },\n    onChange: function onChange() {\n      var currentType = this.currentType;\n      var currentCourseIds = this.form.getFieldValue('currentCourseIds');\n      this.$emit('change', currentType, currentCourseIds);\n    },\n    onSearch: function onSearch(keyword) {\n      this.getCourseList({\n        course_name: keyword\n      });\n    },\n    getCourseList: function getCourseList(query) {\n      this.courseInterestsService.courseListAction$.dispatch(query);\n    }\n  }\n};",{"version":3,"sources":["member-card-course-interests.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <st-form-item\n    :labelGutter=\"labelGutter\"\n    :labelWidth=\"labelWidth\"\n    :required=\"required\"\n  >\n    <template slot=\"label\">\n      <slot v-if=\"$slots.label\" name=\"label\"></slot>\n      <template>{{ label }}</template>\n    </template>\n    <a-radio-group\n      v-model=\"currentType\"\n      :options=\"types\"\n      :disabled=\"disabled\"\n      @change=\"onTypeChange\"\n    ></a-radio-group>\n    <a-select\n      v-show=\"isShowCourseList\"\n      mode=\"multiple\"\n      :disabled=\"disabled\"\n      style=\"width: 420px;\"\n      v-decorator=\"decorators.currentCourseIds\"\n      placeholder=\"请输入课程名称搜索\"\n      :filterOption=\"false\"\n      @search=\"onSearch\"\n      :notFoundContent=\"loading.getCourseList ? undefined : null\"\n      @change=\"onCourseIdsChange\"\n      class=\"mg-t16\"\n    >\n      <a-spin\n        v-if=\"loading.getCourseList\"\n        slot=\"notFoundContent\"\n        size=\"small\"\n      />\n      <a-select-option v-for=\"course in courseList\" :key=\"course.id\">\n        {{ course.name }}\n      </a-select-option>\n    </a-select>\n  </st-form-item>\n</template>\n<script>\nimport { CourseIntersetsService } from './member-card-course-interests.service'\nimport { ruleOptions } from './member-card-course-interests.config'\nexport default {\n  serviceInject() {\n    return {\n      courseInterestsService: CourseIntersetsService\n    }\n  },\n  rxState() {\n    const { loading$, types$, courseList$ } = this.courseInterestsService\n    return {\n      loading: loading$,\n      types: types$,\n      courseList: courseList$\n    }\n  },\n  decorators() {\n    return this.form.addDecorators(this.ruleOptions)\n  },\n  props: {\n    /**\n     * 约课权益类型 1无 2全部团体课 3指定团体课\n     */\n    type: {\n      type: Number,\n      default: 1\n    },\n    courseIds: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    label: {\n      type: String,\n      default: '约课权益'\n    },\n    labelWidth: {\n      type: String,\n      default: '88px'\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    },\n    required: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      currentType: 1,\n      /**\n       * 多门店\n       */\n      TYPE_CUSTOM: 3\n    }\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    },\n    isShowCourseList() {\n      /**\n       * 多店\n       */\n      return this.currentType === this.TYPE_CUSTOM\n    },\n    /**\n     * 是否校验门店\n     */\n    isRequired() {\n      return this.required && this.currentType === this.TYPE_CUSTOM\n    }\n  },\n  watch: {\n    type(val) {\n      this.currentType = val\n    },\n    courseIds: {\n      handler(val) {\n        this.getCourseListByCourseIds(val)\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const { type, courseIds } = this\n      this.currentType = type\n      this.$nextTick(() => {\n        this.getCourseListByCourseIds(courseIds)\n      })\n    },\n    getCourseListByCourseIds(courseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds: courseIds\n      })\n      if (courseIds.length) {\n        this.getCourseList({\n          course_ids: courseIds\n        })\n      }\n    },\n    onCourseIdsChange(currentCourseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds\n      })\n      this.onChange()\n    },\n    onTypeChange(e) {\n      this.currentType = e.target.value\n      this.$nextTick(() => {\n        this.form.validateFields(['currentCourseIds'], { force: true })\n      })\n      this.onChange()\n    },\n    onChange() {\n      const { currentType } = this\n      const currentCourseIds = this.form.getFieldValue('currentCourseIds')\n      this.$emit('change', currentType, currentCourseIds)\n    },\n    onSearch(keyword) {\n      this.getCourseList({\n        course_name: keyword\n      })\n    },\n    getCourseList(query) {\n      this.courseInterestsService.courseListAction$.dispatch(query)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/card/member-card-course-interests"}]}