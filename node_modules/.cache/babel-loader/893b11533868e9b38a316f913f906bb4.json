{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/edit-personal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/group/edit-personal.vue","mtime":1591147717317},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport GroupForm from \"./components#/group-form\";\nimport { ruleOptions, cardColumns } from \"./add-personal.config\";\nimport { EditPersonalService } from \"./edit-personal.service\";\nimport { PatternService } from '@/services/pattern.service';\nimport { ACTIVITY_STATUS } from '@/constants/marketing/group-buy';\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      editPersonalService: EditPersonalService,\n      pattern: PatternService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.editPersonalService.loading$,\n      coach: this.editPersonalService.coach$,\n      info: this.editPersonalService.info$,\n      personalList: this.editPersonalService.personalList$\n    };\n  },\n  bem: {\n    basic: 'brand-marketing-group-personal'\n  },\n  computed: {\n    cardColumns: cardColumns\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.editPersonalService.getPersonalList().subscribe(function () {\n      // this.courseId = this.info.product.id\n      // this.groupHour = this.info.init_course_num\n      _this.selectCourseChange(_this.info.product.id);\n    });\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      courseId: '',\n      // 活动商品\n      ACTIVITY_STATUS: ACTIVITY_STATUS,\n      selectedRowKeys: [],\n      // 优惠设置选中项\n      tableText: '',\n      // 优惠设置错误提示\n      tableErr: false,\n      shopIds: [],\n      newCoach: [],\n      // 禁用优惠设置的选择\n      getCheckboxProps: function getCheckboxProps() {\n        return {\n          props: {\n            disabled: true\n          }\n        };\n      },\n      disabledEdit: false,\n      groupParams: {\n        type: 3,\n        id: null\n      }\n    };\n  },\n  methods: {\n    // 输入拼团课时\n    changeHour: function changeHour(e) {\n      console.log(e);\n      this.groupHour = e.target.value;\n      this.newCoach.forEach(function (item, index) {\n        item.hour = e.target.value;\n      }); // this.setFieldsValue()\n    },\n    // 设置选择私教课并返回教练\n    selectCourseChange: function selectCourseChange(id) {\n      var _this2 = this;\n\n      this.form.setFieldsValue({\n        course_id: id,\n        group_hour: this.info.init_course_num\n      });\n      this.groupParams.id = id;\n      this.editPersonalService.getCoachList(id).subscribe(function (res) {\n        _this2.newCoach = _this2.coach.map(function (item) {\n          return {\n            is_select: false,\n            level: item.spec,\n            id: item.id,\n            hour: _this2.info.init_course_num,\n            group_price: ''\n          };\n        });\n\n        if (_this2.newCoach.length === 1) {\n          _this2.selectedRowKeys = _this2.newCoach;\n          _this2.newCoach[0].is_select = true;\n        }\n\n        _this2.setFieldsValue();\n\n        _this2.setCoachPrice();\n      });\n    },\n    setCoachPrice: function setCoachPrice() {\n      var _this3 = this;\n\n      this.newCoach.forEach(function (item) {\n        var selectCoach = _this3.info.sku.filter(function (sku) {\n          return sku.sku_id === item.id;\n        });\n\n        console.log(selectCoach);\n        item.is_select = selectCoach.length > 0;\n        item.group_price = selectCoach.length > 0 ? selectCoach[0].group_price : '';\n      });\n      this.selectedRowKeys = this.info.sku.map(function (sku) {\n        return sku.sku_id;\n      });\n      console.log(this.newCoach);\n    },\n    // 优惠设置选择变化\n    onChange: function onChange(value) {\n      var _this4 = this;\n\n      this.selectedRowKeys = value;\n      this.newCoach.forEach(function (coach) {\n        coach.is_select = _this4.selectedRowKeys.indexOf(coach.id) !== -1;\n      }); // this.setPriceChange()\n    },\n    // 处理输入拼团价格的逻辑\n    setPriceChange: function setPriceChange() {\n      var selectedCoach = this.newCoach.filter(function (item) {\n        return item.is_select;\n      });\n      var hasEmpty = selectedCoach.filter(function (item) {\n        return !item.group_price;\n      });\n\n      if (hasEmpty.length > 0) {\n        this.tableText = '请输入拼团价格';\n        this.tableErr = true;\n      } else {\n        this.tableText = '';\n        this.tableErr = false;\n      }\n    },\n    // 新建拼团活动\n    onSubmit: function onSubmit(data) {\n      var _this5 = this;\n\n      console.log(data);\n      if (this.tableErr) return;\n      var selectedCoach = this.newCoach.filter(function (item) {\n        return item.is_select;\n      });\n\n      if (selectedCoach.length === 0) {\n        this.tableText = \"\\u8BF7\\u9009\\u62E9\\u81F3\\u5C11\\u4E00\\u4E2A\".concat(this.$c('coach'));\n        this.tableErr = true;\n        return;\n      }\n\n      data.sku = selectedCoach.map(function (item) {\n        return {\n          sku_id: item.id,\n          group_price: item.group_price\n        };\n      });\n      data.init_course_num = +this.form.getFieldValue('group_hour');\n      data.product_type = 3;\n      data.product_id = +this.form.getFieldValue('course_id');\n      data.id = +this.$route.query.id;\n      this.editPersonalService.editGroupbuy(data).subscribe(function (res) {\n        _this5.$router.push({\n          path: \"/brand/marketing/plugin/group/list\"\n        });\n      });\n    },\n    // 详情回显\n    setFieldsValue: function setFieldsValue() {\n      var _this6 = this;\n\n      this.newCoach.forEach(function (item) {\n        item.is_select = _this6.info.sku.filter(function (skuItem) {\n          return skuItem.sku_id === item.id;\n        }).length > 0;\n      }); // 是否能够编辑, 当活动未开始时可以编辑\n\n      this.disabledEdit = this.info.activity_state.id >= ACTIVITY_STATUS.NO_START;\n\n      this.getCheckboxProps = function () {\n        return {\n          props: {\n            disabled: _this6.disabledEdit\n          }\n        };\n      };\n\n      console.log(this.disabledEdit);\n      this.selectedRowKeys = this.newCoach.map(function (item) {\n        if (item.is_select) {\n          return item.id;\n        }\n      });\n      this.form.setFieldsValue({\n        group_hour: this.info.init_course_num\n      });\n    }\n  },\n  components: {\n    GroupForm: GroupForm\n  }\n};",null]}