{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/task/list.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/task/list.service.ts","mtime":1591147717362},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state/src';\nimport { TaskApi } from '@/api/v1/brand/task';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '@/services/auth.service';\n\nvar ListService = /*#__PURE__*/function () {\n  function ListService(taskApi, authService) {\n    _classCallCheck(this, ListService);\n\n    this.taskApi = taskApi;\n    this.authService = authService;\n    this.loading$ = new State({});\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.last_updated_time$ = new State('');\n  }\n\n  _createClass(ListService, [{\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      return this.taskApi.getList(query).pipe(tap(function (res) {\n        _this.last_updated_time$.commit(function () {\n          return res.last_updated_time;\n        });\n\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n    /**\n     * 终止任务\n     * @param taskId\n     */\n\n  }, {\n    key: \"stopTask\",\n    value: function stopTask(taskId) {\n      return this.taskApi.stopTask(taskId);\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to) {\n      return this.getList(to.meta.query);\n    }\n  }]);\n\n  return ListService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], ListService.prototype, \"getList\", null);\n\nListService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof TaskApi !== \"undefined\" && TaskApi) === \"function\" ? _a : Object, typeof (_b = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _b : Object])], ListService);\nexport { ListService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/task/list.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,cAA9B;AACA,SAAS,OAAT,QAAwB,qBAAxB;AACA,SAAS,GAAT,QAAyB,gBAAzB;AACA,SAAS,WAAT,QAA4B,yBAA5B;;AAGA,IAAa,WAAb;AAKE,uBAAoB,OAApB,EAA8C,WAA9C,EAAsE;AAAA;;AAAlD,SAAA,OAAA,GAAA,OAAA;AAA0B,SAAA,WAAA,GAAA,WAAA;AAJ9C,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,kBAAA,GAAqB,IAAI,KAAJ,CAAU,EAAV,CAArB;AAC0E;;AAL5E;AAAA;AAAA,4BAOU,KAPV,EAOoB;AAAA;;AAChB,aAAO,KAAK,OAAL,CAAa,OAAb,CAAqB,KAArB,EAA4B,IAA5B,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,kBAAL,CAAwB,MAAxB,CAA+B;AAAA,iBAAM,GAAG,CAAC,iBAAV;AAAA,SAA/B;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;;AACA,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAJE,CADE,CAAP;AAOD;AACD;;;;;AAhBF;AAAA;AAAA,6BAoBW,MApBX,EAoBsB;AAClB,aAAO,KAAK,OAAL,CAAa,QAAb,CAAsB,MAAtB,CAAP;AACD;AAtBH;AAAA;AAAA,+BAuBa,EAvBb,EAuB6B;AACzB,aAAO,KAAK,OAAL,CAAa,EAAE,CAAC,IAAH,CAAQ,KAArB,CAAP;AACD;AAzBH;;AAAA;AAAA,GAAA;;AAOE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,yCAAA,E,uCAAA,CAAA,E,qBAAA,E,SAAA,EAQC,IARD,CAAA;;AAPW,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDAKO,O,KAAO,W,IAAP,O,MAAO,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OAAuB,WAAvB,KAAkC,WAAlC,IAAuB,WAAvB,MAAkC,UAAlC,GAAkC,EAAlC,GAAkC,M,EALhD,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state/src'\nimport { TaskApi } from '@/api/v1/brand/task'\nimport { tap, map } from 'rxjs/operators'\nimport { AuthService } from '@/services/auth.service'\n\n@Injectable()\nexport class ListService implements Controller {\n  loading$ = new State({})\n  list$ = new State([])\n  page$ = new State({})\n  last_updated_time$ = new State('')\n  constructor(private taskApi: TaskApi, private authService: AuthService) {}\n  @Effect()\n  getList(query: any) {\n    return this.taskApi.getList(query).pipe(\n      tap((res: any) => {\n        this.last_updated_time$.commit(() => res.last_updated_time)\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  /**\n   * 终止任务\n   * @param taskId\n   */\n  stopTask(taskId: any) {\n    return this.taskApi.stopTask(taskId)\n  }\n  beforeEach(to: ServiceRoute) {\n    return this.getList(to.meta.query)\n  }\n}\n"],"sourceRoot":""}]}