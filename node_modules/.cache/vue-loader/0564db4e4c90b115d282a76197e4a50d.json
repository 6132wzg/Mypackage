{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/set-time.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/card/set-time.vue","mtime":1591147717234},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SetTimeService } from './set-time.service'\nimport { cloneDeep } from 'lodash-es'\nimport { ruleOptions } from './set-time.config'\nexport default {\n  name: 'ModalSoldCardSettime',\n  bem: {\n    settime: 'modal-sold-card-settime'\n  },\n  serviceProviders() {\n    return [SetTimeService]\n  },\n  serviceInject() {\n    return {\n      setTimeService: SetTimeService\n    }\n  },\n  rxState() {\n    return {\n      info: this.setTimeService.info$,\n      loading: this.setTimeService.loading$\n    }\n  },\n  props: ['id'],\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      endTime: '-',\n      description: ''\n    }\n  },\n  filters: {\n    timeFormatFilter(data) {\n      return data ? moment(data).format('YYYY-MM-DD HH:mm') : '-'\n    }\n  },\n  computed: {\n    isFamilyCard() {\n      return this.info.card_number_type === 2\n    }\n  },\n  methods: {\n    disabledEndDate(endValue) {\n      return (\n        endValue.valueOf() < this.info.server_time * 1000 ||\n        endValue.valueOf() > moment(this.info.end_time).valueOf()\n      )\n    },\n    disabledStartDate(startValue) {\n      return startValue.valueOf() < this.info.server_time * 1000\n    },\n    onStartTimeChange(data) {\n      let start = cloneDeep(data)\n      this.endTime = start\n        .add(this.info.time_limit_init, 's')\n        .format('YYYY-MM-DD HH:mm')\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        let data = values.end_time || values.start_time\n        this.setTimeService\n          .setTime(\n            {\n              time: data.format('YYYY-MM-DD HH:mm'),\n              description: this.description\n            },\n            this.id\n          )\n          .subscribe(res => {\n            this.show = false\n            this.$emit('success')\n          })\n      })\n    }\n  },\n  created() {\n    this.setTimeService.getInfo(this.id).subscribe()\n  }\n}\n",null]}