{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/select/select-scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/select/select-scroll.vue","mtime":1600926556061},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { debounce, isEqual } from 'lodash-es';\nexport default {\n  name: 'StSelectScroll',\n  bem: {\n    b: 'st-select-scroll'\n  },\n  model: {\n    props: 'selected',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: [String, Number],\n      default: undefined\n    },\n    options: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    labelHtml: {\n      type: Function,\n      default: function _default(label, keyword) {\n        return label.replace(new RegExp(keyword, 'g'), \"<span class='global-highlight-color'>\".concat(keyword, \"</span>\"));\n      }\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    isScroll: {\n      type: Boolean,\n      default: true\n    },\n    isEnd: {\n      type: Boolean,\n      default: true\n    },\n    showSearch: {\n      type: Boolean,\n      default: true\n    },\n    showArrow: {\n      type: Boolean,\n      default: false\n    },\n    allowClear: {\n      type: Boolean,\n      default: false\n    },\n    // string = lable 或 value\n    filter: {\n      type: [Boolean, String],\n      default: false\n    },\n    _label: {\n      type: String,\n      default: 'label'\n    },\n    _value: {\n      type: String,\n      default: 'value'\n    },\n    // 搜索关键词字段名定义， 默认为 keyword， search refresh scroll 三个事件输出的参数为 {keyword: ''}\n    _keyword: {\n      type: String,\n      default: 'keyword'\n    },\n    placeholder: String,\n    // 联动条件\n    query: {\n      type: Object,\n      default: function _default() {}\n    },\n    // useBodyContainer 是否使用body作为父级定位，默认为组件父级定位\n    useBodyContainer: {\n      type: Boolean,\n      default: false\n    },\n    // 是否默认选中第一条\n    isSelectFirst: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      // 搜索关键字\n      keyword: '',\n      selected: undefined\n    };\n  },\n  computed: {\n    list: function list() {\n      var _this = this;\n\n      var list = this.options.map(function (item) {\n        return {\n          label: item[_this._label],\n          value: item[_this._value]\n        };\n      });\n\n      if (this.filter) {\n        list = list.filter(function (item) {\n          return _this.filter === 'label' || _this.filter === 'value' ? item[_this.filter].includes(_this.keyword) : item[_this._label].includes(_this.keyword) || item[_this._value].includes(_this.keyword);\n        });\n      }\n\n      return [].concat(_toConsumableArray(this.$attrs.defaultLabel ? [{\n        label: this.$attrs.defaultLabel,\n        value: -1\n      }] : []), _toConsumableArray(list));\n    },\n    _isEnd: function _isEnd() {\n      if (this.$attrs.page) {\n        return this.$attrs.page.current_page >= this.$attrs.page.total_pages || !this.$attrs.page.total_pages;\n      }\n\n      return this.isEnd;\n    },\n    _allowClear: function _allowClear() {\n      return this.showSearch ? true : this.allowClear;\n    },\n    isSearchNone: function isSearchNone() {\n      return this.keyword !== '' && !this.list.length;\n    }\n  },\n  watch: {\n    value: {\n      handler: function handler(v) {\n        console.log('change', v);\n        this.selected = v;\n      },\n      immediate: true\n    },\n    lists: {\n      deep: true,\n      handler: function handler(newValue, oldValue) {\n        if (isEqual(newValue, oldValue) || !newValue.length) return;\n\n        if (this.isSelectFirst) {\n          // 默认选中第一项 blur时起作用\n          this.selected = newValue[0].value;\n        }\n      }\n    },\n    // 联动条件刷新监听\n    query: {\n      deep: true,\n      handler: function handler(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return;\n        this.keyword = '';\n        this.$emit('refresh', _objectSpread({}, newValue, _defineProperty({}, this._keyword, '')));\n      }\n    }\n  },\n  components: {},\n  created: function created() {\n    this.selected = this.value;\n  },\n  methods: {\n    // 搜索事件触发\n    onSearch: debounce(function (val) {\n      console.log(val);\n      var str = val.trim();\n      if (this.keyword === str) return;\n      this.keyword = str;\n\n      if (str !== '') {\n        this.$emit('search', _defineProperty({}, this._keyword, str));\n      }\n    }, 200),\n    // 检测清空选中\n    onChange: function onChange(val) {\n      !val && this.$emit('change', val);\n    },\n    // 选择发生变化\n    onSelect: function onSelect(val) {\n      this.$emit('change', val);\n    },\n    // 搜索框失焦事件\n    onBlur: function onBlur() {\n      this.$emit('blur', this.selected);\n    },\n    // 聚焦时先清空历史搜索\n    onFocus: function onFocus() {\n      this.keyword = '';\n    },\n    // 滚动到底部时触发事件\n    scroll: debounce(function (e) {\n      var target = e.target;\n\n      if (Math.floor(target.scrollTop) + target.clientHeight > target.scrollHeight - 20 && this.isScroll) {\n        if (!this.loading && !this._isEnd) {\n          this.$emit('scroll', _defineProperty({}, this._keyword, this.keyword));\n        }\n      }\n    }, 200)\n  }\n};",{"version":3,"sources":["select-scroll.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 这一级是为了使下拉元素放在这级div中(getPopupContainer)，避免对外层布局造成未知的影响 -->\n  <div\n    :class=\"{\n      [b()]: true,\n      [b('search')]: !showArrow && showSearch,\n      [b('select')]: showArrow\n    }\"\n  >\n    <!-- showArrow属性与suffixIcon 存在冲突，所以showArrow为false时不传 -->\n    <a-select\n      v-model=\"selected\"\n      :class=\"{ 'no-rotate': !showArrow || showSearch }\"\n      :showSearch=\"showSearch\"\n      :allowClear=\"_allowClear\"\n      :placeholder=\"placeholder\"\n      :defaultActiveFirstOption=\"true\"\n      :filterOption=\"false\"\n      v-bind=\"{\n        ...(showArrow ? { showArrow } : {}),\n        ...(useBodyContainer\n          ? {}\n          : {\n              getPopupContainer: triggerNode => {\n                return triggerNode.parentNode\n              }\n            }),\n        ...$attrs\n      }\"\n      @popupScroll=\"scroll\"\n      @change=\"onChange\"\n      @search=\"onSearch\"\n      @select=\"onSelect\"\n      @blur=\"onBlur\"\n      @focus=\"onFocus\"\n      ref=\"selectScroll\"\n    >\n      <!-- 搜索图标 -->\n      <span slot=\"suffixIcon\" v-if=\"!showArrow\">\n        <slot name=\"suffixIcon\">\n          <a-icon slot=\"suffixIcon\" :type=\"$attrs.suffixIcon || 'search'\" />\n        </slot>\n      </span>\n      <!-- 无数据 -->\n      <span slot=\"notFoundContent\" v-if=\"!loading\">\n        <slot name=\"notFoundContent\" v-if=\"isSearchNone\">\n          <span>无数据</span>\n        </slot>\n        <slot name=\"notContent\" v-else>\n          <span>无数据</span>\n        </slot>\n      </span>\n\n      <a-select-option\n        v-for=\"(item, index) in list\"\n        :value=\"item.value\"\n        :key=\"item.value || index\"\n      >\n        <span v-html=\"labelHtml(item.label, keyword)\">\n          {{ item.label }}\n        </span>\n      </a-select-option>\n      <!-- loading -->\n      <a-select-option\n        disabled\n        :key=\"new Date() + Math.random()\"\n        v-if=\"(isScroll && list.length && !_isEnd) || loading\"\n      >\n        <a-spin size=\"small\"></a-spin>\n      </a-select-option>\n      <!-- 已经到底啦 -->\n      <a-select-option\n        disabled\n        :key=\"new Date() + Math.random()\"\n        v-if=\"isScroll && list.length && _isEnd\"\n      >\n        已经到底啦\n      </a-select-option>\n    </a-select>\n  </div>\n</template>\n<script>\nimport { debounce, isEqual } from 'lodash-es'\n\nexport default {\n  name: 'StSelectScroll',\n  bem: {\n    b: 'st-select-scroll'\n  },\n  model: {\n    props: 'selected',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: [String, Number],\n      default: undefined\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    labelHtml: {\n      type: Function,\n      default: (label, keyword) => {\n        return label.replace(\n          new RegExp(keyword, 'g'),\n          `\\<span class='global-highlight-color'\\>${keyword}\\<\\/span\\>`\n        )\n      }\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    isScroll: {\n      type: Boolean,\n      default: true\n    },\n    isEnd: {\n      type: Boolean,\n      default: true\n    },\n    showSearch: {\n      type: Boolean,\n      default: true\n    },\n    showArrow: {\n      type: Boolean,\n      default: false\n    },\n    allowClear: {\n      type: Boolean,\n      default: false\n    },\n    // string = lable 或 value\n    filter: {\n      type: [Boolean, String],\n      default: false\n    },\n    _label: {\n      type: String,\n      default: 'label'\n    },\n    _value: {\n      type: String,\n      default: 'value'\n    },\n    // 搜索关键词字段名定义， 默认为 keyword， search refresh scroll 三个事件输出的参数为 {keyword: ''}\n    _keyword: {\n      type: String,\n      default: 'keyword'\n    },\n    placeholder: String,\n    // 联动条件\n    query: {\n      type: Object,\n      default: () => {}\n    },\n    // useBodyContainer 是否使用body作为父级定位，默认为组件父级定位\n    useBodyContainer: {\n      type: Boolean,\n      default: false\n    },\n    // 是否默认选中第一条\n    isSelectFirst: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      // 搜索关键字\n      keyword: '',\n      selected: undefined\n    }\n  },\n  computed: {\n    list() {\n      let list = this.options.map(item => ({\n        label: item[this._label],\n        value: item[this._value]\n      }))\n      if (this.filter) {\n        list = list.filter(item => {\n          return this.filter === 'label' || this.filter === 'value'\n            ? item[this.filter].includes(this.keyword)\n            : item[this._label].includes(this.keyword) ||\n                item[this._value].includes(this.keyword)\n        })\n      }\n      return [\n        ...(this.$attrs.defaultLabel\n          ? [{ label: this.$attrs.defaultLabel, value: -1 }]\n          : []),\n        ...list\n      ]\n    },\n    _isEnd() {\n      if (this.$attrs.page) {\n        return (\n          this.$attrs.page.current_page >= this.$attrs.page.total_pages ||\n          !this.$attrs.page.total_pages\n        )\n      }\n      return this.isEnd\n    },\n    _allowClear() {\n      return this.showSearch ? true : this.allowClear\n    },\n    isSearchNone() {\n      return this.keyword !== '' && !this.list.length\n    }\n  },\n  watch: {\n    value: {\n      handler(v) {\n        console.log('change', v)\n        this.selected = v\n      },\n      immediate: true\n    },\n    lists: {\n      deep: true,\n      handler(newValue, oldValue) {\n        if (isEqual(newValue, oldValue) || !newValue.length) return\n        if (this.isSelectFirst) {\n          // 默认选中第一项 blur时起作用\n          this.selected = newValue[0].value\n        }\n      }\n    },\n    // 联动条件刷新监听\n    query: {\n      deep: true,\n      handler(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return\n        this.keyword = ''\n        this.$emit('refresh', { ...newValue, [this._keyword]: '' })\n      }\n    }\n  },\n  components: {},\n  created() {\n    this.selected = this.value\n  },\n  methods: {\n    // 搜索事件触发\n    onSearch: debounce(function(val) {\n      console.log(val)\n      let str = val.trim()\n      if (this.keyword === str) return\n      this.keyword = str\n      if (str !== '') {\n        this.$emit('search', { [this._keyword]: str })\n      }\n    }, 200),\n    // 检测清空选中\n    onChange(val) {\n      !val && this.$emit('change', val)\n    },\n    // 选择发生变化\n    onSelect(val) {\n      this.$emit('change', val)\n    },\n    // 搜索框失焦事件\n    onBlur() {\n      this.$emit('blur', this.selected)\n    },\n    // 聚焦时先清空历史搜索\n    onFocus() {\n      this.keyword = ''\n    },\n    // 滚动到底部时触发事件\n    scroll: debounce(function(e) {\n      const { target } = e\n      if (\n        Math.floor(target.scrollTop) + target.clientHeight >\n          target.scrollHeight - 20 &&\n        this.isScroll\n      ) {\n        if (!this.loading && !this._isEnd) {\n          this.$emit('scroll', { [this._keyword]: this.keyword })\n        }\n      }\n    }, 200)\n  }\n}\n</script>\n"],"sourceRoot":"src/views/components/select"}]}