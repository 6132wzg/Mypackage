{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-3!/Users/wangzhigang/Desktop/styd/web/src/api/v1/sold/cards.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/api/v1/sold/cards.ts","mtime":1596159245293},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"../../api\";\nexport var CardApi = /*#__PURE__*/function (_Api) {\n  _inherits(CardApi, _Api);\n\n  var _super = _createSuper(CardApi);\n\n  function CardApi() {\n    _classCallCheck(this, CardApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CardApi, [{\n    key: \"getMemberList\",\n\n    /**\n     * 会员卡列表\n     */\n    value: function getMemberList(params, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type), {\n        query: params\n      });\n    }\n    /**\n     * 售出 储值卡 转让回显\n     */\n\n  }, {\n    key: \"getCardTransferInfo\",\n    value: function getCardTransferInfo(id, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/transfer/info/\").concat(id));\n    }\n    /*\n     * 售出 储值卡 转让\n     */\n\n  }, {\n    key: \"editCardTransfer\",\n    value: function editCardTransfer(params, id, type) {\n      return this.http.put(\"/v1/sold/cards/\".concat(type, \"/transfer/\").concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 售出 储值卡 退款回显\n     */\n\n  }, {\n    key: \"getCardRefundInfo\",\n    value: function getCardRefundInfo(id, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/refund/info/\").concat(id));\n    }\n    /*\n     * 售出 储值卡 退款\n     */\n\n  }, {\n    key: \"editCardRefund\",\n    value: function editCardRefund(params, id, type) {\n      return this.http.put(\"/v1/sold/cards/\".concat(type, \"/refund/\").concat(id), {\n        params: params\n      });\n    }\n    /*\n     * 售出 储值卡/会员卡 详情\n     */\n\n  }, {\n    key: \"getCardInfo\",\n    value: function getCardInfo(id, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/\").concat(type === 'member' ? 'info' : 'detail', \"/\").concat(id)); //  return this.http.get(`/v1/sold/cards/${type}/detail/${id}`)\n    }\n    /**\n     * 售出 会员卡 冻结回显\n     */\n\n  }, {\n    key: \"getMemberFreezeInfo\",\n    value: function getMemberFreezeInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/freeze/info/\".concat(id));\n    }\n    /**\n     * 售出 会员卡 冻结\n     */\n\n  }, {\n    key: \"editMemberFreeze\",\n    value: function editMemberFreeze(params, id) {\n      return this.http.put(\"/v1/sold/cards/member/freeze/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 取消冻结售出 会员卡/储值卡\n     */\n\n  }, {\n    key: \"unFreezeCard\",\n    value: function unFreezeCard(id, type) {\n      return this.http.put(\"/v1/sold/cards/\".concat(type, \"/cancel/freeze/\").concat(id));\n    }\n    /**\n     * 售出 会员卡/储值卡 详情消费记录\n     */\n\n  }, {\n    key: \"getCardsConsumeInfo\",\n    value: function getCardsConsumeInfo(id, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/consume/record/\").concat(id));\n    }\n    /**\n     * 售出 会员卡/储值卡 详情操作日志\n     */\n\n  }, {\n    key: \"getCardsOperationInfo\",\n    value: function getCardsOperationInfo(query, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/operation/log/\").concat(query.id), {\n        query: query\n      });\n    }\n    /**\n     * 售出 会员卡 详情使用记录\n     */\n\n  }, {\n    key: \"getCardsUsageLog\",\n    value: function getCardsUsageLog(query, type) {\n      return this.http.get(\"/v1/sold/cards/\".concat(type, \"/usage/log/\").concat(query.id), {\n        query: query\n      });\n    }\n    /**\n     * 售出 储值卡 详情使用记录\n     */\n\n  }, {\n    key: \"getDepositUsageLog\",\n    value: function getDepositUsageLog(query) {\n      return this.http.get(\"/v1/cards/brand/deposit/cost\", {\n        query: query\n      });\n    }\n    /**\n     * 售出 会员卡 设置有效日期回显\n     */\n\n  }, {\n    key: \"getCardSettimeInfo\",\n    value: function getCardSettimeInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/setting/info/\".concat(id));\n    }\n    /**\n     * 售出 vip区域 列表\n     */\n\n  }, {\n    key: \"getCardVipAreaList\",\n    value: function getCardVipAreaList() {\n      return this.http.get('/v1/sold/cards/member/vip');\n    }\n    /**\n     * 售出 会员卡 vip区域\n     */\n\n  }, {\n    key: \"getCardVipArea\",\n    value: function getCardVipArea(id) {\n      return this.http.get(\"/v1/sold/cards/member/vip/info/\".concat(id));\n    }\n    /**\n     * 售出 会员卡修改vip区域\n     */\n\n  }, {\n    key: \"setCardVipArea\",\n    value: function setCardVipArea(params) {\n      return this.http.put(\"/v1/sold/cards/member/vip\", {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡批量修改vip区域\n     */\n\n  }, {\n    key: \"setCardVipAreaBatch\",\n    value: function setCardVipAreaBatch(params) {\n      return this.http.post(\"/v1/sold/cards/batch/vip_area\", {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 设置有效日期\n     */\n\n  }, {\n    key: \"setCardSettingTime\",\n    value: function setCardSettingTime(params, id) {\n      return this.http.put(\"/v1/sold/cards/member/setting/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 批量赠送\n     */\n\n  }, {\n    key: \"setCardGive\",\n    value: function setCardGive(params) {\n      return this.http.post(\"/v1/sold/cards/batch/amount\", {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 续卡回显\n     */\n\n  }, {\n    key: \"getCardRenewalInfo\",\n    value: function getCardRenewalInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/renewal/info/\".concat(id));\n    }\n    /**\n     * 售出 会员卡 续卡\n     */\n\n  }, {\n    key: \"setCardRenewal\",\n    value: function setCardRenewal(params, id) {\n      return this.http.put(\"/v1/sold/cards/member/renewal/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 升级回显\n     */\n\n  }, {\n    key: \"getCardUpgradeInfo\",\n    value: function getCardUpgradeInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/upgrade/info/\".concat(id));\n    }\n    /**\n     * 售出 会员卡 升级\n     */\n\n  }, {\n    key: \"setCardUpgrade\",\n    value: function setCardUpgrade(params, id) {\n      return this.http.put(\"/v1/sold/cards/member/upgrade/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 门店可售卖的会员卡列表\n     */\n\n  }, {\n    key: \"getCardUpgradeList\",\n    value: function getCardUpgradeList(card_name_search) {\n      var card_number_type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n      return this.http.get(\"/v1/sold/cards/shop/saled_card\", {\n        query: {\n          card_name_search: card_name_search,\n          card_number_type: card_number_type\n        }\n      });\n    }\n    /**\n     * 获取会员卡可使用条数\n     */\n\n  }, {\n    key: \"fetchSoldCardValidNum\",\n    value: function fetchSoldCardValidNum(query) {\n      return this.http.get(\"/v1/sold/cards/batch/count\", {\n        query: query\n      });\n    }\n    /**\n     * 获取会员卡 vip 区域和入场时间可使用条数\n     */\n\n  }, {\n    key: \"fetchSoldCardVIPOrTimeValidNum\",\n    value: function fetchSoldCardVIPOrTimeValidNum(query) {\n      return this.http.get(\"/v1/sold/cards/batch/num\", {\n        query: query\n      });\n    }\n    /**\n     * 售出 会员卡 批量更改入场时间\n     */\n\n  }, {\n    key: \"setCardEnterTime\",\n    value: function setCardEnterTime(params) {\n      return this.http.post(\"/v1/sold/cards/batch/admission_time\", {\n        params: params\n      });\n    }\n    /**\n     * 售出 会员卡 更改成员\n     */\n\n  }, {\n    key: \"changeCardMember\",\n    value: function changeCardMember(id, params) {\n      return this.http.put(\"/v1/sold/cards/member/cards/edit/\".concat(id), {\n        params: params\n      });\n    }\n    /**\n     * 获取批量延期会员卡查询总数\n     */\n\n  }, {\n    key: \"getRenewalTaskNum\",\n    value: function getRenewalTaskNum(query) {\n      return this.http.get('/v1/sold/cards/batch/renewal/task_num', {\n        query: query\n      });\n    }\n    /**\n     * 售出会员卡延长有效期\n     */\n\n  }, {\n    key: \"taskExtendDays\",\n    value: function taskExtendDays(params) {\n      return this.http.post('/v1/sold/cards/batch/renewal', {\n        params: params\n      });\n    }\n    /**\n     * 售出会员卡激活\n     */\n\n  }, {\n    key: \"setReactive\",\n    value: function setReactive(params) {\n      return this.http.put(\"/v1/sold/cards/member/reactive/\".concat(params.id), {\n        params: params\n      });\n    }\n    /**\n     * 售出会员卡激活\n     */\n\n  }, {\n    key: \"getReactiveInfo\",\n    value: function getReactiveInfo(id) {\n      return this.http.get(\"/v1/sold/cards/member/reactive/info/\".concat(id));\n    }\n    /**\n     * 售出会员卡激活\n     */\n\n  }, {\n    key: \"taskReactive\",\n    value: function taskReactive(params) {\n      return this.http.post('/v1/sold/cards/batch/renew', {\n        params: params\n      });\n    }\n    /**\n     * 售出会员卡激活 条数\n     */\n\n  }, {\n    key: \"getTaskReactiveNum\",\n    value: function getTaskReactiveNum(query) {\n      return this.http.get('v1/sold/cards/batch/renew-num', {\n        query: query\n      });\n    }\n  }]);\n\n  return CardApi;\n}(Api);",null]}