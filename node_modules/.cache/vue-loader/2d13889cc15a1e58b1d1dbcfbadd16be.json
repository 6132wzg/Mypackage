{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/crowd/components#/user-lable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/crowd/components#/user-lable.vue","mtime":1597396799982},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserLableService } from './user-lable.service'\nimport titleInfo from './title-info.vue'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  serviceInject() {\n    return {\n      userLableService: UserLableService\n    }\n  },\n  model: {\n    type: 'value',\n    event: 'dataChangge'\n  },\n  props: {\n    value: Object\n  },\n  components: {\n    titleInfo\n  },\n  data() {\n    return {\n      shopList: [],\n      tags: [],\n      titleData: {\n        title: '用户标签',\n        info: '选择用户标签为以下范围的用户'\n      }\n    }\n  },\n  created() {\n    this.userLableService.getShopList().subscribe(res => {\n      this.shopList = res.list.map(item => {\n        return {\n          name: item.tag_name,\n          value: item.id\n        }\n      })\n      if (this.value.getData.member_label.length > 0) {\n        this.tags = cloneDeep(this.value.getData.member_label)\n      }\n    })\n  },\n  methods: {\n    dropdownFunc(item) {\n      const arr = this.tags.filter(i => {\n        return i.value === item.value\n      })\n      if (arr.length > 0) {\n        return\n      }\n      this.value.getData.member_label.push(item)\n      this.tags.push(item)\n    },\n    onChange(date, dateString) {\n      this.$emit('dataChangge', this.value)\n    },\n    handleClose(removedTag, index) {\n      this.value.getData.member_label.forEach((element, i) => {\n        if (element.value === removedTag.value) {\n          this.value.getData.member_label.splice(i, 1)\n        }\n      })\n    }\n  }\n}\n",null]}