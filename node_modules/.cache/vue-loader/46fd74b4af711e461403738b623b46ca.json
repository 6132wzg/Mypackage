{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/course/list/package.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/sold/course/list/package.vue","mtime":1601345845271},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport { cloneDeep, filter } from 'lodash-es'\nimport { PackageService } from './package.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, totalColumns } from './package.config'\nimport StTotal from '@/views/components/total#/total.vue'\nimport SoldCourseFreeze from '@/views/biz-modals/sold/course/freeze'\nimport SoldCourseRefund from '@/views/biz-modals/sold/course/refund'\nimport SoldCourseSurplus from '@/views/biz-modals/sold/course/surplus'\nimport SoldCourseTransfer from '@/views/biz-modals/sold/course/transfer'\nimport SoldCourseScope from '@/views/biz-modals/sold/course/scope'\nimport SoldCourseValid from '@/views/biz-modals/sold/course/valid'\nimport SoldCoursePackageReactive from '@/views/biz-modals/sold/course/package/reactive'\nimport SoldCoursePackageUpgrade from '@/views/biz-modals/sold/course/package/upgrade'\nimport SoldCoursePackageUpdateExpirationDate from '@/views/biz-modals/sold/course/package/update-expiration-date'\nimport SoldCoursePackageReactiveBatch from '@/views/biz-modals/sold/course/package/reactive-batch'\nimport SoldCourseGiftBatch from '@/views/biz-modals/sold/course/package/gift-batch'\nimport SoldCoursePackageExtendDay from '@/views/biz-modals/sold/course/package/extend-day'\nimport SoldCoursePackageDeduction from '@/views/biz-modals/sold/course/package/deduction'\nimport SoldCoursePackageMembeChange from '@/views/biz-modals/sold/course/package/member-change'\nimport SoldCoursePackageExtendDayBatch from '@/views/biz-modals/sold/course/package/extend-day-batch'\nimport SoldCoursePackageUpdateRights from '@/views/biz-modals/sold/course/package/update-rights'\nimport CommonTaskSuccessTip from '@/views/biz-modals/common/task/success-tip'\nimport DealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport { PACKAGE_TYPE, IS_LIMIT } from '@/constants/sold/package'\nimport useInternalNoteActions from '@/hooks/shop/sold-internal-note-actions.hook'\nimport { PRODUCT_TYPE } from '@/constants/sold/transaction'\nimport { PrintService } from '@/services/print.service'\nexport default {\n  name: 'PageShopSoldCoursePackageList',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'page-shop-sold'\n  },\n  components: {\n    StTotal\n  },\n  modals: {\n    SoldCourseFreeze,\n    SoldCourseRefund,\n    SoldCourseSurplus,\n    SoldCourseTransfer,\n    SoldCourseValid,\n    DealGathering,\n    SoldCoursePackageReactive,\n    SoldCoursePackageExtendDay,\n    SoldCoursePackageExtendDayBatch,\n    SoldCoursePackageDeduction,\n    SoldCourseGiftBatch,\n    SoldCoursePackageUpgrade,\n    SoldCoursePackageUpdateExpirationDate,\n    SoldCoursePackageMembeChange,\n    SoldCoursePackageReactiveBatch,\n    SoldCourseScope,\n    CommonTaskSuccessTip,\n    SoldCoursePackageUpdateRights\n  },\n  serviceInject() {\n    return {\n      packageService: PackageService,\n      printService: PrintService\n    }\n  },\n  rxState() {\n    return {\n      list: this.packageService.list$,\n      loading: this.packageService.loading$,\n      page: this.packageService.page$,\n      packageIsLimitOptions$: this.packageService.packageIsLimitOptions$,\n      courseStatus: this.packageService.courseStatus$,\n      packageTypes: this.packageService.packageTypes$,\n      effectiveWay: this.packageService.effectiveWay$,\n      auth: this.packageService.auth$,\n      total: this.packageService.total$\n    }\n  },\n  data() {\n    return {\n      PACKAGE_TYPE,\n      IS_LIMIT,\n      visible: false,\n      // 结束时间面板是否显示\n      endOpen: false,\n      selectedRowKeys: [],\n      selectedRows: [],\n      diffSelectedRows: [],\n      date: [],\n      giftType: 'null',\n      effectiveDate: [],\n      expireDate: [],\n      action: {\n        /**\n         * 更换上课范围\n         */\n        courseRange: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 延长卡有效期\n         */\n        extendDay: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 重新激活\n         */\n        reactive: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 重新激活\n         */\n        give: {\n          isAvaliable: false,\n          isShowTip: false\n        }\n      }\n    }\n  },\n  hooks() {\n    return {\n      internalNoteActions: useInternalNoteActions()\n    }\n  },\n  mounted() {\n    this.setSearchData()\n  },\n  computed: {\n    columns,\n    totalColumns,\n    isLimit() {\n      return false\n    },\n    effectiveWayOptions() {\n      return [\n        {\n          label: '全部',\n          value: -1\n        },\n        {\n          label: '是',\n          value: 1\n        },\n        {\n          label: '否',\n          value: 0\n        }\n      ]\n    }\n  },\n  methods: {\n    disabledSelect(record) {\n      return false\n    },\n    onUpdateExpirationDate(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-expiration-date',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onMemberChange(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-membe-change',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onDeduction(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-deduction',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onChangeRenew() {\n      this.$modalRouter.push({\n        name: 'sold-course-package-reactive-batch',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    onChangeExtends() {\n      this.$modalRouter.push({\n        name: 'sold-course-package-extend-day-batch',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    onChangeGive() {\n      let { selectedRowKeys, isLimit, giftType } = this\n      this.$modalRouter.push({\n        name: 'sold-course-gift-batch',\n        props: {\n          ids: selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery),\n          isLimit,\n          giftType\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    onValid(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-valid',\n        props: {\n          info: record\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    onExtend(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-extend-day',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    // 激活\n    onReactive(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-reactive',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    // 升级\n    onUpgrade(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-upgrade',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: res => {\n            if (res.type === 'create') {\n              // 创建订单成功\n              this.$router.reload()\n              this.onClear()\n            } else if (res.type === 'createPay') {\n              // 创建订单成功 并且到支付页面\n              this.$modalRouter.push({\n                name: 'deal-gathering',\n                props: {\n                  order_id: res.orderId,\n                  type: 'package'\n                },\n                on: {\n                  success: () => {\n                    this.$router.reload()\n                    this.onClear()\n                  }\n                }\n              })\n            }\n          }\n        }\n      })\n    },\n    // 清空列表选择\n    onClear() {\n      this.selectedRowKeys = []\n      this.selectedRows = []\n    },\n    // 变更上课范围\n    onChangeCourse() {\n      this.$modalRouter.push({\n        name: 'sold-course-scope',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: this.$searchQuery\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    successTip() {\n      this.$modalRouter.push({\n        name: 'common-task-success-tip',\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    onPageChange(data) {\n      this.$router.push({\n        query: { ...this.$searchQuery, page: data.current, size: data.pageSize }\n      })\n    },\n    // 修改剩余课时\n    onSurplus(record) {\n      const time = record.effective_state\n        ? `${moment(record.course_buy_time).format(\n            'YYYY-MM-DD HH:mm'\n          )} 至 ${moment(record.course_end_time).format('YYYY-MM-DD HH:mm')}`\n        : '--'\n      let data = {\n        id: record.id,\n        courseName: record.course_name,\n        effective_state: record.effective_state,\n        time\n      }\n      this.$modalRouter.push({\n        name: 'sold-course-surplus',\n        props: {\n          courseType: 'coursePackage',\n          courseData: data\n        },\n        on: {\n          success() {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 冻结\n    onFreeze(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-freeze',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 取消冻结\n    onUnfreeze(record) {\n      this.$confirm({\n        title: '提示',\n        content: '是否取消冻结？',\n        maskClosable: true,\n        onOk: () => {\n          this.packageService\n            .unFreeze(record.id)\n            .toPromise()\n            .then(() => {\n              this.$router.reload()\n            })\n        }\n      })\n    },\n    // 转让\n    onTransfer(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-transfer',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 跳转合同\n    toContract(record) {\n      let url = `${window.location.origin}/common/contract-preview?id=${record.order_id}`\n      window.open(url)\n    },\n    // 退款\n    onRefund(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-refund',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 详情\n    onDetail(record) {\n      this.$router.push({\n        path: `/shop/sold/course/info/package/info/operation-record`,\n        query: { id: record.id }\n      })\n    },\n    // 查询\n    onSearchNative() {\n      this.$searchQuery.start_time = this.date[0]\n        ? `${this.date[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.end_time = this.date[1]\n        ? `${this.date[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.$searchQuery.valid_time_start = this.effectiveDate[0]\n        ? `${this.effectiveDate[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.valid_time_end = this.effectiveDate[1]\n        ? `${this.effectiveDate[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.$searchQuery.expire_start_time = this.expireDate[0]\n        ? `${this.expireDate[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.expire_end_time = this.expireDate[1]\n        ? `${this.expireDate[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.onSearch()\n    },\n    onSearchResetNative() {\n      this.date = [null, null]\n      this.effectiveDate = [null, null]\n      this.expireDate = [null, null]\n      this.onSearchReset()\n    },\n    // 设置searchData\n    setSearchData() {\n      const start = this.$searchQuery.start_time\n        ? cloneDeep(moment(this.$searchQuery.start_time))\n        : null\n      const end = this.$searchQuery.end_time\n        ? cloneDeep(moment(this.$searchQuery.end_time))\n        : null\n      const validStart = this.$searchQuery.valid_time_start\n        ? cloneDeep(moment(this.$searchQuery.valid_time_start))\n        : null\n      const validEnd = this.$searchQuery.valid_time_end\n        ? cloneDeep(moment(this.$searchQuery.valid_time_end))\n        : null\n      const expireStart = this.$searchQuery.expire_start_time\n        ? cloneDeep(moment(this.$searchQuery.expire_start_time))\n        : null\n      const expireEnd = this.$searchQuery.expire_end_time\n        ? cloneDeep(moment(this.$searchQuery.expire_end_time))\n        : null\n      this.date = [start, end]\n      this.effectiveDate = [validStart, validEnd]\n      this.expireDate = [expireStart, expireEnd]\n    },\n    moment,\n    onSelectChange(selectedRowKeys, selectedRows) {\n      this.checkSelectedRows(\n        selectedRows,\n        'course_status',\n        'courseRange',\n        () => {\n          this.selectedRowKeys = selectedRowKeys\n          this.diffSelectedRows = selectedRows.filter(\n            item => item.package_type === 2 && item.course_status !== 3\n          )\n          return this.diffSelectedRows.length\n        }\n      )\n      this.checkSelectedRows(selectedRows, 'course_status', 'extendDay', () => {\n        return (\n          selectedRows.filter(item => item.course_status === 1).length ===\n          selectedRows.length\n        )\n      })\n      this.checkSelectedRows(selectedRows, 'course_status', 'reactive', () => {\n        return (\n          selectedRows.filter(\n            item => item.course_status === 3 && item.is_refund.id === 0\n          ).length === selectedRows.length\n        )\n      })\n      // 批量赠送额度除了固定课程包，只要是有效和冻结的都可以赠送额度。但是都应该是同一类型\n      // 都是任意课程包，都是范围不限次，都是范围限次按钮才会亮。因为只有范围不限次弹窗是赠送天数，任意课程包和范围限次是赠送次数\n      this.checkSelectedRows(selectedRows, 'course_status', 'give', () => {\n        this.selectedRowKeys = selectedRowKeys\n        this.diffSelectedRowsPackageType1 = selectedRows.filter(\n          item => item.package_type === 1 && [1, 2].includes(item.course_status)\n        )\n        this.diffSelectedRowsPackageType2 = selectedRows.filter(\n          item =>\n            item.package_type === 2 &&\n            [1, 2].includes(item.course_status) &&\n            item.is_limit === 0\n        )\n        this.diffSelectedRowsPackageType3 = selectedRows.filter(\n          item =>\n            item.package_type === 2 &&\n            [1, 2].includes(item.course_status) &&\n            item.is_limit === 1\n        )\n        this.giftType =\n          this.diffSelectedRowsPackageType3.length === selectedRows.length ||\n          this.diffSelectedRowsPackageType1.length === selectedRows.length\n            ? 'times'\n            : this.diffSelectedRowsPackageType2.length === selectedRows.length\n            ? 'day'\n            : 'null'\n        return (\n          this.diffSelectedRowsPackageType1.length === selectedRows.length ||\n          this.diffSelectedRowsPackageType2.length === selectedRows.length ||\n          this.diffSelectedRowsPackageType3.length === selectedRows.length\n        )\n      })\n    },\n    checkSelectedRows(selectedRows, key, targetDataKey, checkFn) {\n      this.action[targetDataKey].isShowTip = false\n      const isAvaliable = checkFn()\n      this.action[targetDataKey].isAvaliable =\n        selectedRows.length && isAvaliable\n      if (!isAvaliable) {\n        this.action[targetDataKey].isShowTip = true\n        const timerKey = `timer_${targetDataKey}`\n        clearTimeout(this[timerKey])\n        this[timerKey] = setTimeout(() => {\n          this.action[targetDataKey].isShowTip = false\n        }, 2000)\n      }\n    }\n  }\n}\n",{"version":3,"sources":["package.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"package.vue","sourceRoot":"src/views/pages/shop/sold/course/list","sourcesContent":["<template>\n  <div :class=\"basic()\">\n    <portal to=\"SHOP_SOLD_COURSE_LIST_SEARCH\">\n      <st-input-search\n        v-model=\"$searchQuery.search\"\n        @search=\"onKeywordsSearch('search', $event)\"\n        placeholder=\"请输入课程包名、合同编号、会员姓名或手机号查找\"\n        style=\"width:400px\"\n      />\n    </portal>\n\n    <st-search-panel @search=\"onSearchNative\" @reset=\"onSearchResetNative\">\n      <st-search-panel-item label=\"课程包状态：\">\n        <st-search-radio\n          v-model=\"$searchQuery.course_status\"\n          :options=\"courseStatus\"\n        />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"课程包类型：\">\n        <st-search-radio\n          v-model=\"$searchQuery.is_limit\"\n          :options=\"packageIsLimitOptions$\"\n        />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"课程包属性：\">\n        <st-search-radio\n          v-model=\"$searchQuery.package_type\"\n          :options=\"packageTypes\"\n        />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"是否生效：\">\n        <st-search-radio\n          v-model=\"$searchQuery.effective_state\"\n          :options=\"effectiveWayOptions\"\n        />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"购买时间：\">\n        <st-range-picker :disabledDays=\"180\" v-model=\"date\" />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"生效时间\">\n        <st-range-picker :disabledDays=\"180\" v-model=\"effectiveDate\" />\n      </st-search-panel-item>\n      <st-search-panel-item label=\"到期时间：\">\n        <st-range-picker :disabledDays=\"180\" v-model=\"expireDate\" />\n      </st-search-panel-item>\n    </st-search-panel>\n    <div :class=\"basic('content')\">\n      <div :class=\"basic('content-batch')\" class=\"mg-b16\">\n        <!-- NOTE: 导出 -->\n        <st-button\n          v-if=\"auth.export\"\n          type=\"primary\"\n          class=\"mg-r8\"\n          v-export-excel=\"{\n            type: 'sold/course/package',\n            query: { conditions: $searchQuery }\n          }\"\n        >\n          全部导出\n        </st-button>\n        <st-help-tooltip\n          :isCustom=\"true\"\n          title=\"仅支持范围内课程变更\"\n          :defaultVisible=\"true\"\n          v-if=\"auth.course_range\"\n          v-model=\"action.courseRange.isShowTip\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :disabled=\"!action.courseRange.isAvaliable\"\n            @click=\"onChangeCourse\"\n          >\n            更换上课范围\n          </st-button>\n        </st-help-tooltip>\n        <st-help-tooltip\n          :isCustom=\"true\"\n          title=\"仅支持失效且未退款的课程包\"\n          :defaultVisible=\"true\"\n          v-if=\"auth.reactive\"\n          v-model=\"action.reactive.isShowTip\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :disabled=\"!action.reactive.isAvaliable\"\n            @click=\"onChangeRenew\"\n          >\n            重新激活\n          </st-button>\n        </st-help-tooltip>\n        <st-help-tooltip\n          :isCustom=\"true\"\n          title=\"仅支持有效且已生效的课程包进行延期\"\n          :defaultVisible=\"true\"\n          v-if=\"auth.extendDay\"\n          v-model=\"action.extendDay.isShowTip\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :disabled=\"!action.extendDay.isAvaliable\"\n            @click=\"onChangeExtends\"\n          >\n            延长有效期\n          </st-button>\n        </st-help-tooltip>\n        <st-help-tooltip\n          :isCustom=\"true\"\n          title=\"仅支持有效或冻结状态同一类型的课程包进行操作\"\n          :defaultVisible=\"true\"\n          v-if=\"auth.gift\"\n          v-model=\"action.give.isShowTip\"\n        >\n          <st-button\n            type=\"primary\"\n            class=\"mg-r8\"\n            :disabled=\"!action.give.isAvaliable\"\n            @click=\"onChangeGive\"\n          >\n            赠送额度\n          </st-button>\n        </st-help-tooltip>\n      </div>\n      <st-total\n        :indexs=\"totalColumns\"\n        :dataSource=\"total\"\n        hasTitle\n        class=\"mg-b16\"\n      ></st-total>\n      <div>\n        <st-table\n          :page=\"page\"\n          rowKey=\"id\"\n          :loading=\"loading.getList\"\n          :alertSelection=\"{ onReset: onClear }\"\n          :rowSelection=\"{\n            selectedRowKeys: selectedRowKeys,\n            fixed: true,\n            onChange: onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: disabledSelect(record)\n              }\n            })\n          }\"\n          @change=\"onTableChange\"\n          :scroll=\"{ x: 2100 }\"\n          :columns=\"columns\"\n          :dataSource=\"list\"\n        >\n          <template slot=\"course_name\" slot-scope=\"text, record\">\n            <st-link\n              :value=\"text\"\n              :disabled=\"!record.auth['shop:sold:sold_package_course|get']\"\n              @click=\"onDetail(record)\"\n            ></st-link>\n          </template>\n          <template slot=\"course_status\" slot-scope=\"text\">\n            <st-text\n              :status=\"{\n                success: text === 1,\n                warning: text === 2,\n                error: text === 3\n              }\"\n            >\n              {{ text | enumFilter('sold_common.course_status') }}\n            </st-text>\n          </template>\n          <template slot=\"member_name\" slot-scope=\"text, record\">\n            <template v-if=\"record.is_minors\">\n              <span class=\"word-break\">{{ record.member_name }}(未成年)</span>\n            </template>\n            <template v-else>\n              <span class=\"word-break\">{{ record.member_name }}</span>\n            </template>\n          </template>\n          <template slot=\"mobile\" slot-scope=\"text, record\">\n            <template v-if=\"record.is_minors\">\n              {{ record.parent_mobile }}({{ record.parent_user_role }})\n            </template>\n            <template v-else>\n              {{ record.mobile }}\n            </template>\n          </template>\n          <template slot=\"effective_state\" slot-scope=\"text\">\n            <span>{{ text ? '是' : '否' }}</span>\n          </template>\n          <template slot=\"is_limit\" slot-scope=\"text\">\n            <span>{{ text | enumFilter('package_course.is_limit') }}</span>\n          </template>\n          <template slot=\"sex\" slot-scope=\"text\">\n            {{ text | enumFilter('staff.sex') }}\n          </template>\n          <template slot=\"is_refund\" slot-scope=\"text\">\n            {{ text.name }}\n          </template>\n          <template slot=\"package_type\" slot-scope=\"text\">\n            {{ text | enumFilter('package_course.package_type') }}\n          </template>\n          <template slot=\"sell_time\" slot-scope=\"text, record\">\n            <span class=\"word-break\">\n              {{ record.valid_start_time }} ~ {{ record.course_end_time }}\n            </span>\n          </template>\n          <st-table-actions slot=\"action\" slot-scope=\"text, record\">\n            {{ record.auth }}\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|get']\"\n              @click=\"onDetail(record)\"\n            >\n              详情\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|course_num']\"\n              @click=\"onSurplus(record)\"\n            >\n              修改剩余课时\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|reactivate']\"\n              @click=\"onReactive(record.id)\"\n            >\n              重新激活\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|extension']\"\n              @click=\"onExtend(record.id)\"\n            >\n              延长有效期\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|edit_date']\"\n              @click=\"onUpdateExpirationDate(record.id)\"\n            >\n              有效期修改\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|member_change']\"\n              @click=\"onMemberChange(record.id)\"\n            >\n              成员变更\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|reduce_times']\"\n              @click=\"onDeduction(record.id)\"\n            >\n              扣次\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|frozen']\"\n              @click=\"onFreeze(record)\"\n            >\n              冻结\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|unfrozen']\"\n              @click=\"onUnfreeze(record)\"\n            >\n              取消冻结\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|transfer']\"\n              @click=\"onTransfer(record)\"\n            >\n              转让\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|valid']\"\n              @click=\"onValid(record)\"\n            >\n              立即生效\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|upgrade']\"\n              @click=\"onUpgrade(record)\"\n            >\n              升级\n            </a>\n            <a\n              v-if=\"record.auth['brand_shop:order:order|refund']\"\n              @click=\"onRefund(record)\"\n            >\n              退款\n            </a>\n            <a\n              v-if=\"\n                record.auth['shop:sold:sold_package_course|export_contract']\n              \"\n              @click=\"toContract(record)\"\n            >\n              查看合同\n            </a>\n            <a\n              v-if=\"\n                record.auth[\n                  'shop:sold:sold_package_course|internal_description'\n                ]\n              \"\n              @click=\"internalNoteActions.onOpenModal(record)\"\n            >\n              对内备注\n            </a>\n            <a\n              v-if=\"record.auth['shop:order:order|print']\"\n              @click=\"printService.printSmallTicket(record.order_id)\"\n            >\n              打印小票\n            </a>\n            <a\n              v-if=\"record.auth['shop:sold:sold_package_course|rights_edit']\"\n              v-modal-link=\"{\n                name: 'sold-course-package-update-rights',\n                props: {\n                  id: record.id\n                }\n              }\"\n            >\n              修改售出权益\n            </a>\n          </st-table-actions>\n        </st-table>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport moment from 'moment'\nimport { cloneDeep, filter } from 'lodash-es'\nimport { PackageService } from './package.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns, totalColumns } from './package.config'\nimport StTotal from '@/views/components/total#/total.vue'\nimport SoldCourseFreeze from '@/views/biz-modals/sold/course/freeze'\nimport SoldCourseRefund from '@/views/biz-modals/sold/course/refund'\nimport SoldCourseSurplus from '@/views/biz-modals/sold/course/surplus'\nimport SoldCourseTransfer from '@/views/biz-modals/sold/course/transfer'\nimport SoldCourseScope from '@/views/biz-modals/sold/course/scope'\nimport SoldCourseValid from '@/views/biz-modals/sold/course/valid'\nimport SoldCoursePackageReactive from '@/views/biz-modals/sold/course/package/reactive'\nimport SoldCoursePackageUpgrade from '@/views/biz-modals/sold/course/package/upgrade'\nimport SoldCoursePackageUpdateExpirationDate from '@/views/biz-modals/sold/course/package/update-expiration-date'\nimport SoldCoursePackageReactiveBatch from '@/views/biz-modals/sold/course/package/reactive-batch'\nimport SoldCourseGiftBatch from '@/views/biz-modals/sold/course/package/gift-batch'\nimport SoldCoursePackageExtendDay from '@/views/biz-modals/sold/course/package/extend-day'\nimport SoldCoursePackageDeduction from '@/views/biz-modals/sold/course/package/deduction'\nimport SoldCoursePackageMembeChange from '@/views/biz-modals/sold/course/package/member-change'\nimport SoldCoursePackageExtendDayBatch from '@/views/biz-modals/sold/course/package/extend-day-batch'\nimport SoldCoursePackageUpdateRights from '@/views/biz-modals/sold/course/package/update-rights'\nimport CommonTaskSuccessTip from '@/views/biz-modals/common/task/success-tip'\nimport DealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport { PACKAGE_TYPE, IS_LIMIT } from '@/constants/sold/package'\nimport useInternalNoteActions from '@/hooks/shop/sold-internal-note-actions.hook'\nimport { PRODUCT_TYPE } from '@/constants/sold/transaction'\nimport { PrintService } from '@/services/print.service'\nexport default {\n  name: 'PageShopSoldCoursePackageList',\n  mixins: [tableMixin],\n  bem: {\n    basic: 'page-shop-sold'\n  },\n  components: {\n    StTotal\n  },\n  modals: {\n    SoldCourseFreeze,\n    SoldCourseRefund,\n    SoldCourseSurplus,\n    SoldCourseTransfer,\n    SoldCourseValid,\n    DealGathering,\n    SoldCoursePackageReactive,\n    SoldCoursePackageExtendDay,\n    SoldCoursePackageExtendDayBatch,\n    SoldCoursePackageDeduction,\n    SoldCourseGiftBatch,\n    SoldCoursePackageUpgrade,\n    SoldCoursePackageUpdateExpirationDate,\n    SoldCoursePackageMembeChange,\n    SoldCoursePackageReactiveBatch,\n    SoldCourseScope,\n    CommonTaskSuccessTip,\n    SoldCoursePackageUpdateRights\n  },\n  serviceInject() {\n    return {\n      packageService: PackageService,\n      printService: PrintService\n    }\n  },\n  rxState() {\n    return {\n      list: this.packageService.list$,\n      loading: this.packageService.loading$,\n      page: this.packageService.page$,\n      packageIsLimitOptions$: this.packageService.packageIsLimitOptions$,\n      courseStatus: this.packageService.courseStatus$,\n      packageTypes: this.packageService.packageTypes$,\n      effectiveWay: this.packageService.effectiveWay$,\n      auth: this.packageService.auth$,\n      total: this.packageService.total$\n    }\n  },\n  data() {\n    return {\n      PACKAGE_TYPE,\n      IS_LIMIT,\n      visible: false,\n      // 结束时间面板是否显示\n      endOpen: false,\n      selectedRowKeys: [],\n      selectedRows: [],\n      diffSelectedRows: [],\n      date: [],\n      giftType: 'null',\n      effectiveDate: [],\n      expireDate: [],\n      action: {\n        /**\n         * 更换上课范围\n         */\n        courseRange: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 延长卡有效期\n         */\n        extendDay: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 重新激活\n         */\n        reactive: {\n          isAvaliable: false,\n          isShowTip: false\n        },\n        /**\n         * 重新激活\n         */\n        give: {\n          isAvaliable: false,\n          isShowTip: false\n        }\n      }\n    }\n  },\n  hooks() {\n    return {\n      internalNoteActions: useInternalNoteActions()\n    }\n  },\n  mounted() {\n    this.setSearchData()\n  },\n  computed: {\n    columns,\n    totalColumns,\n    isLimit() {\n      return false\n    },\n    effectiveWayOptions() {\n      return [\n        {\n          label: '全部',\n          value: -1\n        },\n        {\n          label: '是',\n          value: 1\n        },\n        {\n          label: '否',\n          value: 0\n        }\n      ]\n    }\n  },\n  methods: {\n    disabledSelect(record) {\n      return false\n    },\n    onUpdateExpirationDate(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-update-expiration-date',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onMemberChange(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-membe-change',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onDeduction(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-deduction',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onChangeRenew() {\n      this.$modalRouter.push({\n        name: 'sold-course-package-reactive-batch',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    onChangeExtends() {\n      this.$modalRouter.push({\n        name: 'sold-course-package-extend-day-batch',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery)\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    onChangeGive() {\n      let { selectedRowKeys, isLimit, giftType } = this\n      this.$modalRouter.push({\n        name: 'sold-course-gift-batch',\n        props: {\n          ids: selectedRowKeys,\n          searchQuery: cloneDeep(this.$searchQuery),\n          isLimit,\n          giftType\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    onValid(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-valid',\n        props: {\n          info: record\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    onExtend(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-extend-day',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    // 激活\n    onReactive(id) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-reactive',\n        props: {\n          id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    // 升级\n    onUpgrade(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-package-upgrade',\n        props: {\n          id: record.id\n        },\n        on: {\n          success: res => {\n            if (res.type === 'create') {\n              // 创建订单成功\n              this.$router.reload()\n              this.onClear()\n            } else if (res.type === 'createPay') {\n              // 创建订单成功 并且到支付页面\n              this.$modalRouter.push({\n                name: 'deal-gathering',\n                props: {\n                  order_id: res.orderId,\n                  type: 'package'\n                },\n                on: {\n                  success: () => {\n                    this.$router.reload()\n                    this.onClear()\n                  }\n                }\n              })\n            }\n          }\n        }\n      })\n    },\n    // 清空列表选择\n    onClear() {\n      this.selectedRowKeys = []\n      this.selectedRows = []\n    },\n    // 变更上课范围\n    onChangeCourse() {\n      this.$modalRouter.push({\n        name: 'sold-course-scope',\n        props: {\n          ids: this.selectedRowKeys,\n          searchQuery: this.$searchQuery\n        },\n        on: {\n          success: () => {\n            this.successTip()\n          }\n        }\n      })\n    },\n    successTip() {\n      this.$modalRouter.push({\n        name: 'common-task-success-tip',\n        on: {\n          success: () => {\n            this.$router.reload()\n            this.onClear()\n          }\n        }\n      })\n    },\n    onPageChange(data) {\n      this.$router.push({\n        query: { ...this.$searchQuery, page: data.current, size: data.pageSize }\n      })\n    },\n    // 修改剩余课时\n    onSurplus(record) {\n      const time = record.effective_state\n        ? `${moment(record.course_buy_time).format(\n            'YYYY-MM-DD HH:mm'\n          )} 至 ${moment(record.course_end_time).format('YYYY-MM-DD HH:mm')}`\n        : '--'\n      let data = {\n        id: record.id,\n        courseName: record.course_name,\n        effective_state: record.effective_state,\n        time\n      }\n      this.$modalRouter.push({\n        name: 'sold-course-surplus',\n        props: {\n          courseType: 'coursePackage',\n          courseData: data\n        },\n        on: {\n          success() {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 冻结\n    onFreeze(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-freeze',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 取消冻结\n    onUnfreeze(record) {\n      this.$confirm({\n        title: '提示',\n        content: '是否取消冻结？',\n        maskClosable: true,\n        onOk: () => {\n          this.packageService\n            .unFreeze(record.id)\n            .toPromise()\n            .then(() => {\n              this.$router.reload()\n            })\n        }\n      })\n    },\n    // 转让\n    onTransfer(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-transfer',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 跳转合同\n    toContract(record) {\n      let url = `${window.location.origin}/common/contract-preview?id=${record.order_id}`\n      window.open(url)\n    },\n    // 退款\n    onRefund(record) {\n      this.$modalRouter.push({\n        name: 'sold-course-refund',\n        props: {\n          type: 'package',\n          id: record.id\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 详情\n    onDetail(record) {\n      this.$router.push({\n        path: `/shop/sold/course/info/package/info/operation-record`,\n        query: { id: record.id }\n      })\n    },\n    // 查询\n    onSearchNative() {\n      this.$searchQuery.start_time = this.date[0]\n        ? `${this.date[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.end_time = this.date[1]\n        ? `${this.date[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.$searchQuery.valid_time_start = this.effectiveDate[0]\n        ? `${this.effectiveDate[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.valid_time_end = this.effectiveDate[1]\n        ? `${this.effectiveDate[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.$searchQuery.expire_start_time = this.expireDate[0]\n        ? `${this.expireDate[0].format('YYYY-MM-DD')} 00:00:00`\n        : ''\n      this.$searchQuery.expire_end_time = this.expireDate[1]\n        ? `${this.expireDate[1].format('YYYY-MM-DD')} 23:59:59`\n        : ''\n      this.onSearch()\n    },\n    onSearchResetNative() {\n      this.date = [null, null]\n      this.effectiveDate = [null, null]\n      this.expireDate = [null, null]\n      this.onSearchReset()\n    },\n    // 设置searchData\n    setSearchData() {\n      const start = this.$searchQuery.start_time\n        ? cloneDeep(moment(this.$searchQuery.start_time))\n        : null\n      const end = this.$searchQuery.end_time\n        ? cloneDeep(moment(this.$searchQuery.end_time))\n        : null\n      const validStart = this.$searchQuery.valid_time_start\n        ? cloneDeep(moment(this.$searchQuery.valid_time_start))\n        : null\n      const validEnd = this.$searchQuery.valid_time_end\n        ? cloneDeep(moment(this.$searchQuery.valid_time_end))\n        : null\n      const expireStart = this.$searchQuery.expire_start_time\n        ? cloneDeep(moment(this.$searchQuery.expire_start_time))\n        : null\n      const expireEnd = this.$searchQuery.expire_end_time\n        ? cloneDeep(moment(this.$searchQuery.expire_end_time))\n        : null\n      this.date = [start, end]\n      this.effectiveDate = [validStart, validEnd]\n      this.expireDate = [expireStart, expireEnd]\n    },\n    moment,\n    onSelectChange(selectedRowKeys, selectedRows) {\n      this.checkSelectedRows(\n        selectedRows,\n        'course_status',\n        'courseRange',\n        () => {\n          this.selectedRowKeys = selectedRowKeys\n          this.diffSelectedRows = selectedRows.filter(\n            item => item.package_type === 2 && item.course_status !== 3\n          )\n          return this.diffSelectedRows.length\n        }\n      )\n      this.checkSelectedRows(selectedRows, 'course_status', 'extendDay', () => {\n        return (\n          selectedRows.filter(item => item.course_status === 1).length ===\n          selectedRows.length\n        )\n      })\n      this.checkSelectedRows(selectedRows, 'course_status', 'reactive', () => {\n        return (\n          selectedRows.filter(\n            item => item.course_status === 3 && item.is_refund.id === 0\n          ).length === selectedRows.length\n        )\n      })\n      // 批量赠送额度除了固定课程包，只要是有效和冻结的都可以赠送额度。但是都应该是同一类型\n      // 都是任意课程包，都是范围不限次，都是范围限次按钮才会亮。因为只有范围不限次弹窗是赠送天数，任意课程包和范围限次是赠送次数\n      this.checkSelectedRows(selectedRows, 'course_status', 'give', () => {\n        this.selectedRowKeys = selectedRowKeys\n        this.diffSelectedRowsPackageType1 = selectedRows.filter(\n          item => item.package_type === 1 && [1, 2].includes(item.course_status)\n        )\n        this.diffSelectedRowsPackageType2 = selectedRows.filter(\n          item =>\n            item.package_type === 2 &&\n            [1, 2].includes(item.course_status) &&\n            item.is_limit === 0\n        )\n        this.diffSelectedRowsPackageType3 = selectedRows.filter(\n          item =>\n            item.package_type === 2 &&\n            [1, 2].includes(item.course_status) &&\n            item.is_limit === 1\n        )\n        this.giftType =\n          this.diffSelectedRowsPackageType3.length === selectedRows.length ||\n          this.diffSelectedRowsPackageType1.length === selectedRows.length\n            ? 'times'\n            : this.diffSelectedRowsPackageType2.length === selectedRows.length\n            ? 'day'\n            : 'null'\n        return (\n          this.diffSelectedRowsPackageType1.length === selectedRows.length ||\n          this.diffSelectedRowsPackageType2.length === selectedRows.length ||\n          this.diffSelectedRowsPackageType3.length === selectedRows.length\n        )\n      })\n    },\n    checkSelectedRows(selectedRows, key, targetDataKey, checkFn) {\n      this.action[targetDataKey].isShowTip = false\n      const isAvaliable = checkFn()\n      this.action[targetDataKey].isAvaliable =\n        selectedRows.length && isAvaliable\n      if (!isAvaliable) {\n        this.action[targetDataKey].isShowTip = true\n        const timerKey = `timer_${targetDataKey}`\n        clearTimeout(this[timerKey])\n        this[timerKey] = setTimeout(() => {\n          this.action[targetDataKey].isShowTip = false\n        }, 2000)\n      }\n    }\n  }\n}\n</script>\n"]}]}