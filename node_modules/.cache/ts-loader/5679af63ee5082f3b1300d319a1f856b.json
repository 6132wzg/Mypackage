{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/cabinet.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/cabinet.service.ts","mtime":1601345845268},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { TemporaryCabinetApi } from '@/api/v1/setting/cabinet/temporary';\nimport { LongTermCabinetApi } from '@/api/v1/setting/cabinet/long-term';\nimport { CabinetApi } from '@/api/v1/setting/cabinet';\n\nvar CabinetService = /*#__PURE__*/function () {\n  function CabinetService(temporaryCabinetApi, longTermCabinetApi, cabinetApi) {\n    _classCallCheck(this, CabinetService);\n\n    this.temporaryCabinetApi = temporaryCabinetApi;\n    this.longTermCabinetApi = longTermCabinetApi;\n    this.cabinetApi = cabinetApi;\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.loading$ = new State({});\n  }\n\n  _createClass(CabinetService, [{\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      var type = query.type;\n      var id = query.id || 0;\n      var cabinetApi = type === 'long-term' ? this.longTermCabinetApi : this.temporaryCabinetApi;\n      return cabinetApi.getList(id, query).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"getCabinetUseRecord\",\n    value: function getCabinetUseRecord(query) {\n      var _this2 = this;\n\n      var params = {\n        cabinet_area_id: query.id || 0,\n        cabinet_type: query.cabinet_type,\n        action_type: query.action_type,\n        date_start: query.date_start,\n        date_end: query.date_end,\n        keywords: query.keywords,\n        current_page: query.current_page,\n        size: query.size\n      };\n      return this.cabinetApi.getCabinetUseRecord(params).pipe(tap(function (res) {\n        _this2.list$.commit(function () {\n          return res.list;\n        });\n\n        _this2.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeRouteUpdate\",\n    value: function beforeRouteUpdate(to) {\n      var query = to.meta.query;\n      var type = query.type;\n\n      if (type === 'record') {\n        return this.getCabinetUseRecord(query);\n      } else {\n        console.log('query', query);\n        return this.getList(query);\n      }\n    }\n  }]);\n\n  return CabinetService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CabinetService.prototype, \"getList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CabinetService.prototype, \"getCabinetUseRecord\", null);\n\nCabinetService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof TemporaryCabinetApi !== \"undefined\" && TemporaryCabinetApi) === \"function\" ? _a : Object, typeof (_b = typeof LongTermCabinetApi !== \"undefined\" && LongTermCabinetApi) === \"function\" ? _b : Object, typeof (_c = typeof CabinetApi !== \"undefined\" && CabinetApi) === \"function\" ? _c : Object])], CabinetService);\nexport { CabinetService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/cabinet.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Injectable, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { TemporaryCabinetApi } from '@/api/v1/setting/cabinet/temporary'\nimport { LongTermCabinetApi } from '@/api/v1/setting/cabinet/long-term'\nimport { CabinetApi } from '@/api/v1/setting/cabinet'\n@Injectable()\nexport class CabinetService implements Controller {\n  list$ = new State([])\n  page$ = new State({})\n  loading$ = new State({})\n  constructor(\n    private temporaryCabinetApi: TemporaryCabinetApi,\n    private longTermCabinetApi: LongTermCabinetApi,\n    private cabinetApi: CabinetApi\n  ) {}\n  @Effect()\n  getList(query: any) {\n    const type = query.type\n    const id = query.id || 0\n    const cabinetApi =\n      type === 'long-term' ? this.longTermCabinetApi : this.temporaryCabinetApi\n    return cabinetApi.getList(id, query).pipe(\n      tap(res => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  @Effect()\n  getCabinetUseRecord(query: any) {\n    let params = {\n      cabinet_area_id: query.id || 0,\n      cabinet_type: query.cabinet_type,\n      action_type: query.action_type,\n      date_start: query.date_start,\n      date_end: query.date_end,\n      keywords: query.keywords,\n      current_page: query.current_page,\n      size: query.size\n    }\n    return this.cabinetApi.getCabinetUseRecord(params).pipe(\n      tap(res => {\n        this.list$.commit(() => res.list)\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  beforeRouteUpdate(to: ServiceRoute) {\n    const query = to.meta.query\n    const type = query.type\n    if (type === 'record') {\n      return this.getCabinetUseRecord(query)\n    } else {\n      console.log('query', query)\n      return this.getList(query)\n    }\n  }\n}\n"],"sourceRoot":""}]}