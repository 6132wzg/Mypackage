{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/staff/re-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/staff/re-password.vue","mtime":1591147717254},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport StaffInfo from \"./staff-info\";\nimport { RePasswordService } from \"./re-password.service\";\nimport { ruleOptions } from \"./re-password.config\";\nexport default {\n  name: 'RePassword',\n  serviceInject: function serviceInject() {\n    return {\n      rePasswordService: RePasswordService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.rePasswordService.loading$,\n      rePasswordInfo: this.rePasswordService.rePasswordInfo$\n    };\n  },\n  components: {\n    StaffInfo: StaffInfo\n  },\n  props: {\n    staff: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      openJurisdiction: false,\n      openRepassword: false,\n      // 重置密码\n      show: false\n    };\n  },\n  computed: {\n    is_permission: function is_permission() {\n      return this.rePasswordInfo.is_permission;\n    },\n    hasAccountName: function hasAccountName() {\n      return this.rePasswordInfo.account_name;\n    },\n    bindAccount: function bindAccount() {\n      return this.rePasswordInfo && this.rePasswordInfo.wechat && this.rePasswordInfo.mail && this.rePasswordInfo.phone && this.rePasswordInfo.QQ;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    changePermission: function changePermission(e) {\n      this.openJurisdiction = e.target.checked;\n    },\n    init: function init() {\n      var _this = this;\n\n      this.rePasswordService.getRePassword(this.staff.id).subscribe(function (res) {\n        res = res.account;\n        _this.openJurisdiction = !!res.is_permission;\n        var form = {\n          password: res.password,\n          repeat_password: res.repeat_password\n        };\n\n        if (_this.hasAccountName) {\n          form = Object.assign(form, {\n            name: res.account_name\n          });\n        }\n\n        _this.openRepassword && _this.form.setFieldsValue(form);\n      });\n    },\n    onClickRePassword: function onClickRePassword() {\n      this.openRepassword = true;\n    },\n    onSubmit: function onSubmit() {\n      var _this2 = this;\n\n      this.form.validate().then(function (values) {\n        var form = _objectSpread({\n          id: _this2.staff.id,\n          is_permission: +_this2.openJurisdiction\n        }, values);\n\n        if (!_this2.hasAccountName) {\n          if (values.name && values.password && values.repeat_password) {\n            _this2.rePasswordService.setAccount(form).subscribe(function () {\n              _this2.show = false;\n\n              _this2.$router.reload();\n            });\n          } else {\n            _this2.rePasswordService.updatepermission(_this2.staff.id, {\n              is_permission: +_this2.openJurisdiction\n            }).subscribe(function () {\n              _this2.show = false;\n\n              _this2.$router.reload();\n            });\n          }\n        } else {\n          if (values.password && values.repeat_password) {\n            _this2.rePasswordService.rePassword(form).subscribe(function () {\n              _this2.show = false;\n\n              _this2.$router.reload();\n            });\n          } else {\n            _this2.rePasswordService.updatepermission(_this2.staff.id, {\n              is_permission: +_this2.openJurisdiction\n            }).subscribe(function () {\n              _this2.show = false;\n\n              _this2.$router.reload();\n            });\n          }\n\n          _this2.show = false;\n        }\n      });\n    }\n  }\n};",null]}