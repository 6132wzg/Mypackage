{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/hooks/card-actions.hook.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/hooks/card-actions.hook.js","mtime":1600926555614},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport SoldCardUpgradeMember from '@/views/biz-modals/sold/card/upgrade-member';\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip';\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering';\nimport SoldDealChangeMember from '@/views/biz-modals/sold/deal/change-member';\nimport SoldDealWaitPay from '@/views/biz-modals/brand/app/pos/wait-pay-result';\nimport SoldDealMemberCardTransaction from '@/views/biz-modals/sold/deal/member-card-transaction';\n\nvar useCardActions = function useCardActions() {\n  return {\n    modals: {\n      SoldDealWaitPay: SoldDealWaitPay,\n      SoldCardUpgradeMember: SoldCardUpgradeMember,\n      SoldDealGatheringTip: SoldDealGatheringTip,\n      SoldDealGathering: SoldDealGathering,\n      SoldDealChangeMember: SoldDealChangeMember,\n      SoldDealMemberCardTransaction: SoldDealMemberCardTransaction\n    },\n    methods: {\n      upgradeCard: function upgradeCard(record) {\n        var _this = this;\n\n        this.$modalRouter.push({\n          name: 'sold-card-upgrade-member',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: function () {\n              var _success = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n                var props, orderSuccessRes, _props, payOrderRes;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _this.$emit('success');\n\n                        if (!(res.type === 'create')) {\n                          _context.next = 9;\n                          break;\n                        }\n\n                        // 创建订单成功\n                        props = {\n                          order_id: res.orderId,\n                          type: 'member',\n                          message: '订单创建成功',\n                          needPay: true\n                        };\n                        _context.next = 5;\n                        return _this.createdGatheringTip(props);\n\n                      case 5:\n                        orderSuccessRes = _context.sent;\n\n                        _this.tipCallBack(res.orderId, 'member', orderSuccessRes.type, res.soldId, res.isFamilyCard);\n\n                        _context.next = 15;\n                        break;\n\n                      case 9:\n                        if (!(res.type === 'createPay')) {\n                          _context.next = 15;\n                          break;\n                        }\n\n                        // 创建订单成功 并且到支付页面\n                        _props = {\n                          order_id: res.orderId,\n                          type: 'member'\n                        };\n                        _context.next = 13;\n                        return _this.createdOrderPay(_props);\n\n                      case 13:\n                        payOrderRes = _context.sent;\n\n                        _this.payCallBack(res.orderId, 'member', payOrderRes, res.soldId, res.isFamilyCard);\n\n                      case 15:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              function success(_x) {\n                return _success.apply(this, arguments);\n              }\n\n              return success;\n            }()\n          }\n        });\n      },\n      // 续卡\n      onRenewal: function onRenewal(record) {\n        var _this2 = this;\n\n        this.$modalRouter.push({\n          name: 'sold-deal-member-card-transaction',\n          props: {\n            id: record.id,\n            type: 'renewal',\n            title: \"\".concat(this.$c('member_card'), \"\\u7EED\\u5361\")\n          },\n          on: {\n            success: function () {\n              var _success2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n                var props, orderSuccessRes, _props2, payOrderRes;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!(res.type === 'create')) {\n                          _context2.next = 8;\n                          break;\n                        }\n\n                        // 创建订单成功\n                        props = {\n                          order_id: res.orderId,\n                          type: 'member',\n                          message: '订单创建成功',\n                          needPay: true\n                        };\n                        _context2.next = 4;\n                        return _this2.createdGatheringTip(props);\n\n                      case 4:\n                        orderSuccessRes = _context2.sent;\n\n                        _this2.tipCallBack(res.orderId, 'member', orderSuccessRes.type, res.soldId, res.isFamilyCard);\n\n                        _context2.next = 14;\n                        break;\n\n                      case 8:\n                        if (!(res.type === 'createPay')) {\n                          _context2.next = 14;\n                          break;\n                        }\n\n                        // 创建订单成功 并且到支付页面\n                        _props2 = {\n                          order_id: res.orderId,\n                          type: 'member'\n                        };\n                        _context2.next = 12;\n                        return _this2.createdOrderPay(_props2);\n\n                      case 12:\n                        payOrderRes = _context2.sent;\n\n                        _this2.payCallBack(res.orderId, 'member', payOrderRes, res.soldId, res.isFamilyCard);\n\n                      case 14:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              function success(_x2) {\n                return _success2.apply(this, arguments);\n              }\n\n              return success;\n            }()\n          }\n        });\n      },\n      // 变更成员\n      onChangeMember: function onChangeMember(record) {\n        var _this3 = this;\n\n        this.$modalRouter.push({\n          name: 'sold-deal-change-member',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: function success() {\n              _this3.$emit('refresh');\n            }\n          }\n        });\n      },\n      // 订单收款modal\n      createdOrderPay: function createdOrderPay(props) {\n        var _this4 = this;\n\n        return new Promise(function (resolve, reject) {\n          _this4.$modalRouter.push({\n            name: 'sold-deal-gathering',\n            props: props,\n            on: {\n              success: resolve\n            }\n          });\n        });\n      },\n      createdWaitPay: function createdWaitPay(props) {\n        var _this5 = this;\n\n        return new Promise(function (resolve, reject) {\n          _this5.$modalRouter.push({\n            name: 'sold-deal-wait-pay',\n            props: props,\n            on: {\n              success: resolve\n            }\n          });\n        });\n      },\n      // 订单收款回调\n      payCallBack: function () {\n        var _payCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(orderId, modalType, callBack, soldId, isFamilyCard) {\n          var _this6 = this;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  console.log('订单收款回调', orderId, modalType, callBack);\n                  _context3.t0 = callBack.type;\n                  _context3.next = _context3.t0 === 'cancel' ? 4 : _context3.t0 === 'pay' ? 6 : _context3.t0 === 'pos' ? 8 : 10;\n                  break;\n\n                case 4:\n                  this.$emit('refresh');\n                  return _context3.abrupt(\"break\", 10);\n\n                case 6:\n                  this.createdGatheringTip({\n                    message: '收款成功',\n                    order_id: orderId,\n                    isFamilyCard: isFamilyCard\n                  }).then(function (res) {\n                    _this6.tipCallBack(orderId, modalType, res.type, soldId);\n                  });\n                  return _context3.abrupt(\"break\", 10);\n\n                case 8:\n                  this.createdWaitPay(callBack).then(function () {\n                    console.log(callBack);\n\n                    _this6.createdGatheringTip({\n                      message: '收款成功',\n                      order_id: orderId\n                    }).then(function (res) {\n                      _this6.tipCallBack(orderId, modalType, res.type, soldId);\n                    });\n                  });\n                  return _context3.abrupt(\"break\", 10);\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function payCallBack(_x3, _x4, _x5, _x6, _x7) {\n          return _payCallBack.apply(this, arguments);\n        }\n\n        return payCallBack;\n      }(),\n      // 创建成功，提示框modal\n      createdGatheringTip: function createdGatheringTip(props) {\n        var _this7 = this;\n\n        return new Promise(function (resolve, reject) {\n          _this7.$modalRouter.push({\n            name: 'sold-deal-gathering-tip',\n            props: props,\n            on: {\n              success: resolve\n            }\n          });\n        });\n      },\n      // 提示框回调，gathering-tip\n      tipCallBack: function () {\n        var _tipCallBack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(orderId, modalType, callBackType, soldId, isFamilyCard) {\n          var _this8 = this;\n\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.t0 = callBackType;\n                  _context4.next = _context4.t0 === 'cancel' ? 3 : _context4.t0 === 'Print' ? 5 : _context4.t0 === 'PrintOrder' ? 8 : _context4.t0 === 'ViewOrder' ? 10 : _context4.t0 === 'Pay' ? 13 : _context4.t0 === 'ChangeMember' ? 15 : 17;\n                  break;\n\n                case 3:\n                  // this.$router.reload()\n                  this.$emit('refresh');\n                  return _context4.abrupt(\"break\", 17);\n\n                case 5:\n                  this.$emit('refresh');\n                  this.createdOrderPrint(orderId);\n                  return _context4.abrupt(\"break\", 17);\n\n                case 8:\n                  this.printOrder(orderId);\n                  return _context4.abrupt(\"break\", 17);\n\n                case 10:\n                  this.$emit('refresh');\n                  this.createdOrderViewOrder(orderId);\n                  return _context4.abrupt(\"break\", 17);\n\n                case 13:\n                  this.createdOrderPay({\n                    order_id: orderId,\n                    type: modalType\n                  }).then(function (res) {\n                    _this8.payCallBack(orderId, modalType, res, soldId, isFamilyCard);\n                  });\n                  return _context4.abrupt(\"break\", 17);\n\n                case 15:\n                  this.onChangeMember({\n                    id: soldId\n                  });\n                  return _context4.abrupt(\"break\", 17);\n\n                case 17:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        function tipCallBack(_x8, _x9, _x10, _x11, _x12) {\n          return _tipCallBack.apply(this, arguments);\n        }\n\n        return tipCallBack;\n      }(),\n      // 打印小票\n      printOrder: function printOrder(order_id) {\n        window.open('/ticket/gathering-print?id=' + order_id, '_blank', 'width=800,height=600');\n      },\n      // 打印合同\n      createdOrderPrint: function createdOrderPrint(order_id) {\n        var url = \"\".concat(window.location.origin, \"/common/contract-preview?id=\").concat(order_id);\n        window.open(url);\n      },\n      // 查看订单\n      createdOrderViewOrder: function createdOrderViewOrder(order_id) {\n        this.$router.push({\n          name: 'shop-finance-order-info-collection-details',\n          query: {\n            id: order_id\n          }\n        });\n      }\n    }\n  };\n};\n\nexport default useCardActions;",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/hooks/card-actions.hook.js"],"names":["SoldCardUpgradeMember","SoldDealGatheringTip","SoldDealGathering","SoldDealChangeMember","SoldDealWaitPay","SoldDealMemberCardTransaction","useCardActions","modals","methods","upgradeCard","record","$modalRouter","push","name","props","id","on","success","res","$emit","type","order_id","orderId","message","needPay","createdGatheringTip","orderSuccessRes","tipCallBack","soldId","isFamilyCard","createdOrderPay","payOrderRes","payCallBack","onRenewal","title","$c","onChangeMember","Promise","resolve","reject","createdWaitPay","modalType","callBack","console","log","then","callBackType","createdOrderPrint","printOrder","createdOrderViewOrder","window","open","url","location","origin","$router","query"],"mappings":"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","sourcesContent":["import SoldCardUpgradeMember from '@/views/biz-modals/sold/card/upgrade-member'\nimport SoldDealGatheringTip from '@/views/biz-modals/sold/deal/gathering-tip'\nimport SoldDealGathering from '@/views/biz-modals/sold/deal/gathering'\nimport SoldDealChangeMember from '@/views/biz-modals/sold/deal/change-member'\nimport SoldDealWaitPay from '@/views/biz-modals/brand/app/pos/wait-pay-result'\nimport SoldDealMemberCardTransaction from '@/views/biz-modals/sold/deal/member-card-transaction'\nconst useCardActions = () => {\n  return {\n    modals: {\n      SoldDealWaitPay,\n      SoldCardUpgradeMember,\n      SoldDealGatheringTip,\n      SoldDealGathering,\n      SoldDealChangeMember,\n      SoldDealMemberCardTransaction\n    },\n    methods: {\n      upgradeCard(record) {\n        this.$modalRouter.push({\n          name: 'sold-card-upgrade-member',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: async res => {\n              this.$emit('success')\n              if (res.type === 'create') {\n                // 创建订单成功\n                let props = {\n                  order_id: res.orderId,\n                  type: 'member',\n                  message: '订单创建成功',\n                  needPay: true\n                }\n                let orderSuccessRes = await this.createdGatheringTip(props)\n                this.tipCallBack(\n                  res.orderId,\n                  'member',\n                  orderSuccessRes.type,\n                  res.soldId,\n                  res.isFamilyCard\n                )\n              } else if (res.type === 'createPay') {\n                // 创建订单成功 并且到支付页面\n                let props = {\n                  order_id: res.orderId,\n                  type: 'member'\n                }\n                let payOrderRes = await this.createdOrderPay(props)\n                this.payCallBack(\n                  res.orderId,\n                  'member',\n                  payOrderRes,\n                  res.soldId,\n                  res.isFamilyCard\n                )\n              }\n            }\n          }\n        })\n      },\n      // 续卡\n      onRenewal(record) {\n        this.$modalRouter.push({\n          name: 'sold-deal-member-card-transaction',\n          props: {\n            id: record.id,\n            type: 'renewal',\n            title: `${this.$c('member_card')}续卡`\n          },\n          on: {\n            success: async res => {\n              if (res.type === 'create') {\n                // 创建订单成功\n                let props = {\n                  order_id: res.orderId,\n                  type: 'member',\n                  message: '订单创建成功',\n                  needPay: true\n                }\n                let orderSuccessRes = await this.createdGatheringTip(props)\n                this.tipCallBack(\n                  res.orderId,\n                  'member',\n                  orderSuccessRes.type,\n                  res.soldId,\n                  res.isFamilyCard\n                )\n              } else if (res.type === 'createPay') {\n                // 创建订单成功 并且到支付页面\n                let props = {\n                  order_id: res.orderId,\n                  type: 'member'\n                }\n                let payOrderRes = await this.createdOrderPay(props)\n                this.payCallBack(\n                  res.orderId,\n                  'member',\n                  payOrderRes,\n                  res.soldId,\n                  res.isFamilyCard\n                )\n              }\n            }\n          }\n        })\n      },\n      // 变更成员\n      onChangeMember(record) {\n        this.$modalRouter.push({\n          name: 'sold-deal-change-member',\n          props: {\n            id: record.id\n          },\n          on: {\n            success: () => {\n              this.$emit('refresh')\n            }\n          }\n        })\n      },\n      // 订单收款modal\n      createdOrderPay(props) {\n        return new Promise((resolve, reject) => {\n          this.$modalRouter.push({\n            name: 'sold-deal-gathering',\n            props,\n            on: {\n              success: resolve\n            }\n          })\n        })\n      },\n      createdWaitPay(props) {\n        return new Promise((resolve, reject) => {\n          this.$modalRouter.push({\n            name: 'sold-deal-wait-pay',\n            props,\n            on: {\n              success: resolve\n            }\n          })\n        })\n      },\n      // 订单收款回调\n      async payCallBack(orderId, modalType, callBack, soldId, isFamilyCard) {\n        console.log('订单收款回调', orderId, modalType, callBack)\n        switch (callBack.type) {\n          case 'cancel':\n            this.$emit('refresh')\n            break\n          case 'pay':\n            this.createdGatheringTip({\n              message: '收款成功',\n              order_id: orderId,\n              isFamilyCard\n            }).then(res => {\n              this.tipCallBack(orderId, modalType, res.type, soldId)\n            })\n            break\n          case 'pos':\n            this.createdWaitPay(callBack).then(() => {\n              console.log(callBack)\n              this.createdGatheringTip({\n                message: '收款成功',\n                order_id: orderId\n              }).then(res => {\n                this.tipCallBack(orderId, modalType, res.type, soldId)\n              })\n            })\n            break\n        }\n      },\n      // 创建成功，提示框modal\n      createdGatheringTip(props) {\n        return new Promise((resolve, reject) => {\n          this.$modalRouter.push({\n            name: 'sold-deal-gathering-tip',\n            props,\n            on: {\n              success: resolve\n            }\n          })\n        })\n      },\n      // 提示框回调，gathering-tip\n      async tipCallBack(\n        orderId,\n        modalType,\n        callBackType,\n        soldId,\n        isFamilyCard\n      ) {\n        switch (callBackType) {\n          case 'cancel':\n            // this.$router.reload()\n            this.$emit('refresh')\n            break\n          case 'Print':\n            this.$emit('refresh')\n            this.createdOrderPrint(orderId)\n            break\n          case 'PrintOrder':\n            this.printOrder(orderId)\n            break\n          case 'ViewOrder':\n            this.$emit('refresh')\n            this.createdOrderViewOrder(orderId)\n            break\n          case 'Pay':\n            this.createdOrderPay({ order_id: orderId, type: modalType }).then(\n              res => {\n                this.payCallBack(orderId, modalType, res, soldId, isFamilyCard)\n              }\n            )\n            break\n          case 'ChangeMember':\n            this.onChangeMember({\n              id: soldId\n            })\n            break\n        }\n      },\n      // 打印小票\n      printOrder(order_id) {\n        window.open(\n          '/ticket/gathering-print?id=' + order_id,\n          '_blank',\n          'width=800,height=600'\n        )\n      },\n      // 打印合同\n      createdOrderPrint(order_id) {\n        let url = `${window.location.origin}/common/contract-preview?id=${order_id}`\n        window.open(url)\n      },\n      // 查看订单\n      createdOrderViewOrder(order_id) {\n        this.$router.push({\n          name: 'shop-finance-order-info-collection-details',\n          query: {\n            id: order_id\n          }\n        })\n      }\n    }\n  }\n}\n\nexport default useCardActions\n"]}]}