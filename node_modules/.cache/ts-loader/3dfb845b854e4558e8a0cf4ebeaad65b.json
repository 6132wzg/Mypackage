{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/edit.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/edit.service.ts","mtime":1591147717394},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { MemberApi, UpdateMemberEdit } from '@/api/v1/member';\nimport { forkJoin } from 'rxjs';\nimport { UserService } from '@/services/user.service';\n\nvar EditService = /*#__PURE__*/function () {\n  function EditService(memberApi, userService) {\n    _classCallCheck(this, EditService);\n\n    this.memberApi = memberApi;\n    this.userService = userService;\n    this.loading$ = new State({});\n    this.info$ = new State({});\n    this.countryInfo$ = new State({});\n    this.nations$ = new State([]);\n    this.countryList$ = new State([]);\n    this.minorsType$ = this.userService.getOptions$('small_course.minors_type');\n    this.parentType$ = this.userService.getOptions$('small_course.parent_type');\n  }\n\n  _createClass(EditService, [{\n    key: \"getMemberEdit\",\n    value: function getMemberEdit(id) {\n      var _this = this;\n\n      return this.memberApi.getMemberEdit(id).pipe(tap(function (res) {\n        _this.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"getCountries\",\n    value: function getCountries() {\n      var _this2 = this;\n\n      return this.memberApi.getCountries().pipe(tap(function (res) {\n        _this2.countryInfo$.commit(function () {\n          return res.country_info;\n        });\n      }));\n    }\n  }, {\n    key: \"getParentInfoByPhone\",\n    value: function getParentInfoByPhone(params) {\n      return this.memberApi.getParentInfoByPhone(params);\n    }\n  }, {\n    key: \"getCountryCodes\",\n    value: function getCountryCodes() {\n      var _this3 = this;\n\n      return this.memberApi.getCountryCodes().pipe(tap(function (res) {\n        _this3.countryList$.commit(function () {\n          return res;\n        });\n      }));\n    }\n  }, {\n    key: \"getNations\",\n    value: function getNations() {\n      var _this4 = this;\n\n      return this.memberApi.getNations().pipe(tap(function (res) {\n        _this4.nations$.commit(function () {\n          return res.nation_info;\n        });\n      }));\n    }\n  }, {\n    key: \"updateMemberEdit\",\n    value: function updateMemberEdit(id, params) {\n      return this.memberApi.updateMemberEdit(id, params);\n    }\n  }, {\n    key: \"serviceInit\",\n    value: function serviceInit(member_id) {\n      return forkJoin(this.getCountries(), this.getNations(), this.getCountryCodes(), this.getMemberEdit(member_id));\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter(to, from, next) {\n      next();\n    }\n  }]);\n\n  return EditService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], EditService.prototype, \"getCountries\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String, typeof (_a = typeof UpdateMemberEdit !== \"undefined\" && UpdateMemberEdit) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], EditService.prototype, \"updateMemberEdit\", null);\n\nEditService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof MemberApi !== \"undefined\" && MemberApi) === \"function\" ? _b : Object, typeof (_c = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _c : Object])], EditService);\nexport { EditService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/edit.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { MemberApi, UpdateMemberEdit } from '@/api/v1/member'\nimport { forkJoin } from 'rxjs'\nimport { UserService } from '@/services/user.service'\n\n@Injectable()\nexport class EditService implements Controller {\n  loading$ = new State({})\n  info$ = new State({})\n  countryInfo$ = new State({})\n  nations$ = new State([])\n  countryList$ = new State([])\n  minorsType$ = this.userService.getOptions$('small_course.minors_type')\n  parentType$ = this.userService.getOptions$('small_course.parent_type')\n  constructor(\n    protected memberApi: MemberApi,\n    private userService: UserService\n  ) {}\n  getMemberEdit(id: number) {\n    return this.memberApi.getMemberEdit(id).pipe(\n      tap(res => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n  @Effect()\n  getCountries() {\n    return this.memberApi.getCountries().pipe(\n      tap(res => {\n        this.countryInfo$.commit(() => res.country_info)\n      })\n    )\n  }\n  getParentInfoByPhone(params: any) {\n    return this.memberApi.getParentInfoByPhone(params)\n  }\n  getCountryCodes() {\n    return this.memberApi.getCountryCodes().pipe(\n      tap(res => {\n        this.countryList$.commit(() => res)\n      })\n    )\n  }\n  getNations() {\n    return this.memberApi.getNations().pipe(\n      tap(res => {\n        this.nations$.commit(() => res.nation_info)\n      })\n    )\n  }\n  @Effect()\n  updateMemberEdit(id: string, params: UpdateMemberEdit) {\n    return this.memberApi.updateMemberEdit(id, params)\n  }\n  serviceInit(member_id: number) {\n    return forkJoin(\n      this.getCountries(),\n      this.getNations(),\n      this.getCountryCodes(),\n      this.getMemberEdit(member_id)\n    )\n  }\n\n  beforeRouteEnter(to: ServiceRoute, from: ServiceRoute, next: any) {\n    next()\n  }\n}\n"],"sourceRoot":""}]}