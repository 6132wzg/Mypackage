{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/cabinet/area.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/cabinet/area.vue","mtime":1601345845207},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { MessageService } from '@/services/message.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { AreaService } from './area.service'\nimport CabinetModule from './components#/module'\n\nimport { isEqual } from 'lodash-es'\nexport default {\n  name: '',\n\n  bem: {\n    b: 'cabinet-area'\n  },\n\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      pattern: PatternService,\n      cabinetService: AreaService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.cabinetService.auth$,\n      list: this.cabinetService.list$,\n      loading: this.cabinetService.loading$\n    }\n  },\n\n  components: {\n    CabinetModule\n  },\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n\n  data() {\n    return {\n      isAdd: false,\n      addItem: {\n        id: 0,\n        area_name: ''\n      }\n    }\n  },\n\n  computed: {\n    areaId: {\n      set(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return\n        this.$emit('change', newValue)\n        this.$emit('input', newValue)\n      },\n      get() {\n        return this.value\n      }\n    }\n  },\n  watch: {\n    value(newV) {\n      if (!newV && this.list && this.list.length) {\n        this.init()\n      }\n    }\n  },\n\n  mounted() {\n    this.init()\n  },\n\n  methods: {\n    init(tag) {\n      this.cabinetService.getList().subscribe(res => {\n        let list = res.list\n        let currentArea\n        if (+this.areaId) {\n          currentArea = list.filter(item => item.id === +this.areaId)[0]\n        } else {\n          currentArea = list.length ? list[0] : {}\n        }\n        if (tag) {\n          this.$emit('onlyChangeCurrentArea', currentArea)\n        } else {\n          this.$emit('changeCurrentArea', currentArea)\n        }\n      })\n    },\n    onEditStatusChange(params) {\n      console.log('params', params)\n      let list = this.list.map(item => {\n        if (item.id === params.id) {\n          item.isEdit = true\n        } else {\n          item.isEdit = false\n        }\n        return item\n      })\n      this.cabinetService.SET_LIST(list)\n    },\n    onAreaSortChange() {\n      let list = this.list.map((item, index) => {\n        let area = {\n          id: item.id,\n          sorted: index\n        }\n        return area\n      })\n      this.cabinetService\n        .sort({\n          list\n        })\n        .subscribe()\n    },\n    onAreaChange(id) {\n      if (this.areaId === id) return false\n      if (this.isAdd) {\n        this.isAdd = false\n      }\n      this.areaId = id\n      let currentArea = this.list.filter(item => item.id === id)[0]\n      this.$emit('changeCurrentArea', currentArea)\n    },\n    onMouseMove(status) {},\n    onRefresh() {\n      this.init()\n    },\n    onAddStatusChange(status) {\n      console.log('onAddStatusChange', status)\n      this.isAdd = status\n    },\n    onAddArea() {\n      this.isAdd = true\n    }\n  }\n}\n",{"version":3,"sources":["area.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"area.vue","sourceRoot":"src/views/biz-components/shop/cabinet","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div :class=\"b('title')\">\n      <div :class=\"b('title-main')\">\n        <div :class=\"b('title-main-desc')\">\n          区域\n        </div>\n        <st-button v-if=\"auth.areaAdd\" type=\"primary\" @click=\"onAddArea\">\n          新增区域\n        </st-button>\n      </div>\n      <div :class=\"b('title-sub')\">支持拖动排序</div>\n    </div>\n    <a-spin :spinning=\"loading.getList\">\n      <div v-if=\"isAdd\">\n        <cabinet-module\n          :info=\"addItem\"\n          :isActive=\"false\"\n          isAdd\n          @refresh=\"onRefresh\"\n          @onAddStatusChange=\"onAddStatusChange\"\n        ></cabinet-module>\n      </div>\n      <st-draggable\n        v-model=\"list\"\n        :animation=\"200\"\n        @change=\"onAreaSortChange\"\n        handle=\".st-cabinet-area--canDrag\"\n      >\n        <div\n          v-for=\"item in list\"\n          :key=\"item.id\"\n          @click=\"onAreaChange(item.id)\"\n          @mouseMove=\"onMouseMove\"\n        >\n          <cabinet-module\n            :info=\"item\"\n            :isActive=\"item.id === areaId\"\n            @refresh=\"onRefresh\"\n            @onEditStatusChange=\"onEditStatusChange\"\n          ></cabinet-module>\n        </div>\n      </st-draggable>\n    </a-spin>\n  </div>\n</template>\n\n<script>\nimport { MessageService } from '@/services/message.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { AreaService } from './area.service'\nimport CabinetModule from './components#/module'\n\nimport { isEqual } from 'lodash-es'\nexport default {\n  name: '',\n\n  bem: {\n    b: 'cabinet-area'\n  },\n\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      pattern: PatternService,\n      cabinetService: AreaService\n    }\n  },\n  rxState() {\n    return {\n      auth: this.cabinetService.auth$,\n      list: this.cabinetService.list$,\n      loading: this.cabinetService.loading$\n    }\n  },\n\n  components: {\n    CabinetModule\n  },\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n\n  data() {\n    return {\n      isAdd: false,\n      addItem: {\n        id: 0,\n        area_name: ''\n      }\n    }\n  },\n\n  computed: {\n    areaId: {\n      set(newValue, oldValue) {\n        if (isEqual(newValue, oldValue)) return\n        this.$emit('change', newValue)\n        this.$emit('input', newValue)\n      },\n      get() {\n        return this.value\n      }\n    }\n  },\n  watch: {\n    value(newV) {\n      if (!newV && this.list && this.list.length) {\n        this.init()\n      }\n    }\n  },\n\n  mounted() {\n    this.init()\n  },\n\n  methods: {\n    init(tag) {\n      this.cabinetService.getList().subscribe(res => {\n        let list = res.list\n        let currentArea\n        if (+this.areaId) {\n          currentArea = list.filter(item => item.id === +this.areaId)[0]\n        } else {\n          currentArea = list.length ? list[0] : {}\n        }\n        if (tag) {\n          this.$emit('onlyChangeCurrentArea', currentArea)\n        } else {\n          this.$emit('changeCurrentArea', currentArea)\n        }\n      })\n    },\n    onEditStatusChange(params) {\n      console.log('params', params)\n      let list = this.list.map(item => {\n        if (item.id === params.id) {\n          item.isEdit = true\n        } else {\n          item.isEdit = false\n        }\n        return item\n      })\n      this.cabinetService.SET_LIST(list)\n    },\n    onAreaSortChange() {\n      let list = this.list.map((item, index) => {\n        let area = {\n          id: item.id,\n          sorted: index\n        }\n        return area\n      })\n      this.cabinetService\n        .sort({\n          list\n        })\n        .subscribe()\n    },\n    onAreaChange(id) {\n      if (this.areaId === id) return false\n      if (this.isAdd) {\n        this.isAdd = false\n      }\n      this.areaId = id\n      let currentArea = this.list.filter(item => item.id === id)[0]\n      this.$emit('changeCurrentArea', currentArea)\n    },\n    onMouseMove(status) {},\n    onRefresh() {\n      this.init()\n    },\n    onAddStatusChange(status) {\n      console.log('onAddStatusChange', status)\n      this.isAdd = status\n    },\n    onAddArea() {\n      this.isAdd = true\n    }\n  }\n}\n</script>\n"]}]}