{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/area.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/area.vue","mtime":1600926382166},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n\nimport G2 from '@antv/g2'\nconst defaultOptions = {\n  /**\n   * 指定图表的高度，单位为 'px\n   */\n  height: 300,\n  /**\n   * 设置图表的内边距\n   */\n  padding: 'auto',\n  fieldNames: {\n    x: 'year',\n    y: 'value'\n  },\n  lineColor: '#258EF9',\n  lineWidth: 2,\n  /**\n   * 使用渐变色，l 后面传入角度，0 代表起始颜色，1 代表结束颜色\n   */\n  areaColor: 'l(90) 0:rgba(63, 102, 246, .2) 1:rgba(0, 202, 255, 0)'\n}\nexport default {\n  name: 'StAreaChart',\n  props: {\n    /**\n     * 图表id\n     */\n    id: {\n      type: String,\n      default: 'area-chart'\n    },\n    /**\n     * 面积图类型\n     */\n    type: {\n      type: String,\n      default: 'basic'\n    },\n    /**\n     * 图表数据\n     */\n    data: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    options: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  mounted() {\n    this.renderChart()\n  },\n  methods: {\n    renderChart() {\n      const opts = Object.assign(defaultOptions, this.options)\n      const { x, y } = opts.fieldNames\n      G2.track(false) // 关闭打点监控\n      const chart = new G2.Chart({\n        container: this.id,\n        forceFit: true,\n        ...opts\n      })\n      chart.source(this.data)\n      chart.scale({\n        [x]: {\n          range: [0, 1]\n        }\n      })\n      chart.axis(x, {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          },\n          tickLine: null\n        },\n        tickLine: {\n          alignWithLabel: false,\n          length: 0\n        }\n      })\n      chart.axis(y, {\n        label: {\n          formatter: function formatter(val) {\n            return (val / 10000).toFixed(1) + 'k'\n          },\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          type: 'line',\n          lineStyle: {\n            stroke: '#E6E9EF', // 网格线的颜色\n            lineWidth: 1, // 网格线的粗细\n            lineDash: [0, 0] // 网格线的虚线配置，第一个参数描述虚线的实部占多少像素，第二个参数描述虚线的虚部占多少像素\n          }\n        }\n      })\n      chart.tooltip({\n        crosshairs: {\n          type: 'line'\n        }\n      })\n      chart\n        .area()\n        .position([x, y])\n        .color(opts.areaColor)\n        .shape('smooth')\n      chart\n        .line()\n        .position([x, y])\n        .color(opts.lineColor)\n        .size(opts.lineWidth)\n        .shape('smooth')\n      chart.render()\n    }\n  }\n}\n",{"version":3,"sources":["area.vue"],"names":[],"mappingsfile":"area.vue","sourceRoot":"src/views/biz-components/chart","sourcesContent":["<template>\n  <div :id=\"id\"></div>\n</template>\n<script>\nimport G2 from '@antv/g2'\nconst defaultOptions = {\n  /**\n   * 指定图表的高度，单位为 'px\n   */\n  height: 300,\n  /**\n   * 设置图表的内边距\n   */\n  padding: 'auto',\n  fieldNames: {\n    x: 'year',\n    y: 'value'\n  },\n  lineColor: '#258EF9',\n  lineWidth: 2,\n  /**\n   * 使用渐变色，l 后面传入角度，0 代表起始颜色，1 代表结束颜色\n   */\n  areaColor: 'l(90) 0:rgba(63, 102, 246, .2) 1:rgba(0, 202, 255, 0)'\n}\nexport default {\n  name: 'StAreaChart',\n  props: {\n    /**\n     * 图表id\n     */\n    id: {\n      type: String,\n      default: 'area-chart'\n    },\n    /**\n     * 面积图类型\n     */\n    type: {\n      type: String,\n      default: 'basic'\n    },\n    /**\n     * 图表数据\n     */\n    data: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    options: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  mounted() {\n    this.renderChart()\n  },\n  methods: {\n    renderChart() {\n      const opts = Object.assign(defaultOptions, this.options)\n      const { x, y } = opts.fieldNames\n      G2.track(false) // 关闭打点监控\n      const chart = new G2.Chart({\n        container: this.id,\n        forceFit: true,\n        ...opts\n      })\n      chart.source(this.data)\n      chart.scale({\n        [x]: {\n          range: [0, 1]\n        }\n      })\n      chart.axis(x, {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          },\n          tickLine: null\n        },\n        tickLine: {\n          alignWithLabel: false,\n          length: 0\n        }\n      })\n      chart.axis(y, {\n        label: {\n          formatter: function formatter(val) {\n            return (val / 10000).toFixed(1) + 'k'\n          },\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          type: 'line',\n          lineStyle: {\n            stroke: '#E6E9EF', // 网格线的颜色\n            lineWidth: 1, // 网格线的粗细\n            lineDash: [0, 0] // 网格线的虚线配置，第一个参数描述虚线的实部占多少像素，第二个参数描述虚线的虚部占多少像素\n          }\n        }\n      })\n      chart.tooltip({\n        crosshairs: {\n          type: 'line'\n        }\n      })\n      chart\n        .area()\n        .position([x, y])\n        .color(opts.areaColor)\n        .shape('smooth')\n      chart\n        .line()\n        .position([x, y])\n        .color(opts.lineColor)\n        .size(opts.lineWidth)\n        .shape('smooth')\n      chart.render()\n    }\n  }\n}\n</script>\n"]}]}