{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/invitation/index.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/invitation/index.service.ts","mtime":1599557378125},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State } from 'rx-state';\nimport { MarketingApi } from '@/api/v1/marketing/marketing';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '@/services/auth.service';\n\nvar IndexService = /*#__PURE__*/function () {\n  function IndexService(marketingApi, authService) {\n    _classCallCheck(this, IndexService);\n\n    this.marketingApi = marketingApi;\n    this.authService = authService;\n    this.isOpen$ = new State(false);\n    this.authTabs$ = this.authService.getAuthTabs$('brand-marketing-plugin-invitation-index');\n  }\n\n  _createClass(IndexService, [{\n    key: \"getOpenStatus\",\n    value: function getOpenStatus() {\n      var _this = this;\n\n      return this.marketingApi.getInviteOpenStatus().pipe(tap(function (res) {\n        _this.isOpen$.commit(function () {\n          return res.info.has_opened;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter() {\n      return this.getOpenStatus();\n    }\n  }]);\n\n  return IndexService;\n}();\n\nIndexService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof MarketingApi !== \"undefined\" && MarketingApi) === \"function\" ? _a : Object, typeof (_b = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _b : Object])], IndexService);\nexport { IndexService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/marketing/plugin/invitation/index.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,QAAsB,UAAtB;AACA,SAAS,YAAT,QAA6B,8BAA7B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,WAAT,QAA4B,yBAA5B;;AAGA,IAAa,YAAb;AAKE,wBACU,YADV,EAEU,WAFV,EAEkC;AAAA;;AADxB,SAAA,YAAA,GAAA,YAAA;AACA,SAAA,WAAA,GAAA,WAAA;AANV,SAAA,OAAA,GAAU,IAAI,KAAJ,CAAU,KAAV,CAAV;AACA,SAAA,SAAA,GAAY,KAAK,WAAL,CAAiB,YAAjB,CACV,yCADU,CAAZ;AAMI;;AARN;AAAA;AAAA,oCASe;AAAA;;AACX,aAAO,KAAK,YAAL,CAAkB,mBAAlB,GAAwC,IAAxC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,OAAL,CAAa,MAAb,CAAoB;AAAA,iBAAM,GAAG,CAAC,IAAJ,CAAS,UAAf;AAAA,SAApB;AACD,OAFE,CADE,CAAP;AAKD;AAfH;AAAA;AAAA,uCAgBkB;AACd,aAAO,KAAK,aAAL,EAAP;AACD;AAlBH;;AAAA;AAAA,GAAA;;AAAa,YAAY,GAAA,UAAA,CAAA,CADxB,UAAU,EACc,E,qDAMC,Y,KAAY,W,IAAZ,Y,MAAY,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACb,WADa,KACF,WADE,IACb,WADa,MACF,UADE,GACF,EADE,GACF,M,EAPX,CAAA,EAAZ,YAAY,CAAZ;SAAA,Y","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { State } from 'rx-state'\nimport { MarketingApi } from '@/api/v1/marketing/marketing'\nimport { tap } from 'rxjs/operators'\nimport { AuthService } from '@/services/auth.service'\n\n@Injectable()\nexport class IndexService implements Controller {\n  isOpen$ = new State(false)\n  authTabs$ = this.authService.getAuthTabs$(\n    'brand-marketing-plugin-invitation-index'\n  )\n  constructor(\n    private marketingApi: MarketingApi,\n    private authService: AuthService\n  ) {}\n  getOpenStatus() {\n    return this.marketingApi.getInviteOpenStatus().pipe(\n      tap((res: any) => {\n        this.isOpen$.commit(() => res.info.has_opened)\n      })\n    )\n  }\n  beforeRouteEnter() {\n    return this.getOpenStatus()\n  }\n}\n"],"sourceRoot":""}]}