{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/auto-renewal-edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/auto-renewal-edit.vue","mtime":1600926556082},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableMixin from '@/mixins/table.mixin'\nimport { ruleOptions, columns } from './auto-renewal-edit.config'\nimport { AutoRenewalEditService } from './auto-renewal-edit.service'\nimport { get, cloneDeep } from 'lodash-es'\n\nimport SelectScroll from '@/views/components/select-scroll#/select-scroll'\nexport default {\n  name: '',\n\n  bem: {\n    b: 'wexin-stage-product-edit'\n  },\n\n  mixins: [tableMixin],\n\n  serviceInject() {\n    return {\n      editService: AutoRenewalEditService\n    }\n  },\n\n  rxState() {\n    return {\n      auth: this.editService.auth$,\n      loading: this.editService.loading$,\n      product: this.editService.product$,\n      specs: this.editService.specs$,\n      list: this.editService.list$,\n      page: this.editService.page$\n    }\n  },\n\n  components: { SelectScroll },\n\n  props: {},\n\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      options: [],\n      editSpecs: []\n    }\n  },\n\n  computed: {\n    columns,\n    isEdit() {\n      return !!this.$searchQuery.id\n    },\n    rowSelection() {\n      1\n      let self = this\n      const { selectedRowKeys, onSelectionChange } = this\n      return {\n        onChange: onSelectionChange,\n        selectedRowKeys: selectedRowKeys\n      }\n    }\n  },\n\n  watch: {\n    specs: {\n      handler(value) {\n        this.editSpecs = cloneDeep(value)\n        this.selectedRowKeys = value\n          .filter(spec => spec.is_select)\n          .map(spec => spec.template_id)\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n\n  async: {},\n\n  mounted() {\n    if (this.$searchQuery.id) {\n      this.editService\n        .getProductDetail({\n          id: this.$searchQuery.id\n        })\n        .subscribe(res => {\n          this.editService.setList([\n            {\n              card_id: res.card_id,\n              card_name: res.card_name\n            }\n          ])\n          this.form.setFieldsValue({\n            card_id: res.card_id,\n            remark: res.remark\n          })\n        })\n    } else {\n      this.editService.getCardList().subscribe()\n    }\n  },\n\n  methods: {\n    handleGetList() {\n      if (this.finished) return false\n      this.editService\n        .getCardList({\n          current_page: ++this.page.current_page\n        })\n        .subscribe()\n    },\n    judgeIfCanEdit(id) {\n      return !this.selectedRowKeys.includes(id)\n    },\n    productUp() {\n      this.form.validate().then(values => {\n        let specs = this.editSpecs.map(spec => {\n          spec.is_select = this.selectedRowKeys.includes(spec.template_id)\n          return spec\n        })\n        let params = {\n          specs,\n          remark: values.remark\n        }\n        console.log('params', params)\n        if (this.isEdit) {\n          params.id = this.$searchQuery.id\n          this.editService.productEdit(params).subscribe(res => {\n            this.$message.success({\n              content: '商品上架成功'\n            })\n            this.$router.replace({\n              name: 'brand-app-auto-renewal'\n            })\n          })\n        } else {\n          params.card_id = values.card_id\n          this.editService.productAdd(params).subscribe(res => {\n            this.$message.success({\n              content: '商品上架成功'\n            })\n            this.$router.replace({\n              name: 'brand-app-auto-renewal'\n            })\n          })\n        }\n      })\n    },\n    handleAmountChange(value, id) {\n      console.log(value)\n      this.editSpecs = this.editSpecs.map(spec => {\n        if (spec.template_id === id) {\n          spec.amount = value\n        }\n        return spec\n      })\n    },\n    handleFirstAmountChange(value, id) {\n      console.log('id', id)\n      this.editSpecs = this.editSpecs.map(spec => {\n        if (spec.template_id === id) {\n          spec.first_amount = value\n        }\n        return spec\n      })\n    },\n    handleSelectProduct(id) {\n      this.form.setFieldsValue({\n        card_id: id\n      })\n      this.editService\n        .getProductDetail({\n          id: this.$searchQuery.id || 0\n        })\n        .subscribe()\n    }\n  }\n}\n",{"version":3,"sources":["auto-renewal-edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"auto-renewal-edit.vue","sourceRoot":"src/views/pages/brand/app","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <st-panel-layout :class=\"b('container')\">\n      <st-form :form=\"form\" labelWidth=\"88px\" labelGutter=\"16px\">\n        <a-row>\n          <a-col :lg=\"13\">\n            <st-form-item label=\"选择会员卡\" required>\n              <div :class=\"b('select-wrapper')\">\n                <select-scroll\n                  v-decorator=\"decorators.card_id\"\n                  _key=\"card_id\"\n                  _name=\"card_name\"\n                  placeholder=\"请选择会员卡\"\n                  notFoundContent=\"无搜索结果\"\n                  :list=\"list\"\n                  :disabled=\"isEdit\"\n                  :loading=\"loading.getCardList\"\n                  :showSearch=\"false\"\n                  @load=\"handleGetList\"\n                  @select=\"handleSelectProduct\"\n                ></select-scroll>\n                <div>\n                  仅支持会员期限卡\n                </div>\n              </div>\n            </st-form-item>\n          </a-col>\n        </a-row>\n        <st-form-item label=\"分期规格\" required>\n          <a-row>\n            <a-col :lg=\"13\">\n              <st-table\n                :page=\"false\"\n                @change=\"onTableChange\"\n                :rowSelection=\"rowSelection\"\n                :columns=\"columns\"\n                :dataSource=\"editSpecs\"\n                rowKey=\"template_id\"\n              >\n                <template slot=\"name\" slot-scope=\"text, record\">\n                  {{ record.name }}（扣费周期{{ record.days }}天）\n                </template>\n                <!-- <template slot=\"first_amount\" slot-scope=\"text, record\">\n                  <st-input-number\n                    style=\"margin: -5px 0\"\n                    :value=\"text\"\n                    float\n                    :disabled=\"judgeIfCanEdit(record.template_id)\"\n                    @change=\"\n                      value =>\n                        handleFirstAmountChange(value, record.template_id)\n                    \"\n                  />\n                </template>\n                <template slot=\"amount\" slot-scope=\"text, record\">\n                  <st-input-number\n                    style=\"margin: -5px 0\"\n                    :value=\"text\"\n                    float\n                    :disabled=\"judgeIfCanEdit(record.template_id)\"\n                    @change=\"\n                      value => handleAmountChange(value, record.template_id)\n                    \"\n                  />\n                </template> -->\n              </st-table>\n            </a-col>\n          </a-row>\n        </st-form-item>\n        <st-form-item label=\"备注\">\n          <a-row>\n            <a-col :lg=\"13\">\n              <st-textarea\n                v-decorator=\"decorators.remark\"\n                :autosize=\"{ minRows: 4, maxRows: 6 }\"\n                :maxlength=\"200\"\n                placeholder=\"请填写备注，限制200字以内\"\n              />\n            </a-col>\n          </a-row>\n        </st-form-item>\n        <st-form-item label-fix>\n          <a-row>\n            <a-col :lg=\"13\">\n              <a-popconfirm @confirm=\"productUp\" placement=\"topRight\">\n                <template slot=\"title\">\n                  <p>确认是否上架</p>\n                </template>\n                <st-button type=\"primary\">\n                  上架\n                </st-button>\n              </a-popconfirm>\n            </a-col>\n          </a-row>\n        </st-form-item>\n      </st-form>\n    </st-panel-layout>\n  </div>\n</template>\n\n<script>\nimport tableMixin from '@/mixins/table.mixin'\nimport { ruleOptions, columns } from './auto-renewal-edit.config'\nimport { AutoRenewalEditService } from './auto-renewal-edit.service'\nimport { get, cloneDeep } from 'lodash-es'\n\nimport SelectScroll from '@/views/components/select-scroll#/select-scroll'\nexport default {\n  name: '',\n\n  bem: {\n    b: 'wexin-stage-product-edit'\n  },\n\n  mixins: [tableMixin],\n\n  serviceInject() {\n    return {\n      editService: AutoRenewalEditService\n    }\n  },\n\n  rxState() {\n    return {\n      auth: this.editService.auth$,\n      loading: this.editService.loading$,\n      product: this.editService.product$,\n      specs: this.editService.specs$,\n      list: this.editService.list$,\n      page: this.editService.page$\n    }\n  },\n\n  components: { SelectScroll },\n\n  props: {},\n\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      options: [],\n      editSpecs: []\n    }\n  },\n\n  computed: {\n    columns,\n    isEdit() {\n      return !!this.$searchQuery.id\n    },\n    rowSelection() {\n      1\n      let self = this\n      const { selectedRowKeys, onSelectionChange } = this\n      return {\n        onChange: onSelectionChange,\n        selectedRowKeys: selectedRowKeys\n      }\n    }\n  },\n\n  watch: {\n    specs: {\n      handler(value) {\n        this.editSpecs = cloneDeep(value)\n        this.selectedRowKeys = value\n          .filter(spec => spec.is_select)\n          .map(spec => spec.template_id)\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n\n  async: {},\n\n  mounted() {\n    if (this.$searchQuery.id) {\n      this.editService\n        .getProductDetail({\n          id: this.$searchQuery.id\n        })\n        .subscribe(res => {\n          this.editService.setList([\n            {\n              card_id: res.card_id,\n              card_name: res.card_name\n            }\n          ])\n          this.form.setFieldsValue({\n            card_id: res.card_id,\n            remark: res.remark\n          })\n        })\n    } else {\n      this.editService.getCardList().subscribe()\n    }\n  },\n\n  methods: {\n    handleGetList() {\n      if (this.finished) return false\n      this.editService\n        .getCardList({\n          current_page: ++this.page.current_page\n        })\n        .subscribe()\n    },\n    judgeIfCanEdit(id) {\n      return !this.selectedRowKeys.includes(id)\n    },\n    productUp() {\n      this.form.validate().then(values => {\n        let specs = this.editSpecs.map(spec => {\n          spec.is_select = this.selectedRowKeys.includes(spec.template_id)\n          return spec\n        })\n        let params = {\n          specs,\n          remark: values.remark\n        }\n        console.log('params', params)\n        if (this.isEdit) {\n          params.id = this.$searchQuery.id\n          this.editService.productEdit(params).subscribe(res => {\n            this.$message.success({\n              content: '商品上架成功'\n            })\n            this.$router.replace({\n              name: 'brand-app-auto-renewal'\n            })\n          })\n        } else {\n          params.card_id = values.card_id\n          this.editService.productAdd(params).subscribe(res => {\n            this.$message.success({\n              content: '商品上架成功'\n            })\n            this.$router.replace({\n              name: 'brand-app-auto-renewal'\n            })\n          })\n        }\n      })\n    },\n    handleAmountChange(value, id) {\n      console.log(value)\n      this.editSpecs = this.editSpecs.map(spec => {\n        if (spec.template_id === id) {\n          spec.amount = value\n        }\n        return spec\n      })\n    },\n    handleFirstAmountChange(value, id) {\n      console.log('id', id)\n      this.editSpecs = this.editSpecs.map(spec => {\n        if (spec.template_id === id) {\n          spec.first_amount = value\n        }\n        return spec\n      })\n    },\n    handleSelectProduct(id) {\n      this.form.setFieldsValue({\n        card_id: id\n      })\n      this.editService\n        .getProductDetail({\n          id: this.$searchQuery.id || 0\n        })\n        .subscribe()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}