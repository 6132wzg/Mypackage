{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/input-phone/input-phone.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/input-phone/input-phone.vue","mtime":1591147717105},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { InputPhoneService } from './input-phone.service'\nexport default {\n  name: 'InputPhone',\n  bem: {\n    b: 'input-phone'\n  },\n  serviceInject() {\n    return {\n      inputPhoneService: InputPhoneService\n    }\n  },\n  rxState() {\n    return {\n      countryList: this.inputPhoneService.countryList$\n    }\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default() {\n        return ''\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default() {\n        return false\n      }\n    },\n    value: {\n      type: Object\n      // default: () => ({\n      //   code_id: 37,\n      //   phone_code: 86,\n      //   phone: ''\n      // })\n    },\n    size: {\n      type: String,\n      default: 'large'\n    }\n  },\n  mounted() {\n    this.inputPhoneService.getCountryCodes().subscribe()\n  },\n  methods: {\n    onChange(event) {\n      this.$emit('change', {\n        phone: event.target.value,\n        code_id: this.value.code_id,\n        phone_code: this.value.phone_code\n      })\n    },\n    onClickItem(event) {\n      this.$emit('change', {\n        phone: this.value.phone,\n        phone_code: event.phone_code,\n        code_id: event.code_id\n      })\n    }\n  }\n}\n",{"version":3,"sources":["input-phone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"input-phone.vue","sourceRoot":"src/views/biz-components/input-phone","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <a-input\n      :size=\"size\"\n      :class=\"b('input')\"\n      :placeholder=\"placeholder\"\n      @change=\"onChange\"\n      :value=\"value.phone\"\n    />\n    <a-dropdown :class=\"b('dropdown')\">\n      <span class=\"cursor-pointer\">\n        +{{ value.phone_code }}\n        <a-icon type=\"down\" />\n      </span>\n      <a-menu slot=\"overlay\">\n        <a-menu-item\n          v-for=\"(item, index) in countryList\"\n          :key=\"index\"\n          :value=\"item.code_id\"\n          @click=\"onClickItem(item)\"\n        >\n          <a>+{{ item.phone_code }}</a>\n        </a-menu-item>\n      </a-menu>\n    </a-dropdown>\n  </div>\n</template>\n<script>\nimport { InputPhoneService } from './input-phone.service'\nexport default {\n  name: 'InputPhone',\n  bem: {\n    b: 'input-phone'\n  },\n  serviceInject() {\n    return {\n      inputPhoneService: InputPhoneService\n    }\n  },\n  rxState() {\n    return {\n      countryList: this.inputPhoneService.countryList$\n    }\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default() {\n        return ''\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default() {\n        return false\n      }\n    },\n    value: {\n      type: Object\n      // default: () => ({\n      //   code_id: 37,\n      //   phone_code: 86,\n      //   phone: ''\n      // })\n    },\n    size: {\n      type: String,\n      default: 'large'\n    }\n  },\n  mounted() {\n    this.inputPhoneService.getCountryCodes().subscribe()\n  },\n  methods: {\n    onChange(event) {\n      this.$emit('change', {\n        phone: event.target.value,\n        code_id: this.value.code_id,\n        phone_code: this.value.phone_code\n      })\n    },\n    onClickItem(event) {\n      this.$emit('change', {\n        phone: this.value.phone,\n        phone_code: event.phone_code,\n        code_id: event.code_id\n      })\n    }\n  }\n}\n</script>\n"]}]}