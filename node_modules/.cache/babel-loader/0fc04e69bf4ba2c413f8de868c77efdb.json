{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/total/total.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/total/total.vue","mtime":1598250255723},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { swiper, swiperSlide } from 'vue-awesome-swiper';\nimport StTotalItem from \"./total-item.vue\";\nimport 'swiper/dist/css/swiper.css';\nimport moment from 'moment';\nexport default {\n  name: 'StTotal',\n  bem: {\n    b: 'st-total'\n  },\n  components: {\n    swiper: swiper,\n    swiperSlide: swiperSlide,\n    StTotalItem: StTotalItem\n  },\n  props: {\n    indexs: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    dataSource: {\n      type: Object,\n      default: function _default() {}\n    },\n    hasTitle: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      show: true,\n      dWidth: 0\n    };\n  },\n  mounted: function mounted() {\n    this.getDiffWidth();\n  },\n  methods: {\n    // 计算页面宽度 与 组件内容容器宽度的差值\n    getDiffWidth: function getDiffWidth() {\n      var _this = this;\n\n      var pageWidth = document.body.clientWidth;\n      var contentWidth = this.$refs.content.offsetWidth;\n      this.dWidth += pageWidth > contentWidth ? pageWidth - contentWidth : 0; // console.log(pageWidth, contentWidth)\n      // 差值改变需要重新计算 breakponts 和 slidesPerView, 使用v-if 达到刷新 swiper的 options\n\n      this.show = false;\n\n      if (!this.show) {\n        setTimeout(function () {\n          _this.show = true;\n        }, 50);\n      }\n    },\n    // 计算字符串宽度宽度\n    getTextWidth: function getTextWidth(str, fontSize) {\n      var result = 100;\n      var ele = document.createElement('span');\n      ele.innerText = str;\n      ele.setAttribute('style', \"position: absolute; font-size: \".concat(fontSize, \"px; opacity: 0\"));\n      document.documentElement.append(ele);\n      if (ele && ele.offsetWidth) result = ele.offsetWidth;\n      document.documentElement.removeChild(ele); // 加上 item 的padding宽度\n\n      return result + 20;\n    }\n  },\n  watch: {\n    dataSource: {\n      deep: true,\n      handler: function handler() {\n        var _this2 = this;\n\n        this.show = false;\n\n        if (!this.show) {\n          setTimeout(function () {\n            _this2.show = true;\n          }, 50);\n        }\n      }\n    }\n  },\n  computed: {\n    showData: function showData() {\n      var _this3 = this;\n\n      var templateData = []; // for (let item in this.dataSource) {\n      // }\n\n      this.indexs.forEach(function (ele) {\n        templateData.push({\n          label: ele.titleTotal || ele.title,\n          value: _this3.dataSource[ele.dataIndex],\n          unit: ele.unit || '',\n          slotName: ele.scopedSlots ? ele.scopedSlots.customRender : ''\n        });\n      });\n      return templateData;\n    },\n    itemMaxWidth: function itemMaxWidth() {\n      var _this4 = this;\n\n      var maxWidth = 100; // 计算所有 item 长度 取最大值\n\n      this.indexs.map(function (item) {\n        var titleW = _this4.getTextWidth(item.titleTotal || item.title, 14);\n\n        var value = +_this4.dataSource[item.dataIndex] || 0;\n        value = value.toString().includes('.') ? value.toFixed(1) : value;\n\n        var valueW = _this4.getTextWidth((item.unit || '') + value, _this4.hasTitle ? 20 : 24); // console.log(\n        //   item.titleTotal || item.title,\n        //   titleW,\n        //   '¥' + (this.dataSource[item.dataIndex] || 0),\n        //   valueW\n        // )\n\n\n        maxWidth = Math.max(titleW, valueW, maxWidth);\n      }); // console.log('最大值', maxWidth)\n\n      return maxWidth;\n    },\n    slidesPerView: function slidesPerView() {\n      return Math.floor((1920 - this.dWidth) / this.itemMaxWidth);\n    },\n    // 设置不懂屏幕宽度下 可容纳item的最大数量\n    breakpoints: function breakpoints() {\n      var _this5 = this;\n\n      var w = 1200;\n      var minSize = Math.floor((w - this.dWidth) / this.itemMaxWidth);\n      w = minSize * this.itemMaxWidth + this.dWidth;\n      var breakpointsArr = [w];\n\n      while (w < 1920) {\n        w += this.itemMaxWidth;\n        breakpointsArr.push(w);\n      }\n\n      var breakpoints = {};\n      breakpointsArr.map(function (item, index) {\n        var num = Math.floor((item - _this5.dWidth) / _this5.itemMaxWidth);\n        breakpoints[item] = {\n          slidesPerView: num - (index === 0 ? 0 : 1)\n        };\n      }); // console.log('屏幕宽度 - 内容宽度', this.dWidth)\n      // console.log('变更节点配置', breakpoints)\n\n      return breakpoints;\n    },\n    // 获取最小宽度下可排放的item数量\n    minSlideLen: function minSlideLen() {\n      var w = 1280;\n      var minSize = Math.floor((w - this.dWidth) / this.itemMaxWidth);\n      w = minSize * this.itemMaxWidth + this.dWidth;\n      return this.breakpoints[w].slidesPerView;\n    },\n    timestamp: function timestamp() {\n      return moment().valueOf();\n    },\n    prevClass: function prevClass() {\n      return \"swiper-\".concat(this.timestamp, \"-button-prev\");\n    },\n    nextClass: function nextClass() {\n      return \"swiper-\".concat(this.timestamp, \"-button-next\");\n    },\n    navigationButtons: function navigationButtons() {\n      return {\n        nextEl: \".\".concat(this.nextClass),\n        prevEl: \".\".concat(this.prevClass)\n      };\n    },\n    sliderOptions: function sliderOptions() {\n      return {\n        autoplay: false,\n        navigation: _objectSpread({}, this.navigationButtons),\n        // Default parameters\n        // slidesPerView: 6,\n        // breakpoints: {\n        //   // when window width is >= 1280px\n        //   1440: {\n        //     slidesPerView: 4\n        //   }\n        // },\n        slidesPerView: this.slidesPerView,\n        breakpoints: this.breakpoints,\n        centeredSlides: false,\n        normalizeSlideIndex: false // ...this.options\n\n      };\n    }\n  }\n};",null]}