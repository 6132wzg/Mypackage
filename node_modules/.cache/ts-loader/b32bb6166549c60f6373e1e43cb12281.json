{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/guards/app-tab-redirect.guard.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/guards/app-tab-redirect.guard.ts","mtime":1600926555612},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d, _e;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable, ServiceRouter } from 'vue-service-app';\nimport { RedirectService } from '@/services/redirect.service';\nimport { NotificationService } from '@/services/notification.service';\nimport { AuthService } from '@/services/auth.service';\nimport { Errors } from '@/constants/errors';\n/**\n * 跳转守卫\n */\n\nvar AppTabRedirectGuard = /*#__PURE__*/function () {\n  function AppTabRedirectGuard(authService, redirectService, router, notification, errors) {\n    _classCallCheck(this, AppTabRedirectGuard);\n\n    this.authService = authService;\n    this.redirectService = redirectService;\n    this.router = router;\n    this.notification = notification;\n    this.errors = errors;\n  }\n\n  _createClass(AppTabRedirectGuard, [{\n    key: \"beforeEach\",\n    value: function beforeEach(to) {\n      var _this = this;\n\n      // 当路由没有配置meta.tabs时直接next\n      var hasTabsRoutes = to.matched.filter(function (r) {\n        return r.meta.tabs;\n      });\n\n      if (!hasTabsRoutes.length) {\n        return;\n      } // 不管当前处于子路由还是父级路由,都要计算下授权的tabs\n\n\n      hasTabsRoutes.forEach(function (route) {\n        var authedTabs = _this.authService.calcAuthedTabsByTabs(route.meta.tabs);\n\n        if (route.name) {\n          _this.authService.UPDATE_AUTHED_TAB_MAP(route.name, authedTabs);\n        }\n      }); // 父路由的跳转逻辑\n\n      if (!to.meta.tabs) {\n        return;\n      } // 获取当前路由下已授权的子路由\n\n\n      var myAuthedTabs = this.authService.getAuthTabs$(to.name).snapshot(); // 如果当前路由下还有子路由 但所有子路由都无权限访问 则结束重定向\n\n      if (to.meta.tabs && !myAuthedTabs.length && to.meta.isStayCurrentPage) return;\n\n      if (!myAuthedTabs.length) {\n        console && console.error(\"\\u8BE5\\u8DEF\\u7531\\u4E0B\\u6CA1\\u6709tab\\u53EF\\u8DF3\\u8F6C \".concat(to.name, \" [redirect.guard] \"));\n        this.router.next({\n          name: 'welcome'\n        });\n        return false;\n      }\n\n      var firstRouteName = myAuthedTabs[0] ? myAuthedTabs[0].route.name : '';\n      return this.redirectService.redirect({\n        locateRouteName: to.name,\n        redirectRoute: {\n          name: firstRouteName,\n          query: to.query\n        }\n      });\n    }\n  }]);\n\n  return AppTabRedirectGuard;\n}();\n\nAppTabRedirectGuard = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _a : Object, typeof (_b = typeof RedirectService !== \"undefined\" && RedirectService) === \"function\" ? _b : Object, typeof (_c = typeof ServiceRouter !== \"undefined\" && ServiceRouter) === \"function\" ? _c : Object, typeof (_d = typeof NotificationService !== \"undefined\" && NotificationService) === \"function\" ? _d : Object, typeof (_e = typeof Errors !== \"undefined\" && Errors) === \"function\" ? _e : Object])], AppTabRedirectGuard);\nexport { AppTabRedirectGuard };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/guards/app-tab-redirect.guard.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  RouteGuard,\n  ServiceRoute,\n  Injectable,\n  ServiceRouter\n} from 'vue-service-app'\nimport { RedirectService } from '@/services/redirect.service'\nimport { NotificationService } from '@/services/notification.service'\nimport { AuthService } from '@/services/auth.service'\nimport { Errors } from '@/constants/errors'\n\n/**\n * 跳转守卫\n */\n@Injectable()\nexport class AppTabRedirectGuard implements RouteGuard {\n  constructor(\n    private authService: AuthService,\n    private redirectService: RedirectService,\n    private router: ServiceRouter,\n    private notification: NotificationService,\n    private errors: Errors\n  ) {}\n  beforeEach(to: ServiceRoute) {\n    // 当路由没有配置meta.tabs时直接next\n    const hasTabsRoutes = to.matched.filter(r => r.meta.tabs)\n    if (!hasTabsRoutes.length) {\n      return\n    }\n    // 不管当前处于子路由还是父级路由,都要计算下授权的tabs\n    hasTabsRoutes.forEach(route => {\n      const authedTabs = this.authService.calcAuthedTabsByTabs(route.meta.tabs)\n      if (route.name) {\n        this.authService.UPDATE_AUTHED_TAB_MAP(route.name, authedTabs)\n      }\n    })\n    // 父路由的跳转逻辑\n    if (!to.meta.tabs) {\n      return\n    }\n    // 获取当前路由下已授权的子路由\n    const myAuthedTabs = this.authService.getAuthTabs$(to.name).snapshot()\n    // 如果当前路由下还有子路由 但所有子路由都无权限访问 则结束重定向\n    if (to.meta.tabs && !myAuthedTabs.length && to.meta.isStayCurrentPage)\n      return\n\n    if (!myAuthedTabs.length) {\n      console &&\n        console.error(`该路由下没有tab可跳转 ${to.name} [redirect.guard] `)\n      this.router.next({\n        name: 'welcome'\n      })\n      return false\n    }\n\n    const firstRouteName = myAuthedTabs[0] ? myAuthedTabs[0].route.name : ''\n    return this.redirectService.redirect({\n      locateRouteName: to.name,\n      redirectRoute: {\n        name: firstRouteName,\n        query: to.query\n      }\n    })\n  }\n}\n"],"sourceRoot":""}]}