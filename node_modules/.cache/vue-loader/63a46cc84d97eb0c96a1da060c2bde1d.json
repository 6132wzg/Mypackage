{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/physical-test/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/physical-test/list.vue","mtime":1600926556091},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable'\nimport MarkteingPluginTitle from '@/views/pages/brand/marketing/components#/marketing-title'\nimport BrandAppPhysicalTestNewLabel from '@/views/biz-modals/brand/app/physical-test/new-label'\nimport { ListService } from './list.service'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'brand-app-physical-test',\n\n  bem: {\n    b: 'brand-app-physical-test'\n  },\n\n  components: { MarkteingPluginTitle },\n\n  modals: { BrandAppPhysicalTestNewLabel },\n\n  serviceInject() {\n    return {\n      physicalTestService: ListService\n    }\n  },\n\n  rxState() {\n    return {\n      loading: this.physicalTestService.loading$,\n      indicators: this.physicalTestService.list$,\n      labels: this.physicalTestService.labelList$,\n      auth: this.physicalTestService.auth$\n    }\n  },\n\n  props: {},\n\n  data() {\n    return {\n      statusAdd: false,\n      statusEdit: false,\n      tags: [],\n      editIndicator: {}\n    }\n  },\n\n  computed: {\n    indicatorsNum() {\n      let len = this.indicators.length\n      if (len === 1) {\n        return 0\n      } else {\n        return this.statusAdd ? len - 2 : len - 1\n      }\n    },\n    canEditIndicator() {\n      return this.indicators.slice(1)\n    },\n    addButtonDisable() {\n      if (this.auth.add) {\n        return this.statusAdd\n      } else {\n        return true\n      }\n    }\n  },\n\n  methods: {\n    checkMove(evt) {\n      const { draggedContext, relatedContext, dragged, from, to } = evt\n      const draggedElement = draggedContext.element\n      const relatedElement = relatedContext.element\n      console.log('statusEdit', this.statusEdit)\n      // 新增状态不可拖拽\n      if (this.statusAdd) return false\n      // 编辑状态不可拖拽\n      if (this.statusEdit) return false\n      return (!relatedElement || !relatedElement.isAdd) && !draggedElement.isAdd\n    },\n    resetIndicator() {\n      this.editIndicator = {\n        item_name: '',\n        item_unit: '',\n        is_show: 1,\n        is_must: 1,\n        isEdit: true\n      }\n    },\n    handleReGetBodyImg() {\n      this.$message.success({ content: '体态图新增成功' })\n      this.physicalTestService.getBodyImgLableList().subscribe()\n    },\n    handleRemoveTag(tag) {\n      this.physicalTestService\n        .removePhysicalTestBodyImgLabel(tag.id)\n        .subscribe(res => {\n          this.$message.success({ content: '体态图删除成功' })\n          this.physicalTestService.getBodyImgLableList().subscribe()\n        })\n    },\n    handleAddIndicator() {\n      this.indicators = this.indicators.map(i => {\n        i.isEdit = false\n        return i\n      })\n      this.statusAdd = true\n      this.resetIndicator()\n      this.indicators.splice(1, 0, this.editIndicator)\n    },\n    handleEditIndicator(indicator) {\n      this.statusEdit = true\n      // 如果是从新增状态,点击编辑按钮时\n      if (this.statusAdd) {\n        this.indicators.splice(1, 1)\n        this.statusAdd = false\n      }\n      this.editIndicator = cloneDeep(indicator)\n      this.indicators = this.indicators.map(i => {\n        if (i.id === indicator.id) {\n          i.isEdit = true\n        } else {\n          i.isEdit = false\n        }\n        return i\n      })\n    },\n    handleRemoveIndicators(indicator) {\n      this.physicalTestService\n        .deleteBodyIndicator(indicator.id)\n        .subscribe(res => {\n          this.statusEdit = false\n          this.indicators = this.indicators.filter(i => i.id !== indicator.id)\n        })\n    },\n    handleSaveIndicators(indicator) {\n      console.log('handleSaveIndicators', indicator)\n      if (this.statusAdd) {\n        this.physicalTestService\n          .addBodyIndicator({\n            item_name: indicator.item_name,\n            item_unit: indicator.item_unit,\n            is_show: indicator.is_show,\n            is_must: indicator.is_must\n          })\n          .subscribe(res => {\n            // 保存新增的基础提测数据\n            this.statusEdit = false\n            this.statusAdd = false\n            this.resetIndicator()\n            this.physicalTestService.getBodyIndicatorList().subscribe()\n            console.log('res')\n          })\n      } else {\n        // 保存修改的基础提测数据\n        this.physicalTestService\n          .editBodyIndicator({\n            id: this.editIndicator.id,\n            item_name: this.editIndicator.item_name,\n            item_unit: this.editIndicator.item_unit,\n            is_show: this.editIndicator.is_show,\n            is_must: this.editIndicator.is_must\n          })\n          .subscribe(res => {\n            this.statusEdit = false\n            this.indicators = this.indicators.map(i => {\n              if (i.id === indicator.id) {\n                this.editIndicator.isEdit = false\n                i = this.editIndicator\n                this.resetIndicator()\n              }\n              return i\n            })\n          })\n      }\n    },\n    handleCancelEditIndicators(indicator) {\n      this.statusEdit = false\n      if (this.statusAdd) {\n        this.indicators.splice(1, 1)\n        this.resetIndicator()\n        this.statusAdd = false\n      } else {\n        this.indicators = this.indicators.map(i => {\n          i.isEdit = false\n          return i\n        })\n      }\n    },\n    handleSortIndicator() {\n      let indicators = this.indicators.slice(1)\n      this.physicalTestService\n        .moveBodyIndicators({\n          item_sort: indicators\n        })\n        .subscribe()\n    },\n    dragStart(ev) {\n      ev.item.classList.add('dragged')\n    },\n    dragEnd(ev) {\n      ev.item.classList.remove('dragged')\n    }\n  }\n}\n",{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/pages/brand/app/physical-test","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <st-panel-layout :class=\"b('container')\">\n      <!-- 会员体测信息说明 -->\n      <MarkteingPluginTitle pathName=\"brand-app-physical-test-list\" />\n      <!-- 会员体测表格 -->\n      <div :class=\"b('main')\">\n        <div :class=\"b('bodyImg')\">\n          <div :class=\"b('bodyImg-header')\">\n            <div :class=\"b('bodyImg-header__title')\">体态拍照设置</div>\n            <div :class=\"b('bodyImg-header__subtitle')\">\n              您可以新增更多的体态图，最多支持6张\n            </div>\n          </div>\n          <div :class=\"b('bodyImg-content')\">\n            <div :class=\"b('bodyImg-content-tag')\">\n              <div v-for=\"tag in labels\" :key=\"tag.id\">\n                <a-tooltip :key=\"tag.id\" :title=\"tag.img_name\">\n                  <a-tag\n                    :class=\"b('bodyImg-content-tag-item')\"\n                    :key=\"tag.img_name\"\n                    :closable=\"!tag.is_must\"\n                    @close=\"handleRemoveTag(tag)\"\n                  >\n                    {{ tag.img_name }}\n                  </a-tag>\n                </a-tooltip>\n              </div>\n              <a\n                v-modal-link=\"{\n                  name: 'brand-app-physical-test-new-label',\n                  props: {},\n                  on: { success: handleReGetBodyImg }\n                }\"\n                v-if=\"labels.length < 6\"\n              >\n                <a-tag style=\"background: #fff; borderStyle: dashed;\">\n                  <a-icon type=\"plus\" style=\"margin-right: 8px;\" />\n                  新增体态图\n                </a-tag>\n              </a>\n            </div>\n          </div>\n        </div>\n        <div :class=\"b('physicalTestTable')\">\n          <div :class=\"b('physicalTestTable-header')\">\n            <div :class=\"b('physicalTestTable-header__title')\">\n              基础体测数据\n            </div>\n            <div :class=\"b('physicalTestTable-header__subtitle')\">\n              已创建体测数据（{{ indicatorsNum }}/50）\n            </div>\n          </div>\n          <st-form-table>\n            <thead>\n              <tr>\n                <th style=\"width: 5%\"></th>\n                <th style=\"width: 29%\">数据名称</th>\n                <th style=\"width: 29%\">单位</th>\n                <th style=\"width: 11%\">展示状态</th>\n                <th style=\"width: 11%\">是否必填</th>\n                <th style=\"width: 15%\">操作</th>\n              </tr>\n            </thead>\n            <draggable\n              v-model=\"indicators\"\n              :animation=\"200\"\n              :move=\"checkMove\"\n              draggable=\".canDrag\"\n              @start=\"dragStart\"\n              @end=\"dragEnd\"\n              tag=\"tbody\"\n              @change=\"handleSortIndicator\"\n            >\n              <tr>\n                <td colspan=\"12\" class=\"st-form-table__add\">\n                  <st-button\n                    type=\"dashed\"\n                    icon=\"add\"\n                    block\n                    :disabled=\"addButtonDisable\"\n                    @click=\"handleAddIndicator\"\n                  >\n                    新增基础数据\n                  </st-button>\n                </td>\n              </tr>\n              <tr\n                :class=\"{ canDrag: !statusAdd && !statusEdit }\"\n                v-for=\"(indicator, index) in canEditIndicator\"\n                :key=\"index\"\n              >\n                <td>\n                  <st-icon type=\"tuozhuai\" />\n                </td>\n                <td>\n                  <div v-if=\"indicator.isEdit && !indicator.is_default\">\n                    <a-input\n                      v-model=\"editIndicator.item_name\"\n                      placeholder=\"请输入名称(必填)\"\n                      :maxLength=\"8\"\n                      style=\"width: 160px;\"\n                    ></a-input>\n                  </div>\n                  <div v-else>{{ indicator.item_name }}</div>\n                </td>\n                <td>\n                  <div v-if=\"indicator.isEdit && !indicator.is_default\">\n                    <a-input\n                      v-model=\"editIndicator.item_unit\"\n                      placeholder=\"请输入单位(必填)\"\n                      :maxLength=\"8\"\n                      style=\"width: 160px;\"\n                    ></a-input>\n                  </div>\n                  <div v-else>{{ indicator.item_unit }}</div>\n                </td>\n                <td>\n                  <div v-if=\"indicator.isEdit\">\n                    <st-switch v-model=\"editIndicator.is_show\"></st-switch>\n                  </div>\n                  <div v-else>\n                    <st-text\n                      :status=\"{\n                        success: indicator.is_show === 1,\n                        default: indicator.is_show === 0\n                      }\"\n                    >\n                      {{ indicator.show_text[indicator.is_show] }}\n                    </st-text>\n                  </div>\n                </td>\n                <td>\n                  <div v-if=\"indicator.isEdit\">\n                    <st-switch v-model=\"editIndicator.is_must\"></st-switch>\n                  </div>\n                  <div v-else>{{ indicator.must_text[indicator.is_must] }}</div>\n                </td>\n                <td>\n                  <div v-if=\"indicator.isEdit\">\n                    <st-table-actions>\n                      <a\n                        v-if=\"!statusAdd\"\n                        @click=\"handleSaveIndicators(indicator)\"\n                      >\n                        保存\n                      </a>\n                      <a\n                        v-if=\"statusAdd\"\n                        @click=\"handleSaveIndicators(indicator)\"\n                      >\n                        确认\n                      </a>\n                      <a @click=\"handleCancelEditIndicators(indicator)\">\n                        取消\n                      </a>\n                    </st-table-actions>\n                  </div>\n                  <div v-else>\n                    <st-table-actions>\n                      <a\n                        @click=\"handleEditIndicator(indicator)\"\n                        v-if=\"indicator.can_edit && auth.edit\"\n                      >\n                        编辑\n                      </a>\n                      <a v-if=\"!indicator.is_default && auth.del\">\n                        <st-popconfirm\n                          :title=\"'一旦删除则无法恢复，确认删除'\"\n                          @confirm=\"handleRemoveIndicators(indicator)\"\n                        >\n                          删除\n                        </st-popconfirm>\n                      </a>\n                    </st-table-actions>\n                  </div>\n                </td>\n              </tr>\n            </draggable>\n          </st-form-table>\n        </div>\n      </div>\n    </st-panel-layout>\n  </div>\n</template>\n\n<script>\nimport draggable from 'vuedraggable'\nimport MarkteingPluginTitle from '@/views/pages/brand/marketing/components#/marketing-title'\nimport BrandAppPhysicalTestNewLabel from '@/views/biz-modals/brand/app/physical-test/new-label'\nimport { ListService } from './list.service'\nimport { cloneDeep } from 'lodash-es'\nexport default {\n  name: 'brand-app-physical-test',\n\n  bem: {\n    b: 'brand-app-physical-test'\n  },\n\n  components: { MarkteingPluginTitle },\n\n  modals: { BrandAppPhysicalTestNewLabel },\n\n  serviceInject() {\n    return {\n      physicalTestService: ListService\n    }\n  },\n\n  rxState() {\n    return {\n      loading: this.physicalTestService.loading$,\n      indicators: this.physicalTestService.list$,\n      labels: this.physicalTestService.labelList$,\n      auth: this.physicalTestService.auth$\n    }\n  },\n\n  props: {},\n\n  data() {\n    return {\n      statusAdd: false,\n      statusEdit: false,\n      tags: [],\n      editIndicator: {}\n    }\n  },\n\n  computed: {\n    indicatorsNum() {\n      let len = this.indicators.length\n      if (len === 1) {\n        return 0\n      } else {\n        return this.statusAdd ? len - 2 : len - 1\n      }\n    },\n    canEditIndicator() {\n      return this.indicators.slice(1)\n    },\n    addButtonDisable() {\n      if (this.auth.add) {\n        return this.statusAdd\n      } else {\n        return true\n      }\n    }\n  },\n\n  methods: {\n    checkMove(evt) {\n      const { draggedContext, relatedContext, dragged, from, to } = evt\n      const draggedElement = draggedContext.element\n      const relatedElement = relatedContext.element\n      console.log('statusEdit', this.statusEdit)\n      // 新增状态不可拖拽\n      if (this.statusAdd) return false\n      // 编辑状态不可拖拽\n      if (this.statusEdit) return false\n      return (!relatedElement || !relatedElement.isAdd) && !draggedElement.isAdd\n    },\n    resetIndicator() {\n      this.editIndicator = {\n        item_name: '',\n        item_unit: '',\n        is_show: 1,\n        is_must: 1,\n        isEdit: true\n      }\n    },\n    handleReGetBodyImg() {\n      this.$message.success({ content: '体态图新增成功' })\n      this.physicalTestService.getBodyImgLableList().subscribe()\n    },\n    handleRemoveTag(tag) {\n      this.physicalTestService\n        .removePhysicalTestBodyImgLabel(tag.id)\n        .subscribe(res => {\n          this.$message.success({ content: '体态图删除成功' })\n          this.physicalTestService.getBodyImgLableList().subscribe()\n        })\n    },\n    handleAddIndicator() {\n      this.indicators = this.indicators.map(i => {\n        i.isEdit = false\n        return i\n      })\n      this.statusAdd = true\n      this.resetIndicator()\n      this.indicators.splice(1, 0, this.editIndicator)\n    },\n    handleEditIndicator(indicator) {\n      this.statusEdit = true\n      // 如果是从新增状态,点击编辑按钮时\n      if (this.statusAdd) {\n        this.indicators.splice(1, 1)\n        this.statusAdd = false\n      }\n      this.editIndicator = cloneDeep(indicator)\n      this.indicators = this.indicators.map(i => {\n        if (i.id === indicator.id) {\n          i.isEdit = true\n        } else {\n          i.isEdit = false\n        }\n        return i\n      })\n    },\n    handleRemoveIndicators(indicator) {\n      this.physicalTestService\n        .deleteBodyIndicator(indicator.id)\n        .subscribe(res => {\n          this.statusEdit = false\n          this.indicators = this.indicators.filter(i => i.id !== indicator.id)\n        })\n    },\n    handleSaveIndicators(indicator) {\n      console.log('handleSaveIndicators', indicator)\n      if (this.statusAdd) {\n        this.physicalTestService\n          .addBodyIndicator({\n            item_name: indicator.item_name,\n            item_unit: indicator.item_unit,\n            is_show: indicator.is_show,\n            is_must: indicator.is_must\n          })\n          .subscribe(res => {\n            // 保存新增的基础提测数据\n            this.statusEdit = false\n            this.statusAdd = false\n            this.resetIndicator()\n            this.physicalTestService.getBodyIndicatorList().subscribe()\n            console.log('res')\n          })\n      } else {\n        // 保存修改的基础提测数据\n        this.physicalTestService\n          .editBodyIndicator({\n            id: this.editIndicator.id,\n            item_name: this.editIndicator.item_name,\n            item_unit: this.editIndicator.item_unit,\n            is_show: this.editIndicator.is_show,\n            is_must: this.editIndicator.is_must\n          })\n          .subscribe(res => {\n            this.statusEdit = false\n            this.indicators = this.indicators.map(i => {\n              if (i.id === indicator.id) {\n                this.editIndicator.isEdit = false\n                i = this.editIndicator\n                this.resetIndicator()\n              }\n              return i\n            })\n          })\n      }\n    },\n    handleCancelEditIndicators(indicator) {\n      this.statusEdit = false\n      if (this.statusAdd) {\n        this.indicators.splice(1, 1)\n        this.resetIndicator()\n        this.statusAdd = false\n      } else {\n        this.indicators = this.indicators.map(i => {\n          i.isEdit = false\n          return i\n        })\n      }\n    },\n    handleSortIndicator() {\n      let indicators = this.indicators.slice(1)\n      this.physicalTestService\n        .moveBodyIndicators({\n          item_sort: indicators\n        })\n        .subscribe()\n    },\n    dragStart(ev) {\n      ev.item.classList.add('dragged')\n    },\n    dragEnd(ev) {\n      ev.item.classList.remove('dragged')\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}