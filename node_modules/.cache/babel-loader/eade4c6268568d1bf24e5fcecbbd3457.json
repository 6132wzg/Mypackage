{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/cabinet/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/shop/cabinet/list.vue","mtime":1601345845213},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ListService } from \"./list.service\";\nimport { MessageService } from '@/services/message.service';\nimport tableMixin from '@/mixins/table.mixin';\nimport { CABINET, CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet';\nimport { Temporarycolumns, LongTermcolumns, Recordcolumns } from \"./list.config\";\nimport StStatus from '@/views/biz-components/status/status';\nimport ShopCabinetEditPrice from '@/views/biz-modals/shop/cabinet/edit-price';\nimport ShopCabinetAddLongTerm from '@/views/biz-modals/shop/cabinet/add-long-term';\nimport ShopCabinetAddTemporary from '@/views/biz-modals/shop/cabinet/add-temporary';\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term';\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary';\nimport ShopCabinetUseRecord from '@/views/biz-modals/shop/cabinet/use-record';\nimport ShopCabinetEditStatus from '@/views/biz-modals/shop/cabinet/edit-status';\nimport ShopCabinetOpen from '@/views/biz-modals/shop/cabinet/open';\nimport ShopCabinetBatch from '@/views/biz-modals/shop/cabinet/batch';\nexport default {\n  bem: {\n    b: 'st-cabinet-list',\n    bBattrey: 'st-cabinet-list-battery-status'\n  },\n  mixins: [tableMixin],\n  components: {\n    StStatus: StStatus\n  },\n  modals: {\n    ShopCabinetEditPrice: ShopCabinetEditPrice,\n    ShopCabinetAddLongTerm: ShopCabinetAddLongTerm,\n    ShopCabinetAddTemporary: ShopCabinetAddTemporary,\n    ShopCabinetEditLongTerm: ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary: ShopCabinetEditTemporary,\n    ShopCabinetEditStatus: ShopCabinetEditStatus,\n    ShopCabinetUseRecord: ShopCabinetUseRecord,\n    ShopCabinetOpen: ShopCabinetOpen,\n    ShopCabinetBatch: ShopCabinetBatch\n  },\n  serviceInject: function serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: ListService\n    };\n  },\n  rxState: function rxState() {\n    var cabinetService = this.cabinetService;\n    return {\n      auth: cabinetService.auth$,\n      cabinetTypeOption: cabinetService.cabinetTypeOption$,\n      cabinetBusinessOption: cabinetService.cabinetBusinessOption$,\n      actionTypeOption: cabinetService.actionTypeOption$\n    };\n  },\n  props: {\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    list: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    page: {\n      type: Object,\n      default: function _default() {}\n    },\n    areaName: {\n      type: String,\n      default: ''\n    },\n    channel: {\n      type: String,\n      default: 'use'\n    }\n  },\n  data: function data() {\n    return {\n      CABINET_BUSINESS_TYPE: CABINET_BUSINESS_TYPE\n    };\n  },\n  computed: {\n    Temporarycolumns: Temporarycolumns,\n    LongTermcolumns: LongTermcolumns,\n    Recordcolumns: Recordcolumns,\n    columns: function columns() {\n      var Map = {\n        temporary: this.Temporarycolumns,\n        'long-term': this.LongTermcolumns,\n        record: this.Recordcolumns\n      };\n      return Map[this.type];\n    },\n    type: function type() {\n      return this.$searchQuery.type || 'temporary';\n    }\n  },\n  methods: {\n    onDateOk: function onDateOk(date, str) {\n      this.$searchQuery.date_start = date[0].format('YYYY-MM-DD HH:mm');\n      this.$searchQuery.date_end = date[1].format('YYYY-MM-DD HH:mm');\n      this.refresh();\n    },\n    disabledDate: function disabledDate(current) {\n      if (!current) return false;\n      return moment().subtract(6, 'M') > current || moment().add(6, 'M') < current;\n    },\n    refresh: function refresh() {\n      this.onSelectionReset();\n      this.$emit('refresh');\n    },\n\n    /**\n     * 批量新增储物柜\n     */\n    onCabinetBatchAdd: function onCabinetBatchAdd() {\n      var _this$$searchQuery = this.$searchQuery,\n          id = _this$$searchQuery.id,\n          type = _this$$searchQuery.type;\n      var areaName = this.areaName;\n\n      if (!+id) {\n        this.messageService.error({\n          content: '请先新增区域'\n        });\n        return;\n      }\n\n      this.$modalRouter.push({\n        name: \"shop-cabinet-add-\".concat(type),\n        props: {\n          id: id,\n          type: type,\n          areaName: areaName\n        },\n        on: {\n          change: this.refresh\n        }\n      });\n    },\n\n    /**\n     * 批量删除储物柜\n     */\n    onCabinetBatchDel: function onCabinetBatchDel() {\n      // 判断是否有智能柜\n      var flagText = this.onGetCabinetType();\n\n      if (flagText === 'smart') {\n        this.$error({\n          title: '当前选中柜子有智能储物柜，若需删除，请联系三体工作人员',\n          okText: '知道了'\n        });\n        return;\n      } // 判断是否有使用中的柜子\n\n\n      if (flagText === 'using') {\n        this.$error({\n          title: '选择的储物柜正在使用中，无法删除',\n          okText: '知道了'\n        });\n        return;\n      }\n\n      this.$modalRouter.push({\n        name: 'shop-cabinet-batch',\n        props: {\n          title: '批量删除储物柜',\n          ids: this.selectedRowKeys,\n          total: this.page.total_counts,\n          useType: 'del',\n          searchQuery: {\n            cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n            cabinet_area_id: this.$searchQuery.id,\n            keywords: this.$searchQuery.keywords,\n            battery: this.$searchQuery.battery,\n            cabinet_business_type: this.$searchQuery.cabinet_business_type\n          }\n        },\n        on: {\n          success: this.refresh\n        }\n      });\n    },\n\n    /**\n     * 批量清柜\n     */\n    onCabinetBatchClean: function onCabinetBatchClean() {\n      var OfflineCabinetNum = this.getSmartOfflineNum();\n\n      if (OfflineCabinetNum > 0) {\n        this.messageService.error({\n          content: '已离线的储物柜无法清柜，请重新选择'\n        });\n        return;\n      }\n\n      this.$modalRouter.push({\n        name: 'shop-cabinet-batch',\n        props: {\n          title: '批量清柜',\n          ids: this.selectedRowKeys,\n          total: this.page.total_counts,\n          useType: 'clear',\n          searchQuery: {\n            cabinet_area_id: this.$searchQuery.id,\n            cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n            keywords: this.$searchQuery.keywords,\n            battery: this.$searchQuery.battery,\n            cabinet_business_type: this.$searchQuery.cabinet_business_type\n          }\n        },\n        on: {\n          success: this.refresh\n        }\n      });\n    },\n\n    /**\n     * 批量改价\n     */\n    onCabinetBatchChangePrice: function onCabinetBatchChangePrice() {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-price',\n        props: {\n          ids: this.selectedRowKeys,\n          cabinet_area_id: this.$searchQuery.id,\n          keywords: this.$searchQuery.keywords,\n          battery: this.$searchQuery.battery,\n          cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n          cabinet_business_type: this.$searchQuery.cabinet_business_type,\n          total: this.page.total_counts\n        },\n        on: {\n          change: this.refresh\n        }\n      });\n    },\n\n    /**\n     * 开启储物柜\n     */\n    onCabinetOpen: function onCabinetOpen(cabinet) {\n      // 选择的柜子中有维修状态的智能柜\n      this.$modalRouter.push({\n        name: 'shop-cabinet-open',\n        props: {\n          id: cabinet.id,\n          userName: cabinet.user_name,\n          userMobile: cabinet.mobile\n        },\n        on: {\n          success: this.refresh\n        }\n      });\n    },\n\n    /**\n     * 修改储物柜信息\n     */\n    onCabinetEditInfo: function onCabinetEditInfo(id) {\n      this.$modalRouter.push({\n        name: \"shop-cabinet-edit-\".concat(this.$searchQuery.type),\n        props: {\n          id: id,\n          areaName: this.areaName\n        },\n        on: {\n          change: this.refresh\n        }\n      });\n    },\n\n    /**\n     * 修改储物柜状态\n     */\n    onCabinetEditStatus: function onCabinetEditStatus(record) {\n      var cabinet = this.getCabinetUsingItem(record);\n      var id = cabinet.id;\n      var useStatus = cabinet.cabinet_business_type;\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-status',\n        props: {\n          id: id,\n          useStatus: useStatus\n        },\n        on: {\n          success: this.refresh\n        }\n      });\n    },\n\n    /**\n     * 查看储物柜使用记录\n     */\n    onCabinetShowRecord: function onCabinetShowRecord(cabinet_id) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-use-record',\n        props: {\n          cabinet_id: cabinet_id\n        }\n      });\n    },\n\n    /**\n     * 获取储物柜类型\n     */\n    onGetCabinetType: function onGetCabinetType() {\n      var type = this.$searchQuery.type;\n\n      for (var i = 0; i < this.selectedRows.length; i++) {\n        var temp = this.selectedRows[i];\n\n        if (temp.is_smart) {\n          return 'smart';\n        } // 使用中的柜子无法删除\n\n\n        if (type === 'long-term' && temp.sale_status === 1) {\n          return 'using';\n        } // 损坏的柜子无法删除\n\n\n        if (type === 'temporary' && temp.cabinet_business_type === 2) {\n          return 'using';\n        }\n      }\n\n      return 'none';\n    },\n\n    /**\n     * 获取选中储物柜中离线的数量\n     */\n    getSmartOfflineNum: function getSmartOfflineNum() {\n      var checkedOfflineCabinets = this.selectedRows.filter(function (item) {\n        return item.is_smart && !item.is_online;\n      });\n      return checkedOfflineCabinets.length;\n    },\n\n    /**\n     * 获取选中储物柜中已使用的数量\n     */\n    getUsingCabinetNum: function getUsingCabinetNum() {\n      var _this = this;\n\n      var checkedUsingCabinets = this.selectedRows.filter(function (item) {\n        return item.cabinet_business_type === _this.CABINET_BUSINESS_TYPE.USING;\n      });\n      return checkedUsingCabinets.length;\n    },\n\n    /**\n     * 获取选中储物柜中已使用的数量\n     */\n    getSmartCabinetNum: function getSmartCabinetNum() {\n      var checkedSmartCabinets = this.selectRows.filter(function (item) {\n        return item.is_smart;\n      });\n      return checkedSmartCabinets.length;\n    },\n    getCabinetUsingItem: function getCabinetUsingItem(item) {\n      if (this.type === 'long-term' && item.sale_status === 1) {\n        item.cabinet_business_type = 2;\n      }\n\n      return item;\n    }\n  }\n};",{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA,SAAA,WAAA;AACA,SAAA,cAAA,QAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,SAAA,OAAA,EAAA,qBAAA,QAAA,+BAAA;AACA,SAAA,gBAAA,EAAA,eAAA,EAAA,aAAA;AACA,OAAA,QAAA,MAAA,sCAAA;AACA,OAAA,oBAAA,MAAA,4CAAA;AACA,OAAA,sBAAA,MAAA,+CAAA;AACA,OAAA,uBAAA,MAAA,+CAAA;AACA,OAAA,uBAAA,MAAA,gDAAA;AACA,OAAA,wBAAA,MAAA,gDAAA;AACA,OAAA,oBAAA,MAAA,4CAAA;AACA,OAAA,qBAAA,MAAA,6CAAA;AACA,OAAA,eAAA,MAAA,sCAAA;AACA,OAAA,gBAAA,MAAA,uCAAA;AACA,eAAA;AACA,EAAA,GAAA,EAAA;AACA,IAAA,CAAA,EAAA,iBADA;AAEA,IAAA,QAAA,EAAA;AAFA,GADA;AAKA,EAAA,MAAA,EAAA,CAAA,UAAA,CALA;AAMA,EAAA,UAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GANA;AAOA,EAAA,MAAA,EAAA;AACA,IAAA,oBAAA,EAAA,oBADA;AAEA,IAAA,sBAAA,EAAA,sBAFA;AAGA,IAAA,uBAAA,EAAA,uBAHA;AAIA,IAAA,uBAAA,EAAA,uBAJA;AAKA,IAAA,wBAAA,EAAA,wBALA;AAMA,IAAA,qBAAA,EAAA,qBANA;AAOA,IAAA,oBAAA,EAAA,oBAPA;AAQA,IAAA,eAAA,EAAA,eARA;AASA,IAAA,gBAAA,EAAA;AATA,GAPA;AAkBA,EAAA,aAlBA,2BAkBA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,cADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GAvBA;AAwBA,EAAA,OAxBA,qBAwBA;AACA,QAAA,cAAA,GAAA,KAAA,cAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,cAAA,CAAA,KADA;AAEA,MAAA,iBAAA,EAAA,cAAA,CAAA,kBAFA;AAGA,MAAA,qBAAA,EAAA,cAAA,CAAA,sBAHA;AAIA,MAAA,gBAAA,EAAA,cAAA,CAAA;AAJA,KAAA;AAMA,GAhCA;AAiCA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GAjCA;AAuDA,EAAA,IAvDA,kBAuDA;AACA,WAAA;AAAA,MAAA,qBAAA,EAAA;AAAA,KAAA;AACA,GAzDA;AA0DA,EAAA,QAAA,EAAA;AACA,IAAA,gBAAA,EAAA,gBADA;AAEA,IAAA,eAAA,EAAA,eAFA;AAGA,IAAA,aAAA,EAAA,aAHA;AAIA,IAAA,OAJA,qBAIA;AACA,UAAA,GAAA,GAAA;AACA,QAAA,SAAA,EAAA,KAAA,gBADA;AAEA,qBAAA,KAAA,eAFA;AAGA,QAAA,MAAA,EAAA,KAAA;AAHA,OAAA;AAKA,aAAA,GAAA,CAAA,KAAA,IAAA,CAAA;AACA,KAXA;AAYA,IAAA,IAZA,kBAYA;AACA,aAAA,KAAA,YAAA,CAAA,IAAA,IAAA,WAAA;AACA;AAdA,GA1DA;AA0EA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA,GADA,EACA;AACA,WAAA,YAAA,CAAA,UAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,kBAAA,CAAA;AACA,WAAA,YAAA,CAAA,QAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,kBAAA,CAAA;AACA,WAAA,OAAA;AACA,KALA;AAMA,IAAA,YANA,wBAMA,OANA,EAMA;AACA,UAAA,CAAA,OAAA,EAAA,OAAA,KAAA;AACA,aACA,MAAA,GAAA,QAAA,CAAA,CAAA,EAAA,GAAA,IAAA,OAAA,IAAA,MAAA,GAAA,GAAA,CAAA,CAAA,EAAA,GAAA,IAAA,OADA;AAGA,KAXA;AAYA,IAAA,OAZA,qBAYA;AACA,WAAA,gBAAA;AACA,WAAA,KAAA,CAAA,SAAA;AACA,KAfA;;AAgBA;;;AAGA,IAAA,iBAnBA,+BAmBA;AAAA,+BACA,KAAA,YADA;AAAA,UACA,EADA,sBACA,EADA;AAAA,UACA,IADA,sBACA,IADA;AAEA,UAAA,QAAA,GAAA,KAAA,QAAA;;AACA,UAAA,CAAA,CAAA,EAAA,EAAA;AACA,aAAA,cAAA,CAAA,KAAA,CAAA;AACA,UAAA,OAAA,EAAA;AADA,SAAA;AAGA;AACA;;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,6BAAA,IAAA,CADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,EAAA,EAAA,EADA;AAEA,UAAA,IAAA,EAAA,IAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAFA;AAOA,QAAA,EAAA,EAAA;AACA,UAAA,MAAA,EAAA,KAAA;AADA;AAPA,OAAA;AAWA,KAvCA;;AAwCA;;;AAGA,IAAA,iBA3CA,+BA2CA;AACA;AACA,UAAA,QAAA,GAAA,KAAA,gBAAA,EAAA;;AACA,UAAA,QAAA,KAAA,OAAA,EAAA;AACA,aAAA,MAAA,CAAA;AACA,UAAA,KAAA,EAAA,6BADA;AAEA,UAAA,MAAA,EAAA;AAFA,SAAA;AAIA;AACA,OATA,CAUA;;;AACA,UAAA,QAAA,KAAA,OAAA,EAAA;AACA,aAAA,MAAA,CAAA;AACA,UAAA,KAAA,EAAA,kBADA;AAEA,UAAA,MAAA,EAAA;AAFA,SAAA;AAIA;AACA;;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,oBADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,SADA;AAEA,UAAA,GAAA,EAAA,KAAA,eAFA;AAGA,UAAA,KAAA,EAAA,KAAA,IAAA,CAAA,YAHA;AAIA,UAAA,OAAA,EAAA,KAJA;AAKA,UAAA,WAAA,EAAA;AACA,YAAA,YAAA,EAAA,KAAA,YAAA,CAAA,IAAA,KAAA,WAAA,GAAA,CAAA,GAAA,CADA;AAEA,YAAA,eAAA,EAAA,KAAA,YAAA,CAAA,EAFA;AAGA,YAAA,QAAA,EAAA,KAAA,YAAA,CAAA,QAHA;AAIA,YAAA,OAAA,EAAA,KAAA,YAAA,CAAA,OAJA;AAKA,YAAA,qBAAA,EAAA,KAAA,YAAA,CAAA;AALA;AALA,SAFA;AAeA,QAAA,EAAA,EAAA;AACA,UAAA,OAAA,EAAA,KAAA;AADA;AAfA,OAAA;AAmBA,KAhFA;;AAiFA;;;AAGA,IAAA,mBApFA,iCAoFA;AACA,UAAA,iBAAA,GAAA,KAAA,kBAAA,EAAA;;AACA,UAAA,iBAAA,GAAA,CAAA,EAAA;AACA,aAAA,cAAA,CAAA,KAAA,CAAA;AACA,UAAA,OAAA,EAAA;AADA,SAAA;AAGA;AACA;;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,oBADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,GAAA,EAAA,KAAA,eAFA;AAGA,UAAA,KAAA,EAAA,KAAA,IAAA,CAAA,YAHA;AAIA,UAAA,OAAA,EAAA,OAJA;AAKA,UAAA,WAAA,EAAA;AACA,YAAA,eAAA,EAAA,KAAA,YAAA,CAAA,EADA;AAEA,YAAA,YAAA,EAAA,KAAA,YAAA,CAAA,IAAA,KAAA,WAAA,GAAA,CAAA,GAAA,CAFA;AAGA,YAAA,QAAA,EAAA,KAAA,YAAA,CAAA,QAHA;AAIA,YAAA,OAAA,EAAA,KAAA,YAAA,CAAA,OAJA;AAKA,YAAA,qBAAA,EAAA,KAAA,YAAA,CAAA;AALA;AALA,SAFA;AAeA,QAAA,EAAA,EAAA;AACA,UAAA,OAAA,EAAA,KAAA;AADA;AAfA,OAAA;AAmBA,KA/GA;;AAgHA;;;AAGA,IAAA,yBAnHA,uCAmHA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,yBADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,GAAA,EAAA,KAAA,eADA;AAEA,UAAA,eAAA,EAAA,KAAA,YAAA,CAAA,EAFA;AAGA,UAAA,QAAA,EAAA,KAAA,YAAA,CAAA,QAHA;AAIA,UAAA,OAAA,EAAA,KAAA,YAAA,CAAA,OAJA;AAKA,UAAA,YAAA,EAAA,KAAA,YAAA,CAAA,IAAA,KAAA,WAAA,GAAA,CAAA,GAAA,CALA;AAMA,UAAA,qBAAA,EAAA,KAAA,YAAA,CAAA,qBANA;AAOA,UAAA,KAAA,EAAA,KAAA,IAAA,CAAA;AAPA,SAFA;AAWA,QAAA,EAAA,EAAA;AACA,UAAA,MAAA,EAAA,KAAA;AADA;AAXA,OAAA;AAeA,KAnIA;;AAoIA;;;AAGA,IAAA,aAvIA,yBAuIA,OAvIA,EAuIA;AACA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,mBADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,EAAA,EAAA,OAAA,CAAA,EADA;AAEA,UAAA,QAAA,EAAA,OAAA,CAAA,SAFA;AAGA,UAAA,UAAA,EAAA,OAAA,CAAA;AAHA,SAFA;AAOA,QAAA,EAAA,EAAA;AACA,UAAA,OAAA,EAAA,KAAA;AADA;AAPA,OAAA;AAWA,KApJA;;AAqJA;;;AAGA,IAAA,iBAxJA,6BAwJA,EAxJA,EAwJA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,8BAAA,KAAA,YAAA,CAAA,IAAA,CADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,EAAA,EAAA,EADA;AAEA,UAAA,QAAA,EAAA,KAAA;AAFA,SAFA;AAMA,QAAA,EAAA,EAAA;AACA,UAAA,MAAA,EAAA,KAAA;AADA;AANA,OAAA;AAUA,KAnKA;;AAoKA;;;AAGA,IAAA,mBAvKA,+BAuKA,MAvKA,EAuKA;AACA,UAAA,OAAA,GAAA,KAAA,mBAAA,CAAA,MAAA,CAAA;AACA,UAAA,EAAA,GAAA,OAAA,CAAA,EAAA;AACA,UAAA,SAAA,GAAA,OAAA,CAAA,qBAAA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,0BADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,EAAA,EAAA,EADA;AAEA,UAAA,SAAA,EAAA;AAFA,SAFA;AAMA,QAAA,EAAA,EAAA;AACA,UAAA,OAAA,EAAA,KAAA;AADA;AANA,OAAA;AAUA,KArLA;;AAsLA;;;AAGA,IAAA,mBAzLA,+BAyLA,UAzLA,EAyLA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,yBADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,UAAA,EAAA;AADA;AAFA,OAAA;AAMA,KAhMA;;AAiMA;;;AAGA,IAAA,gBApMA,8BAoMA;AACA,UAAA,IAAA,GAAA,KAAA,YAAA,CAAA,IAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,YAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,YAAA,CAAA,CAAA,CAAA;;AACA,YAAA,IAAA,CAAA,QAAA,EAAA;AACA,iBAAA,OAAA;AACA,SAJA,CAKA;;;AACA,YAAA,IAAA,KAAA,WAAA,IAAA,IAAA,CAAA,WAAA,KAAA,CAAA,EAAA;AACA,iBAAA,OAAA;AACA,SARA,CASA;;;AACA,YAAA,IAAA,KAAA,WAAA,IAAA,IAAA,CAAA,qBAAA,KAAA,CAAA,EAAA;AACA,iBAAA,OAAA;AACA;AACA;;AACA,aAAA,MAAA;AACA,KArNA;;AAsNA;;;AAGA,IAAA,kBAzNA,gCAyNA;AACA,UAAA,sBAAA,GAAA,KAAA,YAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,QAAA,IAAA,CAAA,IAAA,CAAA,SAAA;AAAA,OADA,CAAA;AAGA,aAAA,sBAAA,CAAA,MAAA;AACA,KA9NA;;AA+NA;;;AAGA,IAAA,kBAlOA,gCAkOA;AAAA;;AACA,UAAA,oBAAA,GAAA,KAAA,YAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,qBAAA,KAAA,KAAA,CAAA,qBAAA,CAAA,KAAA;AAAA,OADA,CAAA;AAGA,aAAA,oBAAA,CAAA,MAAA;AACA,KAvOA;;AAwOA;;;AAGA,IAAA,kBA3OA,gCA2OA;AACA,UAAA,oBAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,QAAA;AAAA,OAAA,CAAA;AACA,aAAA,oBAAA,CAAA,MAAA;AACA,KA9OA;AA+OA,IAAA,mBA/OA,+BA+OA,IA/OA,EA+OA;AACA,UAAA,KAAA,IAAA,KAAA,WAAA,IAAA,IAAA,CAAA,WAAA,KAAA,CAAA,EAAA;AACA,QAAA,IAAA,CAAA,qBAAA,GAAA,CAAA;AACA;;AACA,aAAA,IAAA;AACA;AApPA;AA1EA,CAAA","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div :class=\"b('actions')\">\n      <div :class=\"b('actions-left')\">\n        <st-button\n          v-if=\"auth.batchAdd && type !== 'record' && channel === 'manage'\"\n          type=\"primary\"\n          class=\"mg-r8\"\n          @click=\"onCabinetBatchAdd\"\n        >\n          批量新增\n        </st-button>\n        <st-button\n          v-if=\"auth.batchDel && type !== 'record' && channel === 'manage'\"\n          class=\"mg-r8\"\n          @click=\"onCabinetBatchDel\"\n          :disabled=\"isSelectedDisabled\"\n          :loading=\"loading.del\"\n        >\n          批量删除\n        </st-button>\n        <st-button\n          v-if=\"type === 'temporary' && channel === 'use'\"\n          class=\"mg-r8\"\n          type=\"primary\"\n          @click=\"onCabinetBatchClean\"\n          :disabled=\"isSelectedDisabled\"\n          :loading=\"loading.del\"\n        >\n          批量清柜\n        </st-button>\n        <st-button\n          v-if=\"type === 'long-term' && auth.batchPrice && channel === 'manage'\"\n          class=\"mg-r8\"\n          :disabled=\"isSelectedDisabled\"\n          @click=\"onCabinetBatchChangePrice\"\n        >\n          批量改价\n        </st-button>\n      </div>\n      <div :class=\"b('actions-right')\" v-if=\"type !== 'record'\">\n        <a-select\n          class=\"mg-r8\"\n          v-model=\"$searchQuery.battery\"\n          style=\"width: 140px\"\n          @change=\"refresh\"\n        >\n          <a-select-option value=\"all\">\n            全部电量\n          </a-select-option>\n          <a-select-option value=\"low\">\n            低电量\n          </a-select-option>\n        </a-select>\n        <a-select\n          v-model=\"$searchQuery.cabinet_business_type\"\n          style=\"width: 140px\"\n          @change=\"refresh\"\n        >\n          <a-select-option\n            v-for=\"(item, index) in cabinetBusinessOption\"\n            :key=\"index\"\n            :value=\"item.value\"\n          >\n            {{ item.label }}\n          </a-select-option>\n        </a-select>\n      </div>\n      <div :class=\"b('actions-right')\" v-else>\n        <a-range-picker\n          :disabledDate=\"disabledDate\"\n          class=\"mg-r8\"\n          format=\"YYYY-MM-DD HH:mm\"\n          :showTime=\"{ formate: 'HH:mm' }\"\n          @ok=\"onDateOk\"\n        ></a-range-picker>\n        <a-select\n          v-model=\"$searchQuery.cabinet_type\"\n          style=\"width: 140px\"\n          class=\"mg-r8\"\n          @change=\"refresh\"\n        >\n          <a-select-option\n            v-for=\"(item, index) in cabinetTypeOption\"\n            :key=\"index\"\n            :value=\"item.value\"\n          >\n            {{ item.label }}\n          </a-select-option>\n        </a-select>\n        <a-select\n          v-model=\"$searchQuery.action_type\"\n          style=\"width: 140px\"\n          class=\"mg-r8\"\n          @change=\"refresh\"\n        >\n          <a-select-option\n            v-for=\"(item, index) in actionTypeOption\"\n            :key=\"index\"\n            :value=\"item.value\"\n          >\n            {{ item.label }}\n          </a-select-option>\n        </a-select>\n      </div>\n    </div>\n    <div :class=\"b('list')\" v-if=\"type !== 'record'\">\n      <st-table\n        rowKey=\"id\"\n        :loading=\"loading\"\n        :alertSelection=\"{ onReset: onSelectionReset }\"\n        :rowSelection=\"{\n          fixed: true,\n          selectedRowKeys: selectedRowKeys,\n          onChange: onSelectionChange\n        }\"\n        :dataSource=\"list\"\n        :page=\"page\"\n        :columns=\"columns\"\n        :scroll=\"{ x: 1200 }\"\n        @change=\"onTableChange\"\n      >\n        <template slot=\"is_smart\" slot-scope=\"text\">\n          {{ text === 1 ? '是' : '否' }}\n        </template>\n        <template slot=\"battery\" slot-scope=\"text, record\">\n          <span\n            :class=\"bBattrey({ active: !record.battery.status })\"\n            v-if=\"record.is_smart\"\n          >\n            {{ record.battery.status ? '正常' : '低电压' }}({{\n              record.battery.value\n            }})\n          </span>\n          <span v-else>--</span>\n        </template>\n        <template slot=\"price\" slot-scope=\"text, record\">\n          {{ record.price_num }}\n        </template>\n        <template slot=\"cabinet_business_type\" slot-scope=\"text\">\n          <st-status :type=\"text\"></st-status>\n        </template>\n        <div slot=\"action\" slot-scope=\"text, record\">\n          <st-table-actions>\n            <a\n              @click=\"onCabinetEditInfo(record.id)\"\n              v-if=\"auth.edit && channel === 'manage'\"\n            >\n              编辑\n            </a>\n            <a\n              @click=\"onCabinetEditStatus(record)\"\n              v-if=\"auth.edit && channel === 'use'\"\n            >\n              编辑\n            </a>\n            <a @click=\"onCabinetShowRecord(record.id)\" v-if=\"channel === 'use'\">\n              使用记录\n            </a>\n            <a @click=\"onCabinetOpen(record)\" v-if=\"channel === 'use'\">\n              远程开柜\n            </a>\n          </st-table-actions>\n        </div>\n      </st-table>\n    </div>\n    <div :class=\"b('list')\" v-else>\n      <st-table\n        rowKey=\"id\"\n        :loading=\"loading\"\n        :dataSource=\"list\"\n        :columns=\"columns\"\n        :scroll=\"{ x: 1200 }\"\n        @change=\"onTableChange\"\n        :page=\"page\"\n      >\n        <template slot=\"cabinet_type\" slot-scope=\"text\">\n          {{ text | enumFilter('cabinet.cabinet_type') }}\n        </template>\n        <template slot=\"action_type\" slot-scope=\"text\">\n          {{ text | enumFilter('cabinet.action_type') }}\n        </template>\n      </st-table>\n    </div>\n  </div>\n</template>\n<script>\nimport { ListService } from './list.service'\nimport { MessageService } from '@/services/message.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { CABINET, CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet'\nimport { Temporarycolumns, LongTermcolumns, Recordcolumns } from './list.config'\nimport StStatus from '@/views/biz-components/status/status'\nimport ShopCabinetEditPrice from '@/views/biz-modals/shop/cabinet/edit-price'\nimport ShopCabinetAddLongTerm from '@/views/biz-modals/shop/cabinet/add-long-term'\nimport ShopCabinetAddTemporary from '@/views/biz-modals/shop/cabinet/add-temporary'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nimport ShopCabinetUseRecord from '@/views/biz-modals/shop/cabinet/use-record'\nimport ShopCabinetEditStatus from '@/views/biz-modals/shop/cabinet/edit-status'\nimport ShopCabinetOpen from '@/views/biz-modals/shop/cabinet/open'\nimport ShopCabinetBatch from '@/views/biz-modals/shop/cabinet/batch'\nexport default {\n  bem: {\n    b: 'st-cabinet-list',\n    bBattrey: 'st-cabinet-list-battery-status'\n  },\n  mixins: [tableMixin],\n  components: { StStatus },\n  modals: {\n    ShopCabinetEditPrice,\n    ShopCabinetAddLongTerm,\n    ShopCabinetAddTemporary,\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary,\n    ShopCabinetEditStatus,\n    ShopCabinetUseRecord,\n    ShopCabinetOpen,\n    ShopCabinetBatch\n  },\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      cabinetService: ListService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      auth: cabinetService.auth$,\n      cabinetTypeOption: cabinetService.cabinetTypeOption$,\n      cabinetBusinessOption: cabinetService.cabinetBusinessOption$,\n      actionTypeOption: cabinetService.actionTypeOption$\n    }\n  },\n  props: {\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    list: {\n      type: Array,\n      default: () => []\n    },\n    page: {\n      type: Object,\n      default: () => {}\n    },\n    areaName: {\n      type: String,\n      default: ''\n    },\n    channel: {\n      type: String,\n      default: 'use'\n    }\n  },\n  data() {\n    return { CABINET_BUSINESS_TYPE }\n  },\n  computed: {\n    Temporarycolumns,\n    LongTermcolumns,\n    Recordcolumns,\n    columns() {\n      const Map = {\n        temporary: this.Temporarycolumns,\n        'long-term': this.LongTermcolumns,\n        record: this.Recordcolumns\n      }\n      return Map[this.type]\n    },\n    type() {\n      return this.$searchQuery.type || 'temporary'\n    }\n  },\n  methods: {\n    onDateOk(date, str) {\n      this.$searchQuery.date_start = date[0].format('YYYY-MM-DD HH:mm')\n      this.$searchQuery.date_end = date[1].format('YYYY-MM-DD HH:mm')\n      this.refresh()\n    },\n    disabledDate(current) {\n      if (!current) return false\n      return (\n        moment().subtract(6, 'M') > current || moment().add(6, 'M') < current\n      )\n    },\n    refresh() {\n      this.onSelectionReset()\n      this.$emit('refresh')\n    },\n    /**\n     * 批量新增储物柜\n     */\n    onCabinetBatchAdd() {\n      const { id, type } = this.$searchQuery\n      const areaName = this.areaName\n      if (!+id) {\n        this.messageService.error({\n          content: '请先新增区域'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: `shop-cabinet-add-${type}`,\n        props: {\n          id,\n          type,\n          areaName\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量删除储物柜\n     */\n    onCabinetBatchDel() {\n      // 判断是否有智能柜\n      const flagText = this.onGetCabinetType()\n      if (flagText === 'smart') {\n        this.$error({\n          title: '当前选中柜子有智能储物柜，若需删除，请联系三体工作人员',\n          okText: '知道了'\n        })\n        return\n      }\n      // 判断是否有使用中的柜子\n      if (flagText === 'using') {\n        this.$error({\n          title: '选择的储物柜正在使用中，无法删除',\n          okText: '知道了'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: 'shop-cabinet-batch',\n        props: {\n          title: '批量删除储物柜',\n          ids: this.selectedRowKeys,\n          total: this.page.total_counts,\n          useType: 'del',\n          searchQuery: {\n            cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n            cabinet_area_id: this.$searchQuery.id,\n            keywords: this.$searchQuery.keywords,\n            battery: this.$searchQuery.battery,\n            cabinet_business_type: this.$searchQuery.cabinet_business_type\n          }\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量清柜\n     */\n    onCabinetBatchClean() {\n      let OfflineCabinetNum = this.getSmartOfflineNum()\n      if (OfflineCabinetNum > 0) {\n        this.messageService.error({\n          content: '已离线的储物柜无法清柜，请重新选择'\n        })\n        return\n      }\n      this.$modalRouter.push({\n        name: 'shop-cabinet-batch',\n        props: {\n          title: '批量清柜',\n          ids: this.selectedRowKeys,\n          total: this.page.total_counts,\n          useType: 'clear',\n          searchQuery: {\n            cabinet_area_id: this.$searchQuery.id,\n            cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n            keywords: this.$searchQuery.keywords,\n            battery: this.$searchQuery.battery,\n            cabinet_business_type: this.$searchQuery.cabinet_business_type\n          }\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 批量改价\n     */\n    onCabinetBatchChangePrice() {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-price',\n        props: {\n          ids: this.selectedRowKeys,\n          cabinet_area_id: this.$searchQuery.id,\n          keywords: this.$searchQuery.keywords,\n          battery: this.$searchQuery.battery,\n          cabinet_type: this.$searchQuery.type === 'temporary' ? 2 : 1,\n          cabinet_business_type: this.$searchQuery.cabinet_business_type,\n          total: this.page.total_counts\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 开启储物柜\n     */\n    onCabinetOpen(cabinet) {\n      // 选择的柜子中有维修状态的智能柜\n      this.$modalRouter.push({\n        name: 'shop-cabinet-open',\n        props: {\n          id: cabinet.id,\n          userName: cabinet.user_name,\n          userMobile: cabinet.mobile\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 修改储物柜信息\n     */\n    onCabinetEditInfo(id) {\n      this.$modalRouter.push({\n        name: `shop-cabinet-edit-${this.$searchQuery.type}`,\n        props: {\n          id,\n          areaName: this.areaName\n        },\n        on: {\n          change: this.refresh\n        }\n      })\n    },\n    /**\n     * 修改储物柜状态\n     */\n    onCabinetEditStatus(record) {\n      let cabinet = this.getCabinetUsingItem(record)\n      let id = cabinet.id\n      let useStatus = cabinet.cabinet_business_type\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-status',\n        props: {\n          id,\n          useStatus\n        },\n        on: {\n          success: this.refresh\n        }\n      })\n    },\n    /**\n     * 查看储物柜使用记录\n     */\n    onCabinetShowRecord(cabinet_id) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-use-record',\n        props: {\n          cabinet_id\n        }\n      })\n    },\n    /**\n     * 获取储物柜类型\n     */\n    onGetCabinetType() {\n      const type = this.$searchQuery.type\n      for (let i = 0; i < this.selectedRows.length; i++) {\n        const temp = this.selectedRows[i]\n        if (temp.is_smart) {\n          return 'smart'\n        }\n        // 使用中的柜子无法删除\n        if (type === 'long-term' && temp.sale_status === 1) {\n          return 'using'\n        }\n        // 损坏的柜子无法删除\n        if (type === 'temporary' && temp.cabinet_business_type === 2) {\n          return 'using'\n        }\n      }\n      return 'none'\n    },\n    /**\n     * 获取选中储物柜中离线的数量\n     */\n    getSmartOfflineNum() {\n      const checkedOfflineCabinets = this.selectedRows.filter(\n        item => item.is_smart && !item.is_online\n      )\n      return checkedOfflineCabinets.length\n    },\n    /**\n     * 获取选中储物柜中已使用的数量\n     */\n    getUsingCabinetNum() {\n      const checkedUsingCabinets = this.selectedRows.filter(\n        item => item.cabinet_business_type === this.CABINET_BUSINESS_TYPE.USING\n      )\n      return checkedUsingCabinets.length\n    },\n    /**\n     * 获取选中储物柜中已使用的数量\n     */\n    getSmartCabinetNum() {\n      const checkedSmartCabinets = this.selectRows.filter(item => item.is_smart)\n      return checkedSmartCabinets.length\n    },\n    getCabinetUsingItem(item) {\n      if (this.type === 'long-term' && item.sale_status === 1) {\n        item.cabinet_business_type = 2\n      }\n      return item\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/shop/cabinet"}]}