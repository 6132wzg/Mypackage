{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-revenue-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-revenue-line.vue","mtime":1594718339905},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n\nvar _this = this;\n\n//\n//\n//\n//\nimport { toKFilter, thousandsFilter } from \"./filters\";\nimport { View } from 'st-data-set';\nimport { Chart } from '@antv/g2';\nimport chartMixin from \"./mixin\";\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05-28',私教课:20,团体课:50,储值卡:78}]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 280\n    },\n    // 使用的字段key值数组\n    fields: {\n      type: Array,\n      default: function _default() {\n        var member_card = _this.$c('member_card');\n\n        return ['私教课', '团体课', '课程包', member_card, '云店', '定金', '押金', '其它'];\n      }\n    },\n    // 颜色数组\n    colors: {\n      type: Array,\n      default: function _default() {\n        return ['#4677F9', '#06DB8C', '#009DFF', '#B8F10F', '#3F66F6', '#FF6466'];\n      }\n    },\n    shadowColors: {\n      type: Array,\n      default: function _default() {\n        return ['rgba(70,119,249,.4)', 'rgba(6,219,140,.4)', 'rgba(0,157,255,.4)', 'rgba(184,241,15,.4)', 'rgba(63,102,246,.4)', 'rgba(255,100,102,.4)'];\n      }\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data: function data() {\n    return {// MAX: 0\n    };\n  },\n  computed: {\n    colorMap: function colorMap() {\n      var _this2 = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this2.colors[idx % _this2.colors.length];\n        return res;\n      }, {});\n    },\n    shadowColorMap: function shadowColorMap() {\n      var _this3 = this;\n\n      return this.fields.reduce(function (res, field, idx) {\n        res[field] = _this3.shadowColors[idx % _this3.shadowColors.length];\n        return res;\n      }, {});\n    },\n    MAX: function MAX() {\n      var maxValue = this.dv.max('value');\n      return maxValue > this.max ? maxValue : this.max;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'name',\n        value: 'value'\n      });\n      console.log(this.dv);\n    },\n    changeData: function changeData() {\n      this.chart.destroy();\n      this.initChart();\n    },\n    initChart: function initChart() {\n      var _this4 = this;\n\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        padding: [8, 16, 100, 'auto'],\n        renderer: 'svg'\n      });\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          max: +this.MAX,\n          tickCount: 5,\n          formatter: toKFilter\n        }\n      });\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      });\n      this.chart.legend('name', {\n        position: 'bottom-left',\n        itemWidth: 80,\n        useHtml: true,\n        textStyle: {\n          fill: '#3E4D5C'\n        },\n        itemTpl: function itemTpl() {\n          return '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + \"<span class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></span>\" + \" <span class=\\\"g2-legend-text\\\">{value}</span>\" + '</li>';\n        }\n      });\n      this.chart.line().style('name', {\n        shadowColor: function shadowColor(name) {\n          return _this4.shadowColorMap[name];\n        },\n        // shadowColor: '#70b2ec',\n        shadowBlur: 20,\n        shadowOffsetY: 4\n      }).tooltip('name*value', function (name, value) {\n        return {\n          name: name,\n          value: '¥' + thousandsFilter(value)\n        };\n      }).shape('smooth').size(2).position('date*value').color('name', this.colors);\n      this.chart.render();\n    }\n  }\n};",null]}