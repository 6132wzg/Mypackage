{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-entry-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/shop-entry-line.vue","mtime":1600926555768},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport { Chart } from '@antv/g2';\nimport { View } from 'st-data-set';\nimport chartMixin from \"./mixin\";\nimport { toKFilter } from \"./filters\";\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05-19',value:2015},{date:'08-20',value:3800}]\n     */\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    color: {\n      type: String,\n      default: 'l(90) 0:#57ABFF 1:#4169F7'\n    },\n    height: {\n      type: Number,\n      default: 200\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data: function data() {\n    return {// MAX: 0\n    };\n  },\n  computed: {\n    MAX: function MAX() {\n      var maxValue = this.dv.max('value');\n      return maxValue > this.max ? maxValue : this.max;\n    }\n  },\n  methods: {\n    initDv: function initDv() {\n      this.dv = new View();\n      this.dv.source(this.data);\n      this.dv.transform({\n        type: 'map',\n        callback: function callback(row) {\n          row.value = +row.value;\n          return row;\n        }\n      });\n    },\n    changeData: function changeData() {\n      this.chart.destroy();\n      this.initChart();\n    },\n    initChart: function initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        // svg阴影比较符合预期\n        renderer: 'svg',\n        height: this.height,\n        padding: 'auto'\n      });\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          formatter: toKFilter,\n          max: +this.MAX,\n          min: 0,\n          tickCount: 2\n        }\n      });\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      });\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      });\n      this.chart.line().shape('smooth').position('date*value').size(2).style({\n        shadowColor: 'rgba(65,105,247,.4)',\n        shadowBlur: 20,\n        shadowOffsetY: 4\n      }).color(this.color).tooltip('name*value', function (name, value) {\n        return {\n          name: '入场人数',\n          value: value + '人'\n        };\n      });\n      this.chart.render();\n    }\n  }\n};",{"version":3,"sources":["shop-entry-line.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"stat-shop-entry-line\">\n    <!-- 门店入场人数图表 -->\n  </div>\n</template>\n\n<script>\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nimport chartMixin from './mixin'\nimport { toKFilter } from './filters'\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [{date:'05-19',value:2015},{date:'08-20',value:3800}]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    color: {\n      type: String,\n      default: 'l(90) 0:#57ABFF 1:#4169F7'\n    },\n    height: {\n      type: Number,\n      default: 200\n    },\n    max: {\n      type: Number,\n      default: 16\n    }\n  },\n  data() {\n    return {\n      // MAX: 0\n    }\n  },\n  computed: {\n    MAX() {\n      const maxValue = this.dv.max('value')\n      return maxValue > this.max ? maxValue : this.max\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n    },\n    changeData() {\n      this.chart.destroy()\n      this.initChart()\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        // svg阴影比较符合预期\n        renderer: 'svg',\n        height: this.height,\n        padding: 'auto'\n      })\n      this.chart.source(this.dv, {\n        date: {\n          tickCount: 10,\n          range: [0, 1]\n        },\n        value: {\n          formatter: toKFilter,\n          max: +this.MAX,\n          min: 0,\n          tickCount: 2\n        }\n      })\n\n      this.chart.axis('date', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        tickLine: {\n          lineWidth: 0,\n          length: 0\n        }\n      })\n      this.chart.axis('value', {\n        label: {\n          textStyle: {\n            fill: '#9BACB9'\n          }\n        },\n        grid: {\n          lineStyle: {\n            lineWidth: 0.5,\n            lineDash: [0, 0]\n          }\n        }\n      })\n      this.chart\n        .line()\n        .shape('smooth')\n        .position('date*value')\n        .size(2)\n        .style({\n          shadowColor: 'rgba(65,105,247,.4)',\n          shadowBlur: 20,\n          shadowOffsetY: 4\n        })\n        .color(this.color)\n        .tooltip('name*value', (name, value) => {\n          return {\n            name: '入场人数',\n            value: value + '人'\n          }\n        })\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/stat"}]}