{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop-staff/re-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop-staff/re-password.vue","mtime":1594718339927},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport StaffInfo from './staff-info'\nimport { RePasswordService } from './re-password.service'\nimport { ruleOptions } from './re-password.config'\n\nexport default {\n  name: 'RePassword',\n  serviceInject() {\n    return {\n      rePasswordService: RePasswordService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.rePasswordService.loading$,\n      rePasswordInfo: this.rePasswordService.rePasswordInfo$\n    }\n  },\n  components: {\n    StaffInfo\n  },\n  props: {\n    staff: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      openJurisdiction: false,\n      openRepassword: false, // 重置密码\n      show: false\n    }\n  },\n  computed: {\n    is_permission() {\n      return this.rePasswordInfo.is_permission\n    },\n    hasAccountName() {\n      return this.rePasswordInfo.account_name\n    },\n    bindAccount() {\n      return (\n        this.rePasswordInfo &&\n        this.rePasswordInfo.wechat &&\n        this.rePasswordInfo.mail &&\n        this.rePasswordInfo.phone &&\n        this.rePasswordInfo.QQ\n      )\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    changePermission(e) {\n      this.openJurisdiction = e.target.checked\n    },\n    init() {\n      this.rePasswordService.getRePassword(this.staff.id).subscribe(res => {\n        res = res.account\n        this.openJurisdiction = !!res.is_permission\n        let form = {\n          password: res.password,\n          repeat_password: res.repeat_password\n        }\n        if (this.hasAccountName) {\n          form = Object.assign(form, {\n            name: res.account_name\n          })\n        }\n        this.form.setFieldsValue(form)\n      })\n    },\n    onClickRePassword() {\n      this.openRepassword = true\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        const form = {\n          id: this.staff.id,\n          is_permission: +this.openJurisdiction,\n          ...values\n        }\n        // 未创建账号\n        if (!this.hasAccountName) {\n          if (values.name && values.password && values.repeat_password) {\n            this.rePasswordService.setAccount(form).subscribe(() => {\n              this.show = false\n            })\n          } else {\n            this.rePasswordService\n              .updatepermission(this.staff.id, {\n                is_permission: +this.openJurisdiction\n              })\n              .subscribe(() => {\n                this.show = false\n              })\n          }\n        } else {\n          // 填写了账号\n          if (values.password && values.repeat_password) {\n            this.rePasswordService.rePassword(form).subscribe(() => {\n              this.show = false\n            })\n          } else {\n            this.rePasswordService\n              .updatepermission(this.staff.id, {\n                is_permission: +this.openJurisdiction\n              })\n              .subscribe(() => {\n                this.show = false\n              })\n          }\n        }\n      })\n    }\n  }\n}\n",null]}