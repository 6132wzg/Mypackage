{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/pillar-line/pillar-line.config.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/pillar-line/pillar-line.config.ts","mtime":1600926555667},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nexport function chartConfig() {\n  var _this = this;\n\n  var config = {\n    options: {\n      scales: {\n        type: {\n          nice: true\n        },\n        value: {\n          max: +this.MAX,\n          min: 0,\n          tickCount: 6,\n          formatter: this.toKFilter,\n          sync: true\n        },\n        value2: {\n          max: +this.MAX2,\n          min: 0,\n          tickCount: 6,\n          formatter: function formatter(val) {\n            return _this.toKFilter(val, _this.unit2 || '元');\n          },\n          sync: true\n        }\n      },\n      axes: {\n        type: {\n          label: {\n            textStyle: {\n              fill: '#9BACB9'\n            }\n          },\n          tickLine: {\n            lineWidth: 0,\n            length: 0\n          }\n        },\n        value: {\n          label: {\n            textStyle: {\n              fill: '#9BACB9'\n            }\n          },\n          grid: {\n            lineStyle: {\n              lineWidth: 0.5,\n              lineDash: [0, 0]\n            }\n          }\n        },\n        value2: {\n          label: {\n            textStyle: {\n              fill: '#9BACB9'\n            }\n          },\n          grid: {\n            lineStyle: {\n              lineWidth: 0.5,\n              lineDash: [0, 0]\n            }\n          }\n        }\n      },\n      // tooltip: {\n      //   useHtml: true,\n      //   shared: true, // 合并数据\n      //   showCrosshairs: true, // 展示辅助线\n      //   itemTpl: `<li class=\"g2-tooltip-list-item\" data-index=\"\" style=\"list-style-type: none; padding: 0px; margin: 12px 0px;display: {hide}\">\n      //               <svg class=\"g2-tooltip-marker\" style=\"background: {color}; width: 8px; height: 8px; border-radius: 50%; display: inline-block; margin-right: 8px;\"></svg>\n      //               <span class=\"g2-tooltip-name\">{name}</span>:\n      //               <span class=\"g2-tooltip-value\" style=\"display: inline-block; float: right; margin-left: 30px;\">{value}</span>\n      //             </li>`\n      // },\n      legends: {\n        name: {\n          position: 'right',\n          useHtml: true,\n          itemTpl: function itemTpl() {\n            return '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + \"<span class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></span>\" + \" <span class=\\\"g2-legend-text\\\">{value}</span>\" + '</li>';\n          }\n        },\n        name2: {\n          position: 'right',\n          offsetY: -12,\n          useHtml: true,\n          itemTpl: function itemTpl() {\n            return '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + \"<span class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></span>\" + \" <span class=\\\"g2-legend-text\\\">{value}</span>\" + '</li>';\n          }\n        }\n      },\n      geoms: [{\n        type: 'interval',\n        adjust: 'stack',\n        position: 'type*value',\n        color: {\n          field: \"name\",\n          callback: function callback(name) {\n            // console.log('color', name, this.$colorMap, this.$colorMap[name])\n            return _this.$colorMap[name];\n          }\n        },\n        tooltip: {\n          field: 'name*value',\n          callback: function callback(name, value) {\n            return {\n              name: name,\n              value: _this.thousandsFilter(value)\n            };\n          }\n        },\n        size: 40\n      }, {\n        type: 'line',\n        position: 'type*value2',\n        color: {\n          field: \"name2\",\n          callback: function callback(name) {\n            // console.log('color', name, this.$colorMap, this.$colorMap[name])\n            return _this.$colorMap[name];\n          }\n        },\n        style: {\n          field: \"name2\",\n          cfg: {\n            shadowColor: function shadowColor(name) {\n              return _this.shadowColors[name];\n            },\n            shadowBlur: 20,\n            shadowOffsetY: 4\n          }\n        },\n        tooltip: {\n          field: 'name2*value2',\n          callback: function callback(name, value) {\n            return {\n              name: name,\n              value: '¥' + _this.thousandsFilter(value)\n            };\n          }\n        },\n        size: 2,\n        shape: 'smooth'\n      }, {\n        type: 'point',\n        position: 'type*value2',\n        color: {\n          field: \"name2\",\n          callback: function callback(name) {\n            // console.log('color', name, this.$colorMap, this.$colorMap[name])\n            return _this.$colorMap[name];\n          }\n        },\n        style: {\n          field: \"name\",\n          shadowColor: function shadowColor(name) {\n            return _this.shadowColors[name];\n          },\n          shadowBlur: 20,\n          shadowOffsetY: 4\n        },\n        tooltip: false,\n        size: 3,\n        shape: 'circle'\n      }]\n    }\n  };\n  console.log('config', config, this);\n  return config;\n}",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/pillar-line/pillar-line.config.ts"],"names":[],"mappings":"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","sourcesContent":["export function chartConfig(this: any) {\n  const config = {\n    options: {\n      scales: {\n        type: {\n          nice: true\n        },\n        value: {\n          max: +this.MAX,\n          min: 0,\n          tickCount: 6,\n          formatter: this.toKFilter,\n          sync: true\n        },\n        value2: {\n          max: +this.MAX2,\n          min: 0,\n          tickCount: 6,\n          formatter: val => this.toKFilter(val, this.unit2 || '元'),\n          sync: true\n        }\n      },\n      axes: {\n        type: {\n          label: {\n            textStyle: {\n              fill: '#9BACB9'\n            }\n          },\n          tickLine: {\n            lineWidth: 0,\n            length: 0\n          }\n        },\n        value: {\n          label: {\n            textStyle: {\n              fill: '#9BACB9'\n            }\n          },\n          grid: {\n            lineStyle: {\n              lineWidth: 0.5,\n              lineDash: [0, 0]\n            }\n          }\n        },\n        value2: {\n          label: {\n            textStyle: {\n              fill: '#9BACB9'\n            }\n          },\n          grid: {\n            lineStyle: {\n              lineWidth: 0.5,\n              lineDash: [0, 0]\n            }\n          }\n        }\n      },\n      // tooltip: {\n      //   useHtml: true,\n      //   shared: true, // 合并数据\n      //   showCrosshairs: true, // 展示辅助线\n      //   itemTpl: `<li class=\"g2-tooltip-list-item\" data-index=\"\" style=\"list-style-type: none; padding: 0px; margin: 12px 0px;display: {hide}\">\n      //               <svg class=\"g2-tooltip-marker\" style=\"background: {color}; width: 8px; height: 8px; border-radius: 50%; display: inline-block; margin-right: 8px;\"></svg>\n      //               <span class=\"g2-tooltip-name\">{name}</span>:\n      //               <span class=\"g2-tooltip-value\" style=\"display: inline-block; float: right; margin-left: 30px;\">{value}</span>\n      //             </li>`\n      // },\n      legends: {\n        name: {\n          position: 'right',\n          useHtml: true,\n          itemTpl: () => {\n            return (\n              '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' +\n              `<span class=\"g2-legend-marker\" style=\"background-color:{color};\"></span>` +\n              ` <span class=\"g2-legend-text\">{value}</span>` +\n              '</li>'\n            )\n          }\n        },\n        name2: {\n          position: 'right',\n          offsetY: -12,\n          useHtml: true,\n          itemTpl: () => {\n            return (\n              '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' +\n              `<span class=\"g2-legend-marker\" style=\"background-color:{color};\"></span>` +\n              ` <span class=\"g2-legend-text\">{value}</span>` +\n              '</li>'\n            )\n          }\n        }\n      },\n      geoms: [\n        {\n          type: 'interval',\n          adjust: 'stack',\n          position: 'type*value',\n          color: {\n            field: `name`,\n            callback: name => {\n              // console.log('color', name, this.$colorMap, this.$colorMap[name])\n              return this.$colorMap[name]\n            }\n          },\n          tooltip: {\n            field: 'name*value',\n            callback: (name, value) => {\n              return {\n                name,\n                value: this.thousandsFilter(value)\n              }\n            }\n          },\n          size: 40\n        },\n        {\n          type: 'line',\n          position: 'type*value2',\n          color: {\n            field: `name2`,\n            callback: name => {\n              // console.log('color', name, this.$colorMap, this.$colorMap[name])\n              return this.$colorMap[name]\n            }\n          },\n          style: {\n            field: `name2`,\n            cfg: {\n              shadowColor: name => {\n                return this.shadowColors[name]\n              },\n              shadowBlur: 20,\n              shadowOffsetY: 4\n            }\n          },\n          tooltip: {\n            field: 'name2*value2',\n            callback: (name, value) => {\n              return {\n                name,\n                value: '¥' + this.thousandsFilter(value)\n              }\n            }\n          },\n          size: 2,\n          shape: 'smooth'\n        },\n        {\n          type: 'point',\n          position: 'type*value2',\n          color: {\n            field: `name2`,\n            callback: name => {\n              // console.log('color', name, this.$colorMap, this.$colorMap[name])\n              return this.$colorMap[name]\n            }\n          },\n          style: {\n            field: `name`,\n            shadowColor: name => {\n              return this.shadowColors[name]\n            },\n            shadowBlur: 20,\n            shadowOffsetY: 4\n          },\n          tooltip: false,\n          size: 3,\n          shape: 'circle'\n        }\n      ]\n    }\n  }\n  console.log('config', config, this)\n  return config\n}\n"],"sourceRoot":""}]}