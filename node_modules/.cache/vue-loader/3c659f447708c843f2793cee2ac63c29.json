{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/card/member-card-course-interests/member-card-course-interests.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/card/member-card-course-interests/member-card-course-interests.vue","mtime":1597895241977},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { CourseIntersetsService } from './member-card-course-interests.service'\nimport { ruleOptions } from './member-card-course-interests.config'\nexport default {\n  serviceInject() {\n    return {\n      courseInterestsService: CourseIntersetsService\n    }\n  },\n  rxState() {\n    const { loading$, types$, courseList$ } = this.courseInterestsService\n    return {\n      loading: loading$,\n      types: types$,\n      courseList: courseList$\n    }\n  },\n  decorators() {\n    return this.form.addDecorators(this.ruleOptions)\n  },\n  props: {\n    /**\n     * 约课权益类型 1无 2全部团体课 3指定团体课\n     */\n    type: {\n      type: Number,\n      default: 1\n    },\n    courseIds: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    label: {\n      type: String,\n      default: '约课权益'\n    },\n    labelWidth: {\n      type: String,\n      default: '88px'\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    },\n    required: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      currentType: 1,\n      /**\n       * 多门店\n       */\n      TYPE_CUSTOM: 3\n    }\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    },\n    isShowCourseList() {\n      /**\n       * 多店\n       */\n      return this.currentType === this.TYPE_CUSTOM\n    },\n    /**\n     * 是否校验门店\n     */\n    isRequired() {\n      return this.required && this.currentType === this.TYPE_CUSTOM\n    }\n  },\n  watch: {\n    type(val) {\n      this.currentType = val\n    },\n    courseIds: {\n      handler(val) {\n        this.getCourseListByCourseIds(val)\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const { type, courseIds } = this\n      this.currentType = type\n      this.$nextTick(() => {\n        this.getCourseListByCourseIds(courseIds)\n      })\n    },\n    getCourseListByCourseIds(courseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds: courseIds\n      })\n      if (courseIds.length) {\n        this.getCourseList({\n          course_ids: courseIds\n        })\n      }\n    },\n    onCourseIdsChange(currentCourseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds\n      })\n      this.onChange()\n    },\n    onTypeChange(e) {\n      this.currentType = e.target.value\n      this.$nextTick(() => {\n        this.form.validateFields(['currentCourseIds'], { force: true })\n      })\n      this.onChange()\n    },\n    onChange() {\n      const { currentType } = this\n      const currentCourseIds = this.form.getFieldValue('currentCourseIds')\n      this.$emit('change', currentType, currentCourseIds)\n    },\n    onSearch(keyword) {\n      this.getCourseList({\n        course_name: keyword\n      })\n    },\n    getCourseList(query) {\n      this.courseInterestsService.courseListAction$.dispatch(query)\n    }\n  }\n}\n",{"version":3,"sources":["member-card-course-interests.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"member-card-course-interests.vue","sourceRoot":"src/views/biz-components/card/member-card-course-interests","sourcesContent":["<template>\n  <st-form-item\n    :labelGutter=\"labelGutter\"\n    :labelWidth=\"labelWidth\"\n    :required=\"required\"\n  >\n    <template slot=\"label\">\n      <slot v-if=\"$slots.label\" name=\"label\"></slot>\n      <template>{{ label }}</template>\n    </template>\n    <a-radio-group\n      v-model=\"currentType\"\n      :options=\"types\"\n      :disabled=\"disabled\"\n      @change=\"onTypeChange\"\n    ></a-radio-group>\n    <a-select\n      v-show=\"isShowCourseList\"\n      mode=\"multiple\"\n      :disabled=\"disabled\"\n      style=\"width: 420px;\"\n      v-decorator=\"decorators.currentCourseIds\"\n      placeholder=\"请输入课程名称搜索\"\n      :filterOption=\"false\"\n      @search=\"onSearch\"\n      :notFoundContent=\"loading.getCourseList ? undefined : null\"\n      @change=\"onCourseIdsChange\"\n      class=\"mg-t16\"\n    >\n      <a-spin\n        v-if=\"loading.getCourseList\"\n        slot=\"notFoundContent\"\n        size=\"small\"\n      />\n      <a-select-option v-for=\"course in courseList\" :key=\"course.id\">\n        {{ course.name }}\n      </a-select-option>\n    </a-select>\n  </st-form-item>\n</template>\n<script>\nimport { CourseIntersetsService } from './member-card-course-interests.service'\nimport { ruleOptions } from './member-card-course-interests.config'\nexport default {\n  serviceInject() {\n    return {\n      courseInterestsService: CourseIntersetsService\n    }\n  },\n  rxState() {\n    const { loading$, types$, courseList$ } = this.courseInterestsService\n    return {\n      loading: loading$,\n      types: types$,\n      courseList: courseList$\n    }\n  },\n  decorators() {\n    return this.form.addDecorators(this.ruleOptions)\n  },\n  props: {\n    /**\n     * 约课权益类型 1无 2全部团体课 3指定团体课\n     */\n    type: {\n      type: Number,\n      default: 1\n    },\n    courseIds: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    label: {\n      type: String,\n      default: '约课权益'\n    },\n    labelWidth: {\n      type: String,\n      default: '88px'\n    },\n    labelGutter: {\n      type: String,\n      default: '24px'\n    },\n    required: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      currentType: 1,\n      /**\n       * 多门店\n       */\n      TYPE_CUSTOM: 3\n    }\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    },\n    isShowCourseList() {\n      /**\n       * 多店\n       */\n      return this.currentType === this.TYPE_CUSTOM\n    },\n    /**\n     * 是否校验门店\n     */\n    isRequired() {\n      return this.required && this.currentType === this.TYPE_CUSTOM\n    }\n  },\n  watch: {\n    type(val) {\n      this.currentType = val\n    },\n    courseIds: {\n      handler(val) {\n        this.getCourseListByCourseIds(val)\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const { type, courseIds } = this\n      this.currentType = type\n      this.$nextTick(() => {\n        this.getCourseListByCourseIds(courseIds)\n      })\n    },\n    getCourseListByCourseIds(courseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds: courseIds\n      })\n      if (courseIds.length) {\n        this.getCourseList({\n          course_ids: courseIds\n        })\n      }\n    },\n    onCourseIdsChange(currentCourseIds) {\n      this.form.setFieldsValue({\n        currentCourseIds\n      })\n      this.onChange()\n    },\n    onTypeChange(e) {\n      this.currentType = e.target.value\n      this.$nextTick(() => {\n        this.form.validateFields(['currentCourseIds'], { force: true })\n      })\n      this.onChange()\n    },\n    onChange() {\n      const { currentType } = this\n      const currentCourseIds = this.form.getFieldValue('currentCourseIds')\n      this.$emit('change', currentType, currentCourseIds)\n    },\n    onSearch(keyword) {\n      this.getCourseList({\n        course_name: keyword\n      })\n    },\n    getCourseList(query) {\n      this.courseInterestsService.courseListAction$.dispatch(query)\n    }\n  }\n}\n</script>\n"]}]}