{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/front-simple-area.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/stat/front-simple-area.vue","mtime":1600926382190},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport chartMixin from './mixin'\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [\n        { name: '1', value: 102  },\n        { name: '2', value: 12  },\n        { name: '3', value: 50  }\n      ]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    unit: {\n      type: String,\n      default: '元'\n    },\n    color: {\n      type: String,\n      default: '#3F67F5'\n    },\n    height: {\n      type: Number,\n      default: 64\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg',\n        padding: [0, 0, 1, 0]\n      })\n\n      this.chart.source(this.dv, {\n        name: {\n          range: [0, 1]\n        },\n        value: {\n          min: 0,\n          tickCount: 2,\n          range: [0, 0.95]\n        }\n      })\n      this.chart.axis('value', {\n        nice: true,\n        label: false,\n        grid: {\n          lineStyle: {\n            stroke: '#E6E9EF',\n            lineWidth: 1,\n            lineDash: [0, 0]\n          },\n          hideLastLine: true\n        },\n        tickLine: null,\n        line: null\n      })\n      this.chart.axis('name', false)\n      this.chart.tooltip({\n        showTitle: false,\n        useHtml: true,\n        itemTpl:\n          `<li class='tooltip-item' data-index={index} style='background-color:${\n            this.color\n          };'>` +\n          `<span class='g2-tooltip-value'>{value}${this.unit}</span>` +\n          `</li>`\n      })\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .color(this.color)\n        .position('name*value')\n\n      this.chart\n        .area()\n        .shape('smooth')\n        .opacity(0.5)\n        .tooltip(false)\n        .color(`l(90) 0:${this.color} 1:#ffffff`)\n        .position('name*value')\n\n      this.chart.render()\n    }\n  }\n}\n",{"version":3,"sources":["front-simple-area.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"front-simple-area.vue","sourceRoot":"src/views/biz-components/stat","sourcesContent":["<template>\n  <div class=\"stat-front-simple-area\"></div>\n</template>\n\n<script>\nimport chartMixin from './mixin'\nimport { Chart } from '@antv/g2'\nimport { View } from 'st-data-set'\nexport default {\n  mixins: [chartMixin],\n  props: {\n    /**\n     * @example\n     * [\n        { name: '1', value: 102  },\n        { name: '2', value: 12  },\n        { name: '3', value: 50  }\n      ]\n     */\n    data: {\n      type: Array,\n      default: () => []\n    },\n    unit: {\n      type: String,\n      default: '元'\n    },\n    color: {\n      type: String,\n      default: '#3F67F5'\n    },\n    height: {\n      type: Number,\n      default: 64\n    }\n  },\n  methods: {\n    initDv() {\n      this.dv = new View()\n      this.dv.source(this.data)\n      this.dv.transform({\n        type: 'map',\n        callback(row) {\n          row.value = +row.value\n          return row\n        }\n      })\n    },\n    initChart() {\n      this.chart = new Chart({\n        container: this.$el,\n        forceFit: true,\n        height: this.height,\n        renderer: 'svg',\n        padding: [0, 0, 1, 0]\n      })\n\n      this.chart.source(this.dv, {\n        name: {\n          range: [0, 1]\n        },\n        value: {\n          min: 0,\n          tickCount: 2,\n          range: [0, 0.95]\n        }\n      })\n      this.chart.axis('value', {\n        nice: true,\n        label: false,\n        grid: {\n          lineStyle: {\n            stroke: '#E6E9EF',\n            lineWidth: 1,\n            lineDash: [0, 0]\n          },\n          hideLastLine: true\n        },\n        tickLine: null,\n        line: null\n      })\n      this.chart.axis('name', false)\n      this.chart.tooltip({\n        showTitle: false,\n        useHtml: true,\n        itemTpl:\n          `<li class='tooltip-item' data-index={index} style='background-color:${\n            this.color\n          };'>` +\n          `<span class='g2-tooltip-value'>{value}${this.unit}</span>` +\n          `</li>`\n      })\n\n      this.chart\n        .line()\n        .shape('smooth')\n        .color(this.color)\n        .position('name*value')\n\n      this.chart\n        .area()\n        .shape('smooth')\n        .opacity(0.5)\n        .tooltip(false)\n        .color(`l(90) 0:${this.color} 1:#ffffff`)\n        .position('name*value')\n\n      this.chart.render()\n    }\n  }\n}\n</script>\n"]}]}