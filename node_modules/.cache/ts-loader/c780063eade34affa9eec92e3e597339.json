{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/pos/index/device.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/pos/index/device.service.ts","mtime":1600926556108},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { PluginPosApi } from '@/api/v1/applications/pos';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\nimport { Injectable } from 'vue-service-app';\n\nvar DeviceService = /*#__PURE__*/function () {\n  function DeviceService(pluginPosApi) {\n    _classCallCheck(this, DeviceService);\n\n    this.pluginPosApi = pluginPosApi;\n    this.list$ = new State([]);\n  }\n\n  _createClass(DeviceService, [{\n    key: \"getDeviceList\",\n    value: function getDeviceList() {\n      var _this = this;\n\n      return this.pluginPosApi.getEnablePosDeviceList({\n        status: 1\n      }).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return forkJoin(this.getDeviceList());\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach() {\n      return this.init();\n    }\n  }]);\n\n  return DeviceService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], DeviceService.prototype, \"getDeviceList\", null);\n\nDeviceService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof PluginPosApi !== \"undefined\" && PluginPosApi) === \"function\" ? _a : Object])], DeviceService);\nexport { DeviceService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/pos/index/device.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,YAAT,QAA6B,2BAA7B;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,UAAT,QAA2B,iBAA3B;;AAEA,IAAa,aAAb;AAEE,yBAAoB,YAApB,EAA8C;AAAA;;AAA1B,SAAA,YAAA,GAAA,YAAA;AADpB,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACkD;;AAFpD;AAAA;AAAA,oCAIe;AAAA;;AACX,aAAO,KAAK,YAAL,CACJ,sBADI,CACmB;AACtB,QAAA,MAAM,EAAE;AADc,OADnB,EAIJ,IAJI,CAKH,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CALA,CAAP;AASD;AAdH;AAAA;AAAA,2BAeM;AACF,aAAO,QAAQ,CAAC,KAAK,aAAL,EAAD,CAAf;AACD;AAjBH;AAAA;AAAA,iCAkBY;AACR,aAAO,KAAK,IAAL,EAAP;AACD;AApBH;;AAAA;AAAA,GAAA;;AAIE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,uBAAA,E,eAAA,EAUC,IAVD,CAAA;;AAJW,aAAa,GAAA,UAAA,CAAA,CADzB,UAAU,EACe,E,qDAEU,Y,KAAY,W,IAAZ,Y,MAAY,U,GAAA,E,GAAA,M,EAFtB,CAAA,EAAb,aAAa,CAAb;SAAA,a","sourcesContent":["import { PluginPosApi } from '@/api/v1/applications/pos'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { forkJoin } from 'rxjs'\nimport { Injectable } from 'vue-service-app'\n@Injectable()\nexport class DeviceService {\n  list$ = new State([])\n  constructor(private pluginPosApi: PluginPosApi) {}\n  @Effect()\n  getDeviceList() {\n    return this.pluginPosApi\n      .getEnablePosDeviceList({\n        status: 1\n      })\n      .pipe(\n        tap((res: any) => {\n          this.list$.commit(() => res.list)\n        })\n      )\n  }\n  init() {\n    return forkJoin(this.getDeviceList())\n  }\n  beforeEach() {\n    return this.init()\n  }\n}\n"],"sourceRoot":""}]}