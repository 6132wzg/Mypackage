{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/api/v1/sold/transaction.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/api/v1/sold/transaction.ts","mtime":1601345845200},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"../../api\";\nexport var TransactionApi = /*#__PURE__*/function (_Api) {\n  _inherits(TransactionApi, _Api);\n\n  var _super = _createSuper(TransactionApi);\n\n  function TransactionApi() {\n    _classCallCheck(this, TransactionApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TransactionApi, [{\n    key: \"getTransactionList\",\n\n    /**\n     * 签单列表\n     */\n    value: function getTransactionList(query) {\n      return this.http.get(\"/v1/order/transaction\", {\n        query: query\n      });\n    }\n    /**\n     * 签单详情\n     */\n\n  }, {\n    key: \"getTransactionInfo\",\n    value: function getTransactionInfo(id, type) {\n      return this.http.get(\"/v1/order/transaction/\".concat(type, \"/\").concat(id));\n    }\n    /**\n     * 签单\n     */\n\n  }, {\n    key: \"setTransaction\",\n    value: function setTransaction(params, type) {\n      return this.http.post(\"/v1/order/transaction/\".concat(type), {\n        params: params\n      });\n    }\n    /**\n     * 获取签单的支付列表\n     * @param order_id 订单id\n     * @param product_type 商品类型\n     */\n\n  }, {\n    key: \"getPaymentMethodList\",\n    value: function getPaymentMethodList(order_id, is_reversed) {\n      var query = {\n        order_id: order_id\n      };\n\n      if (is_reversed) {\n        query.is_reversed = is_reversed;\n      }\n\n      return this.http.get(\"/v1/order/transaction/payment/method\", {\n        query: query\n      });\n    }\n    /**\n     * 订单详情\n     */\n\n  }, {\n    key: \"getTransactionPaymentInfo\",\n    value: function getTransactionPaymentInfo(id) {\n      return this.http.get(\"/v1/order/transaction/payment/\".concat(id));\n    }\n    /**\n     * 订单支付\n     */\n\n  }, {\n    key: \"payTransaction\",\n    value: function payTransaction(params) {\n      return this.http.post(\"/v1/order/transaction/payment/\".concat(params.order_id), {\n        params: params\n      });\n    }\n    /**\n     * 定金列表\n     */\n\n  }, {\n    key: \"getTransactionAdvanceList\",\n    value: function getTransactionAdvanceList(member_id) {\n      return this.http.get(\"/v1/order/transaction/advance\", {\n        query: {\n          member_id: member_id\n        }\n      });\n    }\n    /**\n     * 销售员列表\n     */\n\n  }, {\n    key: \"getTransactionSaleList\",\n    value: function getTransactionSaleList() {\n      return this.http.get(\"/v1/order/transaction/sale\");\n    }\n    /**\n     * 签单系列优惠券列表\n     * @param params 请求参数，对象传递\n     * @param type 具体的签单类型\n     */\n\n  }, {\n    key: \"getTransactionCouponList\",\n    value: function getTransactionCouponList(params, type) {\n      return this.http.get(\"/v1/order/transaction/\".concat(type, \"/coupon\"), {\n        query: _objectSpread({}, params)\n      });\n    }\n    /**\n     * 私课教练列表\n     * @param level 教练级别\n     */\n\n  }, {\n    key: \"getTransactionCoachList\",\n    value: function getTransactionCoachList(level, id) {\n      return this.http.get(\"/v1/order/transaction/personal/course/coach/\".concat(id), {\n        query: {\n          coach_level_id: level\n        }\n      });\n    }\n    /**\n     * 私教课价格梯度\n     * @param params\n     */\n\n  }, {\n    key: \"getPersonalCoursePrice\",\n    value: function getPersonalCoursePrice(params) {\n      return this.http.get(\"/v1/order/transaction/personal/course/price\", {\n        query: _objectSpread({}, params)\n      });\n    }\n    /**\n     * 根据会员手机号或名称搜索会员信息\n     */\n\n  }, {\n    key: \"getTransactionMemeberList\",\n    value: function getTransactionMemeberList(query) {\n      return this.http.get(\"/v1/order/transaction/sale/range/member\", {\n        query: query\n      });\n    }\n    /**\n     * 获取商品应付金额--交易签单\n     */\n\n  }, {\n    key: \"getTransactionPrice\",\n    value: function getTransactionPrice(params) {\n      return this.http.post(\"/v1/order/transaction/price\", {\n        params: params\n      });\n    }\n    /**\n     * 获取售出应付金额--非交易签单\n     */\n\n  }, {\n    key: \"getTransactionSoldPrice\",\n    value: function getTransactionSoldPrice(params) {\n      return this.http.post(\"/v1/order/transaction/sold/price\", {\n        params: params\n      });\n    }\n    /**\n     * 增加定金，调试用，后续移除\n     */\n\n  }, {\n    key: \"setAdvance\",\n    value: function setAdvance(params) {\n      return this.http.post(\"/v1/order/transaction/advance\", {\n        params: params\n      });\n    }\n    /**\n     * 签单的会员名称检索\n     */\n\n  }, {\n    key: \"getMemberList\",\n    value: function getMemberList(member, type) {\n      return this.http.get(\"/v1/order/transaction/sale/range/member\", {\n        query: {\n          member: member,\n          type: type\n        }\n      });\n    }\n    /**\n     * 签单会员info\n     */\n\n  }, {\n    key: \"getMemberInfo\",\n    value: function getMemberInfo(id) {\n      return this.http.get(\"/v1/order/transaction/sale/member\", {\n        query: {\n          set_member_id: id\n        }\n      });\n    }\n    /**\n     * 获取会员支付方式列表\n     * @param member_id 会员id\n     * @param product_type 商品类型\n     */\n\n  }, {\n    key: \"getMemberPaymentList\",\n    value: function getMemberPaymentList(query) {\n      return this.http.get(\"/v1/order/transaction/member/payment/method\", {\n        query: query\n      });\n    }\n    /**\n     * 交易签单-云店-商品列表\n     */\n\n  }, {\n    key: \"getStoreProductList\",\n    value: function getStoreProductList(query) {\n      return this.http.get(\"/v1/store/product/name_search_list\", {\n        query: query\n      });\n    }\n    /**\n     * 交易签单-云店-商品详情\n     */\n\n  }, {\n    key: \"goodsDetail\",\n    value: function goodsDetail(id) {\n      return this.http.get(\"/v1/store/product/\".concat(id));\n    }\n  }]);\n\n  return TransactionApi;\n}(Api);",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/api/v1/sold/transaction.ts"],"names":[],"mappings":"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","sourcesContent":["import { Api } from '../../api'\n\nexport interface MemberCouponParams {\n  member_id: number\n  card_id: number\n  specs_id: number\n  /**\n   * 签单金额\n   */\n  transaction_price?: number\n}\nexport interface MemberListInput {\n  member: string\n  escape_member_id?: number\n}\nexport interface ProductType {\n  sku_id: number\n  nums: number\n}\nexport interface TransactionPriceInput {\n  product_id?: number\n  product_type: number\n  product_num?: number\n  specs_id?: number\n  advance_id?: string\n  reduce_amount?: number\n  coupon_id?: string\n  member_id?: number\n  surplus_amount?: string\n  special_amount?: number\n  product_info?: ProductType[]\n}\nexport interface TransactionListInput {\n  page?: number\n  size?: number\n  product_name?: string\n  product_type: number\n}\nexport interface ProductInfoParams {\n  product_id: number\n  sku_id: number\n  unit_price?: number\n  nums?: number\n  product_name?: string\n  rule_name?: string\n}\nexport class TransactionApi extends Api {\n  /**\n   * 签单列表\n   */\n  getTransactionList(query: TransactionListInput) {\n    return this.http.get(`/v1/order/transaction`, { query })\n  }\n  /**\n   * 签单详情\n   */\n  getTransactionInfo(id: string, type: string) {\n    return this.http.get(`/v1/order/transaction/${type}/${id}`)\n  }\n  /**\n   * 签单\n   */\n  setTransaction(params: any, type: string) {\n    return this.http.post(`/v1/order/transaction/${type}`, { params })\n  }\n  /**\n   * 获取签单的支付列表\n   * @param order_id 订单id\n   * @param product_type 商品类型\n   */\n  getPaymentMethodList(order_id: number | string, is_reversed?: boolean) {\n    const query: any = { order_id }\n    if (is_reversed) {\n      query.is_reversed = is_reversed\n    }\n    return this.http.get(`/v1/order/transaction/payment/method`, {\n      query\n    })\n  }\n  /**\n   * 订单详情\n   */\n  getTransactionPaymentInfo(id: string) {\n    return this.http.get(`/v1/order/transaction/payment/${id}`)\n  }\n  /**\n   * 订单支付\n   */\n  payTransaction(params: any) {\n    return this.http.post(`/v1/order/transaction/payment/${params.order_id}`, {\n      params\n    })\n  }\n  /**\n   * 定金列表\n   */\n  getTransactionAdvanceList(member_id: string | number) {\n    return this.http.get(`/v1/order/transaction/advance`, {\n      query: { member_id }\n    })\n  }\n  /**\n   * 销售员列表\n   */\n  getTransactionSaleList() {\n    return this.http.get(`/v1/order/transaction/sale`)\n  }\n  /**\n   * 签单系列优惠券列表\n   * @param params 请求参数，对象传递\n   * @param type 具体的签单类型\n   */\n  getTransactionCouponList(params: MemberCouponParams, type: string) {\n    return this.http.get(`/v1/order/transaction/${type}/coupon`, {\n      query: { ...params }\n    })\n  }\n  /**\n   * 私课教练列表\n   * @param level 教练级别\n   */\n  getTransactionCoachList(level: number, id: string) {\n    return this.http.get(`/v1/order/transaction/personal/course/coach/${id}`, {\n      query: { coach_level_id: level }\n    })\n  }\n  /**\n   * 私教课价格梯度\n   * @param params\n   */\n  getPersonalCoursePrice(params: {\n    id: number\n    buy_num: number\n    coach_level_id: number\n  }) {\n    return this.http.get(`/v1/order/transaction/personal/course/price`, {\n      query: { ...params }\n    })\n  }\n  /**\n   * 根据会员手机号或名称搜索会员信息\n   */\n  getTransactionMemeberList(query: MemberListInput) {\n    return this.http.get(`/v1/order/transaction/sale/range/member`, { query })\n  }\n  /**\n   * 获取商品应付金额--交易签单\n   */\n  getTransactionPrice(params: TransactionPriceInput) {\n    return this.http.post(`/v1/order/transaction/price`, { params })\n  }\n  /**\n   * 获取售出应付金额--非交易签单\n   */\n  getTransactionSoldPrice(params: TransactionPriceInput) {\n    return this.http.post(`/v1/order/transaction/sold/price`, { params })\n  }\n  /**\n   * 增加定金，调试用，后续移除\n   */\n  setAdvance(params: any) {\n    return this.http.post(`/v1/order/transaction/advance`, { params })\n  }\n  /**\n   * 签单的会员名称检索\n   */\n  getMemberList(member: string, type: number) {\n    return this.http.get(`/v1/order/transaction/sale/range/member`, {\n      query: { member, type }\n    })\n  }\n  /**\n   * 签单会员info\n   */\n  getMemberInfo(id: any) {\n    return this.http.get(`/v1/order/transaction/sale/member`, {\n      query: { set_member_id: id }\n    })\n  }\n\n  /**\n   * 获取会员支付方式列表\n   * @param member_id 会员id\n   * @param product_type 商品类型\n   */\n  getMemberPaymentList(query: { member_id?: number; product_type: number }) {\n    return this.http.get(`/v1/order/transaction/member/payment/method`, {\n      query\n    })\n  }\n  /**\n   * 交易签单-云店-商品列表\n   */\n  getStoreProductList(query: TransactionListInput) {\n    return this.http.get(`/v1/store/product/name_search_list`, {\n      query\n    })\n  }\n  /**\n   * 交易签单-云店-商品详情\n   */\n  goodsDetail(id: number) {\n    return this.http.get(`/v1/store/product/${id}`)\n  }\n}\n"],"sourceRoot":""}]}