{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/crowd/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/crowd/index.vue","mtime":1597396799983},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport index from \"./components#/index\";\nimport { IndexService } from \"./index.service\";\nimport { MessageService } from '@/services/message.service';\nimport tableMixin from '@/mixins/table.mixin';\nimport { columns } from \"./index.config\";\nexport default {\n  mixins: [tableMixin],\n  serviceInject: function serviceInject() {\n    return {\n      aService: IndexService,\n      messageService: MessageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      crowdIndexInfo: this.aService.crowdIndexInfo$,\n      auth: this.aService.auth$\n    };\n  },\n  data: function data() {\n    return {\n      refreshStatusMap: {\n        success: 1,\n        //已刷新\n        waitting: 2,\n        // 等待刷新\n        freshing: 3,\n        // 刷新中\n        failed: 4 // 刷新失败\n\n      }\n    };\n  },\n  components: {\n    index: index\n  },\n  computed: {\n    columns: columns\n  },\n  methods: {\n    newCrowd: function newCrowd(data) {\n      this.messageService.warn({\n        content: data\n      });\n    },\n    onChange: function onChange(pagination, filters, sorter) {\n      console.log('params', pagination, filters, sorter, data);\n    },\n    groupSMS: function groupSMS(value) {\n      console.log(value);\n    },\n    addTreeNode: function addTreeNode(value) {\n      console.log(value);\n    },\n    refresh: function refresh() {\n      this.$router.push({\n        query: {}\n      });\n    },\n    deleteTreeNode: function deleteTreeNode(value) {\n      var _this = this;\n\n      this.aService.delCrowdBrandCrowd(value.id).subscribe(function (res) {\n        _this.refresh();\n      });\n    },\n    onCrowdRefresh: function onCrowdRefresh(record) {\n      var _this2 = this;\n\n      this.aService.crowdShopRefresh(record.id).subscribe(function (res) {\n        _this2.refresh();\n      });\n    }\n  },\n  mounted: function mounted() {}\n};",null]}