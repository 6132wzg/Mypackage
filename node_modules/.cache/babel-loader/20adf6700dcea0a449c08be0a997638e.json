{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/editor/editor-image.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/editor/editor-image.vue","mtime":1600926382182},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { OssService } from '@/services/oss.service';\nimport { MessageService } from '@/services/message.service';\nexport default {\n  name: 'EditImage',\n  serviceInject: function serviceInject() {\n    return {\n      oss: OssService,\n      messageService: MessageService\n    };\n  },\n  data: function data() {\n    return {};\n  },\n  props: {\n    editor: Object\n  },\n  methods: {\n    upload: function upload(data) {\n      var _this = this;\n\n      this.oss.put({\n        business: 'image',\n        isPrivate: false,\n        file: data.file,\n        uploadProgress: function uploadProgress(e) {\n          _this.progress = parseInt(e.loaded / e.total * 100);\n        }\n      }).subscribe(function (val) {\n        _this.$emit('change', {\n          image: val,\n          editor: _this.editor\n        });\n      });\n    },\n    beforeUpload: function beforeUpload(file) {\n      var MAX_SIZE = 2;\n      var isLimit = file.size / 1024 / 1024 < MAX_SIZE;\n\n      if (!isLimit) {\n        this.messageService.error({\n          content: \"\\u4E0A\\u4F20\\u56FE\\u7247\\u6700\\u5927\\u4E0D\\u80FD\\u8D85\\u8FC7\".concat(MAX_SIZE, \"M\")\n        });\n      }\n\n      return isLimit;\n    }\n  }\n};",{"version":3,"sources":["editor-image.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,SAAA,UAAA,QAAA,wBAAA;AACA,SAAA,cAAA,QAAA,4BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,aAFA,2BAEA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,UADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA,EAAA;AACA,GAVA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAXA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,IADA,EACA;AAAA;;AACA,WAAA,GAAA,CACA,GADA,CACA;AACA,QAAA,QAAA,EAAA,OADA;AAEA,QAAA,SAAA,EAAA,KAFA;AAGA,QAAA,IAAA,EAAA,IAAA,CAAA,IAHA;AAIA,QAAA,cAAA,EAAA,wBAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,KAAA,GAAA,GAAA,CAAA;AACA;AANA,OADA,EASA,SATA,CASA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA;AAAA,UAAA,KAAA,EAAA,GAAA;AAAA,UAAA,MAAA,EAAA,KAAA,CAAA;AAAA,SAAA;AACA,OAXA;AAYA,KAdA;AAeA,IAAA,YAfA,wBAeA,IAfA,EAeA;AACA,UAAA,QAAA,GAAA,CAAA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,QAAA;;AACA,UAAA,CAAA,OAAA,EAAA;AACA,aAAA,cAAA,CAAA,KAAA,CAAA;AACA,UAAA,OAAA,wEAAA,QAAA;AADA,SAAA;AAGA;;AACA,aAAA,OAAA;AACA;AAxBA;AAdA,CAAA","sourcesContent":["<template>\n  <div class=\"tox-toolbar__group editor__upload\">\n    <a-upload\n      :fileList=\"[]\"\n      :customRequest=\"upload\"\n      :beforeUpload=\"beforeUpload\"\n    >\n      <a-icon type=\"upload\" />\n    </a-upload>\n  </div>\n</template>\n\n<script>\nimport { OssService } from '@/services/oss.service'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  name: 'EditImage',\n  serviceInject() {\n    return {\n      oss: OssService,\n      messageService: MessageService\n    }\n  },\n  data() {\n    return {}\n  },\n  props: {\n    editor: Object\n  },\n  methods: {\n    upload(data) {\n      this.oss\n        .put({\n          business: 'image',\n          isPrivate: false,\n          file: data.file,\n          uploadProgress: e => {\n            this.progress = parseInt((e.loaded / e.total) * 100)\n          }\n        })\n        .subscribe(val => {\n          this.$emit('change', { image: val, editor: this.editor })\n        })\n    },\n    beforeUpload(file) {\n      const MAX_SIZE = 2\n      const isLimit = file.size / 1024 / 1024 < MAX_SIZE\n      if (!isLimit) {\n        this.messageService.error({\n          content: `上传图片最大不能超过${MAX_SIZE}M`\n        })\n      }\n      return isLimit\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/st/editor"}]}