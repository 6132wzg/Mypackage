{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/protocol.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/protocol.service.ts","mtime":1600912106834},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { tap } from 'rxjs/operators';\nimport { ProtocolApi, ProtocalInput } from '@/api/v1/setting/protocol';\n\nvar ProtocolService = /*#__PURE__*/function () {\n  function ProtocolService(ProtocolApi) {\n    _classCallCheck(this, ProtocolService);\n\n    this.ProtocolApi = ProtocolApi;\n    this.protocolInfo$ = new State({});\n    this.loading$ = new State({});\n  }\n\n  _createClass(ProtocolService, [{\n    key: \"getInfo\",\n    value: function getInfo() {\n      var _this = this;\n\n      return this.ProtocolApi.getInfo().pipe(tap(function (res) {\n        _this.protocolInfo$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"update\",\n    value: function update(data) {\n      return this.ProtocolApi.update(data);\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return this.getInfo();\n    }\n  }]);\n\n  return ProtocolService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof ProtocalInput !== \"undefined\" && ProtocalInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], ProtocolService.prototype, \"update\", null);\n\nProtocolService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof ProtocolApi !== \"undefined\" && ProtocolApi) === \"function\" ? _b : Object])], ProtocolService);\nexport { ProtocolService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/general/protocol.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAAqD,iBAArD;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,WAAT,EAAsB,aAAtB,QAA2C,2BAA3C;;AAGA,IAAa,eAAb;AAGE,2BAAoB,WAApB,EAA4C;AAAA;;AAAxB,SAAA,WAAA,GAAA,WAAA;AAFpB,SAAA,aAAA,GAAgB,IAAI,KAAJ,CAAU,EAAV,CAAhB;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACgD;;AAHlD;AAAA;AAAA,8BAIS;AAAA;;AACL,aAAO,KAAK,WAAL,CAAiB,OAAjB,GAA2B,IAA3B,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,aAAL,CAAmB,MAAnB,CAA0B;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAA1B;AACD,OAFE,CADE,CAAP;AAKD;AAVH;AAAA;AAAA,2BAYS,IAZT,EAY4B;AACxB,aAAO,KAAK,WAAL,CAAiB,MAAjB,CAAwB,IAAxB,CAAP;AACD;AAdH;AAAA;AAAA,+BAea,EAfb,EAe+B,IAf/B,EAeiD;AAC7C,aAAO,KAAK,OAAL,EAAP;AACD;AAjBH;;AAAA;AAAA,GAAA;;AAYE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAa,a,KAAa,W,IAAb,a,MAAa,U,GAAA,E,GAAA,M,EAA1B,E,uCAAA,CAAA,E,yBAAA,E,QAAA,EAEC,IAFD,CAAA;;AAZW,eAAe,GAAA,UAAA,CAAA,CAD3B,UAAU,EACiB,E,qDAGO,W,KAAW,W,IAAX,W,MAAW,U,GAAA,E,GAAA,M,EAHlB,CAAA,EAAf,eAAe,CAAf;SAAA,e","sourcesContent":["import { Injectable, ServiceRoute, Controller } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { tap } from 'rxjs/operators'\nimport { ProtocolApi, ProtocalInput } from '@/api/v1/setting/protocol'\n\n@Injectable()\nexport class ProtocolService implements Controller {\n  protocolInfo$ = new State({})\n  loading$ = new State({})\n  constructor(private ProtocolApi: ProtocolApi) {}\n  getInfo() {\n    return this.ProtocolApi.getInfo().pipe(\n      tap((res: any) => {\n        this.protocolInfo$.commit(() => res.info)\n      })\n    )\n  }\n  @Effect()\n  update(data: ProtocalInput) {\n    return this.ProtocolApi.update(data)\n  }\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return this.getInfo()\n  }\n}\n"],"sourceRoot":""}]}