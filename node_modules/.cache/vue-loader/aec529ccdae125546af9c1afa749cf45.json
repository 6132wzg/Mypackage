{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/edit#/edit-detail-detailedInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/staff/edit#/edit-detail-detailedInfo.vue","mtime":1597895242236},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { RegionService } from '@/services/region.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { ruleOptions } from '../staff-form.config.ts'\nimport { cloneDeep } from 'lodash-es'\nimport { UserService } from '@/services/user.service'\n\nexport default {\n  name: 'EditDetailDetailedInfo',\n  serviceInject() {\n    return {\n      pattern: PatternService,\n      userService: UserService,\n      region: RegionService\n    }\n  },\n  rxState() {\n    return {\n      children_status: this.userService.getOptions$('staff.children_status'),\n      educations: this.userService.getOptions$('staff.education'),\n      marry_status: this.userService.getOptions$('staff.marry_status')\n    }\n  },\n  props: {\n    data: {\n      type: Object\n    },\n    loading: {\n      type: Boolean\n    },\n    isPrivateCoach: {\n      type: Boolean,\n      default: true\n    },\n    isShowCoach: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      regions: [],\n      fieldNames: { label: 'name', value: 'id', children: 'children' },\n      checked: true\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const form = cloneDeep(this.data)\n      this.setData(form)\n    })\n    this.region.regionApi.getRegions().subscribe(v => {\n      this.regions = cloneDeep(v)\n    })\n  },\n  methods: {\n    onClickBack() {\n      this.$emit('back', 1)\n    },\n    setData(obj) {\n      console.log('setDate', obj)\n      this.form.setFieldsValue({\n        graduated_school: obj.graduated_school,\n        graduation_time: obj.graduation_time\n          ? moment(obj.graduation_time)\n          : undefined,\n        education: obj.education || undefined,\n        profession: obj.profession,\n        birthday: obj.birthday ? moment(obj.birthday) : undefined,\n        native_place: obj.native_place,\n        marry_status: obj.marry_status || undefined,\n        children_status: obj.children_status || undefined,\n        address: obj.address,\n        description: obj.description,\n        provinces: [obj.province_id, obj.city_id, obj.district_id]\n      })\n      obj.is_show ? (this.checked = true) : (this.checked = false)\n    },\n    onChange(value) {\n      console.log(value)\n    },\n    goNext() {\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values)\n          this.$emit('goNext', {\n            data: this.form.getFieldsValue()\n          })\n        }\n      })\n    },\n    filterProvinces(arr) {\n      return {\n        province_id: arr[0],\n        city_id: arr[1],\n        district_id: arr[2]\n      }\n    },\n    checkShow(e) {\n      this.checked = e.target.checked\n    },\n    saveAndGoNext(e) {\n      e.preventDefault()\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          let obj = this.filterProvinces(values.provinces)\n          let newData = Object.assign(values, obj)\n          newData.birthday &&\n            (newData.birthday = newData.birthday.format('YYYY-MM-DD'))\n          newData.graduation_time &&\n            (newData.graduation_time = newData.graduation_time.format(\n              'YYYY-MM-DD'\n            ))\n          newData.is_show = this.checked ? 1 : 0\n          delete newData.provinces\n          this.$emit('detailInfoSave', {\n            data: newData\n          })\n        }\n      })\n    }\n  }\n}\n",null]}