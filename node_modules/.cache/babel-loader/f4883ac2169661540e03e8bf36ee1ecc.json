{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/package/edit-fix-package.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/package/edit-fix-package.vue","mtime":1597396799990},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport ReserveIsLimit from \"./components#/reserveIsLimit\";\nimport { cloneDeep, remove, every, filter, reduce, forEach } from 'lodash-es';\nimport { EditFixPackageService } from \"./edit-fix-package.service\";\nimport CourseSelectCourse from '@/views/biz-modals/course/select-course';\nimport StImageUpload from '@/views/biz-components/st/image-upload/image-upload.vue';\nexport default {\n  name: 'ShopFixPackageEdit',\n  serviceInject: function serviceInject() {\n    return {\n      editPackageService: EditFixPackageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      transferUnitList: this.editPackageService.transferUnitList$,\n      sellTypeList: this.editPackageService.sellTypeList$,\n      unitList: this.editPackageService.unitList$,\n      editLoading: this.editPackageService.loading$,\n      coachList: this.editPackageService.coachList$,\n      packageInfo: this.editPackageService.packageInfo$\n    };\n  },\n  components: {\n    StImageUpload: StImageUpload,\n    ReserveIsLimit: ReserveIsLimit\n  },\n  modals: {\n    CourseSelectCourse: CourseSelectCourse\n  },\n  bem: {\n    add: 'page-shop-add-fix-package',\n    basic: 'page-shop-add-basic-package'\n  },\n  data: function data() {\n    return {\n      packageData: {\n        // 售价\n        price: undefined,\n        // 是否支持团体课 0为不支持 1为支持\n        is_team: 0,\n        // 团体课上课范围课程id\n        team_range: [],\n        // 是否支持私教课 0为不支持 1为支持\n        is_personal: 0,\n        // 私教课上课范围课程id course_id私教课课程id coach_level私教课支持预约的教练等级\n        personal_range: [],\n        // 售卖开始时间\n        start_time: '',\n        // 售卖截止时间\n        end_time: '',\n        // 有效时间值\n        valid_time: undefined,\n        // 有效时间单位 1:天 2:月 3:年\n        valid_time_unit: 1,\n        // 允许冻结天数\n        frozen_days: undefined,\n        // 售卖方式\n        sale_mode: [2],\n        // 是否可以转让: 0 不可以 1 可以\n        is_allow_transfer: 0,\n        // 转让费率\n        transfer_rate: undefined,\n        // 转让单位 1:百分比 2:元\n        transfer_unit: 1,\n        // 封面对象\n        image: {\n          image_id: null,\n          image_key: ''\n        },\n        // 课程包介绍\n        intro: '',\n        // 备注\n        remarks: ''\n      },\n      // 课程范围是否未输入过\n      courseIsFirstInput: true,\n      // team course\n      teamCourseList: [],\n      // 备份课程已做的操作\n      teamCourseTotalList: {},\n      // 配置课程表格是否显示\n      teamCourseListIsShow: false,\n      // 配置的课程总计\n      teamCourseTotalObject: {\n        team_times: 0,\n        total: 0\n      },\n      // 批量操作的值\n      teamOperationObject: {\n        team_times: undefined,\n        team_unit_price: undefined\n      },\n      // 操作栏checkbox是否半选\n      teamIndeterminate: false,\n      // 操作栏checkbox是全选\n      teamCheckAll: false,\n      // personal course\n      personalCourseList: [],\n      // 备份课程已做的操作\n      personalCourseTotalList: {},\n      // 缓存最后一次选择的教练，用于阻止用户不选择任何一个\n      personalCoachListHistory: [],\n      // 操作栏教练等级选择的值\n      personalAllOperationCoachList: [],\n      // 配置的课程总计\n      personalCourseTotalObject: {\n        personal_times: 0,\n        total: 0\n      },\n      // 批量操作的值\n      personalOperationObject: {\n        personal_times: undefined,\n        personal_unit_price: undefined\n      },\n      // 配置课程表格是否显示\n      personalCourseListIsShow: false,\n      // 操作栏checkbox是否半选\n      personalIndeterminate: false,\n      // 操作栏checkbox是全选\n      personalCheckAll: false,\n      // 操作栏选择教练等级的dorpdown是否显示\n      coachAllOperationDropdownIsShow: false,\n      // 课程范围是否未配置\n      courseIsNone: false,\n      courseErrorText: '',\n      form: this.$form.createForm(this),\n      start_time: null,\n      end_time: null,\n      endOpen: false,\n      // 是否未传了封面\n      imageIsNone: false,\n      imageErrorText: '',\n      fileList: [],\n      cropperModal: {},\n      reserveIsLimitInfo: {}\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      if (!this.packageInfo.is_team) {\n        this.packageInfo.team_times = null;\n        this.packageInfo.team_unit_price = null;\n        this.packageInfo.team_range = [];\n      }\n\n      if (!this.packageInfo.is_personal) {\n        this.packageInfo.personal_times = null;\n        this.packageInfo.personal_unit_price = null;\n        this.packageInfo.personal_range = [];\n      }\n\n      if (!this.packageInfo.is_allow_transfer) {\n        this.packageInfo.transfer_rate = undefined;\n      } // 初始化约课限制对象 5.22 start\n\n\n      var _this$packageInfo = this.packageInfo,\n          reserve_is_limit = _this$packageInfo.reserve_is_limit,\n          reserve_limit_day = _this$packageInfo.reserve_limit_day,\n          reserve_limit_times = _this$packageInfo.reserve_limit_times;\n      this.reserveIsLimitInfo = {\n        reserve_is_limit: reserve_is_limit,\n        reserve_limit_day: reserve_limit_day,\n        reserve_limit_times: reserve_limit_times\n      }; // 初始化约课限制对象 5.22 end\n\n      this.form.setFieldsValue({\n        support_num: this.packageInfo.support_num,\n        price: this.packageInfo.price,\n        start_time: moment(this.packageInfo.start_time),\n        end_time: moment(this.packageInfo.end_time),\n        valid_time: this.packageInfo.valid_time,\n        frozen_days: this.packageInfo.frozen_days,\n        transfer_rate: this.packageInfo.transfer_rate\n      }); // 课程范围\n\n      this.packageData.is_team = this.packageInfo.is_team;\n      forEach(this.packageInfo.team_range, function (o) {\n        _this.teamCourseList.push({\n          team_times: o.team_times,\n          team_unit_price: o.team_unit_price,\n          courseChecked: false,\n          course_id: o.course_id,\n          course_name: o.course_name,\n          course_category: o.course_category,\n          course_type: o.course_type\n        });\n\n        _this.teamCourseTotalList[o.course_id] = _this.teamCourseTotalList[o.course_id] || {};\n        _this.teamCourseTotalList[o.course_id].team_times = o.team_times;\n        _this.teamCourseTotalList[o.course_id].team_unit_price = o.team_unit_price;\n      });\n      this.packageData.is_personal = this.packageInfo.is_personal;\n      forEach(this.packageInfo.personal_range, function (o) {\n        var coachGradeList = [];\n        o.coach_level.forEach(function (i) {\n          coachGradeList.push(i.id);\n        });\n\n        _this.personalCourseList.push({\n          personal_times: o.personal_times,\n          personal_unit_price: o.personal_unit_price,\n          coachGradeList: coachGradeList,\n          courseChecked: false,\n          course_id: o.course_id,\n          course_name: o.course_name,\n          course_category: o.course_category,\n          course_type: o.course_type\n        });\n\n        _this.personalCourseTotalList[o.course_id] = _this.personalCourseTotalList[o.course_id] || {};\n        _this.personalCourseTotalList[o.course_id].personal_times = o.personal_times;\n        _this.personalCourseTotalList[o.course_id].personal_unit_price = o.personal_unit_price;\n        _this.personalCourseTotalList[o.course_id].list = cloneDeep(o.coach_level);\n\n        _this.personalCoachListHistory.push(cloneDeep(o.coach_level));\n      }); // 售卖时间\n\n      this.start_time = moment(this.packageInfo.start_time);\n      this.end_time = moment(this.packageInfo.end_time); // 有效时间单位\n\n      this.packageData.valid_time_unit = this.packageInfo.valid_time_unit; // 转让设置\n\n      this.packageData.is_allow_transfer = this.packageInfo.is_allow_transfer;\n      this.packageData.transfer_unit = this.packageInfo.transfer_unit; // 售卖方式\n\n      this.packageData.sale_mode = this.packageInfo.sale_mode; // 封面\n\n      this.fileList = [this.packageInfo.image];\n      this.packageData.image.image_id = this.fileList[0].image_id;\n      this.packageData.image.image_key = this.fileList[0].image_key;\n      this.imageIsNone = false;\n      this.imageErrorText = ''; // 介绍\n\n      this.packageData.intro = this.packageInfo.intro; // 备注\n\n      this.packageData.remarks = this.packageInfo.remarks;\n    },\n    // 保存\n    save: function save() {\n      var _this2 = this;\n\n      this.course_validator();\n      this.image_validator();\n      this.form.validateFieldsAndScroll(function (err, values) {\n        if (!err && !_this2.courseIsNone && !_this2.imageIsNone) {\n          _this2.packageData.price = values.price;\n          _this2.packageData.valid_time = values.valid_time;\n          _this2.packageData.support_num = values.support_num;\n          _this2.packageData.frozen_days = values.frozen_days;\n          _this2.packageData.transfer_rate = _this2.packageData.is_allow_transfer ? +values.transfer_rate : undefined;\n          _this2.packageData.start_time = typeof _this2.start_time === 'string' ? _this2.start_time : \"\".concat(_this2.start_time.format('YYYY-MM-DD')); // 约课限制 5.22 start\n\n          _this2.packageData.reserve_is_limit = values.reserve_is_limit;\n          _this2.packageData.reserve_limit_day = values.reserve_limit_day;\n          _this2.packageData.reserve_limit_times = +values.reserve_limit_times; // 约课限制 5.22 end\n\n          _this2.packageData.end_time = typeof _this2.end_time === 'string' ? _this2.end_time : \"\".concat(_this2.end_time.format('YYYY-MM-DD'));\n          _this2.packageData.team_range = [];\n\n          _this2.teamCourseList.forEach(function (i) {\n            _this2.packageData.team_range.push({\n              course_id: i.course_id,\n              team_times: i.team_times,\n              team_unit_price: i.team_unit_price\n            });\n          });\n\n          _this2.packageData.personal_range = [];\n\n          _this2.personalCourseList.forEach(function (i) {\n            var arr = cloneDeep(i.coachGradeList);\n\n            if (i.coachGradeList && i.coachGradeList.length > 0 && i.coachGradeList[0].id) {\n              arr = i.coachGradeList.map(function (coachItem) {\n                return coachItem.id;\n              });\n            }\n\n            _this2.packageData.personal_range.push({\n              course_id: i.course_id,\n              personal_times: i.personal_times,\n              personal_unit_price: i.personal_unit_price,\n              coach_level: arr\n            });\n          });\n\n          _this2.packageData.album_id = _this2.packageInfo.album_id; // 这个给后端快捷找到相册使用，前端不需要处理使用\n\n          _this2.editPackageService.editPackage(_this2.packageData).subscribe(function (res) {\n            _this2.$router.push({\n              path: '/shop/product/course/manage/package/list'\n            });\n          });\n        }\n      });\n    },\n    // checkboxChange\n    teamCheckboxChange: function teamCheckboxChange(e) {\n      this.packageData.is_team = +e.target.checked;\n      this.courseIsFirstInput = false;\n      this.teamCourseListIsShow = +e.target.checked;\n    },\n    personalCheckboxChange: function personalCheckboxChange(e) {\n      this.packageData.is_personal = +e.target.checked;\n      this.courseIsFirstInput = false;\n      this.personalCourseListIsShow = +e.target.checked;\n    },\n    // team\n    teamCourseListShow: function teamCourseListShow() {\n      this.teamCourseListIsShow = !this.teamCourseListIsShow;\n    },\n    // personal\n    personalCourseListShow: function personalCourseListShow() {\n      this.personalCourseListIsShow = !this.personalCourseListIsShow;\n    },\n    // 批量操作团课课程包节数\n    times_operation_ok: function times_operation_ok(type) {\n      var _this3 = this;\n\n      if (type === 'team') {\n        forEach(this.teamCourseList, function (o) {\n          if (o.courseChecked) {\n            o.team_times = +_this3.teamOperationObject.team_times; // 备份批量操作的数据\n\n            _this3.teamCourseTotalList[o.course_id] = _this3.teamCourseTotalList[o.course_id] ? _this3.teamCourseTotalList[o.course_id] : {};\n            _this3.teamCourseTotalList[o.course_id].team_times = +_this3.teamOperationObject.team_times;\n          }\n        });\n      } else if (type === 'personal') {\n        forEach(this.personalCourseList, function (o) {\n          if (o.courseChecked) {\n            o.personal_times = +_this3.personalOperationObject.personal_times; // 备份批量操作的数据\n\n            _this3.personalCourseTotalList[o.course_id] = _this3.personalCourseTotalList[o.course_id] ? _this3.personalCourseTotalList[o.course_id] : {};\n            _this3.personalCourseTotalList[o.course_id].personal_times = +_this3.personalOperationObject.personal_times;\n          }\n        });\n      }\n    },\n    // 批量操作团课课程包价格\n    unit_price_operation_ok: function unit_price_operation_ok(type) {\n      var _this4 = this;\n\n      if (type === 'team') {\n        forEach(this.teamCourseList, function (o) {\n          if (o.courseChecked) {\n            o.team_unit_price = +_this4.teamOperationObject.team_unit_price; // 备份批量操作的数据\n\n            _this4.teamCourseTotalList[o.course_id] = _this4.teamCourseTotalList[o.course_id] ? _this4.teamCourseTotalList[o.course_id] : {};\n            _this4.teamCourseTotalList[o.course_id].team_unit_price = +_this4.teamOperationObject.team_unit_price;\n          }\n        });\n      } else if (type === 'personal') {\n        forEach(this.personalCourseList, function (o) {\n          if (o.courseChecked) {\n            o.personal_unit_price = +_this4.personalOperationObject.personal_unit_price; // 备份批量操作的数据\n\n            _this4.personalCourseTotalList[o.course_id] = _this4.personalCourseTotalList[o.course_id] ? _this4.personalCourseTotalList[o.course_id] : {};\n            _this4.personalCourseTotalList[o.course_id].personal_unit_price = +_this4.personalOperationObject.personal_unit_price;\n          }\n        });\n      }\n    },\n    // teamItems input change\n    teamInputChange: function teamInputChange(e, type, id) {\n      this.teamCourseTotalList[id] = this.teamCourseTotalList[id] ? this.teamCourseTotalList[id] : {};\n      this.teamCourseTotalList[id][type] = e;\n    },\n    // personalItems input change\n    personalInputChange: function personalInputChange(e, type, id) {\n      this.personalCourseTotalList[id] = this.personalCourseTotalList[id] ? this.personalCourseTotalList[id] : {};\n      this.personalCourseTotalList[id][type] = e;\n    },\n    // 新增课程\n    addCourse: function addCourse(type) {\n      var that = this;\n\n      if (type === 'team') {\n        this.$modalRouter.push({\n          name: 'course-select-course',\n          props: {\n            type: type,\n            courses: this.teamCourseList,\n            isLimit: true\n          },\n          on: {\n            ok: function ok(data) {\n              data.list.forEach(function (i) {\n                i.courseChecked = false;\n                i.team_times = null;\n                i.team_unit_price = null;\n              });\n              forEach(that.teamCourseTotalList, function (value, key) {\n                forEach(data.list, function (innerValue) {\n                  if (+innerValue.course_id === +key) {\n                    innerValue.team_times = value.team_times;\n                    innerValue.team_unit_price = value.team_unit_price;\n                  }\n                }); // 删除teamCourseTotalList里不存在的course_id项\n\n                if (!data.list.some(function (o) {\n                  return +o.course_id === +key;\n                })) {\n                  delete that.teamCourseTotalList[key];\n                }\n              });\n              that.teamCourseList = cloneDeep(data.list);\n            }\n          }\n        });\n      } else if (type === 'personal') {\n        this.$modalRouter.push({\n          name: 'course-select-course',\n          props: {\n            type: type,\n            courses: this.personalCourseList,\n            isLimit: true\n          },\n          on: {\n            ok: function ok(data) {\n              var coachGradeList = [];\n              forEach(that.coachList, function (i) {\n                coachGradeList.push(i.id);\n              });\n              data.list.forEach(function (i) {\n                i.courseChecked = false;\n                i.coachGradeList = coachGradeList;\n                i.personal_times = null;\n                i.personal_unit_price = null;\n              });\n              forEach(that.personalCourseTotalList, function (value, key) {\n                forEach(data.list, function (innerValue) {\n                  if (+innerValue.course_id === +key) {\n                    innerValue.coachGradeList = cloneDeep(value.list ? value.list : coachGradeList);\n                    innerValue.personal_times = value.personal_times;\n                    innerValue.personal_unit_price = value.personal_unit_price;\n                  }\n                }); // 删除personalCoachTotalList里不存在的course_id项\n\n                if (!data.list.some(function (o) {\n                  return +o.course_id === +key;\n                })) {\n                  delete that.personalCourseTotalList[key];\n                }\n              }); // 缓存选择的教练等级\n\n              that.personalCoachListHistory = [];\n              data.list.forEach(function (i) {\n                that.personalCoachListHistory.push(i.coachGradeList);\n              });\n              that.personalCourseList = cloneDeep(data.list);\n            }\n          }\n        });\n      }\n    },\n    // 移除课程\n    removeCourseItem: function removeCourseItem(type, id) {\n      if (type === 'team') {\n        var arr = cloneDeep(this.teamCourseList);\n        remove(arr, function (o) {\n          return o.course_id === id;\n        });\n        this.teamCourseList = arr; // 移除备份\n\n        var list = cloneDeep(this.teamCourseTotalList);\n        delete list[id];\n        this.teamCourseTotalList = list;\n      } else if (type === 'personal') {\n        var _arr = cloneDeep(this.personalCourseList);\n\n        remove(_arr, function (o) {\n          return o.course_id === id;\n        });\n        this.personalCourseList = _arr; // 移除备份\n\n        var coachList = cloneDeep(this.personalCourseTotalList);\n        delete coachList[id];\n        this.personalCourseTotalList = coachList;\n      }\n    },\n    // 移除选择的课程\n    removeCourseItems: function removeCourseItems(type) {\n      if (type === 'team') {\n        var arr = cloneDeep(this.teamCourseList);\n        var removeList = remove(arr, function (o) {\n          return o.courseChecked;\n        });\n        this.teamCourseList = arr; // 移除备份\n\n        var list = cloneDeep(this.teamCourseTotalList);\n        removeList.forEach(function (i) {\n          delete list[i.course_id];\n        });\n        this.teamCourseTotalList = list;\n      } else if (type === 'personal') {\n        var _arr2 = cloneDeep(this.personalCourseList);\n\n        var _removeList = remove(_arr2, function (o) {\n          return o.courseChecked;\n        });\n\n        this.personalCourseList = _arr2; // 移除备份\n\n        var coachList = cloneDeep(this.personalCourseTotalList);\n\n        _removeList.forEach(function (i) {\n          delete coachList[i.course_id];\n        });\n\n        this.personalCourseTotalList = coachList;\n      }\n    },\n    // 选择课程\n    courseItemCheckedChange: function courseItemCheckedChange(e, type, index) {\n      if (type === 'team') {\n        this.teamCourseList[index].courseChecked = e.target.checked;\n      } else if (type === 'personal') {\n        this.personalCourseList[index].courseChecked = e.target.checked;\n      }\n    },\n    // 全选\n    checkAllChange: function checkAllChange(type) {\n      var _this5 = this;\n\n      if (type === 'team') {\n        this.teamCourseList.forEach(function (i) {\n          i.courseChecked = !_this5.teamCheckAll;\n        });\n      } else if (type === 'personal') {\n        this.personalCourseList.forEach(function (i) {\n          i.courseChecked = !_this5.personalCheckAll;\n        });\n      }\n    },\n    // item coach checkboxGroup changeEvent\n    coachItemChange: function coachItemChange(e, id, index) {\n      if (!e.length) {\n        this.personalCourseList[index].coachGradeList = this.personalCoachListHistory[index];\n        return;\n      } else {\n        this.personalCoachListHistory[index] = cloneDeep(e);\n      }\n\n      this.personalCourseTotalList[id] = this.personalCourseTotalList[id] ? this.personalCourseTotalList[id] : {};\n      this.personalCourseTotalList[id].list = cloneDeep(e);\n    },\n    coachAllOperationOk: function coachAllOperationOk() {\n      var _this6 = this;\n\n      // 批量设置\n      forEach(this.personalCourseList, function (value) {\n        if (value.courseChecked) {\n          value.coachGradeList = cloneDeep(_this6.personalAllOperationCoachList);\n          _this6.personalCourseTotalList[value.course_id] = _this6.personalCourseTotalList[value.course_id] ? _this6.personalCourseTotalList[value.course_id] : {};\n          _this6.personalCourseTotalList[value.course_id].list = cloneDeep(_this6.personalAllOperationCoachList);\n        }\n      }); // 缓存选择的教练等级\n\n      this.personalCoachListHistory = [];\n      forEach(this.personalCourseList, function (i) {\n        _this6.personalCoachListHistory.push(i.coachGradeList);\n      }); // 清空\n\n      this.personalAllOperationCoachList = []; // 收起\n\n      this.coachAllOperationDropdownIsShow = false;\n    },\n    // course validatorFn  kael\n    course_validator: function course_validator() {\n      this.courseIsFirstInput = false;\n      var teamIsOk = false;\n      var personalIsOk = false; // 校验团课\n\n      if (this.packageData.is_team) {\n        var isOk = false;\n        isOk = this.teamCourseList.every(function (o) {\n          var team_times = isNaN(+o.team_times) ? 0 : +o.team_times;\n          var team_unit_price = isNaN(+o.team_unit_price) ? 0 : +o.team_unit_price;\n          return team_times * team_unit_price !== 0;\n        });\n        teamIsOk = isOk && this.teamCourseList.length;\n      } else {\n        teamIsOk = true;\n      } // 校验私教\n\n\n      if (this.packageData.is_personal) {\n        var _isOk = false;\n        _isOk = this.personalCourseList.every(function (o) {\n          var personal_times = isNaN(+o.personal_times) ? 0 : +o.personal_times;\n          var personal_unit_price = isNaN(+o.personal_unit_price) ? 0 : +o.personal_unit_price;\n          return personal_times * personal_unit_price !== 0;\n        });\n        personalIsOk = _isOk && this.personalCourseList.length;\n      } else {\n        personalIsOk = true;\n      }\n\n      if (teamIsOk && personalIsOk && !(!this.packageData.is_team && !this.packageData.is_personal)) {\n        // 校验通过\n        this.courseIsNone = false;\n        this.courseErrorText = '';\n      } else {\n        // 校验未通过\n        this.courseIsNone = true;\n        this.courseErrorText = '请输入上课范围';\n      }\n    },\n    // image validatorFn\n    image_validator: function image_validator() {\n      if (this.packageData.image.image_key !== '') {\n        // 校验通过\n        this.imageIsNone = false;\n        this.imageErrorText = '';\n      } else {\n        // 校验未通过\n        this.imageIsNone = true;\n        this.imageErrorText = '请上传封面';\n      }\n    },\n    // 转让\n    transfer: function transfer(e) {\n      this.packageData.is_allow_transfer = +e.target.checked; // 重置转让费用的校验\n\n      this.packageData.transfer_rate = undefined;\n      this.form.resetFields(['transfer_rate']);\n    },\n    fileChange: function fileChange(data) {\n      if (data.length) {\n        // 上传\n        this.packageData.image.image_id = data[0].image_id;\n        this.packageData.image.image_key = data[0].image_key;\n        this.imageIsNone = false;\n        this.imageErrorText = '';\n      } else {\n        // 删除\n        this.packageData.image.image_id = null;\n        this.packageData.image.image_key = '';\n        this.imageIsNone = true;\n        this.imageErrorText = '请上传封面';\n      }\n    },\n    transferUnitChange: function transferUnitChange() {\n      this.packageData.transfer_rate = undefined;\n      this.form.setFieldsValue({\n        transfer_rate: undefined\n      });\n    },\n    // start_time validatorFn\n    start_time_validator: function start_time_validator(rule, value, callback) {\n      if (!value) {\n        // eslint-disable-next-line\n        callback('请选择开始售卖时间');\n      } else {\n        // eslint-disable-next-line\n        callback();\n      }\n    },\n    // end_time validatorFn\n    end_time_validator: function end_time_validator(rule, value, callback) {\n      if (!value) {\n        // eslint-disable-next-line\n        callback('请选择结束售卖时间');\n      } else {\n        // eslint-disable-next-line\n        callback();\n      }\n    },\n    // 售卖时间-start\n    start_time_change: function start_time_change(data) {\n      this.start_time = cloneDeep(data);\n    },\n    handleStartOpenChange: function handleStartOpenChange(open) {\n      if (!open) {\n        this.endOpen = true;\n      }\n    },\n    disabledStartDate: function disabledStartDate(startValue) {\n      var endValue = this.end_time;\n\n      if (!endValue) {\n        // 结束时间未选择\n        return startValue.valueOf() < moment().startOf('day').valueOf();\n      }\n\n      var start = endValue.valueOf() > moment().add(30, 'y').valueOf() ? moment(endValue).subtract(30, 'y').valueOf() : moment().startOf('day').valueOf();\n      return startValue.valueOf() < start || startValue.valueOf() > moment(endValue).valueOf();\n    },\n    // 售卖时间-end\n    end_time_change: function end_time_change(data) {\n      this.end_time = cloneDeep(data);\n    },\n    handleEndOpenChange: function handleEndOpenChange(open) {\n      this.endOpen = open;\n    },\n    disabledEndDate: function disabledEndDate(endValue) {\n      var startValue = this.start_time;\n\n      if (!startValue) {\n        // 开始时间未选择\n        return endValue.valueOf() < moment().startOf('day').valueOf();\n      }\n\n      return endValue.valueOf() >= moment(startValue).add(30, 'y').valueOf() || endValue.valueOf() < moment(startValue).valueOf() || endValue.valueOf() < moment().startOf('day').valueOf();\n    },\n    // moment\n    moment: moment\n  },\n  watch: {\n    teamCourseList: {\n      deep: true,\n      handler: function handler(newVal) {\n        var allSelect = false;\n        var allNotSelect = false;\n        allSelect = every(newVal, function (o) {\n          return o.courseChecked;\n        });\n        allNotSelect = every(newVal, function (o) {\n          return !o.courseChecked;\n        });\n        this.teamIndeterminate = !allSelect && !allNotSelect;\n        this.teamCheckAll = newVal.length ? allSelect : false; // 计算团课总计\n\n        this.teamCourseTotalObject.team_times = reduce(newVal, function (sum, o) {\n          var team_times = isNaN(+o.team_times) ? 0 : +o.team_times;\n          return sum + team_times;\n        }, 0);\n        this.teamCourseTotalObject.total = reduce(newVal, function (sum, o) {\n          var team_times = isNaN(+o.team_times) ? 0 : +o.team_times;\n          var team_unit_price = isNaN(+o.team_unit_price) ? 0 : +o.team_unit_price;\n          return sum + team_times * (team_unit_price * 10) / 10;\n        }, 0);\n      }\n    },\n    personalCourseList: {\n      deep: true,\n      handler: function handler(newVal) {\n        var allSelect = false;\n        var allNotSelect = false;\n        allSelect = every(newVal, function (o) {\n          return o.courseChecked;\n        });\n        allNotSelect = every(newVal, function (o) {\n          return !o.courseChecked;\n        });\n        this.personalIndeterminate = !allSelect && !allNotSelect;\n        this.personalCheckAll = newVal.length ? allSelect : false; // 计算私教课总计\n\n        this.personalCourseTotalObject.personal_times = reduce(newVal, function (sum, o) {\n          var personal_times = isNaN(+o.personal_times) ? 0 : +o.personal_times;\n          return sum + personal_times;\n        }, 0);\n        this.personalCourseTotalObject.total = reduce(newVal, function (sum, o) {\n          var personal_times = isNaN(+o.personal_times) ? 0 : +o.personal_times;\n          var personal_unit_price = isNaN(+o.personal_unit_price) ? 0 : +o.personal_unit_price;\n          return sum + personal_times * (personal_unit_price * 10) / 10;\n        }, 0);\n      }\n    }\n  },\n  filters: {\n    // 单课价格统计\n    course_item_total: function course_item_total(times, unit_price) {\n      if (+times && +unit_price) {\n        return +times * (+unit_price * 10) / 10;\n      } else {\n        return 0;\n      }\n    }\n  },\n  computed: {\n    all_total: function all_total() {\n      var teamTotal = this.packageData.is_team ? this.teamCourseTotalObject.total : 0;\n      var personalTotal = this.packageData.is_personal ? this.personalCourseTotalObject.total : 0;\n      return teamTotal + personalTotal;\n    }\n  }\n};",null]}