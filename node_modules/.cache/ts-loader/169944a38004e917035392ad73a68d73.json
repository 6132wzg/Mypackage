{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-3!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/ring/ring.config.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/chart/ring/ring.config.ts","mtime":1598250255718},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nexport var chartConfig = function chartConfig(vm) {\n  return {\n    options: {\n      scales: {\n        value: {\n          formatter: function formatter(v) {\n            return vm.unitBack ? v + vm.unit : vm.unit + v;\n          }\n        }\n      },\n      coord: {\n        type: 'theta',\n        cfg: {\n          innerRadius: 0.65\n        }\n      },\n      tooltip: {\n        showTitle: false,\n        itemTpl: \"<li class=\\\"tooltip-item-{name}\\\">\\n                    <span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>\\n                    {name}\\n                    <span class=\\\"st-g2-tooltip-value\\\">| {percent}</span>\\n                  </li>\"\n      },\n      legends: {\n        name: {\n          position: vm.opt$.legend.position,\n          // position: 'right-center',\n          // itemWidth: 160,\n          useHtml: true,\n          // textStyle: {\n          //   fill: '#3E4D5C'\n          // },\n          itemTpl: function itemTpl(name, color, checked, index) {\n            var row = vm.dv.findRow({\n              name: name\n            });\n            var value = vm.valFormat(row.value);\n            var tooltipId = vm.tooltipMap && vm.tooltipMap[row.key];\n            return \"<li class=\\\"g2-legend-list-item item-{originValue} item-{index} {checked} \".concat(vm.opt$.legend.layout, \"\\\" data-color=\\\"{originColor}\\\" data-value=\\\"{originValue}\\\">\\n                    <div>\\n                      <i class=\\\"g2-legend-marker\\\" style=\\\"background-color:{color};\\\"></i>\\n                      <span class=\\\"g2-legend-text\\\">\").concat(name, \"</span>\\n                      <span id='legend-{index}'></span>\\n                    </div>\\n                    <div class='legend-right'>\\n                      <span class='legend-percent'>\").concat(vm.unitBack ? value + vm.unit : vm.unit + value, \"</span>\\n                    </div>\\n                  </li>\");\n          },\n          onHover: function onHover(ev) {\n            console.log(ev); // 总计为 0 是阻止事件继续执行hover\n\n            if (!vm.total) return;\n            var $s = vm.$el.querySelector.bind(vm.$el);\n            var name = ev.item.value;\n            var row = vm.dv.findRow({\n              name: name\n            });\n            var shapes = ev.shapes;\n            var geom = ev.geom;\n            var legend = ev.currentTarget; // 选中对应单元\n\n            vm.total && geom.setShapesActived(shapes);\n            legend.addEventListener('mouseleave', function () {\n              vm.resetTotal();\n            });\n            $s('.guide-value').textContent = vm.valFormat(row.value);\n            $s('.guide-name-text').textContent = row.name;\n            $s('.guide-name-tooltip').setAttribute('style', 'display: none');\n          }\n        }\n      },\n      guides: [{\n        type: 'html',\n        position: ['50%', '50%'],\n        html: function html() {\n          vm.resize = Math.random();\n          console.log(vm);\n          return \"<div class='guide \".concat(vm.opt$.guide.layout, \"' style='width: \").concat(vm.height / 2, \"px'>\\n                    <div class='guide-name'>\\n                      <span class=\\\"guide-name-text\\\">\").concat(vm.totalName, \"</span>\\n                      <span class=\\\"guide-name-tooltip\\\" id=\\\"guide-name-tooltip\").concat(vm.tooltipId, \"\\\"></span>\\n                    </div>\\n                    <div class='guide-title'>\\n                      <span class='guide-unit' style=\\\"display: \").concat(vm.unitBack ? 'none' : 'inline-block', \"\\\">\").concat(vm.unit, \"</span>\\n                      <span class='guide-value'>\").concat(vm.valFormat(vm.total) || 0, \"</span>\\n                      <span class='guide-unit' style=\\\"display: \").concat(!vm.unitBack ? 'none' : 'inline-block', \"\\\">\").concat(vm.unit, \"</span>\\n                    </div>\\n                  </div>\");\n        }\n      }],\n      geoms: [{\n        type: 'intervalStack',\n        position: 'value',\n        active: {\n          style: {\n            fillOpacity: 1,\n            lineWidth: 8\n          }\n        },\n        select: false,\n        color: {\n          field: 'name',\n          callback: function callback(name, key) {\n            // if (vm.total == 0 || !vm.total) return '#E9EDF2'\n            // console.log('color', name, key, vm.$colorMap[name])\n            return vm.$colorMap[name];\n          }\n        },\n        style: {\n          fillOpacity: 1,\n          cursor: 'pointer'\n        },\n        tooltip: {\n          field: 'name*percent',\n          callback: function callback(name, percent) {\n            return {\n              name: name,\n              percent: function (p) {\n                // 百分比处理，精确至 0.001%（最小值）\n                var r = 10;\n                var u = 1,\n                    i = 0;\n                p = p * 100;\n\n                while (p < u && i < 3) {\n                  u = u / 10;\n                  i++;\n                }\n\n                if (p < u) p = u;\n                return (i <= 0 ? Math.floor(p) : p.toFixed(i)) + '%';\n              }(percent)\n            };\n          }\n        }\n      }]\n    }\n  };\n};",null]}