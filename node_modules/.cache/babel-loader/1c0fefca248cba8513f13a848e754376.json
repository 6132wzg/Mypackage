{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/giving.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/sold/course/giving.vue","mtime":1591147717238},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { GivingService } from \"./giving.service\";\nimport { ruleOptions } from \"./giving.config\";\nimport { BATCH_TYPE, BATCH_INFO } from '@/constants/common/batch-operation';\nexport default {\n  name: 'ModalSoldCourseGiving',\n  serviceProviders: function serviceProviders() {\n    return [GivingService];\n  },\n  serviceInject: function serviceInject() {\n    return {\n      givingService: GivingService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list_num: this.givingService.list_num$,\n      loading: this.givingService.loading$\n    };\n  },\n  props: {\n    ids: {\n      type: Array,\n      required: true\n    },\n    searchQuery: {\n      type: Object\n    }\n  },\n  mounted: function mounted() {\n    this.givingService.fetchCourseNum(this.searchQuery).subscribe();\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      BATCH_TYPE: BATCH_TYPE,\n      BATCH_INFO: BATCH_INFO,\n      form: form,\n      decorators: decorators,\n      show: false,\n      batch_type: BATCH_TYPE.SELECTED\n    };\n  },\n  computed: {\n    helpText: function helpText() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM ? this.BATCH_INFO.ERROR_TIP : '';\n    },\n    helpShow: function helpShow() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM;\n    },\n    operateDataNum: function operateDataNum() {\n      return this.batch_type === this.BATCH_TYPE.SELECTED ? this.ids.length : this.list_num;\n    }\n  },\n  methods: {\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.form.validate().then(function (values) {\n        _this.givingService.taskAddCourseNum(_objectSpread({\n          batch_type: _this.batch_type,\n          sold_ids: _this.ids,\n          conditions: _this.searchQuery\n        }, values)).subscribe(function (res) {\n          _this.$emit('success');\n\n          _this.show = false;\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["giving.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,SAAA,aAAA;AACA,SAAA,WAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,oCAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,gBAFA,8BAEA;AACA,WAAA,CAAA,aAAA,CAAA;AACA,GAJA;AAKA,EAAA,aALA,2BAKA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KAAA,aAAA,CAAA,SADA;AAEA,MAAA,OAAA,EAAA,KAAA,aAAA,CAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AALA,GAhBA;AAyBA,EAAA,OAzBA,qBAyBA;AACA,SAAA,aAAA,CAAA,cAAA,CAAA,KAAA,WAAA,EAAA,SAAA;AACA,GA3BA;AA4BA,EAAA,IA5BA,kBA4BA;AACA,QAAA,IAAA,GAAA,KAAA,OAAA,CAAA,MAAA,EAAA;AACA,QAAA,UAAA,GAAA,IAAA,CAAA,UAAA,CAAA,WAAA,CAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,UADA;AAEA,MAAA,UAAA,EAAA,UAFA;AAGA,MAAA,IAAA,EAAA,IAHA;AAIA,MAAA,UAAA,EAAA,UAJA;AAKA,MAAA,IAAA,EAAA,KALA;AAMA,MAAA,UAAA,EAAA,UAAA,CAAA;AANA,KAAA;AAQA,GAvCA;AAwCA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,QAAA,GAAA,KAAA,UAAA,CAAA,SAAA,GACA,KAAA,UAAA,CAAA,SADA,GAEA,EAFA;AAGA,KALA;AAMA,IAAA,QANA,sBAMA;AACA,aAAA,KAAA,QAAA,GAAA,KAAA,UAAA,CAAA,SAAA;AACA,KARA;AASA,IAAA,cATA,4BASA;AACA,aAAA,KAAA,UAAA,KAAA,KAAA,UAAA,CAAA,QAAA,GACA,KAAA,GAAA,CAAA,MADA,GAEA,KAAA,QAFA;AAGA;AAbA,GAxCA;AAuDA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,aAAA,CACA,gBADA;AAEA,UAAA,UAAA,EAAA,KAAA,CAAA,UAFA;AAGA,UAAA,QAAA,EAAA,KAAA,CAAA,GAHA;AAIA,UAAA,UAAA,EAAA,KAAA,CAAA;AAJA,WAKA,MALA,GAOA,SAPA,CAOA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,KAAA;AACA,SAVA;AAWA,OAZA;AAaA;AAfA;AAvDA,CAAA","sourcesContent":["<template>\n  <st-modal title=\"赠送额度\" size=\"small\" v-model=\"show\">\n    <st-form :form=\"form\" labelWidth=\"75px\">\n      <st-form-item\n        label=\"选择\"\n        required\n        :help=\"helpText\"\n        :validateStatus=\"helpShow ? 'error' : ''\"\n      >\n        <st-batch-select-radio\n          :ids=\"this.ids\"\n          v-model=\"batch_type\"\n          :total=\"list_num\"\n        ></st-batch-select-radio>\n      </st-form-item>\n      <st-form-item label=\"赠送额度\" required>\n        <st-input-number\n          :max=\"999\"\n          :min=\"1\"\n          placeholder=\"请输入赠送额度\"\n          v-decorator=\"decorators.add_courses\"\n        >\n          <span slot=\"addonAfter\">\n            课时\n          </span>\n        </st-input-number>\n      </st-form-item>\n      <st-form-item label=\"备注\" class=\"mg-b0\">\n        <a-textarea\n          v-decorator=\"decorators.content\"\n          placeholder=\"请输入备注\"\n          :autosize=\"{ minRows: 4, maxRows: 6 }\"\n        />\n      </st-form-item>\n    </st-form>\n    <template slot=\"footer\">\n      <st-button @click=\"show = false\">\n        取消\n      </st-button>\n      <st-popconfirm class=\"mg-l8\" @confirm=\"onSubmit\">\n        <div slot=\"title\" class=\"sold-popup-tip\">\n          <div class=\"sold-popup-tip__title\">\n            本次共选择{{ operateDataNum }}条记录，请再次确认是否提交！\n          </div>\n          <div class=\"sold-popup-tip__content\">\n            此操作将\n            <span class=\"color-danger\">覆盖</span>\n            当前选择项已有数据，将会有2-5s无法正常使用。\n          </div>\n        </div>\n        <st-button type=\"primary\" :loading=\"loading.taskAddCourseNum\">\n          确认提交\n        </st-button>\n      </st-popconfirm>\n    </template>\n  </st-modal>\n</template>\n\n<script>\nimport { GivingService } from './giving.service'\nimport { ruleOptions } from './giving.config'\nimport { BATCH_TYPE, BATCH_INFO } from '@/constants/common/batch-operation'\nexport default {\n  name: 'ModalSoldCourseGiving',\n  serviceProviders() {\n    return [GivingService]\n  },\n  serviceInject() {\n    return {\n      givingService: GivingService\n    }\n  },\n  rxState() {\n    return {\n      list_num: this.givingService.list_num$,\n      loading: this.givingService.loading$\n    }\n  },\n  props: {\n    ids: {\n      type: Array,\n      required: true\n    },\n    searchQuery: {\n      type: Object\n    }\n  },\n  mounted() {\n    this.givingService.fetchCourseNum(this.searchQuery).subscribe()\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      BATCH_TYPE,\n      BATCH_INFO,\n      form,\n      decorators,\n      show: false,\n      batch_type: BATCH_TYPE.SELECTED\n    }\n  },\n  computed: {\n    helpText() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM\n        ? this.BATCH_INFO.ERROR_TIP\n        : ''\n    },\n    helpShow() {\n      return this.list_num > this.BATCH_INFO.LIMIT_NUM\n    },\n    operateDataNum() {\n      return this.batch_type === this.BATCH_TYPE.SELECTED\n        ? this.ids.length\n        : this.list_num\n    }\n  },\n  methods: {\n    onSubmit() {\n      this.form.validate().then(values => {\n        this.givingService\n          .taskAddCourseNum({\n            batch_type: this.batch_type,\n            sold_ids: this.ids,\n            conditions: this.searchQuery,\n            ...values\n          })\n          .subscribe(res => {\n            this.$emit('success')\n            this.show = false\n          })\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/sold/course"}]}