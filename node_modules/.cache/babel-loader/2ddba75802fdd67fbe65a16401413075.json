{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/sms/template.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/sms/template.vue","mtime":1600926555834},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ruleOptions } from \"./template.config\";\nimport { TemplateService } from \"./template.service\";\nimport { MessageService } from '@/services/message.service';\nexport default {\n  name: 'SettingSmsTemplate',\n  bem: {\n    bModal: 'setting-sms-template'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      templateService: TemplateService,\n      messageService: MessageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      sign: this.templateService.sign$\n    };\n  },\n  props: {\n    info: {\n      type: Object\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false\n    };\n  },\n  created: function created() {\n    this.getSmsSign();\n  },\n  mounted: function mounted() {\n    if (this.info) {\n      this.form.setFieldsValue({\n        title: this.info.title,\n        content: this.info.content\n      });\n    }\n  },\n  methods: {\n    getSmsSign: function getSmsSign() {\n      return this.templateService.getSmsSign().subscribe();\n    },\n    save: function save() {\n      var _this = this;\n\n      this.form.validate().then(function (values) {\n        if (_this.info) {\n          values.tmpl_id = _this.info.tmpl_id;\n\n          _this.templateService.editTemplate(_objectSpread({}, values)).subscribe(function (res) {\n            _this.messageService.success({\n              content: '编辑成功'\n            });\n\n            _this.$emit('success');\n\n            _this.show = false;\n          });\n        } else {\n          _this.templateService.addTemplate(_objectSpread({}, values)).subscribe(function (res) {\n            _this.messageService.success({\n              content: '新增成功'\n            });\n\n            _this.$emit('success');\n\n            _this.show = false;\n          });\n        }\n      });\n    },\n    cancel: function cancel() {}\n  }\n};",{"version":3,"sources":["template.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAA,WAAA;AACA,SAAA,eAAA;AACA,SAAA,cAAA,QAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,GAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAFA;AAKA,EAAA,aALA,2BAKA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,eADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GAVA;AAWA,EAAA,OAXA,qBAWA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KAAA,eAAA,CAAA;AADA,KAAA;AAGA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAhBA;AAsBA,EAAA,IAtBA,kBAsBA;AACA,QAAA,IAAA,GAAA,KAAA,OAAA,CAAA,MAAA,EAAA;AACA,QAAA,UAAA,GAAA,IAAA,CAAA,UAAA,CAAA,WAAA,CAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,UAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GA9BA;AA+BA,EAAA,OA/BA,qBA+BA;AACA,SAAA,UAAA;AACA,GAjCA;AAkCA,EAAA,OAlCA,qBAkCA;AACA,QAAA,KAAA,IAAA,EAAA;AACA,WAAA,IAAA,CAAA,cAAA,CAAA;AACA,QAAA,KAAA,EAAA,KAAA,IAAA,CAAA,KADA;AAEA,QAAA,OAAA,EAAA,KAAA,IAAA,CAAA;AAFA,OAAA;AAIA;AACA,GAzCA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,eAAA,CAAA,UAAA,GAAA,SAAA,EAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AAAA;;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,KAAA,CAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,KAAA,CAAA,IAAA,CAAA,OAAA;;AACA,UAAA,KAAA,CAAA,eAAA,CAAA,YAAA,mBAAA,MAAA,GAAA,SAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA;AACA,cAAA,OAAA,EAAA;AADA,aAAA;;AAGA,YAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AACA,YAAA,KAAA,CAAA,IAAA,GAAA,KAAA;AACA,WANA;AAOA,SATA,MASA;AACA,UAAA,KAAA,CAAA,eAAA,CAAA,WAAA,mBAAA,MAAA,GAAA,SAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA;AACA,cAAA,OAAA,EAAA;AADA,aAAA;;AAGA,YAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AACA,YAAA,KAAA,CAAA,IAAA,GAAA,KAAA;AACA,WANA;AAOA;AACA,OAnBA;AAoBA,KAzBA;AA0BA,IAAA,MA1BA,oBA0BA,CAAA;AA1BA;AA1CA,CAAA","sourcesContent":["<template>\n  <st-modal :bModal=\"bModal()\" title=\"短信模版\" v-model=\"show\" width=\"486px\">\n    <st-form :form=\"form\">\n      <st-form-item labelWidth=\"70px\" label=\"模版名称\">\n        <a-input v-decorator=\"decorators.title\" placeholder=\"请输入模版名称\" />\n      </st-form-item>\n      <st-form-item labelWidth=\"70px\" label=\"短信内容\">\n        <st-textarea\n          v-decorator=\"decorators.content\"\n          :maxlength=\"278 - sign.length\"\n          :suffix=\"sign\"\n          :autosize=\"{ minRows: 4, maxRows: 6 }\"\n          placeholder=\"请输入模版内容\"\n        />\n      </st-form-item>\n    </st-form>\n    <footer slot=\"footer\">\n      <st-button @click=\"show = false\">取消</st-button>\n      <st-button @click=\"save\" type=\"primary\">确认</st-button>\n    </footer>\n  </st-modal>\n</template>\n<script>\nimport { ruleOptions } from './template.config'\nimport { TemplateService } from './template.service'\nimport { MessageService } from '@/services/message.service'\n\nexport default {\n  name: 'SettingSmsTemplate',\n  bem: {\n    bModal: 'setting-sms-template'\n  },\n  serviceInject() {\n    return {\n      templateService: TemplateService,\n      messageService: MessageService\n    }\n  },\n  rxState() {\n    return {\n      sign: this.templateService.sign$\n    }\n  },\n  props: {\n    info: {\n      type: Object\n    }\n  },\n\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false\n    }\n  },\n  created() {\n    this.getSmsSign()\n  },\n  mounted() {\n    if (this.info) {\n      this.form.setFieldsValue({\n        title: this.info.title,\n        content: this.info.content\n      })\n    }\n  },\n  methods: {\n    getSmsSign() {\n      return this.templateService.getSmsSign().subscribe()\n    },\n    save() {\n      this.form.validate().then(values => {\n        if (this.info) {\n          values.tmpl_id = this.info.tmpl_id\n          this.templateService.editTemplate({ ...values }).subscribe(res => {\n            this.messageService.success({\n              content: '编辑成功'\n            })\n            this.$emit('success')\n            this.show = false\n          })\n        } else {\n          this.templateService.addTemplate({ ...values }).subscribe(res => {\n            this.messageService.success({\n              content: '新增成功'\n            })\n            this.$emit('success')\n            this.show = false\n          })\n        }\n      })\n    },\n    cancel() {}\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/brand/setting/sms"}]}