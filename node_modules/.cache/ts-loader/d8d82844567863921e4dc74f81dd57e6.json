{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/services/region.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/services/region.service.ts","mtime":1591147717088},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { map, tap } from 'rxjs/operators';\nimport { RegionApi } from '@/api/region';\nimport { of } from 'rxjs';\nimport { State } from 'rx-state';\n\nvar RegionService = /*#__PURE__*/function () {\n  function RegionService(regionApi) {\n    _classCallCheck(this, RegionService);\n\n    this.regionApi = regionApi;\n    this.regionPC$ = new State([]);\n  }\n\n  _createClass(RegionService, [{\n    key: \"getRegionPC\",\n    value: function getRegionPC() {\n      return this.regionApi.getRegions().pipe(map(function (data$) {\n        if (data$) {\n          data$.forEach(function (i) {\n            i.children.forEach(function (inner) {\n              delete inner.children;\n            });\n          });\n        }\n\n        return data$;\n      }));\n    } // SET_REGION_PC\n\n  }, {\n    key: \"filterCityId\",\n    value: function filterCityId() {\n      var _this = this;\n\n      var cityOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return cityOptions.map(function (item) {\n        _this.filterCityId(item.children);\n\n        return item;\n      });\n    }\n  }, {\n    key: \"getRegions\",\n    value: function getRegions() {\n      var _this2 = this;\n\n      var local = window.localStorage;\n\n      if (local.getItem('regionTree')) {\n        return of(JSON.parse(local.regionTree));\n      } else {\n        return this.regionApi.getRegions().pipe(tap(function (state$) {\n          var regionTree = JSON.stringify(state$);\n          local.setItem('regionTree', regionTree);\n        }), map(function (data$) {\n          return _this2.filterCityId(data$);\n        }));\n      }\n    }\n  }, {\n    key: \"getRegionCitys\",\n    value: function getRegionCitys(id) {\n      return this.regionApi.getRegionCitys(id);\n    }\n  }, {\n    key: \"getRegionDistricts\",\n    value: function getRegionDistricts(id) {\n      return this.regionApi.getRegionDistricts(id);\n    }\n  }, {\n    key: \"getRegionProvinces\",\n    value: function getRegionProvinces() {\n      return this.regionApi.getRegionProvinces();\n    }\n  }]);\n\n  return RegionService;\n}();\n\nRegionService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof RegionApi !== \"undefined\" && RegionApi) === \"function\" ? _a : Object])], RegionService);\nexport { RegionService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/services/region.service.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAS,GAAT,EAAc,GAAd,QAAyB,gBAAzB;AACA,SAAS,SAAT,QAA0C,cAA1C;AACA,SAAS,EAAT,QAAmB,MAAnB;AACA,SAAS,KAAT,QAAsB,UAAtB;;AAGA,IAAa,aAAb;AAEE,yBAAoB,SAApB,EAAwC;AAAA;;AAApB,SAAA,SAAA,GAAA,SAAA;AADpB,SAAA,SAAA,GAAY,IAAI,KAAJ,CAAU,EAAV,CAAZ;AAC4C;;AAF9C;AAAA;AAAA,kCAGa;AACT,aAAO,KAAK,SAAL,CAAe,UAAf,GAA4B,IAA5B,CACL,GAAG,CAAC,UAAA,KAAK,EAAG;AACV,YAAI,KAAJ,EAAW;AACT,UAAA,KAAK,CAAC,OAAN,CAAc,UAAC,CAAD,EAAW;AACvB,YAAA,CAAC,CAAC,QAAF,CAAW,OAAX,CAAmB,UAAC,KAAD,EAAe;AAChC,qBAAO,KAAK,CAAC,QAAb;AACD,aAFD;AAGD,WAJD;AAKD;;AACD,eAAO,KAAP;AACD,OATE,CADE,CAAP;AAYD,KAhBH,CAiBE;;AAjBF;AAAA;AAAA,mCAkB4C;AAAA;;AAAA,UAArB,WAAqB,uEAAF,EAAE;AACxC,aAAO,WAAW,CAAC,GAAZ,CAAgB,UAAC,IAAD,EAAc;AACnC,QAAA,KAAI,CAAC,YAAL,CAAkB,IAAI,CAAC,QAAvB;;AACA,eAAO,IAAP;AACD,OAHM,CAAP;AAID;AAvBH;AAAA;AAAA,iCAwBY;AAAA;;AACR,UAAM,KAAK,GAAG,MAAM,CAAC,YAArB;;AACA,UAAI,KAAK,CAAC,OAAN,CAAc,YAAd,CAAJ,EAAiC;AAC/B,eAAO,EAAE,CAAC,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,UAAjB,CAAD,CAAT;AACD,OAFD,MAEO;AACL,eAAO,KAAK,SAAL,CAAe,UAAf,GAA4B,IAA5B,CACL,GAAG,CAAC,UAAA,MAAM,EAAG;AACX,cAAM,UAAU,GAAG,IAAI,CAAC,SAAL,CAAe,MAAf,CAAnB;AACA,UAAA,KAAK,CAAC,OAAN,CAAc,YAAd,EAA4B,UAA5B;AACD,SAHE,CADE,EAKL,GAAG,CAAC,UAAA,KAAK,EAAG;AACV,iBAAO,MAAI,CAAC,YAAL,CAAkB,KAAlB,CAAP;AACD,SAFE,CALE,CAAP;AASD;AACF;AAvCH;AAAA;AAAA,mCAwCiB,EAxCjB,EAwCmC;AAC/B,aAAO,KAAK,SAAL,CAAe,cAAf,CAA8B,EAA9B,CAAP;AACD;AA1CH;AAAA;AAAA,uCA2CqB,EA3CrB,EA2CuC;AACnC,aAAO,KAAK,SAAL,CAAe,kBAAf,CAAkC,EAAlC,CAAP;AACD;AA7CH;AAAA;AAAA,yCA8CoB;AAChB,aAAO,KAAK,SAAL,CAAe,kBAAf,EAAP;AACD;AAhDH;;AAAA;AAAA,GAAA;;AAAa,aAAa,GAAA,UAAA,CAAA,CADzB,UAAU,EACe,E,qDAEO,S,KAAS,W,IAAT,S,MAAS,U,GAAA,E,GAAA,M,EAFhB,CAAA,EAAb,aAAa,CAAb;SAAA,a","sourcesContent":["import { Injectable } from 'vue-service-app'\nimport { map, tap } from 'rxjs/operators'\nimport { RegionApi, GetRegionInput } from '@/api/region'\nimport { of } from 'rxjs'\nimport { State } from 'rx-state'\n\n@Injectable()\nexport class RegionService {\n  regionPC$ = new State([])\n  constructor(private regionApi: RegionApi) {}\n  getRegionPC() {\n    return this.regionApi.getRegions().pipe(\n      map(data$ => {\n        if (data$) {\n          data$.forEach((i: any) => {\n            i.children.forEach((inner: any) => {\n              delete inner.children\n            })\n          })\n        }\n        return data$\n      })\n    )\n  }\n  // SET_REGION_PC\n  private filterCityId(cityOptions: any = []) {\n    return cityOptions.map((item: any) => {\n      this.filterCityId(item.children)\n      return item\n    })\n  }\n  getRegions() {\n    const local = window.localStorage\n    if (local.getItem('regionTree')) {\n      return of(JSON.parse(local.regionTree))\n    } else {\n      return this.regionApi.getRegions().pipe(\n        tap(state$ => {\n          const regionTree = JSON.stringify(state$)\n          local.setItem('regionTree', regionTree)\n        }),\n        map(data$ => {\n          return this.filterCityId(data$)\n        })\n      )\n    }\n  }\n  getRegionCitys(id: GetRegionInput) {\n    return this.regionApi.getRegionCitys(id)\n  }\n  getRegionDistricts(id: GetRegionInput) {\n    return this.regionApi.getRegionDistricts(id)\n  }\n  getRegionProvinces() {\n    return this.regionApi.getRegionProvinces()\n  }\n}\n"],"sourceRoot":""}]}