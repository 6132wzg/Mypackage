{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify/inform.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/common/notify/inform.vue","mtime":1591147717375},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ShopSelect from '@/views/biz-components/shop-select'\nimport { columns } from './inform.config'\nimport { InformService } from './inform.service'\nimport { TEMPERATURE_TYPE } from '@/constants/common/notify'\nimport tableMixin from '@/mixins/table.mixin'\n\nexport default {\n  name: 'NotifyInform',\n  mixins: [tableMixin],\n  bem: {\n    b: 'page-notify-inform'\n  },\n  serviceInject() {\n    return {\n      service: InformService\n    }\n  },\n  watch: {\n    // 当一级类型变化则二级分类重置\n    '$searchQuery.notify_type'(oldValue, newValue) {\n      if (oldValue !== newValue) {\n        this.$searchQuery.sub_notify_type = -1\n      }\n    }\n  },\n  components: {\n    ShopSelect\n  },\n  rxState() {\n    const { list$, page$, loading$, informTypeOptions$ } = this.service\n    return { list$, page$, loading$, informTypeOptions$ }\n  },\n  data() {\n    return {\n      date: null,\n      TEMPERATURE_TYPE\n    }\n  },\n  computed: {\n    columns,\n    routerNameSet() {\n      return {\n        'shop-reception-entrance': [1, 2],\n        'shop-reception-reserve': [3, 4, 5],\n        'shop-finance-order-list': [6, 7, 8, 9],\n        'shop-member-list-studio': [10, 11, 12, 13, 14, 15, 16]\n      }\n    },\n    noticeTypeLevel1Options() {\n      return this.informTypeOptions$.map(item => {\n        return {\n          label: item.name,\n          value: item.id\n        }\n      })\n    },\n    noticeTypeLevel2Options() {\n      let options = []\n      for (let item of this.informTypeOptions$) {\n        if (item.id === this.$searchQuery.notify_type) {\n          options = [\n            { label: '全部', value: -1 },\n            ...item.children.map(item => {\n              return {\n                label: item.name,\n                value: item.id\n              }\n            })\n          ]\n        }\n      }\n      return options\n    }\n  },\n  methods: {\n    contentText(record) {\n      const notifyType = this.$searchQuery.notify_type\n      return notifyType === 3\n        ? `<div class=\"page-notify-inform__content\"><img src='${record.image_url}'><span>${record.content}</span></div>`\n        : record.content\n    },\n    onClickDetail(record) {\n      console.log(record)\n      for (let key in this.routerNameSet) {\n        console.log(key)\n        console.log(\n          this.routerNameSet[key].includes(record.sub_notify_type.key)\n        )\n        console.log('this.routerNameSet[key]', this.routerNameSet[key])\n        if (this.routerNameSet[key].includes(record.sub_notify_type.key)) {\n          this.$router.push({ name: key })\n        }\n      }\n    }\n  }\n}\n",null]}