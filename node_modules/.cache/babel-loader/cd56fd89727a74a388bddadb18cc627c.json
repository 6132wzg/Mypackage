{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/mixins/table.mixin.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/mixins/table.mixin.js","mtime":1600926555621},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _typeof from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { isPlainObject, pick } from 'lodash-es'; // 使用page作为当前页查询参数的路由放这里\n\nvar ROUTE_NAMES_USE_PAGE = [\n/**\n * brand\n */\n'brand-product-course-team-list-shop', 'brand-product-course-team-list-brand', 'brand-product-course-personal-list-brand', 'brand-product-course-personal-list-shop', 'brand-product-card-deposit-list-all', 'brand-product-card-deposit-list-shelves', 'brand-finance-salary-template-basic', 'brand-finance-salary-template-performance', 'brand-setting-shop-list', 'brand-staff-info-course', 'brand-staff-info-follow', 'brand-staff-info-sold', 'brand-staff-info-member', 'brand-marketing-plugin-coupon-list',\n/**\n * shop\n */\n'shop-product-course-manage-personal-list', 'shop-product-course-manage-team-list', 'shop-product-course-manage-package-list', 'shop-product-course-schedule-personal-personal-reserve-table', 'shop-product-card-member-list-all', 'shop-product-card-deposit-list-all', 'shop-product-card-deposit-list-shelves', 'shop-sold-card-list-member', 'shop-sold-card-list-deposit', 'shop-sold-course-list-personal', 'shop-sold-course-list-package', 'shop-sold-cabinet-list', 'shop-sold-transaction-list', 'shop-member-list', 'shop-member-label-list', 'shop-finance-order-list', 'shop-reception-entrance', 'shop-staff-info-member', 'shop-staff-info-course', 'shop-staff-info-sold', 'shop-staff-list', 'shop-setting-hardware-entry-list'];\nexport default {\n  data: function data() {\n    return {\n      // 选中项目的keys\n      selectedRowKeys: [],\n      // 选中项的行数组\n      selectedRows: []\n    };\n  },\n  computed: {\n    finalSearchQuery: function finalSearchQuery() {\n      return this.query || this.$searchQuery;\n    },\n    // 多选是否至少勾选一项\n    isSelectedEnabled: function isSelectedEnabled() {\n      return this.selectedRowKeys.length > 0;\n    },\n    // 没有一项选中\n    isSelectedDisabled: function isSelectedDisabled() {\n      return this.selectedRowKeys.length === 0;\n    },\n    currentPageField: function currentPageField() {\n      var _field = ROUTE_NAMES_USE_PAGE.includes(this.$route.name) ? 'page' : 'current_page';\n\n      return _field;\n    },\n    prevPage: function prevPage() {\n      return this.finalSearchQuery[this.currentPageField];\n    }\n  },\n  methods: {\n    /**\n     * 筛选搜索 使用当前的query参数，只是页数到第一页  只做路由跳转 获取数据的行为在 beforeRouteUpdate 或 beforeEach中定义\n     * @example\n     *  ```html\n     *      <st-button @click='onSearch'></st-button>\n     *  ```\n     */\n    onSearch: function onSearch() {\n      this.onSelectionReset();\n      this.$router.push({\n        query: _objectSpread({}, this.finalSearchQuery, _defineProperty({}, this.currentPageField, 1))\n      });\n    },\n\n    /**\n     * 多个字段下的搜索 this.onMultiSearch({a:1,b:2})\n     */\n    onMultiSearch: function onMultiSearch() {\n      var searchFieldsValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!isPlainObject(searchFieldsValue)) {\n        throw new Error(\"[tableMixin] should provide searchFieldsValue is object but got \".concat(_typeof(searchFieldsValue)));\n      }\n\n      this.$router.push({\n        query: _objectSpread({}, this.finalSearchQuery, {}, searchFieldsValue, _defineProperty({}, this.currentPageField, 1))\n      });\n    },\n\n    /**\n     * 筛选重置\n     */\n    onSearchReset: function onSearchReset() {\n      var _query;\n\n      this.onSelectionReset();\n      this.$router.push({\n        query: (_query = {}, _defineProperty(_query, this.currentPageField, 1), _defineProperty(_query, \"size\", this.finalSearchQuery.size), _query)\n      });\n    },\n\n    /**\n     * 单个筛选项的即时搜索 @change=\"onSingleSearch('card_type',$event)\"\n     */\n    onSingleSearch: function onSingleSearch(key, data) {\n      this.onSelectionReset();\n      this.$router.push({\n        query: _objectSpread({}, this.finalSearchQuery, {}, _defineProperty({}, key, data), _defineProperty({}, this.currentPageField, 1))\n      });\n    },\n\n    /**\n     * 关键词的即时搜索\n     * @example 关键词搜索 去除其它query 页面至第一页，保留分页器\n     *   `@change=\"onKeywordsSearch('keyword',$event)\"`\n     * @example 关键词搜索 保留id字段\n     *   `@change=\"onKeywordsSearch('keyword',$event,['id'])\"`\n     */\n    onKeywordsSearch: function onKeywordsSearch(key, data) {\n      var _objectSpread7;\n\n      var keepFields = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      this.onSelectionReset();\n      this.$router.push({\n        query: _objectSpread(_defineProperty({}, key, data), pick(this.finalSearchQuery, keepFields), (_objectSpread7 = {}, _defineProperty(_objectSpread7, this.currentPageField, 1), _defineProperty(_objectSpread7, \"size\", this.finalSearchQuery.size), _objectSpread7))\n      });\n    },\n    // 重置 多选框\n    onSelectionReset: function onSelectionReset() {\n      this.selectedRowKeys = [];\n      this.selectedRows = [];\n    },\n    // 多选区更新\n    onSelectionChange: function onSelectionChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n    },\n    getTableQuery: function getTableQuery(pagination, filter, sorter) {\n      var _ref;\n\n      // 排序字段 排序顺序\n      var sort_by, sort_order;\n\n      if (sorter && sorter.field) {\n        sort_by = sorter.field;\n        sort_order = {\n          ascend: 'asc',\n          descend: 'desc'\n        }[sorter.order];\n      }\n\n      if (!pagination) {\n        throw new Error(\"[tableMixin] pagination is not provide \".concat(_typeof(pagination)));\n      }\n\n      return _ref = {}, _defineProperty(_ref, this.currentPageField, pagination.current ? pagination.current : 1), _defineProperty(_ref, \"size\", pagination.pageSize), _defineProperty(_ref, \"sort_by\", sort_by), _defineProperty(_ref, \"sort_order\", sort_order), _ref;\n    },\n    // 子表更新\n    onChildrenTableChange: function onChildrenTableChange(pagination, filter, sorter) {\n      var query = pagination.query || {};\n      return Promise.resolve(_objectSpread({}, this.getTableQuery(pagination, filter, sorter), _defineProperty({}, this.currentPageField, pagination.current ? pagination.current : 1), query));\n    },\n    // 表格更新\n    onTableChange: function onTableChange(pagination, filter, sorter) {\n      this.onSelectionReset();\n      var nextPage = pagination.current !== this.prevPage ? pagination.current : 1;\n      this.$router.push({\n        query: _objectSpread({}, this.finalSearchQuery, {}, this.getTableQuery(pagination, filter, sorter), _defineProperty({}, this.currentPageField, nextPage))\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/mixins/table.mixin.js"],"names":["isPlainObject","pick","ROUTE_NAMES_USE_PAGE","data","selectedRowKeys","selectedRows","computed","finalSearchQuery","query","$searchQuery","isSelectedEnabled","length","isSelectedDisabled","currentPageField","_field","includes","$route","name","prevPage","methods","onSearch","onSelectionReset","$router","push","onMultiSearch","searchFieldsValue","Error","onSearchReset","size","onSingleSearch","key","onKeywordsSearch","keepFields","onSelectionChange","getTableQuery","pagination","filter","sorter","sort_by","sort_order","field","ascend","descend","order","current","pageSize","onChildrenTableChange","Promise","resolve","onTableChange","nextPage"],"mappings":"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","sourcesContent":["import { isPlainObject, pick } from 'lodash-es'\n\n// 使用page作为当前页查询参数的路由放这里\nconst ROUTE_NAMES_USE_PAGE = [\n  /**\n   * brand\n   */\n  'brand-product-course-team-list-shop',\n  'brand-product-course-team-list-brand',\n  'brand-product-course-personal-list-brand',\n  'brand-product-course-personal-list-shop',\n  'brand-product-card-deposit-list-all',\n  'brand-product-card-deposit-list-shelves',\n\n  'brand-finance-salary-template-basic',\n  'brand-finance-salary-template-performance',\n\n  'brand-setting-shop-list',\n\n  'brand-staff-info-course',\n  'brand-staff-info-follow',\n  'brand-staff-info-sold',\n  'brand-staff-info-member',\n\n  'brand-marketing-plugin-coupon-list',\n  /**\n   * shop\n   */\n  'shop-product-course-manage-personal-list',\n  'shop-product-course-manage-team-list',\n  'shop-product-course-manage-package-list',\n  'shop-product-course-schedule-personal-personal-reserve-table',\n  'shop-product-card-member-list-all',\n  'shop-product-card-deposit-list-all',\n  'shop-product-card-deposit-list-shelves',\n\n  'shop-sold-card-list-member',\n  'shop-sold-card-list-deposit',\n  'shop-sold-course-list-personal',\n  'shop-sold-course-list-package',\n  'shop-sold-cabinet-list',\n  'shop-sold-transaction-list',\n\n  'shop-member-list',\n  'shop-member-label-list',\n\n  'shop-finance-order-list',\n  'shop-reception-entrance',\n\n  'shop-staff-info-member',\n  'shop-staff-info-course',\n  'shop-staff-info-sold',\n  'shop-staff-list',\n  'shop-setting-hardware-entry-list'\n]\n\nexport default {\n  data() {\n    return {\n      // 选中项目的keys\n      selectedRowKeys: [],\n      // 选中项的行数组\n      selectedRows: []\n    }\n  },\n  computed: {\n    finalSearchQuery() {\n      return this.query || this.$searchQuery\n    },\n    // 多选是否至少勾选一项\n    isSelectedEnabled() {\n      return this.selectedRowKeys.length > 0\n    },\n    // 没有一项选中\n    isSelectedDisabled() {\n      return this.selectedRowKeys.length === 0\n    },\n    currentPageField() {\n      const _field = ROUTE_NAMES_USE_PAGE.includes(this.$route.name)\n        ? 'page'\n        : 'current_page'\n      return _field\n    },\n    prevPage() {\n      return this.finalSearchQuery[this.currentPageField]\n    }\n  },\n  methods: {\n    /**\n     * 筛选搜索 使用当前的query参数，只是页数到第一页  只做路由跳转 获取数据的行为在 beforeRouteUpdate 或 beforeEach中定义\n     * @example\n     *  ```html\n     *      <st-button @click='onSearch'></st-button>\n     *  ```\n     */\n    onSearch() {\n      this.onSelectionReset()\n      this.$router.push({\n        query: {\n          ...this.finalSearchQuery,\n          [this.currentPageField]: 1\n        }\n      })\n    },\n    /**\n     * 多个字段下的搜索 this.onMultiSearch({a:1,b:2})\n     */\n    onMultiSearch(searchFieldsValue = {}) {\n      if (!isPlainObject(searchFieldsValue)) {\n        throw new Error(\n          `[tableMixin] should provide searchFieldsValue is object but got ${typeof searchFieldsValue}`\n        )\n      }\n      this.$router.push({\n        query: {\n          ...this.finalSearchQuery,\n          ...searchFieldsValue,\n          [this.currentPageField]: 1\n        }\n      })\n    },\n    /**\n     * 筛选重置\n     */\n    onSearchReset() {\n      this.onSelectionReset()\n      this.$router.push({\n        query: {\n          [this.currentPageField]: 1,\n          size: this.finalSearchQuery.size\n        }\n      })\n    },\n    /**\n     * 单个筛选项的即时搜索 @change=\"onSingleSearch('card_type',$event)\"\n     */\n    onSingleSearch(key, data) {\n      this.onSelectionReset()\n      this.$router.push({\n        query: {\n          ...this.finalSearchQuery,\n          ...{ [key]: data },\n          [this.currentPageField]: 1\n        }\n      })\n    },\n    /**\n     * 关键词的即时搜索\n     * @example 关键词搜索 去除其它query 页面至第一页，保留分页器\n     *   `@change=\"onKeywordsSearch('keyword',$event)\"`\n     * @example 关键词搜索 保留id字段\n     *   `@change=\"onKeywordsSearch('keyword',$event,['id'])\"`\n     */\n    onKeywordsSearch(key, data, keepFields = []) {\n      this.onSelectionReset()\n      this.$router.push({\n        query: {\n          [key]: data,\n          ...pick(this.finalSearchQuery, keepFields),\n          [this.currentPageField]: 1,\n          size: this.finalSearchQuery.size\n        }\n      })\n    },\n    // 重置 多选框\n    onSelectionReset() {\n      this.selectedRowKeys = []\n      this.selectedRows = []\n    },\n    // 多选区更新\n    onSelectionChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    getTableQuery(pagination, filter, sorter) {\n      // 排序字段 排序顺序\n      let sort_by, sort_order\n      if (sorter && sorter.field) {\n        sort_by = sorter.field\n        sort_order = { ascend: 'asc', descend: 'desc' }[sorter.order]\n      }\n      if (!pagination) {\n        throw new Error(\n          `[tableMixin] pagination is not provide ${typeof pagination}`\n        )\n      }\n      return {\n        [this.currentPageField]: pagination.current ? pagination.current : 1,\n        size: pagination.pageSize,\n        sort_by,\n        sort_order\n      }\n    },\n    // 子表更新\n    onChildrenTableChange(pagination, filter, sorter) {\n      const query = pagination.query || {}\n      return Promise.resolve({\n        ...this.getTableQuery(pagination, filter, sorter),\n        [this.currentPageField]: pagination.current ? pagination.current : 1,\n        ...query\n      })\n    },\n    // 表格更新\n    onTableChange(pagination, filter, sorter) {\n      this.onSelectionReset()\n      const nextPage =\n        pagination.current !== this.prevPage ? pagination.current : 1\n      this.$router.push({\n        query: {\n          ...this.finalSearchQuery,\n          ...this.getTableQuery(pagination, filter, sorter),\n          [this.currentPageField]: nextPage\n        }\n      })\n    }\n  }\n}\n"]}]}