{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/edit-shortcuts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/reception/edit-shortcuts.vue","mtime":1597396799942},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport { EditShortcutService } from \"./edit-shortcuts.service\";\nimport { cloneDeep } from 'lodash-es';\nexport default {\n  serviceInject: function serviceInject() {\n    return {\n      editShortcutService: EditShortcutService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list: this.editShortcutService.list$,\n      auth: this.editShortcutService.auth$\n    };\n  },\n  components: {\n    draggable: draggable\n  },\n  name: '',\n  props: {},\n  data: function data() {\n    return {\n      show: false,\n      cloneList: [],\n      showList: [],\n      noshowList: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.editShortcutService.getIcons().subscribe(function (res) {\n      var list = cloneDeep(_this.list);\n      _this.cloneList = list.map(function (i) {\n        i.auth = _this.auth[i.id];\n        return i;\n      });\n      _this.showList = _this.cloneList.filter(function (i) {\n        return i.is_show;\n      });\n      _this.noshowList = _this.cloneList.filter(function (i) {\n        return !i.is_show;\n      });\n    });\n  },\n  methods: {\n    save: function save(e) {\n      var _this2 = this;\n\n      var self = this;\n      e.preventDefault();\n      console.log('showList', this.showList);\n      console.log('noshowList', this.noshowList);\n      this.editShortcutService.setIcons({\n        icons: [].concat(_toConsumableArray(this.showList), _toConsumableArray(this.noshowList))\n      }).subscribe(function (res) {\n        _this2.show = false;\n\n        _this2.$emit('done');\n      });\n    },\n    checkMove: function checkMove(evt) {\n      var draggedContext = evt.draggedContext,\n          dragged = evt.dragged,\n          from = evt.from,\n          to = evt.to;\n      var draggedElement = draggedContext.element;\n      var fromClassList = from.classList;\n      var toClassList = to.classList;\n\n      if (fromClassList.contains('show') && toClassList.contains('hidden')) {\n        draggedElement.is_show = 0;\n      } else if (fromClassList.contains('hidden') && toClassList.contains('show')) {\n        draggedElement.is_show = 1;\n      }\n    },\n    handleRemoveShortcut: function handleRemoveShortcut(item) {\n      item.is_show = 0;\n      this.showList = this.cloneList.filter(function (i) {\n        return i.is_show;\n      });\n      this.noshowList = this.cloneList.filter(function (i) {\n        return !i.is_show;\n      });\n    },\n    handleAddShortcut: function handleAddShortcut(item) {\n      item.is_show = 1;\n      this.showList = this.cloneList.filter(function (i) {\n        return i.is_show;\n      });\n      this.noshowList = this.cloneList.filter(function (i) {\n        return !i.is_show;\n      });\n    },\n    dragStart: function dragStart(ev) {\n      ev.item.classList.add('dragged');\n    },\n    dragEnd: function dragEnd(ev) {\n      ev.item.classList.remove('dragged');\n    }\n  }\n};",null]}