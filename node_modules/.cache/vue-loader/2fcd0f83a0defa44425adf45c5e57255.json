{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/crowd/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/crowd/index.vue","mtime":1597396799983},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport index from './components#/index'\nimport { IndexService } from './index.service'\nimport { MessageService } from '@/services/message.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './index.config'\nexport default {\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      aService: IndexService,\n      messageService: MessageService\n    }\n  },\n  rxState() {\n    return {\n      crowdIndexInfo: this.aService.crowdIndexInfo$,\n      auth: this.aService.auth$\n    }\n  },\n  data() {\n    return {\n      refreshStatusMap: {\n        success: 1, //已刷新\n        waitting: 2, // 等待刷新\n        freshing: 3, // 刷新中\n        failed: 4 // 刷新失败\n      }\n    }\n  },\n  components: {\n    index\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    newCrowd(data) {\n      this.messageService.warn({ content: data })\n    },\n    onChange(pagination, filters, sorter) {\n      console.log('params', pagination, filters, sorter, data)\n    },\n    groupSMS(value) {\n      console.log(value)\n    },\n    addTreeNode(value) {\n      console.log(value)\n    },\n    refresh() {\n      this.$router.push({ query: {} })\n    },\n    deleteTreeNode(value) {\n      this.aService.delCrowdBrandCrowd(value.id).subscribe(res => {\n        this.refresh()\n      })\n    },\n    onCrowdRefresh(record) {\n      this.aService.crowdShopRefresh(record.id).subscribe(res => {\n        this.refresh()\n      })\n    }\n  },\n  mounted() {}\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/pages/shop/member/crowd","sourcesContent":["<template>\n  <st-panel-layout class=\"shop-member-crowd-index\">\n    <index\n      v-model=\"crowdIndexInfo.info.important_crowd\"\n      v-if=\"crowdIndexInfo.info.important_crowd.length > 0\"\n    ></index>\n    <st-panel app>\n      <div slot=\"title\">\n        <router-link\n          :to=\"{ name: 'shop-member-crowd-add' }\"\n          v-if=\"crowdIndexInfo.info.list.length < 20\"\n        >\n          <st-button type=\"primary\" v-if=\"auth.add\" icon=\"add\">\n            新增人群\n          </st-button>\n        </router-link>\n        <st-button\n          v-else\n          type=\"primary\"\n          @click=\"newCrowd('人群数量已达到上限！')\"\n        >\n          新增人群\n        </st-button>\n        <span class=\"shop-member-crowd-index-new__crowb_num\">\n          新增人群数量最多20个\n        </span>\n      </div>\n      <st-table\n        rowKey=\"id\"\n        :dataSource=\"crowdIndexInfo.info.list\"\n        :columns=\"columns\"\n        @change=\"onChange\"\n        :page=\"false\"\n      >\n        <router-link\n          class=\"mg-r8\"\n          :to=\"{\n            name: 'shop-member-crowd-detail',\n            query: { id: record.id }\n          }\"\n          slot=\"crowd_name\"\n          slot-scope=\"crowd_name, record\"\n        >\n          {{ crowd_name }}\n        </router-link>\n        <template slot=\"description\" slot-scope=\"text, record\">\n          <st-overflow-text\n            v-for=\"(item, index) in record.description\"\n            :key=\"index\"\n            max-width=\"300px\"\n            :value=\"item\"\n          ></st-overflow-text>\n        </template>\n\n        <span slot=\"refreshTitle\">\n          刷新状态\n          <st-help-tooltip id=\"TSUL007\" />\n        </span>\n        <template slot=\"refresh_task_status_code\" slot-scope=\"text\">\n          <st-text\n            :status=\"{\n              success: text === refreshStatusMap.success,\n              warning: text === refreshStatusMap.waitting,\n              info: text === refreshStatusMap.freshing,\n              error: text === refreshStatusMap.failed\n            }\"\n          >\n            {{ text | enumFilter('crowd.refresh_task_status') }}\n          </st-text>\n        </template>\n        <div slot=\"actions\" slot-scope=\"text, record\">\n          <st-table-actions>\n            <a\n              v-if=\"record.auth['shop:member:crowd|export']\"\n              v-export-excel=\"{ type: 'crowd/' + record.id, query: record }\"\n            >\n              导出\n            </a>\n            <router-link\n              v-if=\"record.auth['shop:member:crowd|edit']\"\n              :to=\"{\n                name: 'shop-member-crowd-add',\n                query: { id: record.id }\n              }\"\n            >\n              编辑\n            </router-link>\n            <st-popconfirm\n              v-if=\"record.auth['shop:member:crowd|del']\"\n              @confirm=\"deleteTreeNode(record)\"\n            >\n              <a>删除</a>\n            </st-popconfirm>\n            <a\n              @click=\"onCrowdRefresh(record)\"\n              v-if=\"record.auth['shop:member:crowd|fresh']\"\n            >\n              刷新\n            </a>\n          </st-table-actions>\n        </div>\n      </st-table>\n    </st-panel>\n  </st-panel-layout>\n</template>\n<script>\nimport index from './components#/index'\nimport { IndexService } from './index.service'\nimport { MessageService } from '@/services/message.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './index.config'\nexport default {\n  mixins: [tableMixin],\n  serviceInject() {\n    return {\n      aService: IndexService,\n      messageService: MessageService\n    }\n  },\n  rxState() {\n    return {\n      crowdIndexInfo: this.aService.crowdIndexInfo$,\n      auth: this.aService.auth$\n    }\n  },\n  data() {\n    return {\n      refreshStatusMap: {\n        success: 1, //已刷新\n        waitting: 2, // 等待刷新\n        freshing: 3, // 刷新中\n        failed: 4 // 刷新失败\n      }\n    }\n  },\n  components: {\n    index\n  },\n  computed: {\n    columns\n  },\n  methods: {\n    newCrowd(data) {\n      this.messageService.warn({ content: data })\n    },\n    onChange(pagination, filters, sorter) {\n      console.log('params', pagination, filters, sorter, data)\n    },\n    groupSMS(value) {\n      console.log(value)\n    },\n    addTreeNode(value) {\n      console.log(value)\n    },\n    refresh() {\n      this.$router.push({ query: {} })\n    },\n    deleteTreeNode(value) {\n      this.aService.delCrowdBrandCrowd(value.id).subscribe(res => {\n        this.refresh()\n      })\n    },\n    onCrowdRefresh(record) {\n      this.aService.crowdShopRefresh(record.id).subscribe(res => {\n        this.refresh()\n      })\n    }\n  },\n  mounted() {}\n}\n</script>\n"]}]}