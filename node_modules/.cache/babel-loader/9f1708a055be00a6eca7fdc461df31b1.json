{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/member-online.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/member-online.vue","mtime":1600926556419},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MemberOnlineService } from \"./member-online.service\";\nimport tableMixin from '@/mixins/table.mixin';\nimport { columns } from \"./member-online.config.ts\";\nimport infiniteScroll from 'vue-infinite-scroll';\nimport { debounce } from 'lodash-es';\nimport ShopReceptionEntrance from '@/views/biz-modals/shop/reception/entrance';\nexport default {\n  mixins: [tableMixin],\n  directives: {\n    infiniteScroll: infiniteScroll\n  },\n  name: 'shop-reception-member-online',\n  bem: {\n    b: 'shop-reception-member-online'\n  },\n  modals: {\n    ShopReceptionEntrance: ShopReceptionEntrance\n  },\n  serviceInject: function serviceInject() {\n    return {\n      memberOnlineService: MemberOnlineService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      auth: this.memberOnlineService.auth$,\n      list: this.memberOnlineService.list$,\n      page: this.memberOnlineService.page$,\n      loading: this.memberOnlineService.loading$,\n      finished: this.memberOnlineService.finished$\n    };\n  },\n  components: {},\n  props: {},\n  data: function data() {\n    return {\n      isEdit: false,\n      entranceKeys: [],\n      // 入场会员key值组合\n      checkAll: false,\n      // 是否全选\n      indeterminate: false\n    };\n  },\n  computed: {\n    columns: columns,\n    hasNoMember: function hasNoMember() {\n      return this.page.total_counts;\n    }\n  },\n  async: {},\n  mounted: function mounted() {},\n  methods: {\n    handleOpenEntrance: function handleOpenEntrance(record) {\n      var _this = this;\n\n      if (this.isEdit) return false;\n      this.$modalRouter.push({\n        name: 'shop-reception-entrance',\n        props: {\n          member_id: record.member_id\n        },\n        on: {\n          done: function done() {\n            // this.$router.reload()\n            _this.$emit('refresh');\n          }\n        }\n      });\n    },\n    onCheckAllChange: function onCheckAllChange(e) {\n      var entranceKeys = this.list.map(function (item) {\n        return item.member_id;\n      });\n      this.entranceKeys = e.target.checked ? entranceKeys : [];\n      this.indeterminate = false;\n      this.checkAll = e.target.checked;\n    },\n    onChange: function onChange(checkedList) {\n      var listLen = this.list.length;\n      var checkLen = checkedList.length;\n      this.indeterminate = !!checkLen && checkLen < listLen;\n      this.checkAll = checkLen === listLen;\n    },\n    handleInfiniteOnLoad: debounce(function (e) {\n      if (!this.finished) {\n        this.memberOnlineService.getList({\n          current_page: ++this.page.current_page,\n          size: 20\n        }).subscribe();\n      }\n    }, 400),\n    // 离场之前的确认\n    onLeaveConfirm: function onLeaveConfirm(record) {\n      var _this2 = this;\n\n      this.memberOnlineService.getCabinetInfo(record.member_id).subscribe(function (res) {\n        if (res.info.is_smart) {\n          _this2.$error({\n            title: \"\\u5F53\\u524D\\u4F1A\\u5458\\u6709\\u50A8\\u7269\\u67DC\\u300C\".concat(res.info.cabinet_area_name, \"\\u300D\\u300C\").concat(res.info.serial_num, \"\\u300D\\u5C1A\\u672A\\u5F52\\u8FD8\\uFF0C\\u8BF7\\u5148\\u5F52\\u8FD8\\uFF01\"),\n            okText: '知道了'\n          });\n        } else {\n          _this2.onLeave(record);\n        }\n      });\n    },\n    onLeaveBatch: function onLeaveBatch() {\n      var _this3 = this;\n\n      this.$confirm({\n        title: '批量离场',\n        content: \"\\u786E\\u5B9A\\u79BB\\u573A\\u5417\\uFF1F\",\n        onOk: function onOk() {\n          return _this3.memberOnlineService.setEntranceLeaveBatch({\n            ids: _this3.entranceKeys\n          }).toPromise().then(function () {\n            _this3.handleEditLeaveStatus(false);\n\n            _this3.$emit('refresh');\n          });\n        }\n      });\n    },\n    handleEditLeaveStatus: function handleEditLeaveStatus(status) {\n      this.checkAll = false;\n      this.isEdit = status;\n      this.entranceKeys = [];\n    }\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {\n    console.log('member-online');\n    next();\n  }\n};",{"version":3,"sources":["member-online.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div :class=\"b('header')\">\n      <div class=\"left\">\n        <a-checkbox\n          class=\"check\"\n          v-if=\"isEdit\"\n          v-model=\"checkAll\"\n          :indeterminate=\"indeterminate\"\n          :checked=\"checkAll\"\n          @change=\"onCheckAllChange\"\n        ></a-checkbox>\n        <div class=\"info\" v-if=\"!isEdit\">当前在场{{ page.total_counts }}人</div>\n        <div class=\"info\" v-else>已选{{ entranceKeys.length }}人</div>\n      </div>\n      <div class=\"buttons\" v-if=\"!isEdit\">\n        <st-button\n          class=\"button\"\n          type=\"link\"\n          size=\"small\"\n          :disabled=\"!hasNoMember\"\n          @click=\"handleEditLeaveStatus(true)\"\n        >\n          批量离场\n        </st-button>\n      </div>\n      <div class=\"buttons\" v-else>\n        <st-button\n          class=\"button\"\n          type=\"link\"\n          :disabled=\"!entranceKeys.length || !auth.batchCheckout\"\n          @click=\"onLeaveBatch\"\n          size=\"small\"\n        >\n          离场\n        </st-button>\n        <st-button\n          class=\"mg-l8 button\"\n          type=\"link\"\n          size=\"small\"\n          @click=\"handleEditLeaveStatus(false)\"\n        >\n          取消\n        </st-button>\n      </div>\n    </div>\n    <a-checkbox-group\n      v-model=\"entranceKeys\"\n      @change=\"onChange\"\n      :class=\"[b('list-wrapper'), { noEdit: !isEdit }]\"\n    >\n      <div :class=\"b('list')\" v-scrollBar=\"{ stopPropagation: true }\">\n        <a-list\n          v-infinite-scroll=\"handleInfiniteOnLoad\"\n          :infinite-scroll-distance=\"10\"\n          :dataSource=\"list\"\n          :loading=\"loading.getList\"\n          rowKey=\"member_id\"\n          :split=\"false\"\n        >\n          <a-list-item slot=\"renderItem\" slot-scope=\"item\">\n            <div :class=\"b('list-item')\" @click=\"handleOpenEntrance(item)\">\n              <div class=\"left\">\n                <a-checkbox\n                  class=\"check\"\n                  v-if=\"isEdit\"\n                  :value=\"item.member_id\"\n                ></a-checkbox>\n                <div class=\"avatar\">\n                  <img :src=\"item.avatar\" alt=\"\" />\n                </div>\n                <div class=\"info\">\n                  <div class=\"name\">\n                    <st-overflow-text\n                      :value=\"item.member_name\"\n                      maxWidth=\"100px\"\n                    ></st-overflow-text>\n                  </div>\n                  <div class=\"phone\">\n                    <st-overflow-text\n                      :value=\"item.mobile\"\n                      maxWidth=\"100px\"\n                    ></st-overflow-text>\n                  </div>\n                </div>\n              </div>\n              <div class=\"right\">\n                <div class=\"time\">{{ item.entry_time }}</div>\n              </div>\n            </div>\n          </a-list-item>\n        </a-list>\n      </div>\n    </a-checkbox-group>\n  </div>\n</template>\n\n<script>\nimport { MemberOnlineService } from './member-online.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport { columns } from './member-online.config.ts'\nimport infiniteScroll from 'vue-infinite-scroll'\nimport { debounce } from 'lodash-es'\nimport ShopReceptionEntrance from '@/views/biz-modals/shop/reception/entrance'\n\nexport default {\n  mixins: [tableMixin],\n\n  directives: { infiniteScroll },\n\n  name: 'shop-reception-member-online',\n\n  bem: {\n    b: 'shop-reception-member-online'\n  },\n\n  modals: { ShopReceptionEntrance },\n\n  serviceInject() {\n    return {\n      memberOnlineService: MemberOnlineService\n    }\n  },\n\n  rxState() {\n    return {\n      auth: this.memberOnlineService.auth$,\n      list: this.memberOnlineService.list$,\n      page: this.memberOnlineService.page$,\n      loading: this.memberOnlineService.loading$,\n      finished: this.memberOnlineService.finished$\n    }\n  },\n\n  components: {},\n\n  props: {},\n\n  data() {\n    return {\n      isEdit: false,\n      entranceKeys: [], // 入场会员key值组合\n      checkAll: false, // 是否全选\n      indeterminate: false\n    }\n  },\n\n  computed: {\n    columns,\n    hasNoMember() {\n      return this.page.total_counts\n    }\n  },\n\n  async: {},\n\n  mounted() {},\n\n  methods: {\n    handleOpenEntrance(record) {\n      if (this.isEdit) return false\n      this.$modalRouter.push({\n        name: 'shop-reception-entrance',\n        props: {\n          member_id: record.member_id\n        },\n        on: {\n          done: () => {\n            // this.$router.reload()\n            this.$emit('refresh')\n          }\n        }\n      })\n    },\n    onCheckAllChange(e) {\n      let entranceKeys = this.list.map(item => item.member_id)\n      this.entranceKeys = e.target.checked ? entranceKeys : []\n      this.indeterminate = false\n      this.checkAll = e.target.checked\n    },\n    onChange(checkedList) {\n      let listLen = this.list.length\n      let checkLen = checkedList.length\n      this.indeterminate = !!checkLen && checkLen < listLen\n      this.checkAll = checkLen === listLen\n    },\n    handleInfiniteOnLoad: debounce(function(e) {\n      if (!this.finished) {\n        this.memberOnlineService\n          .getList({\n            current_page: ++this.page.current_page,\n            size: 20\n          })\n          .subscribe()\n      }\n    }, 400),\n    // 离场之前的确认\n    onLeaveConfirm(record) {\n      this.memberOnlineService\n        .getCabinetInfo(record.member_id)\n        .subscribe(res => {\n          if (res.info.is_smart) {\n            this.$error({\n              title: `当前会员有储物柜「${res.info.cabinet_area_name}」「${res.info.serial_num}」尚未归还，请先归还！`,\n              okText: '知道了'\n            })\n          } else {\n            this.onLeave(record)\n          }\n        })\n    },\n    onLeaveBatch() {\n      this.$confirm({\n        title: '批量离场',\n        content: `确定离场吗？`,\n        onOk: () => {\n          return this.memberOnlineService\n            .setEntranceLeaveBatch({\n              ids: this.entranceKeys\n            })\n            .toPromise()\n            .then(() => {\n              this.handleEditLeaveStatus(false)\n              this.$emit('refresh')\n            })\n        }\n      })\n    },\n    handleEditLeaveStatus(status) {\n      this.checkAll = false\n      this.isEdit = status\n      this.entranceKeys = []\n    }\n  },\n\n  beforeRouteUpdate(to, from, next) {\n    console.log('member-online')\n    next()\n  }\n}\n</script>\n"],"sourceRoot":"src/views/pages/shop/reception/components#"}]}