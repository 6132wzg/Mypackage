{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/account/modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/account/modify.vue","mtime":1600926555812},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ModifyService } from \"./modify.service\";\nimport { ruleOptions } from \"./modify.config\";\nimport { PatternService } from '@/services/pattern.service';\nimport { NoCaptchaService } from '@/services/no-captcha.service';\nimport InputPhoneCode from '@/views/biz-components/account/input-phone-code/input-phone-code';\nimport { MessageService } from '@/services/message.service';\nimport { cloneDeep } from 'lodash-es';\nimport NoCaptcha from '@/views/biz-components/account/no-captcha';\nimport AccountBind from '@/views/biz-modals/account/bind';\nimport InputPwdStrength from '@/views/biz-components/account/input-pwd-strength/input-pwd-strength';\nexport default {\n  bem: {\n    b: 'account-modify'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      modifyService: ModifyService,\n      messageService: MessageService,\n      noCaptchaService: NoCaptchaService,\n      pattern: PatternService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      info: this.modifyService.info$,\n      loading: this.modifyService.loading$\n    };\n  },\n  components: {\n    NoCaptcha: NoCaptcha,\n    InputPhoneCode: InputPhoneCode,\n    InputPwdStrength: InputPwdStrength\n  },\n  modals: {\n    AccountBind: AccountBind\n  },\n  computed: {\n    isBind: function isBind() {\n      return !this.info.account_phone_encrypt;\n    }\n  },\n  mounted: function mounted() {\n    this.modifyService.getUserInfo().subscribe();\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false,\n      isCountTime: false,\n      isShowFooter: false,\n      isShowTel: false,\n      isShowPass: false,\n      isShowSuccess: false,\n      validStatus: 0\n    };\n  },\n  methods: {\n    goBind: function goBind() {\n      this.show = false;\n      this.$modalRouter.push({\n        name: 'account-bind',\n        props: {},\n        on: {}\n      });\n    },\n    checkPass: function checkPass() {\n      this.isShowFooter = true;\n      this.isShowPass = true;\n    },\n    checkTel: function checkTel() {\n      this.isShowFooter = true;\n      this.isShowTel = true;\n    },\n    goTelNext: function goTelNext() {\n      var _this = this;\n\n      this.form.validate(['captcha']).then(function (values) {\n        _this.modifyService.checkCaptcha({\n          captcha: values.captcha\n        }).subscribe(function (res) {\n          _this.isShowTel = false;\n        });\n      });\n    },\n    goPassNext: function goPassNext() {\n      var _this2 = this;\n\n      this.form.validate(['password']).then(function (values) {\n        _this2.modifyService.checkAccount({\n          pwd: values.password\n        }).subscribe(function (res) {\n          _this2.isShowPass = false;\n        });\n      });\n    },\n    onClickCaptcha: function onClickCaptcha() {\n      var params = {\n        phone: this.info.account_phone,\n        country_code_id: this.info.country_code_id\n      };\n      this.getCaptcha(params);\n    },\n    getCaptcha: function getCaptcha(params) {\n      var _this3 = this;\n\n      var nvc_val = this.noCaptchaService.generateNVCVal();\n\n      if (!nvc_val) {\n        return;\n      }\n\n      params.nvc_val = nvc_val;\n      this.modifyService.getCaptcha(params).subscribe(function (res) {\n        _this3.noCaptchaService.resetNVC();\n\n        _this3.isCountTime = true;\n      }, this.errorHandler);\n    },\n    errorHandler: function errorHandler(err) {\n      var code = err.response.code;\n\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code);\n        return;\n      }\n\n      this.noCaptchaService.resetNVC();\n    },\n    resetPass: function resetPass() {\n      var _this4 = this;\n\n      this.form.validate(['pwd', 'repwd']).then(function (values) {\n        var para = {\n          pwd: values.pwd,\n          repwd: values.repwd\n        };\n\n        _this4.modifyService.resetPass(para).subscribe(function (res) {\n          _this4.isShowFooter = false;\n          _this4.isShowSuccess = true;\n        });\n      });\n    },\n    endCount: function endCount() {\n      this.isCountTime = false;\n    },\n    goLogin: function goLogin() {\n      location.href = location.origin + '/account/login';\n    }\n  }\n};",{"version":3,"sources":["modify.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <st-modal title=\"修改密码\" v-model=\"show\" width=\"476px\" :class=\"b()\">\n    <div v-if=\"!isShowFooter && !isShowSuccess\">\n      正在为账号名{{\n        info.account_name\n      }}修改密码，为确认是您本人操作，请完成身份验证\n      <span v-if=\"isBind\">\n        您当前暂未绑定手机号码，无法使用手机验证修改密码，\n        <a @click=\"goBind\">去绑定</a>\n      </span>\n      <div :class=\"b('item')\" class=\"mg-t16\">\n        密码验证方式\n        <st-button type=\"primary\" pill @click=\"checkPass\">去验证</st-button>\n      </div>\n      <div v-if=\"!isBind\" :class=\"b('item')\">\n        手机号码验证方式\n        <st-button type=\"primary\" pill @click=\"checkTel\">去验证</st-button>\n      </div>\n      <div :class=\"b('item')\">联系管理员修改密码</div>\n    </div>\n    <st-form :form=\"form\" labelWidth=\"88px\" labelGutter=\"16px\">\n      <div v-if=\"isShowPass\">\n        <st-form-item label=\"当前账户\" label-auto :class=\"b('text-item')\">\n          <label>{{ info.account_name }}</label>\n        </st-form-item>\n        <st-form-item label=\"当前密码\" required class=\"mg-b0\">\n          <a-input\n            type=\"password\"\n            v-decorator=\"decorators.password\"\n            placeholder=\"请输入当前密码\"\n            size=\"default\"\n          ></a-input>\n        </st-form-item>\n      </div>\n      <div v-if=\"isShowTel\">\n        <st-form-item label=\"当前手机号\" label-auto>\n          <label>{{ info.account_phone }}</label>\n        </st-form-item>\n        <st-form-item class=\"mg-b0\" label-fix label=\"滑块验证\">\n          <no-captcha id=\"get-phone-code\"></no-captcha>\n        </st-form-item>\n        <st-form-item label=\"短信验证码\" class=\"mg-b0\">\n          <input-phone-code\n            size=\"default\"\n            v-decorator=\"decorators.captcha\"\n            @click=\"onClickCaptcha\"\n            placeholder=\"请输入验证码\"\n            :isCountTime=\"isCountTime\"\n            @endCount=\"endCount\"\n          ></input-phone-code>\n        </st-form-item>\n      </div>\n\n      <div v-if=\"!isShowTel && !isShowPass && isShowFooter\">\n        <st-form-item label=\"新密码\" required>\n          <input-pwd-strength\n            max-length=\"15\"\n            v-decorator=\"decorators.pwd\"\n            placeholder=\"请输入新密码\"\n            :validStatus=\"validStatus\"\n            :strength=\"strength\"\n            size=\"default\"\n          ></input-pwd-strength>\n        </st-form-item>\n        <st-form-item label=\"确认新密码\" required>\n          <a-input\n            :maxLength=\"15\"\n            type=\"password\"\n            v-decorator=\"decorators.repwd\"\n            placeholder=\"请输入确认新密码\"\n            size=\"default\"\n          ></a-input>\n        </st-form-item>\n      </div>\n    </st-form>\n    <template slot=\"footer\">\n      <div v-show=\"isShowFooter\">\n        <st-button type=\"default\" @click=\"show = false\">取消</st-button>\n        <st-button type=\"primary\" v-if=\"isShowPass\" @click=\"goPassNext\">\n          确认\n        </st-button>\n        <st-button type=\"primary\" v-if=\"isShowTel\" @click=\"goTelNext\">\n          确认\n        </st-button>\n        <st-button\n          type=\"primary\"\n          v-if=\"!isShowTel && !isShowPass\"\n          :loading=\"loading.add\"\n          @click=\"resetPass\"\n        >\n          确认\n        </st-button>\n      </div>\n    </template>\n    <div :class=\"b('success')\" v-if=\"isShowSuccess\">\n      <img\n        src=\"/img/success.c90c2656.png\"\n        alt=\"success\"\n        :class=\"b('success-img')\"\n      />\n      <div :class=\"b('success-text')\">密码更新成功</div>\n      <st-button pill type=\"primary\" @click=\"goLogin\">立即登录</st-button>\n    </div>\n  </st-modal>\n</template>\n\n<script>\nimport { ModifyService } from './modify.service'\nimport { ruleOptions } from './modify.config'\nimport { PatternService } from '@/services/pattern.service'\nimport { NoCaptchaService } from '@/services/no-captcha.service'\nimport InputPhoneCode from '@/views/biz-components/account/input-phone-code/input-phone-code'\nimport { MessageService } from '@/services/message.service'\nimport { cloneDeep } from 'lodash-es'\nimport NoCaptcha from '@/views/biz-components/account/no-captcha'\nimport AccountBind from '@/views/biz-modals/account/bind'\nimport InputPwdStrength from '@/views/biz-components/account/input-pwd-strength/input-pwd-strength'\n\nexport default {\n  bem: {\n    b: 'account-modify'\n  },\n  serviceInject() {\n    return {\n      modifyService: ModifyService,\n      messageService: MessageService,\n      noCaptchaService: NoCaptchaService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      info: this.modifyService.info$,\n      loading: this.modifyService.loading$\n    }\n  },\n  components: {\n    NoCaptcha,\n    InputPhoneCode,\n    InputPwdStrength\n  },\n  modals: {\n    AccountBind\n  },\n  computed: {\n    isBind() {\n      return !this.info.account_phone_encrypt\n    }\n  },\n  mounted() {\n    this.modifyService.getUserInfo().subscribe()\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false,\n      isCountTime: false,\n      isShowFooter: false,\n      isShowTel: false,\n      isShowPass: false,\n      isShowSuccess: false,\n      validStatus: 0\n    }\n  },\n  methods: {\n    goBind() {\n      this.show = false\n      this.$modalRouter.push({\n        name: 'account-bind',\n        props: {},\n        on: {}\n      })\n    },\n    checkPass() {\n      this.isShowFooter = true\n      this.isShowPass = true\n    },\n    checkTel() {\n      this.isShowFooter = true\n      this.isShowTel = true\n    },\n    goTelNext() {\n      this.form.validate(['captcha']).then(values => {\n        this.modifyService\n          .checkCaptcha({ captcha: values.captcha })\n          .subscribe(res => {\n            this.isShowTel = false\n          })\n      })\n    },\n    goPassNext() {\n      this.form.validate(['password']).then(values => {\n        this.modifyService\n          .checkAccount({ pwd: values.password })\n          .subscribe(res => {\n            this.isShowPass = false\n          })\n      })\n    },\n    onClickCaptcha() {\n      const params = {\n        phone: this.info.account_phone,\n        country_code_id: this.info.country_code_id\n      }\n      this.getCaptcha(params)\n    },\n    getCaptcha(params) {\n      const nvc_val = this.noCaptchaService.generateNVCVal()\n      if (!nvc_val) {\n        return\n      }\n      params.nvc_val = nvc_val\n      this.modifyService.getCaptcha(params).subscribe(res => {\n        this.noCaptchaService.resetNVC()\n        this.isCountTime = true\n      }, this.errorHandler)\n    },\n    errorHandler(err) {\n      const code = err.response.code\n      if (this.noCaptchaService.testIsNeedCallCaptcha(code)) {\n        this.noCaptchaService.callCaptcha(code)\n        return\n      }\n      this.noCaptchaService.resetNVC()\n    },\n    resetPass() {\n      this.form.validate(['pwd', 'repwd']).then(values => {\n        let para = {\n          pwd: values.pwd,\n          repwd: values.repwd\n        }\n        this.modifyService.resetPass(para).subscribe(res => {\n          this.isShowFooter = false\n          this.isShowSuccess = true\n        })\n      })\n    },\n    endCount() {\n      this.isCountTime = false\n    },\n    goLogin() {\n      location.href = location.origin + '/account/login'\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/account"}]}