{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/add-lable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/add-lable.vue","mtime":1597396799940},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { AddLableService } from './add-lable.service'\nimport ShopNewLable from '@/views/biz-modals/shop/new-lable'\nexport default {\n  serviceInject() {\n    return {\n      Service: AddLableService\n    }\n  },\n  modals: {\n    ShopNewLable\n  },\n  components: {\n    VNodes: {\n      functional: true,\n      render: (h, ctx) => ctx.props.vnodes\n    }\n  },\n  name: 'newLable',\n  props: {\n    memberIds: {\n      type: Array,\n      default() {\n        return []\n      }\n    }\n  },\n  data() {\n    return {\n      show: false,\n      lableList: [],\n      selectLable: '',\n      flag: false\n    }\n  },\n  created() {\n    let self = this\n    this.getLableList()\n  },\n  methods: {\n    onModalTest() {\n      this.getLableList()\n    },\n    changeFunc() {\n      this.flag = false\n    },\n    blurFunc() {\n      this.flag = false\n    },\n    focusFunc() {\n      this.flag = true\n    },\n    getLableList() {\n      let self = this\n      self.Service.getMemberLableList().subscribe(state => {\n        self.lableList = state.list\n      })\n    },\n    save(e) {\n      let self = this\n      e.preventDefault()\n      let data = {\n        id: this.memberIds,\n        tag_id: self.selectLable\n      }\n      self.Service.setMemberLabelCreate(data).subscribe(state => {\n        self.show = false\n        self.$emit('success', true)\n      })\n    },\n    addLable() {\n      this.flag = false\n    }\n  },\n  watch: {}\n}\n",null]}