{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/package/form/form-item#/reserve-course.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/package/form/form-item#/reserve-course.vue","mtime":1600926555704},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { columns, dataSource } from './reserve-course.config'\nimport SelectCourse from '@/views/biz-modals/package/select-course'\nexport default {\n  name: 'CourseSelectFormItem',\n  inject: ['form'],\n  data() {\n    return {\n      visible: false,\n      cacheCoachId: -1,\n      dataSource: []\n    }\n  },\n  modals: {\n    SelectCourse\n  },\n  props: {\n    courseType: {\n      type: String,\n      default: 'team'\n    },\n    initDataSource: {\n      type: Array,\n      default: () => {}\n    }\n  },\n  watch: {\n    dataSource: {\n      handler(newValue) {\n        const course = newValue.map(item => {\n          const {\n            course_id,\n            course_name,\n            course_times,\n            course_unit_price,\n            reduce_times,\n            coach_level_ids\n          } = item\n\n          return this.courseType === 'team'\n            ? {\n                course_id,\n                course_name,\n                course_times,\n                course_unit_price,\n                reduce_times\n              }\n            : {\n                course_id,\n                course_name,\n                course_times,\n                course_unit_price,\n                reduce_times,\n                coach_level_ids\n              }\n        })\n        this.$emit('change', course)\n      },\n      deep: true\n    }\n  },\n  computed: {\n    pagination() {\n      return {\n        total: this.courseList.length,\n        pageSize: 20,\n        pageSizeOptions: ['10', '20', '30', '40'],\n        showSizeChanger: true,\n        showTotal: () => `共${this.courseList.length}条`\n      }\n    },\n    isShop$() {\n      return this.form.isShop$\n    },\n    singleShops() {\n      return [this.$route.query.app_shop_id]\n    },\n    packageAttr() {\n      return this.form.packageAttr\n    },\n    allCoachLevelIds() {\n      return this.form.coachList.map(ele => ele.value)\n    },\n    formVueData() {\n      return this.form.form\n    },\n    useRange() {\n      return this.isShop$ ? 1 : this.form.useRange\n    },\n    columns,\n    courseList() {\n      return [...this.dataSource]\n    }\n  },\n  methods: {\n    // 应用到本页\n    onBatchCoachLevel(ids) {\n      this.dataSource = this.dataSource.map(item => {\n        this.$set(item, 'coach_level_ids', ids)\n        this.$set(item, 'coachLevelName', this.getCoachLevelName(ids))\n        return item\n      })\n    },\n    // 返回教练等级名用于列表展示\n    getCoachLevelName(ids) {\n      if (ids.length === this.form.coachList.length) return '全部等级'\n      return this.form.coachList\n        .filter(item => ids.includes(item.value))\n        .map(item => item.label)\n        .toString()\n    },\n    onChangeCoachLevel(record, $event) {\n      // 当教练只剩下一个的时候，缓存教练，变化到零的时候再次添加进去\n      if (record.coach_level_ids.length === 1) {\n        this.cacheCoachId = $event\n      }\n      // 为零就补进去\n      if (record.coach_level_ids.length === 0) {\n        this.$set(record, 'coach_level_ids', this.cacheCoachId)\n      }\n      this.$set(record, 'coachLevelName', this.getCoachLevelName($event))\n    },\n    onBatchReserve(value) {\n      this.dataSource = this.dataSource.map(item => {\n        this.$set(item, 'reduce_times', value)\n        return item\n      })\n    },\n    onDelete(record) {\n      this.dataSource = this.dataSource.filter(\n        item => !(item.course_id === record.course_id)\n      )\n    },\n    openModal() {\n      const { dataSource, courseType, useRange, formVueData } = this\n      const title =\n        courseType === 'team' ? '选择支持预约的团体课' : '选择支持预约的私教课'\n      const useShopList =\n        useRange === 1\n          ? this.singleShops\n          : formVueData.getFieldValue('use_shop_list')\n      this.$modalRouter.push({\n        name: 'select-course',\n        props: {\n          initDataSource: dataSource,\n          title,\n          useRange,\n          courseType: this.courseType,\n          useShopList\n        },\n        on: {\n          done: courseList => {\n            this.dataSource =\n              this.courseType === 'team'\n                ? courseList\n                : courseList.map(item => {\n                    this.$set(item, 'coach_level_ids', this.allCoachLevelIds)\n                    return item\n                  })\n            this.dataSource = this.dataSource.map(item => {\n              !item.reduce_times && this.$set(item, 'reduce_times', 1)\n              return item\n            })\n          }\n        }\n      })\n    },\n    handleAdd() {\n      this.openModal()\n    }\n  },\n  mounted() {\n    this.dataSource = this.initDataSource\n  }\n}\n",{"version":3,"sources":["reserve-course.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"reserve-course.vue","sourceRoot":"src/views/biz-components/package/form/form-item#","sourcesContent":["<template>\n  <div\n    class=\"biz-package-form__course-select\"\n    :class=\"{ 'package-fix__course-list': packageAttr === 3 }\"\n  >\n    <st-form-table>\n      <thead>\n        <tr>\n          <th :width=\"item.width\" :key=\"item.dataIndex\" v-for=\"item in columns\">\n            {{ item.title }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td\n            :class=\"\n              courseList.length === 0\n                ? 'biz-package-form__has-not-data'\n                : 'has-data'\n            \"\n            :colspan=\"columns.length\"\n            class=\"st-form-table__add\"\n          >\n            <st-button\n              type=\"dashed\"\n              icon=\"add\"\n              @click=\"handleAdd\"\n              class=\"biz-package-form__course-select-button\"\n            >\n              {{\n                courseType === 'team'\n                  ? '选择支持预约的团体课'\n                  : '选择支持预约的私教课'\n              }}\n            </st-button>\n          </td>\n        </tr>\n\n        <tr style=\"background-color: #fff;\">\n          <td\n            v-if=\"courseList.length\"\n            style=\"padding: 0;\"\n            :colspan=\"columns.length\"\n          >\n            <!-- 为什么不使用st-table 因为使用它翻到第二页输入表单会跳到第一页 -->\n            <a-table\n              pageMode=\"client\"\n              :class=\"{\n                'biz-package-form__has-data': courseList.length\n              }\"\n              :pagination=\"pagination\"\n              class=\"biz-package-form__course-select-table\"\n              rowKey=\"course_id\"\n              :columns=\"columns\"\n              :dataSource=\"courseList\"\n            >\n              <!-- 教练等级 私教-->\n              <template slot=\"coach_level_ids\" slot-scope=\"text, record\">\n                <a-popover\n                  v-model=\"record.visible\"\n                  placement=\"bottom\"\n                  trigger=\"click\"\n                >\n                  <a-checkbox-group\n                    slot=\"content\"\n                    @change=\"onChangeCoachLevel(record, $event)\"\n                    v-model=\"record.coach_level_ids\"\n                  >\n                    <ul>\n                      <li\n                        class=\"mg-b8\"\n                        v-for=\"item in form.coachList\"\n                        :key=\"item.value\"\n                      >\n                        <a-checkbox :value=\"item.value\">\n                          {{ item.label }}\n                        </a-checkbox>\n                      </li>\n                    </ul>\n                    <div>\n                      <a @click=\"onBatchCoachLevel(record.coach_level_ids)\">\n                        复制到全部\n                      </a>\n                    </div>\n                  </a-checkbox-group>\n                  <a href=\"\">\n                    {{ record.coachLevelName || '全部等级' }}\n                    <st-icon class=\"icon-12\" type=\"down-small\" />\n                  </a>\n                </a-popover>\n              </template>\n              <!-- 预约课程扣除次数 范围内限次-->\n              <template slot=\"reduce_times\" slot-scope=\"text, record\">\n                <st-input-number\n                  v-model=\"record.reduce_times\"\n                  style=\"width: 114px\"\n                >\n                  <template slot=\"addonAfter\">次</template>\n                </st-input-number>\n                <a class=\"mg-l4\" @click=\"onBatchReserve(record.reduce_times)\">\n                  复制到全部\n                </a>\n              </template>\n              <!-- 参考单价/元  固定课程-->\n              <template slot=\"course_unit_price\" slot-scope=\"text, record\">\n                <st-input-number v-model=\"record.course_unit_price\">\n                  <template slot=\"addonAfter\" style=\"width: 114px\">元</template>\n                </st-input-number>\n              </template>\n              <!-- 课程次数 固定课程 -->\n              <template slot=\"course_times\" slot-scope=\"text, record\">\n                <st-input-number\n                  v-model=\"record.course_times\"\n                  style=\"width: 114px\"\n                >\n                  <template slot=\"addonAfter\">次</template>\n                </st-input-number>\n              </template>\n              <st-table-actions slot=\"action\" slot-scope=\"text, record\">\n                <a @click=\"onDelete(record)\">\n                  删除\n                </a>\n              </st-table-actions>\n            </a-table>\n          </td>\n        </tr>\n      </tbody>\n    </st-form-table>\n  </div>\n</template>\n\n<script>\nimport { columns, dataSource } from './reserve-course.config'\nimport SelectCourse from '@/views/biz-modals/package/select-course'\nexport default {\n  name: 'CourseSelectFormItem',\n  inject: ['form'],\n  data() {\n    return {\n      visible: false,\n      cacheCoachId: -1,\n      dataSource: []\n    }\n  },\n  modals: {\n    SelectCourse\n  },\n  props: {\n    courseType: {\n      type: String,\n      default: 'team'\n    },\n    initDataSource: {\n      type: Array,\n      default: () => {}\n    }\n  },\n  watch: {\n    dataSource: {\n      handler(newValue) {\n        const course = newValue.map(item => {\n          const {\n            course_id,\n            course_name,\n            course_times,\n            course_unit_price,\n            reduce_times,\n            coach_level_ids\n          } = item\n\n          return this.courseType === 'team'\n            ? {\n                course_id,\n                course_name,\n                course_times,\n                course_unit_price,\n                reduce_times\n              }\n            : {\n                course_id,\n                course_name,\n                course_times,\n                course_unit_price,\n                reduce_times,\n                coach_level_ids\n              }\n        })\n        this.$emit('change', course)\n      },\n      deep: true\n    }\n  },\n  computed: {\n    pagination() {\n      return {\n        total: this.courseList.length,\n        pageSize: 20,\n        pageSizeOptions: ['10', '20', '30', '40'],\n        showSizeChanger: true,\n        showTotal: () => `共${this.courseList.length}条`\n      }\n    },\n    isShop$() {\n      return this.form.isShop$\n    },\n    singleShops() {\n      return [this.$route.query.app_shop_id]\n    },\n    packageAttr() {\n      return this.form.packageAttr\n    },\n    allCoachLevelIds() {\n      return this.form.coachList.map(ele => ele.value)\n    },\n    formVueData() {\n      return this.form.form\n    },\n    useRange() {\n      return this.isShop$ ? 1 : this.form.useRange\n    },\n    columns,\n    courseList() {\n      return [...this.dataSource]\n    }\n  },\n  methods: {\n    // 应用到本页\n    onBatchCoachLevel(ids) {\n      this.dataSource = this.dataSource.map(item => {\n        this.$set(item, 'coach_level_ids', ids)\n        this.$set(item, 'coachLevelName', this.getCoachLevelName(ids))\n        return item\n      })\n    },\n    // 返回教练等级名用于列表展示\n    getCoachLevelName(ids) {\n      if (ids.length === this.form.coachList.length) return '全部等级'\n      return this.form.coachList\n        .filter(item => ids.includes(item.value))\n        .map(item => item.label)\n        .toString()\n    },\n    onChangeCoachLevel(record, $event) {\n      // 当教练只剩下一个的时候，缓存教练，变化到零的时候再次添加进去\n      if (record.coach_level_ids.length === 1) {\n        this.cacheCoachId = $event\n      }\n      // 为零就补进去\n      if (record.coach_level_ids.length === 0) {\n        this.$set(record, 'coach_level_ids', this.cacheCoachId)\n      }\n      this.$set(record, 'coachLevelName', this.getCoachLevelName($event))\n    },\n    onBatchReserve(value) {\n      this.dataSource = this.dataSource.map(item => {\n        this.$set(item, 'reduce_times', value)\n        return item\n      })\n    },\n    onDelete(record) {\n      this.dataSource = this.dataSource.filter(\n        item => !(item.course_id === record.course_id)\n      )\n    },\n    openModal() {\n      const { dataSource, courseType, useRange, formVueData } = this\n      const title =\n        courseType === 'team' ? '选择支持预约的团体课' : '选择支持预约的私教课'\n      const useShopList =\n        useRange === 1\n          ? this.singleShops\n          : formVueData.getFieldValue('use_shop_list')\n      this.$modalRouter.push({\n        name: 'select-course',\n        props: {\n          initDataSource: dataSource,\n          title,\n          useRange,\n          courseType: this.courseType,\n          useShopList\n        },\n        on: {\n          done: courseList => {\n            this.dataSource =\n              this.courseType === 'team'\n                ? courseList\n                : courseList.map(item => {\n                    this.$set(item, 'coach_level_ids', this.allCoachLevelIds)\n                    return item\n                  })\n            this.dataSource = this.dataSource.map(item => {\n              !item.reduce_times && this.$set(item, 'reduce_times', 1)\n              return item\n            })\n          }\n        }\n      })\n    },\n    handleAdd() {\n      this.openModal()\n    }\n  },\n  mounted() {\n    this.dataSource = this.initDataSource\n  }\n}\n</script>\n"]}]}