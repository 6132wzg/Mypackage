{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/staff/edit#/edit-detailed-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/staff/edit#/edit-detailed-info.vue","mtime":1597895242243},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { RegionService } from '@/services/region.service'\nimport { EditService } from '../edit.service'\nimport { MessageService } from '@/services/message.service'\nimport { get } from 'lodash-es'\nimport { PatternService } from '@/services/pattern.service'\nimport { ruleOptions } from '../staff-form.config.ts'\nimport { UserService } from '@/services/user.service'\nexport default {\n  name: 'EditDetailedInfo',\n  serviceInject() {\n    return {\n      pattern: PatternService,\n      region: RegionService,\n      service: EditService,\n      message: MessageService,\n      userService: UserService\n    }\n  },\n  rxState() {\n    return {\n      children_status: this.userService.getOptions$('staff.children_status'),\n      marry_status: this.userService.getOptions$('staff.marry_status'),\n      educations: this.userService.getOptions$('staff.education'),\n      loading: this.service.loading$\n    }\n  },\n  props: {\n    isPrivateCoach: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Object\n    },\n    isShowCoach: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      regions: [],\n      fieldNames: { label: 'name', value: 'id', children: 'children' }\n    }\n  },\n  mounted() {\n    this.setData(this.data)\n    this.region.regionApi.getRegions().subscribe(v => {\n      this.regions = v\n    })\n  },\n  methods: {\n    onClickBack() {\n      this.$emit('back', 1)\n    },\n    setData(obj) {\n      this.form.setFieldsValue({\n        graduated_school: obj.graduated_school,\n        graduation_time: obj.graduation_time\n          ? moment(obj.graduation_time)\n          : undefined,\n        education: obj.education || undefined,\n        profession: obj.profession,\n        birthday: obj.birthday ? moment(obj.birthday) : undefined,\n        native_place: obj.native_place,\n        marry_status: obj.marry_status || undefined,\n        children_status: obj.children_status || undefined,\n        address: obj.address,\n        description: obj.description,\n        provinces: [obj.province_id, obj.city_id, obj.district_id],\n        is_show: obj.is_show\n      })\n    },\n    goNext(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        this.submit(values, 1)\n      })\n    },\n    submit(data, saveOrgoNext) {\n      data.province_id = get(data, 'provinces.0')\n      data.city_id = get(data, 'provinces.1')\n      data.district_id = get(data, 'provinces.2')\n      data.birthday && (data.birthday = data.birthday.format('YYYY-MM-DD'))\n      data.birthday &&\n        (data.graduation_time = data.graduation_time.format('YYYY-MM-DD'))\n      if (!this.isShowCoach) delete data.is_show\n      this.service\n        .updateDetailedInfo(this.data.staff_id, data)\n        .subscribe(() => {\n          if (!this.isPrivateCoach) {\n            this.$router.push({ name: 'shop-staff-list' })\n          } else {\n            this.$emit('gonext')\n            this.$emit('updateStaffInfo')\n          }\n        })\n    }\n  }\n}\n",null]}