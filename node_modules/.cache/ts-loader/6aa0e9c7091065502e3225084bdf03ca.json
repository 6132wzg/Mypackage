{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/stat/sale/staff.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/stat/sale/staff.service.ts","mtime":1600926556314},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport _toConsumableArray from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _a, _b, _c, _d, _e, _f;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state/src';\nimport { tap } from 'rxjs/operators';\nimport { SalesApi, SaleDataParams } from '@/api/v1/stat/brand/sales.ts';\nimport { CommonApi } from '@/api/v1/stat/common/common.ts';\nimport { AuthService } from '@/services/auth.service';\nimport { UserService } from '@/services/user.service';\nimport { anyAll } from '@/operators';\n\nvar StaffService = /*#__PURE__*/function () {\n  function StaffService(salesApi, userService, authService, commonApi) {\n    _classCallCheck(this, StaffService);\n\n    this.salesApi = salesApi;\n    this.userService = userService;\n    this.authService = authService;\n    this.commonApi = commonApi;\n    this.loading$ = new State({});\n    this.list$ = new State([]);\n    this.childListMap$ = new State({});\n    this.expendKeys$ = new State([]);\n    this.page$ = new State({});\n    this.total$ = new State({});\n    this.departmentList$ = new State([]);\n    this.staffList$ = new State([]);\n    this.updateTime$ = new State(Date.now());\n    this.contractType$ = this.userService.getOptions$('report.report_contract_type');\n    this.auth$ = this.authService.authMap$({\n      export: 'brand:stat:sales:summary|export_sales'\n    });\n  }\n\n  _createClass(StaffService, [{\n    key: \"SET_CHILDLISTMAP\",\n    value: function SET_CHILDLISTMAP(childListMap) {\n      console.log('子列表map', childListMap);\n      this.childListMap$.commit(function () {\n        return childListMap;\n      });\n    }\n  }, {\n    key: \"RESET_CHILDITEM\",\n    value: function RESET_CHILDITEM(staff_id) {\n      var childListMap = this.childListMap$.getValue();\n      childListMap[staff_id].list = [];\n      childListMap[staff_id].page = {\n        current_page: 1\n      };\n      this.childListMap$.commit(function () {\n        return childListMap;\n      });\n    }\n  }, {\n    key: \"ADD_EXPENDKEY\",\n    value: function ADD_EXPENDKEY(expendKey) {\n      var keyList = this.expendKeys$.getValue();\n      keyList.indexOf(expendKey) < 0 && this.SET_EXPENDKEYS([].concat(_toConsumableArray(keyList), [expendKey]));\n    }\n  }, {\n    key: \"DEL_EXPENDKEY\",\n    value: function DEL_EXPENDKEY(expendKey) {\n      var keyList = this.expendKeys$.getValue();\n      keyList.splice(keyList.indexOf(expendKey), 1);\n      this.SET_EXPENDKEYS(_toConsumableArray(keyList));\n    }\n  }, {\n    key: \"SET_EXPENDKEYS\",\n    value: function SET_EXPENDKEYS(expendKeys) {\n      var keyList = this.expendKeys$.getValue();\n      keyList = new Set([].concat(_toConsumableArray(keyList), _toConsumableArray(expendKeys)));\n      console.log('展开项', keyList);\n      this.expendKeys$.commit(function () {\n        return _toConsumableArray(keyList);\n      });\n    }\n  }, {\n    key: \"SET_LIST\",\n    value: function SET_LIST(list) {\n      var _this = this;\n\n      var childListMap = {};\n      var expendKeys = this.expendKeys$.getValue();\n      list = list.map(function (item, index) {\n        var staff_id = item.staff_id.toString();\n        childListMap[staff_id] = item.children; // 除第一条外，其他item.children.list全部默认为空（后端查询问题，展开子表时才会请求子表数据，关闭后会重置）\n\n        if (index < 1) expendKeys = [].concat(_toConsumableArray(expendKeys), [staff_id]); // 如果children.list无数据，则清除对应的展开记录 (第一条数据除外)\n\n        if (index >= 1 && (!item.children.list || !item.children.list.length)) {\n          _this.DEL_EXPENDKEY(staff_id);\n\n          expendKeys.indexOf(staff_id) >= 0 && expendKeys.splice(expendKeys.indexOf(staff_id), 1);\n        }\n\n        return _objectSpread({}, item, {\n          staff_id: staff_id\n        });\n      });\n      this.SET_CHILDLISTMAP(childListMap);\n      this.SET_EXPENDKEYS(expendKeys);\n      this.list$.commit(function () {\n        return list;\n      });\n    } // 列表\n\n  }, {\n    key: \"getList\",\n    value: function getList(query) {\n      var _this2 = this;\n\n      return this.salesApi.getData(query).pipe(tap(function (res) {\n        _this2.SET_LIST(res.list);\n\n        _this2.page$.commit(function () {\n          return res.page;\n        });\n\n        res.last_update_time && _this2.updateTime$.commit(function () {\n          return res.last_update_time;\n        });\n      }));\n    }\n  }, {\n    key: \"getDataTotal\",\n    value: function getDataTotal(query) {\n      var _this3 = this;\n\n      return this.salesApi.getDataTotal(query).pipe(tap(function (res) {\n        _this3.total$.commit(function () {\n          return res.info;\n        });\n\n        res.last_update_time && _this3.updateTime$.commit(function () {\n          return res.last_update_time;\n        });\n      }));\n    }\n  }, {\n    key: \"getDataRefresh\",\n    value: function getDataRefresh() {\n      var _this4 = this;\n\n      return this.commonApi.getSalesRefresh().pipe(tap(function (res) {\n        res.last_update_time && _this4.updateTime$.commit(function () {\n          return res.last_update_time;\n        });\n      }));\n    }\n  }, {\n    key: \"getDetailList\",\n    value: function getDetailList(query) {\n      var _this5 = this;\n\n      return this.salesApi.getDetailData(query).pipe(tap(function (res) {\n        var childListMap = _this5.childListMap$.getValue();\n\n        var staff_id = query.staff_id;\n        childListMap[staff_id] = res;\n\n        _this5.SET_CHILDLISTMAP(childListMap);\n      }));\n    }\n  }, {\n    key: \"getDepartmentList\",\n    value: function getDepartmentList() {\n      var _this6 = this;\n\n      return this.commonApi.getDepartmentList().pipe(tap(function (res) {\n        var departmentList = [{\n          label: '全部部门',\n          value: -1\n        }];\n\n        var hander = function hander(list) {\n          return list.map(function (item) {\n            return {\n              label: item.name,\n              value: item.id,\n              children: item.children && item.children.length ? hander(item.children) : []\n            };\n          });\n        };\n\n        departmentList = [].concat(_toConsumableArray(departmentList), _toConsumableArray(hander(res.department)));\n\n        _this6.departmentList$.commit(function () {\n          return departmentList;\n        });\n      }));\n    }\n  }, {\n    key: \"getStaffList\",\n    value: function getStaffList(query) {\n      var _this7 = this;\n\n      return this.commonApi.getStaffList(query).pipe(tap(function (res) {\n        var staffList = [];\n        res.list.map(function (item) {\n          staffList.push({\n            label: item.nickname,\n            value: item.id\n          });\n        });\n\n        _this7.staffList$.commit(function () {\n          return staffList;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return anyAll(this.getList(to.meta.query), this.getDataTotal(to.meta.query));\n    }\n  }]);\n\n  return StaffService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof SaleDataParams !== \"undefined\" && SaleDataParams) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], StaffService.prototype, \"getList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_b = typeof SaleDataParams !== \"undefined\" && SaleDataParams) === \"function\" ? _b : Object]), __metadata(\"design:returntype\", void 0)], StaffService.prototype, \"getDetailList\", null);\n\nStaffService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_c = typeof SalesApi !== \"undefined\" && SalesApi) === \"function\" ? _c : Object, typeof (_d = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _d : Object, typeof (_e = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _e : Object, typeof (_f = typeof CommonApi !== \"undefined\" && CommonApi) === \"function\" ? _f : Object])], StaffService);\nexport { StaffService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/stat/sale/staff.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state/src'\nimport { tap } from 'rxjs/operators'\nimport { SalesApi, SaleDataParams } from '@/api/v1/stat/brand/sales.ts'\nimport { CommonApi, AllStaffListParams } from '@/api/v1/stat/common/common.ts'\n\nimport { AuthService } from '@/services/auth.service'\nimport { UserService } from '@/services/user.service'\nimport { anyAll } from '@/operators'\n@Injectable()\nexport class StaffService {\n  loading$ = new State({})\n  list$ = new State([])\n  childListMap$ = new State({})\n  expendKeys$ = new State([])\n  page$ = new State({})\n  total$ = new State({})\n  departmentList$ = new State([])\n  staffList$ = new State([])\n  updateTime$ = new State(Date.now())\n\n  contractType$ = this.userService.getOptions$('report.report_contract_type')\n  auth$ = this.authService.authMap$({\n    export: 'brand:stat:sales:summary|export_sales'\n  })\n  constructor(\n    private salesApi: SalesApi,\n    private userService: UserService,\n    private authService: AuthService,\n    private commonApi: CommonApi\n  ) {}\n  SET_CHILDLISTMAP(childListMap) {\n    console.log('子列表map', childListMap)\n    this.childListMap$.commit(() => childListMap)\n  }\n  RESET_CHILDITEM(staff_id) {\n    let childListMap: any = this.childListMap$.getValue()\n    childListMap[staff_id].list = []\n    childListMap[staff_id].page = {\n      current_page: 1\n    }\n    this.childListMap$.commit(() => childListMap)\n  }\n  ADD_EXPENDKEY(expendKey: string) {\n    let keyList: any = this.expendKeys$.getValue()\n    keyList.indexOf(expendKey) < 0 &&\n      this.SET_EXPENDKEYS([...keyList, expendKey])\n  }\n  DEL_EXPENDKEY(expendKey: string) {\n    let keyList: any = this.expendKeys$.getValue()\n    keyList.splice(keyList.indexOf(expendKey), 1)\n    this.SET_EXPENDKEYS([...keyList])\n  }\n  SET_EXPENDKEYS(expendKeys: any) {\n    let keyList: any = this.expendKeys$.getValue()\n    keyList = new Set([...keyList, ...expendKeys])\n    console.log('展开项', keyList)\n    this.expendKeys$.commit(() => [...keyList])\n  }\n  SET_LIST(list: any) {\n    const childListMap = {}\n    let expendKeys: any = this.expendKeys$.getValue()\n    list = list.map((item, index) => {\n      const staff_id = item.staff_id.toString()\n      childListMap[staff_id] = item.children\n      // 除第一条外，其他item.children.list全部默认为空（后端查询问题，展开子表时才会请求子表数据，关闭后会重置）\n      if (index < 1) expendKeys = [...expendKeys, staff_id]\n      // 如果children.list无数据，则清除对应的展开记录 (第一条数据除外)\n      if (index >= 1 && (!item.children.list || !item.children.list.length)) {\n        this.DEL_EXPENDKEY(staff_id)\n        expendKeys.indexOf(staff_id) >= 0 &&\n          expendKeys.splice(expendKeys.indexOf(staff_id), 1)\n      }\n      return {\n        ...item,\n        staff_id\n      }\n    })\n    this.SET_CHILDLISTMAP(childListMap)\n    this.SET_EXPENDKEYS(expendKeys)\n    this.list$.commit(() => list)\n  }\n  // 列表\n  @Effect()\n  getList(query: SaleDataParams) {\n    return this.salesApi.getData(query).pipe(\n      tap(res => {\n        this.SET_LIST(res.list)\n        this.page$.commit(() => res.page)\n        res.last_update_time &&\n          this.updateTime$.commit(() => res.last_update_time)\n      })\n    )\n  }\n  getDataTotal(query: SaleDataParams) {\n    return this.salesApi.getDataTotal(query).pipe(\n      tap(res => {\n        this.total$.commit(() => res.info)\n        res.last_update_time &&\n          this.updateTime$.commit(() => res.last_update_time)\n      })\n    )\n  }\n  getDataRefresh() {\n    return this.commonApi.getSalesRefresh().pipe(\n      tap(res => {\n        res.last_update_time &&\n          this.updateTime$.commit(() => res.last_update_time)\n      })\n    )\n  }\n  @Effect()\n  getDetailList(query: SaleDataParams) {\n    return this.salesApi.getDetailData(query).pipe(\n      tap(res => {\n        const childListMap: any = this.childListMap$.getValue()\n        const staff_id: any = query.staff_id\n        childListMap[staff_id] = res\n        this.SET_CHILDLISTMAP(childListMap)\n      })\n    )\n  }\n  getDepartmentList() {\n    return this.commonApi.getDepartmentList().pipe(\n      tap(res => {\n        let departmentList: any = [{ label: '全部部门', value: -1 }]\n        const hander = list => {\n          return list.map(item => ({\n            label: item.name,\n            value: item.id,\n            children:\n              item.children && item.children.length ? hander(item.children) : []\n          }))\n        }\n        departmentList = [...departmentList, ...hander(res.department)]\n        this.departmentList$.commit(() => departmentList)\n      })\n    )\n  }\n\n  getStaffList(query: AllStaffListParams) {\n    return this.commonApi.getStaffList(query).pipe(\n      tap(res => {\n        const staffList: any = []\n        res.list.map(item => {\n          staffList.push({\n            label: item.nickname,\n            value: item.id\n          })\n        })\n        this.staffList$.commit(() => staffList)\n      })\n    )\n  }\n\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return anyAll(this.getList(to.meta.query), this.getDataTotal(to.meta.query))\n  }\n}\n"],"sourceRoot":""}]}