{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/mina/components#/pem-upload.component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/setting/mina/components#/pem-upload.component.vue","mtime":1591147717355},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { OssService } from '@/services/oss.service'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  bem: {\n    pem: 'brand-setting-mina-pem-upload'\n  },\n  data() {\n    return {\n      loading: false,\n      imageUrl: '',\n      key: '',\n      name: ''\n    }\n  },\n  serviceInject() {\n    return {\n      oss: OssService,\n      messageService: MessageService\n    }\n  },\n  methods: {\n    beforeUpload(file) {\n      console.log(file)\n      const isLt5M = file.size / 1024 / 1024 < 5\n      if (!/\\.pem$/.test(file.name) || !isLt5M) {\n        this.messageService.error({\n          content: '仅支持.pem格式文件，大小不超过5M'\n        })\n        return false\n      }\n      return true\n    },\n    upload(data) {\n      this.loading = true\n      this.imageUrl = ''\n      this.oss\n        .put({\n          file: data.file,\n          business: 'file',\n          isPrivate: true\n        })\n        .subscribe({\n          next: val => {\n            this.key = val.fileKey\n            this.name = data.file.name\n            this.$emit('success', val.fileKey)\n            this.messageService.success({ content: '上传成功' })\n            this.loading = false\n          },\n          error: val => {\n            this.messageService.error({ content: `Error ${val.message}` })\n            this.loading = false\n          }\n        })\n    }\n  }\n}\n",null]}