{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/finance/flow.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/finance/flow.service.ts","mtime":1591147717213},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state';\nimport { OrderApi, FlowParams } from '@/api/v1/finance/order';\nimport { TransactionApi } from '@/api/v1/sold/transaction';\nimport { FlowApi } from '@/api/v1/finance/flow';\nimport { tap } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nvar FlowService = /*#__PURE__*/function () {\n  function FlowService(orderApi, transactionApi, flowApi) {\n    _classCallCheck(this, FlowService);\n\n    this.orderApi = orderApi;\n    this.transactionApi = transactionApi;\n    this.flowApi = flowApi;\n    this.info$ = new State({});\n    this.loading$ = new State({});\n    this.paymentMethodList$ = new State({});\n  }\n\n  _createClass(FlowService, [{\n    key: \"getDetail\",\n    value: function getDetail(id) {\n      var _this = this;\n\n      return this.orderApi.getFlowDetail(id).pipe(tap(function (res) {\n        _this.info$.commit(function () {\n          return res.info;\n        });\n      }));\n    } // @Effect()\n    // getPaymentMethodList(order_id: number) {\n    //   return this.transactionApi.getPaymentMethodList(order_id, true).pipe(\n    //     tap((res: any) => {\n    //       this.paymentMethodList$.commit(() => res.list)\n    //     })\n    //   )\n    // }\n\n  }, {\n    key: \"getPaymentMethodList\",\n    value: function getPaymentMethodList() {\n      var _this2 = this;\n\n      return this.flowApi.getPaymentMethodList().pipe(tap(function (res) {\n        _this2.paymentMethodList$.commit(function () {\n          return res.list;\n        });\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init(id) {\n      return forkJoin(this.getDetail(id), this.getPaymentMethodList());\n    }\n  }, {\n    key: \"orderFlow\",\n    value: function orderFlow(params) {\n      return this.orderApi.orderFlow(params);\n    }\n  }]);\n\n  return FlowService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FlowService.prototype, \"getPaymentMethodList\", null);\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof FlowParams !== \"undefined\" && FlowParams) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], FlowService.prototype, \"orderFlow\", null);\n\nFlowService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof OrderApi !== \"undefined\" && OrderApi) === \"function\" ? _b : Object, typeof (_c = typeof TransactionApi !== \"undefined\" && TransactionApi) === \"function\" ? _c : Object, typeof (_d = typeof FlowApi !== \"undefined\" && FlowApi) === \"function\" ? _d : Object])], FlowService);\nexport { FlowService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/finance/flow.service.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,UAA9B;AACA,SAAS,QAAT,EAAmB,UAAnB,QAAqC,wBAArC;AACA,SAAS,cAAT,QAA+B,2BAA/B;AACA,SAAS,OAAT,QAAwB,uBAAxB;AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,QAAT,QAAyB,MAAzB;;AAGA,IAAa,WAAb;AAIE,uBACU,QADV,EAEU,cAFV,EAGU,OAHV,EAG0B;AAAA;;AAFhB,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,cAAA,GAAA,cAAA;AACA,SAAA,OAAA,GAAA,OAAA;AANV,SAAA,KAAA,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAR;AACA,SAAA,QAAA,GAAW,IAAI,KAAJ,CAAU,EAAV,CAAX;AACA,SAAA,kBAAA,GAAqB,IAAI,KAAJ,CAAU,EAAV,CAArB;AAKI;;AARN;AAAA;AAAA,8BASY,EATZ,EASsB;AAAA;;AAClB,aAAO,KAAK,QAAL,CAAc,aAAd,CAA4B,EAA5B,EAAgC,IAAhC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAAlB;AACD,OAFE,CADE,CAAP;AAKD,KAfH,CAgBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvBF;AAAA;AAAA,2CAyBsB;AAAA;;AAClB,aAAO,KAAK,OAAL,CAAa,oBAAb,GAAoC,IAApC,CACL,GAAG,CAAC,UAAC,GAAD,EAAa;AACf,QAAA,MAAI,CAAC,kBAAL,CAAwB,MAAxB,CAA+B;AAAA,iBAAM,GAAG,CAAC,IAAV;AAAA,SAA/B;AACD,OAFE,CADE,CAAP;AAKD;AA/BH;AAAA;AAAA,yBAgCO,EAhCP,EAgCiB;AACb,aAAO,QAAQ,CAAC,KAAK,SAAL,CAAe,EAAf,CAAD,EAAqB,KAAK,oBAAL,EAArB,CAAf;AACD;AAlCH;AAAA;AAAA,8BAoCY,MApCZ,EAoC8B;AAC1B,aAAO,KAAK,QAAL,CAAc,SAAd,CAAwB,MAAxB,CAAP;AACD;AAtCH;;AAAA;AAAA,GAAA;;AAyBE,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,qBAAA,E,sBAAA,EAMC,IAND,CAAA;;AAWA,UAAA,CAAA,CADC,MAAM,EACP,E,mCAAA,E,qDAAkB,U,KAAU,W,IAAV,U,MAAU,U,GAAA,E,GAAA,M,EAA5B,E,uCAAA,CAAA,E,qBAAA,E,WAAA,EAEC,IAFD,CAAA;;AApCW,WAAW,GAAA,UAAA,CAAA,CADvB,UAAU,EACa,E,qDAKF,Q,KAAQ,W,IAAR,Q,MAAQ,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACF,cADE,KACY,WADZ,IACF,cADE,MACY,UADZ,GACY,EADZ,GACY,M,EAAA,QAAA,EAAA,GAAA,OACrB,OADqB,KACd,WADc,IACrB,OADqB,MACd,UADc,GACd,EADc,GACd,M,EAPJ,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { Injectable } from 'vue-service-app'\nimport { State, Effect } from 'rx-state'\nimport { OrderApi, FlowParams } from '@/api/v1/finance/order'\nimport { TransactionApi } from '@/api/v1/sold/transaction'\nimport { FlowApi } from '@/api/v1/finance/flow'\nimport { tap } from 'rxjs/operators'\nimport { forkJoin } from 'rxjs'\n\n@Injectable()\nexport class FlowService {\n  info$ = new State({})\n  loading$ = new State({})\n  paymentMethodList$ = new State({})\n  constructor(\n    private orderApi: OrderApi,\n    private transactionApi: TransactionApi,\n    private flowApi: FlowApi\n  ) {}\n  getDetail(id: string) {\n    return this.orderApi.getFlowDetail(id).pipe(\n      tap((res: any) => {\n        this.info$.commit(() => res.info)\n      })\n    )\n  }\n  // @Effect()\n  // getPaymentMethodList(order_id: number) {\n  //   return this.transactionApi.getPaymentMethodList(order_id, true).pipe(\n  //     tap((res: any) => {\n  //       this.paymentMethodList$.commit(() => res.list)\n  //     })\n  //   )\n  // }\n  @Effect()\n  getPaymentMethodList() {\n    return this.flowApi.getPaymentMethodList().pipe(\n      tap((res: any) => {\n        this.paymentMethodList$.commit(() => res.list)\n      })\n    )\n  }\n  init(id: string) {\n    return forkJoin(this.getDetail(id), this.getPaymentMethodList())\n  }\n  @Effect()\n  orderFlow(params: FlowParams) {\n    return this.orderApi.orderFlow(params)\n  }\n}\n"],"sourceRoot":""}]}