{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/cabinet/open.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/cabinet/open.vue","mtime":1591147717210},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { MessageService } from '@/services/message.service'\nimport { OpenService } from './open.service'\nimport { ruleOptions } from './open.config'\nimport { CABINET_REASONS } from '@/constants/reception/cabinet'\n\nexport default {\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      openService: OpenService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.openService.loading$,\n      unlockReasons: this.openService.unlockReasons$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      CABINET_REASONS,\n      form,\n      decorators,\n      show: false,\n      isShowReason: false\n    }\n  },\n  props: {\n    id: {\n      type: [Number, String],\n      default: 0\n    },\n    userName: {\n      type: String,\n      default: ''\n    },\n    userMobile: {\n      type: [Number, String]\n    }\n  },\n  methods: {\n    changeReasons(event) {\n      this.isShowReason = event\n    },\n    onSubmit(e) {\n      e.preventDefault()\n      this.form.validate().then(values => {\n        this.openService.openCabinet(this.id, values).subscribe(() => {\n          this.messageService.success({\n            content: '开柜成功！'\n          })\n          this.show = false\n          this.$emit('success')\n        })\n      })\n    },\n    onCancel() {\n      this.show = false\n    }\n  }\n}\n",null]}