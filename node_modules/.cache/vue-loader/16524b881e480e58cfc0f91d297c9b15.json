{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/todolist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/todolist.vue","mtime":1597396800001},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { timer } from 'rxjs'\nimport { TodoListService } from './todolist.service'\nimport FrontAddWorkNote from '@/views/biz-modals/front/add-work-note'\nexport default {\n  name: 'shop-reception-todolist',\n\n  bem: {\n    b: 'shop-reception-todolist'\n  },\n\n  modals: {\n    FrontAddWorkNote\n  },\n\n  components: {},\n\n  props: {},\n\n  data() {\n    return {\n      activeIndex: 0\n    }\n  },\n\n  serviceInject() {\n    return {\n      todolistService: TodoListService\n    }\n  },\n\n  rxState() {\n    return {\n      auth: this.todolistService.auth$,\n      loading: this.todolistService.loading$,\n      workNoteList: this.todolistService.workNoteList$,\n      workNoteDoneList: this.todolistService.workNoteDoneList$\n    }\n  },\n\n  computed: {\n    notesTabTips() {\n      let len = this.workNoteList.length\n      let str = '待办'\n      if (len) {\n        str += `(${len})`\n      }\n      return str\n    }\n  },\n\n  async: {},\n\n  mounted() {\n    this.todolistService.init().subscribe()\n  },\n\n  methods: {\n    // 新增待办\n    onAddWorkNotes() {\n      this.$modalRouter.push({\n        name: 'front-add-work-note',\n        on: {\n          success: () => {\n            this.todolistService.getWorkNoteList().subscribe()\n          }\n        }\n      })\n    },\n    onSetWorkNote(item) {\n      this.$confirm({\n        title: '完成待办',\n        content: `确定完成${item.subject}吗？`,\n        onOk: () => {\n          return this.todolistService\n            .setWorkNote(item.id)\n            .toPromise()\n            .then(() => {\n              timer(800).subscribe(() => {\n                this.todolistService.getWorkNoteList().subscribe()\n                this.todolistService.getWorkNoteDoneList().subscribe()\n              })\n            })\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["todolist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"todolist.vue","sourceRoot":"src/views/pages/shop/reception/components#","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div :class=\"b('header')\">\n      <div :class=\"b('navs')\">\n        <div\n          class=\"nav\"\n          :class=\"{ checked: activeIndex === 0 }\"\n          @click=\"activeIndex = 0\"\n        >\n          {{ notesTabTips }}\n        </div>\n        <div\n          class=\"nav\"\n          :class=\"{ checked: activeIndex === 1 }\"\n          @click=\"activeIndex = 1\"\n        >\n          已完成\n        </div>\n      </div>\n      <div :class=\"b('add')\" v-if=\"activeIndex === 0\">\n        <st-button\n          type=\"link\"\n          @click=\"onAddWorkNotes\"\n          :disabled=\"!auth.addTodo\"\n          class=\"to-do-add\"\n        >\n          新增待办\n        </st-button>\n      </div>\n    </div>\n\n    <div :class=\"b('contents')\">\n      <div\n        :class=\"b('list')\"\n        v-scrollBar=\"{ stopPropagation: true }\"\n        v-show=\"activeIndex === 0\"\n      >\n        <a-list\n          :data-source=\"workNoteList\"\n          :loading=\"loading.getWorkNoteList\"\n          itemLayout=\"vertical\"\n          :split=\"false\"\n          :class=\"b('wait-list')\"\n        >\n          <a-list-item slot=\"renderItem\" slot-scope=\"item\" :class=\"b('todo')\">\n            <div class=\"wrapper\">\n              <div class=\"operation-subject\">\n                <st-overflow-text\n                  :value=\"item.subject\"\n                  maxWidth=\"200px\"\n                ></st-overflow-text>\n              </div>\n              <div class=\"operation-content\">\n                <st-overflow-text\n                  :value=\"item.content\"\n                  maxWidth=\"200px\"\n                  needMaxContainerWidth\n                ></st-overflow-text>\n              </div>\n              <div class=\"operation-action\">\n                <div class=\"left\">\n                  <img :src=\"item.avatar\" alt=\"\" class=\"avatar\" />\n                  <span class=\"time\">{{ item.created_time }}</span>\n                </div>\n                <div class=\"right\">\n                  <st-button class=\"complete\" @click=\"onSetWorkNote(item)\">\n                    完 成\n                  </st-button>\n                </div>\n              </div>\n            </div>\n          </a-list-item>\n        </a-list>\n      </div>\n      <div\n        :class=\"b('list')\"\n        v-scrollBar=\"{ stopPropagation: true }\"\n        v-show=\"activeIndex === 1\"\n      >\n        <a-list\n          :data-source=\"workNoteDoneList\"\n          :loading=\"loading.getWorkNoteDoneList\"\n          :class=\"b('finish-list')\"\n          itemLayout=\"vertical\"\n          :split=\"false\"\n        >\n          <a-list-item slot=\"renderItem\" slot-scope=\"item\" :class=\"b('todo')\">\n            <div class=\"wrapper\">\n              <div class=\"operation-subject\">\n                <st-overflow-text\n                  :value=\"item.subject\"\n                  maxWidth=\"200px\"\n                ></st-overflow-text>\n              </div>\n              <div class=\"operation-content\">\n                <st-overflow-text\n                  :value=\"item.content\"\n                  maxWidth=\"200px\"\n                  needMaxContainerWidth\n                ></st-overflow-text>\n              </div>\n              <div class=\"operation-action\">\n                <div class=\"left\">\n                  <img :src=\"item.avatar\" alt=\"\" class=\"avatar\" />\n                  <span class=\"time\">{{ item.updated_time }}</span>\n                </div>\n                <div class=\"right\">\n                  <span class=\"finish-status\">已完成</span>\n                </div>\n              </div>\n            </div>\n          </a-list-item>\n        </a-list>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { timer } from 'rxjs'\nimport { TodoListService } from './todolist.service'\nimport FrontAddWorkNote from '@/views/biz-modals/front/add-work-note'\nexport default {\n  name: 'shop-reception-todolist',\n\n  bem: {\n    b: 'shop-reception-todolist'\n  },\n\n  modals: {\n    FrontAddWorkNote\n  },\n\n  components: {},\n\n  props: {},\n\n  data() {\n    return {\n      activeIndex: 0\n    }\n  },\n\n  serviceInject() {\n    return {\n      todolistService: TodoListService\n    }\n  },\n\n  rxState() {\n    return {\n      auth: this.todolistService.auth$,\n      loading: this.todolistService.loading$,\n      workNoteList: this.todolistService.workNoteList$,\n      workNoteDoneList: this.todolistService.workNoteDoneList$\n    }\n  },\n\n  computed: {\n    notesTabTips() {\n      let len = this.workNoteList.length\n      let str = '待办'\n      if (len) {\n        str += `(${len})`\n      }\n      return str\n    }\n  },\n\n  async: {},\n\n  mounted() {\n    this.todolistService.init().subscribe()\n  },\n\n  methods: {\n    // 新增待办\n    onAddWorkNotes() {\n      this.$modalRouter.push({\n        name: 'front-add-work-note',\n        on: {\n          success: () => {\n            this.todolistService.getWorkNoteList().subscribe()\n          }\n        }\n      })\n    },\n    onSetWorkNote(item) {\n      this.$confirm({\n        title: '完成待办',\n        content: `确定完成${item.subject}吗？`,\n        onOk: () => {\n          return this.todolistService\n            .setWorkNote(item.id)\n            .toPromise()\n            .then(() => {\n              timer(800).subscribe(() => {\n                this.todolistService.getWorkNoteList().subscribe()\n                this.todolistService.getWorkNoteDoneList().subscribe()\n              })\n            })\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}