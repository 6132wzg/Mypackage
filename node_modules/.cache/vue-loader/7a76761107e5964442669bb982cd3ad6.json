{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/user.vue","mtime":1591147717010},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { LoginService } from '../login.service'\nimport NoCaptcha from './no-captcha'\nimport AccountAgreement from '@/views/biz-modals/account/agreement'\nimport { ruleOptions } from './login.config'\nimport { PatternService } from '@/services/pattern.service'\n\nexport default {\n  bem: {\n    loginUser: 'page-login-user'\n  },\n  name: 'LoginUser',\n  components: {\n    NoCaptcha\n  },\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.loginService.loading$\n    }\n  },\n  mounted() {\n    const name = localStorage.getItem('UserAccountForFind') || ''\n    this.form.setFieldsValue({\n      name\n    })\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      thirdLogins: ['alipay', 'wechat', 'weibo', 'qq'],\n      trunPage: false\n    }\n  },\n  modals: {\n    AccountAgreement\n  },\n  computed: {},\n  methods: {\n    clickAgreement() {\n      this.$modalRouter.push({\n        name: 'account-agreement',\n        props: {},\n        on: {}\n      })\n    },\n    login() {\n      this.form.validate().then(values => {\n        this.$emit('login', values)\n      })\n    },\n    onClickFindPassword() {\n      const data = this.form.getFieldsValue()\n      localStorage.setItem('UserAccountForFind', data.name)\n      window.open('/account/find', 'blank')\n    },\n    onClickThirdChange(key) {\n      this.$emit('third', key)\n    }\n  }\n}\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user.vue","sourceRoot":"src-entries/account/views/pages/account/login#","sourcesContent":["<template>\n  <div :class=\"[loginUser(), trunPage ? 'trun-page' : '']\">\n    <st-form :form=\"form\" @submit.prevent=\"login\" :class=\"loginUser('form')\">\n      <st-form-item>\n        <a-input\n          size=\"large\"\n          placeholder=\"请输入用户名\"\n          v-decorator=\"decorators.name\"\n        />\n      </st-form-item>\n      <st-form-item class=\"mg-b12\">\n        <a-input\n          size=\"large\"\n          type=\"password\"\n          placeholder=\"请输入密码\"\n          v-decorator=\"decorators.password\"\n        />\n        <a-input\n          type=\"password\"\n          autocomplete=\"new-password\"\n          style=\"display: none\"\n        />\n      </st-form-item>\n      <st-form-item class=\"mg-b0\">\n        <no-captcha></no-captcha>\n      </st-form-item>\n      <st-form-item :class=\"loginUser('pass')\" class=\"mg-b12\">\n        <div :class=\"loginUser('wrapper')\">\n          <div :class=\"loginUser('wrapper-left')\">\n            <a-checkbox v-decorator=\"decorators.isAgree\">\n              我已阅读并同意\n              <a\n                :class=\"loginUser('wrapper-user-agreement')\"\n                @click=\"clickAgreement\"\n              >\n                《 用户服务协议 》\n              </a>\n            </a-checkbox>\n          </div>\n          <span :class=\"loginUser('pass-content')\">\n            <a @click=\"onClickFindPassword\">忘记密码</a>\n          </span>\n        </div>\n      </st-form-item>\n      <st-form-item class=\"mg-b32\">\n        <st-button\n          :class=\"loginUser('login-button')\"\n          :loading=\"loading.loginAccount\"\n          pill\n          block\n          size=\"large\"\n          type=\"primary\"\n          html-type=\"submit\"\n        >\n          登录\n        </st-button>\n      </st-form-item>\n    </st-form>\n    <!-- 第三方登录 -->\n    <!-- <div :class=\"loginUser('third')\" class=\"mg-l24\">\n      <div @click=\"onClickThirdChange(item)\" class=\"st-icon-wapper\" v-for=\"item in thirdLogins\" :key=\"item.type\"><st-icon :class=\"item\" :type=\"item\" size=\"24px\" /></div>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport { LoginService } from '../login.service'\nimport NoCaptcha from './no-captcha'\nimport AccountAgreement from '@/views/biz-modals/account/agreement'\nimport { ruleOptions } from './login.config'\nimport { PatternService } from '@/services/pattern.service'\n\nexport default {\n  bem: {\n    loginUser: 'page-login-user'\n  },\n  name: 'LoginUser',\n  components: {\n    NoCaptcha\n  },\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.loginService.loading$\n    }\n  },\n  mounted() {\n    const name = localStorage.getItem('UserAccountForFind') || ''\n    this.form.setFieldsValue({\n      name\n    })\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      thirdLogins: ['alipay', 'wechat', 'weibo', 'qq'],\n      trunPage: false\n    }\n  },\n  modals: {\n    AccountAgreement\n  },\n  computed: {},\n  methods: {\n    clickAgreement() {\n      this.$modalRouter.push({\n        name: 'account-agreement',\n        props: {},\n        on: {}\n      })\n    },\n    login() {\n      this.form.validate().then(values => {\n        this.$emit('login', values)\n      })\n    },\n    onClickFindPassword() {\n      const data = this.form.getFieldsValue()\n      localStorage.setItem('UserAccountForFind', data.name)\n      window.open('/account/find', 'blank')\n    },\n    onClickThirdChange(key) {\n      this.$emit('third', key)\n    }\n  }\n}\n</script>\n"]}]}