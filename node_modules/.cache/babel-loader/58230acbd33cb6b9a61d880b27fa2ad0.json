{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/venue/notice-tpl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/venue/notice-tpl.vue","mtime":1591147717287},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { NoticeTplService } from \"./notice-tpl.service\";\nimport { thsMember, thsShop } from \"./notice-tpl.config\";\nimport NoticeItem from '@/views/biz-components/notice-tpl/notice-item';\nvar pageName = 'page-brand-app-venue-notice-tpl';\nexport default {\n  name: 'PageBrandAppVenueNoticeTpl',\n  bem: {\n    bPage: pageName,\n    bTable: 'venue-notice-table'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      noticeService: NoticeTplService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      list: this.noticeService.list$,\n      auth: this.noticeService.auth$\n    };\n  },\n  data: function data() {\n    return {\n      memberList: [],\n      shopList: []\n    };\n  },\n  computed: {\n    thsMember: thsMember,\n    thsShop: thsShop\n  },\n  created: function created() {\n    this.getNoticeList();\n  },\n  methods: {\n    onSearch: function onSearch() {},\n    save: function save(para) {\n      this.putNotice(para);\n    },\n    getNoticeList: function getNoticeList() {\n      var _this = this;\n\n      return this.noticeService.getNoticeList({\n        notify_type: 1\n      }).subscribe(function (res) {\n        _this.memberList = _this.list.filter(function (_ref) {\n          var notify_type = _ref.notify_type;\n          return notify_type.value === 1;\n        });\n        _this.shopList = _this.list.filter(function (_ref2) {\n          var notify_type = _ref2.notify_type;\n          return notify_type.value === 2;\n        });\n      });\n    },\n    putNotice: function putNotice(para) {\n      var _this2 = this;\n\n      return this.noticeService.putNotice(_objectSpread({}, para)).subscribe(function (res) {\n        _this2.$message.success({\n          content: '编辑成功'\n        });\n\n        _this2.getNoticeList();\n      });\n    }\n  },\n  components: {\n    NoticeItem: NoticeItem\n  }\n};",null]}