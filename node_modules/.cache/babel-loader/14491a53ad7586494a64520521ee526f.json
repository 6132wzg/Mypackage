{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/route-tabs/route-tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/route-tabs/route-tabs.vue","mtime":1594718340300},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { intersection } from 'lodash-es';\nexport default {\n  name: 'StRouteTabs',\n  props: {\n    type: {\n      type: String,\n      default: 'line'\n    },\n    options: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      required: true,\n      validator: function validator(value) {\n        var flag;\n        value.forEach(function (tab) {\n          flag = !tab.label || !tab.route || !tab.route.name;\n        });\n        return !flag;\n      }\n    },\n    tabPosition: {\n      type: String,\n      default: 'top'\n    }\n  },\n  computed: {\n    activeRouteName: function activeRouteName() {\n      var matchedRouteNames = this.$route.matched.map(function (item) {\n        return item.name;\n      });\n      var activeRouteNames = intersection(matchedRouteNames, this.options.map(function (item) {\n        return item.route.name;\n      }));\n\n      if (activeRouteNames.length) {\n        return activeRouteNames[0];\n      } else {\n        return '';\n      }\n    }\n  },\n  created: function created() {\n    this.options.forEach(function (op) {\n      if (!op.label) {\n        throw new Error(['请设置 label 值']);\n      }\n\n      if (!op.route) {\n        throw new Error([\"\\u8BF7\\u7ED9label\\u4E3A\".concat(op.label, \"\\u8BBE\\u7F6E route\\u5BF9\\u8C61\")]);\n      }\n\n      if (!op.route.name) {\n        throw new Error([\"\\u8BF7\\u7ED9label\\u4E3A\".concat(op.label, \"\\u8BBE\\u7F6E route\\u5BF9\\u8C61\")]);\n      }\n    });\n  },\n  methods: {\n    onChange: function onChange(key) {\n      var options = this.options;\n      var query = {};\n      options.forEach(function (tab) {\n        if (tab.route.name === key) {\n          query = _objectSpread({}, tab.route.query);\n        }\n      });\n      this.$emit('change', key, query);\n      this.$router.push({\n        name: key,\n        query: query\n      });\n    }\n  }\n};",null]}