{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/src/vendor/vue-rx-state.js","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/vendor/vue-rx-state.js","mtime":1591147717095},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418}],"contextDependencies":[],"result":["import _typeof from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport { isObservable } from 'rxjs';\nimport { cloneDeep } from 'lodash-es';\n\nvar isObject = function isObject(s) {\n  return _typeof(s) === 'object' && s !== null;\n};\n\nexport default {\n  install: function install(Vue) {\n    Vue.mixin({\n      beforeCreate: function beforeCreate() {\n        var _this = this;\n\n        var rxState = this.$options.rxState;\n\n        if (rxState) {\n          this._rxObs = this._rxObs || {};\n\n          if (typeof rxState !== 'function') {\n            throw new Error(\"[vue-rx-state] rxState should pass an function but got \".concat(_typeof(rxState)));\n          }\n\n          var obsConfig = rxState.call(this);\n\n          if (!isObject(obsConfig)) {\n            throw new Error(\"[vue-rx-state] rxState function should return an object but got \".concat(_typeof(obsConfig)));\n          }\n\n          var _loop = function _loop(obName) {\n            var ob = obsConfig[obName];\n\n            if (!isObservable(ob)) {\n              throw new Error(\"[vue-rx-state] rxState [\".concat(obName, \"] should be an Observable but got \").concat(_typeof(ob)));\n            }\n\n            _this._rxObs[obName] = ob.subscribe(function (v) {\n              try {\n                if (obName in _this) {\n                  _this.$set(_this, obName, cloneDeep(v));\n\n                  return;\n                }\n\n                Vue.util.defineReactive(_this, obName, cloneDeep(v));\n              } catch (e) {\n                throw new Error(\"[vue-rx-state] uncaught error on [\".concat(obName, \"] \").concat(e.message));\n              }\n            });\n          };\n\n          for (var obName in obsConfig) {\n            _loop(obName);\n          }\n        }\n      },\n      beforeDestroy: function beforeDestroy() {\n        var rxState = this.$options.rxState;\n\n        if (rxState) {\n          for (var obName in this._rxObs) {\n            this._rxObs[obName].unsubscribe && this._rxObs[obName].unsubscribe();\n          }\n        }\n      }\n    });\n  }\n};",null]}