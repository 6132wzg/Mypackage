{"version":3,"file":"vue-st-form.js","sources":["../src/utils.js","../src/vue-st-form.js"],"sourcesContent":["export const isArray = s => Array.isArray(s)\n\nexport const isPlainObject = s =>\n  typeof s === 'object' && !isArray(s) && s !== null\n\nexport const isFunction = s => typeof s === 'function'\n\nexport const isString = s => typeof s === 'string'\n\nexport const set = (obj, path, value) => {\n  if (!obj) {\n    return\n  }\n  if (!isPlainObject(obj)) {\n    return\n  }\n  if (!path) {\n    return\n  }\n  if (!~path.indexOf('.')) {\n    obj[path] = value\n  } else {\n    const keys = path.split('.')\n    const k1 = keys[0]\n    const k2 = keys[1]\n    if (!obj[k1]) {\n      obj[k1] = {}\n    }\n\n    obj[k1][k2] = value\n  }\n}\n","import { isPlainObject, isString, isArray, isFunction, set } from \"./utils\"\nconst decoratorsGenerator = (arg, form, vm) => {\n  if (!isPlainObject(arg) && !isFunction(arg)) {\n    throw new Error(\n      `[vue-st-form]#decorators() shoud pass an object or function but got ${typeof options}`\n    )\n  }\n  let options\n  if (isPlainObject(arg)) {\n    options = arg\n  }\n  if (isFunction(arg)) {\n    options = arg(vm)\n  }\n  const _decorators = {}\n  const makeAntValidator = (fn, key) => (rule, value, callback) => {\n    // 添加try  catch 以抓取运行时错误\n    try {\n      const res = fn(rule, value, form.getFieldsValue())\n      //  如果验证返回undefined 或者true 算通过\n      if (res === undefined || res === true) {\n        return callback()\n      }\n      // 验证不通过\n      if (res === false) {\n        return callback(\n          rule.message ||\n            rule.defalutMessage ||\n            `${key}字段验证未通过`\n        )\n      }\n      if (isString(res)) {\n        return callback(res)\n      }\n\n      if (res instanceof Promise) {\n        return res.then(\n          () => {\n            callback()\n          },\n          rejectErr => {\n            // console.error(rejectErr)\n            callback(rejectErr.message)\n          }\n        )\n      }\n\n      // 其它所有情况算作通过\n      return callback()\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  Object.keys(options).forEach(key => {\n    const opt = options[key]\n    let decoOpt = opt\n\n    if (opt.rules) {\n      if (!isArray(opt.rules)) {\n        throw new Error(\n          `[vue-st-form] ${key} rules should be Array`\n        )\n      }\n      decoOpt.rules = opt.rules\n      opt.rules.forEach(rule => {\n        if (rule.validator) {\n          rule.validator = makeAntValidator(\n            rule.validator,\n            key,\n            rule\n          )\n        }\n      })\n    }\n\n    set(_decorators, key, [key, decoOpt])\n  })\n  return _decorators\n}\n\nexport default {\n  install(Vue) {\n    Vue.mixin({\n      beforeCreate() {\n        const vm = this\n        vm.$stForm = {\n          create(antFormOptions = {}) {\n            const form = vm.$form.createForm(vm, antFormOptions)\n\n            form.validate = function(options, validateOptions = {}) {\n              let validateFileds = undefined\n              let formValidateOptions = {\n                first: false,\n                firstFields: [],\n                force: false,\n                scroll: {}\n              }\n              if (isArray(options)) {\n                validateFileds = options\n                formValidateOptions = Object.assign(\n                  formValidateOptions,\n                  validateOptions\n                )\n              } else if (isPlainObject(options)) {\n                formValidateOptions = Object.assign(\n                  formValidateOptions,\n                  options\n                )\n              } else if (isFunction(options)) {\n                return new Promise((resolve, reject) => {\n                  // https://github.com/yiminghe/dom-scroll-into-view#function-parameter\n                  form.validateFieldsAndScroll(options)\n                })\n              }\n              let forceFields =\n                formValidateOptions && formValidateOptions.forceFields\n              if (isArray(forceFields)) {\n                forceFields.map(field => {\n                  form.setFieldsValue({\n                    [field]: form.getFieldValue(field)\n                  })\n                })\n              }\n              return new Promise((resolve, reject) => {\n                // https://github.com/yiminghe/dom-scroll-into-view#function-parameter\n                form.validateFieldsAndScroll(\n                  validateFileds,\n                  formValidateOptions,\n                  (errs, values) => {\n                    try {\n                      if (errs) {\n                        reject(errs)\n                      } else {\n                        resolve(values)\n                      }\n                    } catch (e) {\n                      reject(e)\n                    }\n                  }\n                )\n              })\n            }\n            form.decorators = function(arg) {\n              const _decorators = decoratorsGenerator(arg, form, vm)\n              form._decorators = _decorators\n              return _decorators\n            }\n            form.addDecorators = function(arg) {\n              const _decorators = decoratorsGenerator(arg, form, null)\n              const _decoratorsComplex = Object.assign(form._decorators, _decorators)\n              form._decorators = _decoratorsComplex\n              return _decoratorsComplex\n            }\n            return form\n          }\n        }\n      }\n    })\n  }\n}\n"],"names":["isArray","s","Array","isPlainObject","_typeof","isFunction","decoratorsGenerator","arg","form","vm","Error","options","_decorators","Object","keys","forEach","key","opt","decoOpt","rules","rule","validator","fn","value","callback","res","getFieldsValue","undefined","message","defalutMessage","Promise","then","rejectErr","e","console","error","makeAntValidator","obj","path","indexOf","split","k1","k2","set","install","Vue","mixin","beforeCreate","this","$stForm","create","antFormOptions","$form","createForm","validate","validateOptions","validateFileds","formValidateOptions","first","firstFields","force","scroll","assign","resolve","reject","validateFieldsAndScroll","forceFields","map","field","setFieldsValue","getFieldValue","errs","values","decorators","addDecorators","_decoratorsComplex"],"mappings":";;;4hBAAO,IAAMA,EAAU,SAAAC,UAAKC,MAAMF,QAAQC,IAE7BE,EAAgB,SAAAF,SACd,WAAbG,EAAOH,KAAmBD,EAAQC,IAAY,OAANA,GAE7BI,EAAa,SAAAJ,SAAkB,mBAANA,GCJhCK,EAAsB,SAACC,EAAKC,EAAMC,OACjCN,EAAcI,KAASF,EAAWE,SAC/B,IAAIG,sFACsEC,SAG9EA,EACAR,EAAcI,KAChBI,EAAUJ,GAERF,EAAWE,KACbI,EAAUJ,EAAIE,QAEVG,EAAc,UAuCpBC,OAAOC,KAAKH,GAASI,QAAQ,SAAAC,OACrBC,EAAMN,EAAQK,GAChBE,EAAUD,KAEVA,EAAIE,MAAO,KACRnB,EAAQiB,EAAIE,aACT,IAAIT,8BACSM,6BAGrBE,EAAQC,MAAQF,EAAIE,MACpBF,EAAIE,MAAMJ,QAAQ,SAAAK,GACZA,EAAKC,YACPD,EAAKC,UAnDY,SAACC,EAAIN,UAAQ,SAACI,EAAMG,EAAOC,WAG1CC,EAAMH,EAAGF,EAAMG,EAAOf,EAAKkB,8BAErBC,IAARF,IAA6B,IAARA,EAChBD,KAGG,IAARC,EACKD,EACLJ,EAAKQ,SACHR,EAAKS,0BACFb,cDrB2B,iBCwBvBS,EACJD,EAASC,GAGdA,aAAeK,QACVL,EAAIM,KACT,WACEP,KAEF,SAAAQ,GAEER,EAASQ,EAAUJ,WAMlBJ,IACP,MAAOS,GACPC,QAAQC,MAAMF,KAgBOG,CACfhB,EAAKC,UACLL,OD3DO,SAACqB,EAAKC,EAAMf,MACxBc,GAGAlC,EAAckC,IAGdC,MAGCA,EAAKC,QAAQ,KAEZ,KACCzB,EAAOwB,EAAKE,MAAM,KAClBC,EAAK3B,EAAK,GACV4B,EAAK5B,EAAK,GACXuB,EAAII,KACPJ,EAAII,GAAM,IAGZJ,EAAII,GAAIC,GAAMnB,OATdc,EAAIC,GAAQf,ECuDZoB,CAAI/B,EAAaI,EAAK,CAACA,EAAKE,MAEvBN,SAGM,CACbgC,iBAAQC,GACNA,EAAIC,MAAM,CACRC,4BACQtC,EAAKuC,KACXvC,EAAGwC,QAAU,CACXC,sBAAOC,yDAAiB,GAChB3C,EAAOC,EAAG2C,MAAMC,WAAW5C,EAAI0C,UAErC3C,EAAK8C,SAAW,SAAS3C,OAAS4C,yDAAkB,GAC9CC,OAAiB7B,EACjB8B,EAAsB,CACxBC,OAAO,EACPC,YAAa,GACbC,OAAO,EACPC,OAAQ,OAEN7D,EAAQW,GACV6C,EAAiB7C,EACjB8C,EAAsB5C,OAAOiD,OAC3BL,EACAF,QAEG,GAAIpD,EAAcQ,GACvB8C,EAAsB5C,OAAOiD,OAC3BL,EACA9C,QAEG,GAAIN,EAAWM,UACb,IAAImB,QAAQ,SAACiC,EAASC,GAE3BxD,EAAKyD,wBAAwBtD,SAG7BuD,EACFT,GAAuBA,EAAoBS,mBACzClE,EAAQkE,IACVA,EAAYC,IAAI,SAAAC,GACd5D,EAAK6D,oBACFD,EAAQ5D,EAAK8D,cAAcF,OAI3B,IAAItC,QAAQ,SAACiC,EAASC,GAE3BxD,EAAKyD,wBACHT,EACAC,EACA,SAACc,EAAMC,OAECD,EACFP,EAAOO,GAEPR,EAAQS,GAEV,MAAOvC,GACP+B,EAAO/B,SAMjBzB,EAAKiE,WAAa,SAASlE,OACnBK,EAAcN,EAAoBC,EAAKC,EAAMC,UACnDD,EAAKI,YAAcA,EACZA,GAETJ,EAAKkE,cAAgB,SAASnE,OACtBK,EAAcN,EAAoBC,EAAKC,EAAM,MAC7CmE,EAAqB9D,OAAOiD,OAAOtD,EAAKI,YAAaA,UAC3DJ,EAAKI,YAAc+D,EACZA,GAEFnE"}