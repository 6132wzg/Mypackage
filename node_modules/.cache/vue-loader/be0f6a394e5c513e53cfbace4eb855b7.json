{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src-entries/account/views/pages/account/login#/user.vue","mtime":1591147717010},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { LoginService } from '../login.service'\nimport NoCaptcha from './no-captcha'\nimport AccountAgreement from '@/views/biz-modals/account/agreement'\nimport { ruleOptions } from './login.config'\nimport { PatternService } from '@/services/pattern.service'\n\nexport default {\n  bem: {\n    loginUser: 'page-login-user'\n  },\n  name: 'LoginUser',\n  components: {\n    NoCaptcha\n  },\n  serviceInject() {\n    return {\n      loginService: LoginService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.loginService.loading$\n    }\n  },\n  mounted() {\n    const name = localStorage.getItem('UserAccountForFind') || ''\n    this.form.setFieldsValue({\n      name\n    })\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      thirdLogins: ['alipay', 'wechat', 'weibo', 'qq'],\n      trunPage: false\n    }\n  },\n  modals: {\n    AccountAgreement\n  },\n  computed: {},\n  methods: {\n    clickAgreement() {\n      this.$modalRouter.push({\n        name: 'account-agreement',\n        props: {},\n        on: {}\n      })\n    },\n    login() {\n      this.form.validate().then(values => {\n        this.$emit('login', values)\n      })\n    },\n    onClickFindPassword() {\n      const data = this.form.getFieldsValue()\n      localStorage.setItem('UserAccountForFind', data.name)\n      window.open('/account/find', 'blank')\n    },\n    onClickThirdChange(key) {\n      this.$emit('third', key)\n    }\n  }\n}\n",null]}