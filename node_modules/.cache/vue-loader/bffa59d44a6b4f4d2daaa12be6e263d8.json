{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/sms/template.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/sms/template.vue","mtime":1597396799929},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ruleOptions } from './template.config'\nimport { TemplateService } from './template.service'\nimport { MessageService } from '@/services/message.service'\n\nexport default {\n  name: 'SettingSmsTemplate',\n  bem: {\n    bModal: 'setting-sms-template'\n  },\n  serviceInject() {\n    return {\n      templateService: TemplateService,\n      messageService: MessageService\n    }\n  },\n  rxState() {\n    return {\n      sign: this.templateService.sign$\n    }\n  },\n  props: {\n    info: {\n      type: Object\n    }\n  },\n\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false\n    }\n  },\n  created() {\n    this.getSmsSign()\n  },\n  mounted() {\n    if (this.info) {\n      this.form.setFieldsValue({\n        title: this.info.title,\n        content: this.info.content\n      })\n    }\n  },\n  methods: {\n    getSmsSign() {\n      return this.templateService.getSmsSign().subscribe()\n    },\n    save() {\n      this.form.validate().then(values => {\n        if (this.info) {\n          values.tmpl_id = this.info.tmpl_id\n          this.templateService.editTemplate({ ...values }).subscribe(res => {\n            this.messageService.success({\n              content: '编辑成功'\n            })\n            this.$emit('success')\n            this.show = false\n          })\n        } else {\n          this.templateService.addTemplate({ ...values }).subscribe(res => {\n            this.messageService.success({\n              content: '新增成功'\n            })\n            this.$emit('success')\n            this.show = false\n          })\n        }\n      })\n    },\n    cancel() {}\n  }\n}\n",{"version":3,"sources":["template.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"template.vue","sourceRoot":"src/views/biz-modals/brand/setting/sms","sourcesContent":["<template>\n  <st-modal :bModal=\"bModal()\" title=\"短信模版\" v-model=\"show\" width=\"486px\">\n    <st-form :form=\"form\">\n      <st-form-item labelWidth=\"70px\" label=\"模版名称\">\n        <a-input v-decorator=\"decorators.title\" placeholder=\"请输入模版名称\" />\n      </st-form-item>\n      <st-form-item labelWidth=\"70px\" label=\"短信内容\">\n        <st-textarea\n          v-decorator=\"decorators.content\"\n          :maxlength=\"278 - sign.length\"\n          :suffix=\"sign\"\n          :autosize=\"{ minRows: 4, maxRows: 6 }\"\n          placeholder=\"请输入模版内容\"\n        />\n      </st-form-item>\n    </st-form>\n    <footer slot=\"footer\">\n      <st-button @click=\"show = false\">取消</st-button>\n      <st-button @click=\"save\" type=\"primary\">确认</st-button>\n    </footer>\n  </st-modal>\n</template>\n<script>\nimport { ruleOptions } from './template.config'\nimport { TemplateService } from './template.service'\nimport { MessageService } from '@/services/message.service'\n\nexport default {\n  name: 'SettingSmsTemplate',\n  bem: {\n    bModal: 'setting-sms-template'\n  },\n  serviceInject() {\n    return {\n      templateService: TemplateService,\n      messageService: MessageService\n    }\n  },\n  rxState() {\n    return {\n      sign: this.templateService.sign$\n    }\n  },\n  props: {\n    info: {\n      type: Object\n    }\n  },\n\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      show: false\n    }\n  },\n  created() {\n    this.getSmsSign()\n  },\n  mounted() {\n    if (this.info) {\n      this.form.setFieldsValue({\n        title: this.info.title,\n        content: this.info.content\n      })\n    }\n  },\n  methods: {\n    getSmsSign() {\n      return this.templateService.getSmsSign().subscribe()\n    },\n    save() {\n      this.form.validate().then(values => {\n        if (this.info) {\n          values.tmpl_id = this.info.tmpl_id\n          this.templateService.editTemplate({ ...values }).subscribe(res => {\n            this.messageService.success({\n              content: '编辑成功'\n            })\n            this.$emit('success')\n            this.show = false\n          })\n        } else {\n          this.templateService.addTemplate({ ...values }).subscribe(res => {\n            this.messageService.success({\n              content: '新增成功'\n            })\n            this.$emit('success')\n            this.show = false\n          })\n        }\n      })\n    },\n    cancel() {}\n  }\n}\n</script>\n"]}]}