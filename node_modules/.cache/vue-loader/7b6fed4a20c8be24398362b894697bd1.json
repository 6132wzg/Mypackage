{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/reserve-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/reserve-info.vue","mtime":1597396799939},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SmallCourseScheduleCommonService as CommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service'\nimport { SmallCourseScheduleReserveService as ReserveService } from '@/views/pages/shop/product/course/schedule/small-course/service#/reserve.service'\nimport { SmallCourseScheduleService as ScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service'\nimport ScheduleSmallCourseReservedCourse from '@/views/biz-modals/schedule/small-course/reserved-course'\nimport ScheduleSmallCourseRemedialCourse from '@/views/biz-modals/schedule/small-course/remedial-course'\nimport ScheduleSmallCourseRemedialInfo from '@/views/biz-modals/schedule/small-course/remedial-info'\nimport { RemedialCourseInfoService } from './remedial-info.service'\nimport { COURSE_TYPE, RESERVE_TYPE } from '@/constants/course/small-course'\nimport { columns } from './reserve-info.config'\nexport default {\n  name: 'ReserveInfo',\n  modals: {\n    ScheduleSmallCourseReservedCourse,\n    ScheduleSmallCourseRemedialCourse,\n    ScheduleSmallCourseRemedialInfo\n  },\n  serviceInject() {\n    return {\n      commonService: CommonService,\n      reserveService: ReserveService,\n      scheduleService: ScheduleService,\n      remedialInfoService: RemedialCourseInfoService\n    }\n  },\n  rxState() {\n    const commonService = this.commonService\n    return {\n      loading: this.reserveService.loading$,\n      memberOptions: commonService.memberOptions$,\n      consumeOptions: commonService.consumeOptions$,\n      reserveList: this.reserveService.reserveList$,\n      reserveInfo: this.reserveService.reserveInfo$,\n      reserveStatusOptions: this.remedialInfoService.reserveStatusOptions$,\n      auth: this.reserveService.auth$,\n      infoAuth: this.reserveService.infoAuth$\n    }\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      COURSE_TYPE,\n      RESERVE_TYPE,\n      memberId: '',\n      consumeType: '',\n      consumeId: '',\n      showConsumeType: '',\n      showMemberName: '',\n      dataSource: [],\n      keyword: '',\n      show: false,\n      info: {},\n      checked: false\n    }\n  },\n  computed: {\n    columns,\n    courseId() {\n      return this.reserveInfo.course_id\n    },\n    scheduleId() {\n      return this.reserveInfo.id\n    }\n  },\n  created() {\n    this.getReserveInfo()\n  },\n  methods: {\n    dealCourtName(courseName, currentCourseName) {\n      return currentCourseName\n        ? courseName + '.' + currentCourseName\n        : courseName\n    },\n    keywordFilter(item) {\n      let str\n      if (item.is_minors === 1) {\n        str = `${item.member_name}(未成年) ${item.parent_mobile}(${item.parent_user_role})`.replace(\n          new RegExp(this.keyword),\n          `<span class=\"color-primary\">${this.keyword}</span>`\n        )\n      } else {\n        str = `${item.member_name} ${item.mobile}`.replace(\n          new RegExp(this.keyword),\n          `<span class=\"color-primary\">${this.keyword}</span>`\n        )\n      }\n      return str\n    },\n    onSearch(value) {\n      this.keyword = value\n      this.commonService\n        .getMemberList({\n          member: value\n        })\n        .subscribe()\n    },\n    onChange(value) {\n      this.memberId = value\n      this.showConsumeType = ''\n      this.commonService\n        .getConsumeList({\n          course_id: this.courseId,\n          member_id: value\n        })\n        .subscribe()\n    },\n    onChangeConsumeType(val) {\n      const obj = JSON.parse(val)\n      this.consumeType = obj.consume_type\n      this.consumeId = obj.id\n    },\n    // 补签到\n    checkSign(id) {\n      this.reserveService.checkSign(id).subscribe(this.getReserveInfo)\n    },\n    // 新增预约\n    addReserve() {\n      const params = {\n        schedule_id: this.id,\n        member_id: this.memberId,\n        consume_type: this.consumeType,\n        consume_id: this.consumeId\n      }\n      this.reserveService.addAtion(params).subscribe(res => {\n        this.onAddReserveSuccess()\n      })\n    },\n    cancelReserve(id) {\n      this.reserveService.cancel(id).subscribe(this.onCancelReserveSuccess)\n    },\n    // 签到\n    check(id) {\n      this.reserveService.check(id).subscribe(this.onCheckSuccess)\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData\n      }\n      target.editable = true\n      this.data = newData\n    },\n    save(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        delete target.editable\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n      }\n    },\n    // 取消排期\n    cancelSchedule() {\n      this.scheduleService\n        .cancelCustom(this.id)\n        .subscribe(this.onDelScheduleScuccess)\n    },\n    // 修改课程\n    updateSchedule() {\n      this.show = false\n      this.$modalRouter.push({\n        name: 'schedule-small-course-reserved-course',\n        props: {\n          item: this.reserveInfo,\n          checked: this.checked\n        },\n        on: {\n          ok: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 补课回显\n    remedialCourse(reserve_id) {\n      this.$modalRouter.push({\n        name: 'schedule-small-course-remedial-course',\n        props: {\n          reserve_id: reserve_id\n        },\n        on: {\n          ok: () => {\n            this.$router.reload()\n          }\n        }\n      })\n      this.show = false\n    },\n    // 查看补课\n    getMessage(id) {\n      this.$modalRouter.push({\n        name: 'schedule-small-course-remedial-info',\n        props: {\n          id: id\n        }\n      })\n      this.show = false\n    },\n    // 取消预约\n    cancelAtion(id) {\n      this.reserveService.cancelAtion(id).subscribe(this.onDelScheduleScuccess)\n    },\n    // 请假\n    leave(id) {\n      this.reserveService.leave(id).subscribe(this.getReserveInfo)\n    },\n    getReserveInfo() {\n      this.reserveService.getInfo(this.id).subscribe(res => {\n        if (this.reserveList.length) {\n          this.checked = true\n        }\n      })\n    },\n    onAddReserveSuccess() {\n      this.memberId = undefined\n      this.consumeType = undefined\n      this.showConsumeType = ''\n      this.showMemberName = ''\n      this.getReserveInfo()\n    },\n    onCancelReserveSuccess() {\n      this.getReserveInfo()\n    },\n    onCheckSuccess() {\n      this.getReserveInfo()\n    },\n    onDelScheduleScuccess() {\n      console.log('取消课程!')\n      this.$router.reload()\n      this.show = false\n    }\n  }\n}\n",{"version":3,"sources":["reserve-info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"reserve-info.vue","sourceRoot":"src/views/biz-modals/schedule/small-course","sourcesContent":["<template>\n  <st-modal\n    wrapClassName=\"modal-reserved-info\"\n    title=\"预约详情\"\n    @ok=\"save\"\n    v-model=\"show\"\n    width=\"755px\"\n  >\n    <a-row>\n      <a-col :lg=\"16\">\n        <st-info>\n          <st-info-item :label=\"$c('small_course')\">\n            {{\n              dealCourtName(\n                reserveInfo.course_name,\n                reserveInfo.current_course_name\n              )\n            }}\n          </st-info-item>\n        </st-info>\n      </a-col>\n      <a-col :lg=\"8\">\n        <st-info>\n          <st-info-item :label=\"`上课${$c('coach')}`\">\n            {{ reserveInfo.coach_name }}\n          </st-info-item>\n        </st-info>\n      </a-col>\n    </a-row>\n    <a-row>\n      <a-col :lg=\"8\">\n        <st-info>\n          <st-info-item label=\"上课日期\">\n            {{ reserveInfo.start_date }}\n          </st-info-item>\n        </st-info>\n      </a-col>\n      <a-col :lg=\"8\">\n        <st-info>\n          <st-info-item label=\"上课时间\">\n            {{ reserveInfo.start_time }} ~ {{ reserveInfo.end_time }}\n          </st-info-item>\n        </st-info>\n      </a-col>\n      <a-col :lg=\"8\">\n        <st-info>\n          <st-info-item label=\"上课场地\">\n            {{ reserveInfo.court_name }}\n          </st-info-item>\n        </st-info>\n      </a-col>\n    </a-row>\n    <a-row>\n      <a-col :lg=\"8\">\n        <st-info>\n          <st-info-item label=\"预约人数\">\n            {{ reserveInfo.reserved_num }}\n          </st-info-item>\n        </st-info>\n      </a-col>\n      <a-col :lg=\"16\">\n        <st-info>\n          <st-info-item label=\"最大人数\">\n            {{ reserveInfo.reserve_max }}\n          </st-info-item>\n        </st-info>\n      </a-col>\n    </a-row>\n    <st-container>\n      <st-form-table hoverable>\n        <thead>\n          <tr>\n            <th v-for=\"col in columns\" :key=\"col.dataIndex\">{{ col.title }}</th>\n          </tr>\n        </thead>\n        <tbody v-if=\"!loading.add\">\n          <tr v-if=\"reserveInfo.small_course_type === COURSE_TYPE.AUTO_COURSE\">\n            <td class=\"st-form-table__add\">\n              <a-select\n                slot=\"member\"\n                showSearch\n                placeholder=\"搜索会员名\"\n                style=\"width: 149px;\"\n                :defaultActiveFirstOption=\"false\"\n                :dropdownMatchSelectWidth=\"false\"\n                :showArrow=\"false\"\n                :filterOption=\"false\"\n                @search=\"onSearch\"\n                @change=\"onChange\"\n                v-model=\"showMemberName\"\n                notFoundContent=\"无搜索结果\"\n              >\n                <a-select-option\n                  v-for=\"member in memberOptions\"\n                  :key=\"member.id\"\n                >\n                  <div class=\"st-form-table__add-option\">\n                    <span\n                      class=\"item-name\"\n                      v-html=\"keywordFilter(member)\"\n                    ></span>\n                  </div>\n                </a-select-option>\n              </a-select>\n            </td>\n            <td>\n              <a-select\n                slot=\"consume_type\"\n                placeholder=\"选择消费方式\"\n                style=\"width: 280px;\"\n                :dropdownMatchSelectWidth=\"false\"\n                v-model=\"showConsumeType\"\n                @change=\"onChangeConsumeType\"\n              >\n                <a-select-opt-group\n                  v-for=\"consumeType in consumeOptions\"\n                  :key=\"consumeType.id\"\n                >\n                  <span slot=\"label\">\n                    <a-icon type=\"snippets\" />\n                    {{ consumeType.name }}\n                  </span>\n                  <a-select-option\n                    v-for=\"consume in consumeType.children\"\n                    :value=\"JSON.stringify(consume)\"\n                    :key=\"consume.id\"\n                  >\n                    {{ consume.name }}\n                  </a-select-option>\n                </a-select-opt-group>\n              </a-select>\n            </td>\n            <td>--</td>\n            <td>\n              <a\n                @click=\"addReserve\"\n                v-if=\"infoAuth['shop:reserve:small_class_course_reserve|add']\"\n              >\n                新增预约\n              </a>\n            </td>\n          </tr>\n          <tr v-for=\"(item, index) in reserveList\" :key=\"index\">\n            <td>{{ item.member_name }}</td>\n            <td>{{ item.course_name }}</td>\n            <td>\n              {{\n                item.reserve_status | enumFilter('small_course.reserve_status')\n              }}\n            </td>\n            <td>\n              <st-popconfirm\n                v-if=\"\n                  item.auth['shop:reserve:small_class_course_reserve|checkin']\n                \"\n                title=\"确认签到？\"\n                @confirm=\"check(item.reserve_id)\"\n                class=\"action__item\"\n              >\n                <a>签到</a>\n              </st-popconfirm>\n              <st-popconfirm\n                v-if=\"\n                  item.auth['shop:reserve:small_class_course_reserve|leave']\n                \"\n                title=\"确认请假？\"\n                @confirm=\"leave(item.reserve_id)\"\n                class=\"action__item\"\n              >\n                <a>请假</a>\n              </st-popconfirm>\n              <st-popconfirm\n                v-if=\"item.auth['shop:reserve:small_class_course_reserve|del']\"\n                title=\"确认取消预约？\"\n                @confirm=\"cancelAtion(item.reserve_id)\"\n                class=\"action__item\"\n              >\n                <a>取消预约</a>\n              </st-popconfirm>\n              <st-popconfirm\n                v-if=\"\n                  item.auth[\n                    'shop:reserve:small_class_course_reserve|supplement_checkin'\n                  ]\n                \"\n                title=\"确认补签到？\"\n                @confirm=\"checkSign(item.reserve_id)\"\n                class=\"action__item\"\n              >\n                <a>补签到</a>\n              </st-popconfirm>\n              <st-popconfirm\n                v-if=\"\n                  item.auth[\n                    'shop:reserve:small_class_course_reserve|supplement'\n                  ]\n                \"\n                title=\"确认补课？\"\n                @confirm=\"remedialCourse(item.reserve_id)\"\n                class=\"action__item\"\n              >\n                <a>补课</a>\n              </st-popconfirm>\n              <a\n                @click=\"getMessage(item.reserve_id)\"\n                v-if=\"\n                  item.auth[\n                    'shop:reserve:small_class_course_reserve|get_supplement'\n                  ]\n                \"\n              >\n                查看补课\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </st-form-table>\n    </st-container>\n    <div slot=\"footer\" class=\"ta-r\">\n      <a-popconfirm\n        @confirm=\"cancelSchedule\"\n        okText=\"确认\"\n        cancelText=\"取消\"\n        v-if=\"\n          infoAuth && infoAuth['shop:schedule:small_class_course_schedule|del']\n        \"\n      >\n        <div slot=\"title\">\n          是否取消课程？\n          <div class=\"color-danger\">将发送消息通知已报名用户</div>\n        </div>\n        <st-button>取消课程</st-button>\n      </a-popconfirm>\n      <st-button\n        class=\"mg-l8\"\n        type=\"primary\"\n        @click=\"updateSchedule\"\n        v-if=\"\n          infoAuth && infoAuth['shop:schedule:small_class_course_schedule|edit']\n        \"\n      >\n        修改课程\n      </st-button>\n    </div>\n  </st-modal>\n</template>\n\n<script>\nimport { SmallCourseScheduleCommonService as CommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service'\nimport { SmallCourseScheduleReserveService as ReserveService } from '@/views/pages/shop/product/course/schedule/small-course/service#/reserve.service'\nimport { SmallCourseScheduleService as ScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service'\nimport ScheduleSmallCourseReservedCourse from '@/views/biz-modals/schedule/small-course/reserved-course'\nimport ScheduleSmallCourseRemedialCourse from '@/views/biz-modals/schedule/small-course/remedial-course'\nimport ScheduleSmallCourseRemedialInfo from '@/views/biz-modals/schedule/small-course/remedial-info'\nimport { RemedialCourseInfoService } from './remedial-info.service'\nimport { COURSE_TYPE, RESERVE_TYPE } from '@/constants/course/small-course'\nimport { columns } from './reserve-info.config'\nexport default {\n  name: 'ReserveInfo',\n  modals: {\n    ScheduleSmallCourseReservedCourse,\n    ScheduleSmallCourseRemedialCourse,\n    ScheduleSmallCourseRemedialInfo\n  },\n  serviceInject() {\n    return {\n      commonService: CommonService,\n      reserveService: ReserveService,\n      scheduleService: ScheduleService,\n      remedialInfoService: RemedialCourseInfoService\n    }\n  },\n  rxState() {\n    const commonService = this.commonService\n    return {\n      loading: this.reserveService.loading$,\n      memberOptions: commonService.memberOptions$,\n      consumeOptions: commonService.consumeOptions$,\n      reserveList: this.reserveService.reserveList$,\n      reserveInfo: this.reserveService.reserveInfo$,\n      reserveStatusOptions: this.remedialInfoService.reserveStatusOptions$,\n      auth: this.reserveService.auth$,\n      infoAuth: this.reserveService.infoAuth$\n    }\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      COURSE_TYPE,\n      RESERVE_TYPE,\n      memberId: '',\n      consumeType: '',\n      consumeId: '',\n      showConsumeType: '',\n      showMemberName: '',\n      dataSource: [],\n      keyword: '',\n      show: false,\n      info: {},\n      checked: false\n    }\n  },\n  computed: {\n    columns,\n    courseId() {\n      return this.reserveInfo.course_id\n    },\n    scheduleId() {\n      return this.reserveInfo.id\n    }\n  },\n  created() {\n    this.getReserveInfo()\n  },\n  methods: {\n    dealCourtName(courseName, currentCourseName) {\n      return currentCourseName\n        ? courseName + '.' + currentCourseName\n        : courseName\n    },\n    keywordFilter(item) {\n      let str\n      if (item.is_minors === 1) {\n        str = `${item.member_name}(未成年) ${item.parent_mobile}(${item.parent_user_role})`.replace(\n          new RegExp(this.keyword),\n          `<span class=\"color-primary\">${this.keyword}</span>`\n        )\n      } else {\n        str = `${item.member_name} ${item.mobile}`.replace(\n          new RegExp(this.keyword),\n          `<span class=\"color-primary\">${this.keyword}</span>`\n        )\n      }\n      return str\n    },\n    onSearch(value) {\n      this.keyword = value\n      this.commonService\n        .getMemberList({\n          member: value\n        })\n        .subscribe()\n    },\n    onChange(value) {\n      this.memberId = value\n      this.showConsumeType = ''\n      this.commonService\n        .getConsumeList({\n          course_id: this.courseId,\n          member_id: value\n        })\n        .subscribe()\n    },\n    onChangeConsumeType(val) {\n      const obj = JSON.parse(val)\n      this.consumeType = obj.consume_type\n      this.consumeId = obj.id\n    },\n    // 补签到\n    checkSign(id) {\n      this.reserveService.checkSign(id).subscribe(this.getReserveInfo)\n    },\n    // 新增预约\n    addReserve() {\n      const params = {\n        schedule_id: this.id,\n        member_id: this.memberId,\n        consume_type: this.consumeType,\n        consume_id: this.consumeId\n      }\n      this.reserveService.addAtion(params).subscribe(res => {\n        this.onAddReserveSuccess()\n      })\n    },\n    cancelReserve(id) {\n      this.reserveService.cancel(id).subscribe(this.onCancelReserveSuccess)\n    },\n    // 签到\n    check(id) {\n      this.reserveService.check(id).subscribe(this.onCheckSuccess)\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData\n      }\n      target.editable = true\n      this.data = newData\n    },\n    save(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        delete target.editable\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n      }\n    },\n    // 取消排期\n    cancelSchedule() {\n      this.scheduleService\n        .cancelCustom(this.id)\n        .subscribe(this.onDelScheduleScuccess)\n    },\n    // 修改课程\n    updateSchedule() {\n      this.show = false\n      this.$modalRouter.push({\n        name: 'schedule-small-course-reserved-course',\n        props: {\n          item: this.reserveInfo,\n          checked: this.checked\n        },\n        on: {\n          ok: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 补课回显\n    remedialCourse(reserve_id) {\n      this.$modalRouter.push({\n        name: 'schedule-small-course-remedial-course',\n        props: {\n          reserve_id: reserve_id\n        },\n        on: {\n          ok: () => {\n            this.$router.reload()\n          }\n        }\n      })\n      this.show = false\n    },\n    // 查看补课\n    getMessage(id) {\n      this.$modalRouter.push({\n        name: 'schedule-small-course-remedial-info',\n        props: {\n          id: id\n        }\n      })\n      this.show = false\n    },\n    // 取消预约\n    cancelAtion(id) {\n      this.reserveService.cancelAtion(id).subscribe(this.onDelScheduleScuccess)\n    },\n    // 请假\n    leave(id) {\n      this.reserveService.leave(id).subscribe(this.getReserveInfo)\n    },\n    getReserveInfo() {\n      this.reserveService.getInfo(this.id).subscribe(res => {\n        if (this.reserveList.length) {\n          this.checked = true\n        }\n      })\n    },\n    onAddReserveSuccess() {\n      this.memberId = undefined\n      this.consumeType = undefined\n      this.showConsumeType = ''\n      this.showMemberName = ''\n      this.getReserveInfo()\n    },\n    onCancelReserveSuccess() {\n      this.getReserveInfo()\n    },\n    onCheckSuccess() {\n      this.getReserveInfo()\n    },\n    onDelScheduleScuccess() {\n      console.log('取消课程!')\n      this.$router.reload()\n      this.show = false\n    }\n  }\n}\n</script>\n"]}]}