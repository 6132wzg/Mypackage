{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/checkbox-facility/checkbox-facility-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/checkbox-facility/checkbox-facility-item.vue","mtime":1591147717100},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'StCheckboxFacilityItem',\n  inject: {\n    groupProvide: 'checkboxFacilityGroupProvide',\n    emitGroup: 'emitCheckboxFacilityGroup',\n    initGroup: 'initCheckboxFacilityGroup'\n  },\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    stIconComputed: function stIconComputed() {\n      return this.icon;\n    },\n    stLabelComputed: function stLabelComputed() {\n      return this.label;\n    },\n    stValueComputed: function stValueComputed() {\n      return this.value;\n    },\n    stDisabledComputed: function stDisabledComputed() {\n      return this.disabled;\n    },\n    stGroupValueComputed: function stGroupValueComputed() {\n      return this.groupProvide.groupValue.value;\n    },\n    stGroupDisabledComputed: function stGroupDisabledComputed() {\n      return this.groupProvide.groupValue.disabled;\n    }\n  },\n  watch: {\n    stIconComputed: {\n      handler: function handler(newVal, oldVal) {\n        this.init();\n      },\n      deep: true\n    },\n    stLabelComputed: {\n      handler: function handler(newVal, oldVal) {\n        this.init();\n      },\n      deep: true\n    },\n    stValueComputed: {\n      handler: function handler(newVal, oldVal) {\n        this.init();\n      },\n      deep: true\n    },\n    stDisabledComputed: {\n      handler: function handler(newVal, oldVal) {\n        this.init();\n      },\n      deep: true\n    },\n    stGroupValueComputed: {\n      handler: function handler(newVal, oldVal) {\n        this.init();\n      },\n      deep: true\n    },\n    stGroupDisabledComputed: {\n      handler: function handler(newVal, oldVal) {\n        this.init();\n      },\n      deep: true\n    }\n  },\n  data: function data() {\n    return {\n      stSelect: false,\n      stDisabled: false\n    };\n  },\n  methods: {\n    check: function check() {\n      if (this.stDisabled) return false;\n      this.stSelect = !this.stSelect;\n      this.$emit('change', this.stSelect);\n      this.emitGroup({\n        key: this.stValueComputed,\n        value: this.stSelect\n      });\n    },\n    init: function init() {\n      this.stSelect = this.stGroupValueComputed.includes(this.value);\n      this.stDisabled = this.stDisabledComputed || this.stGroupDisabledComputed;\n    }\n  },\n  created: function created() {\n    this.init();\n    this.initGroup(this.stValueComputed);\n  }\n};",{"version":3,"sources":["checkbox-facility-item.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"st-checkbox-facility-item\"\n    @click=\"check\"\n    :class=\"{ select: stSelect, disabled: stDisabled }\"\n  >\n    <div class=\"st-checkbox-facility-item-icon\">\n      <st-icon :type=\"stIconComputed\" size=\"24px\"></st-icon>\n      <p class=\"st-checkbox-facility-item-label\">{{ stLabelComputed }}</p>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'StCheckboxFacilityItem',\n  inject: {\n    groupProvide: 'checkboxFacilityGroupProvide',\n    emitGroup: 'emitCheckboxFacilityGroup',\n    initGroup: 'initCheckboxFacilityGroup'\n  },\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    stIconComputed() {\n      return this.icon\n    },\n    stLabelComputed() {\n      return this.label\n    },\n    stValueComputed() {\n      return this.value\n    },\n    stDisabledComputed() {\n      return this.disabled\n    },\n    stGroupValueComputed() {\n      return this.groupProvide.groupValue.value\n    },\n    stGroupDisabledComputed() {\n      return this.groupProvide.groupValue.disabled\n    }\n  },\n  watch: {\n    stIconComputed: {\n      handler(newVal, oldVal) {\n        this.init()\n      },\n      deep: true\n    },\n    stLabelComputed: {\n      handler(newVal, oldVal) {\n        this.init()\n      },\n      deep: true\n    },\n    stValueComputed: {\n      handler(newVal, oldVal) {\n        this.init()\n      },\n      deep: true\n    },\n    stDisabledComputed: {\n      handler(newVal, oldVal) {\n        this.init()\n      },\n      deep: true\n    },\n    stGroupValueComputed: {\n      handler(newVal, oldVal) {\n        this.init()\n      },\n      deep: true\n    },\n    stGroupDisabledComputed: {\n      handler(newVal, oldVal) {\n        this.init()\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {\n      stSelect: false,\n      stDisabled: false\n    }\n  },\n  methods: {\n    check() {\n      if (this.stDisabled) return false\n      this.stSelect = !this.stSelect\n      this.$emit('change', this.stSelect)\n      this.emitGroup({ key: this.stValueComputed, value: this.stSelect })\n    },\n    init() {\n      this.stSelect = this.stGroupValueComputed.includes(this.value)\n      this.stDisabled = this.stDisabledComputed || this.stGroupDisabledComputed\n    }\n  },\n  created() {\n    this.init()\n    this.initGroup(this.stValueComputed)\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-components/checkbox-facility"}]}