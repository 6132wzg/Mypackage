{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/info/reserve.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/member/info/reserve.vue","mtime":1596792848065},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ReserveService } from './reserve.service'\nimport tableMixin from '@/mixins/table.mixin'\nimport UserRange from './sold#/user-range'\nimport EntryData from './sold#/entry-data'\nimport {\n  memberCard,\n  depositCard,\n  personalCourse,\n  packageColumns,\n  smallCourse\n} from './reserve.config'\nimport { UserService } from '@/services/user.service'\n\nexport default {\n  mixins: [tableMixin],\n  bem: {\n    b: 'member-reserve'\n  },\n  name: 'InfoReserve',\n  serviceInject() {\n    return {\n      reserveService: ReserveService,\n      userService: UserService\n    }\n  },\n  rxState() {\n    const {\n      memberCardList$,\n      depositCardList$,\n      personalCourseList$,\n      packageList$,\n      smallCourseList$,\n      memberCardPage$,\n      depositCardPage$,\n      personalCoursePage$,\n      packagePage$,\n      smallCoursePage$\n    } = this.reserveService\n    return {\n      memberCardList$,\n      depositCardList$,\n      personalCourseList$,\n      packageList$,\n      smallCourseList$,\n      memberCardPage$,\n      depositCardPage$,\n      personalCoursePage$,\n      packagePage$,\n      smallCoursePage$,\n      cardConsumeList: this.userService.getOptions$('member.card_consume_type'),\n      courseConsumeList: this.userService.getOptions$(\n        'member.course_consume_type'\n      )\n    }\n  },\n  data() {\n    return {\n      cardquery: {\n        start_time: '',\n        card_type: 1,\n        keyword: ''\n      },\n      coursequery: {\n        buy_time: '',\n        course_type: 1,\n        keyword: ''\n      },\n      id: ''\n    }\n  },\n  components: {\n    UserRange,\n    EntryData\n  },\n  computed: {\n    memberCard,\n    depositCard,\n    personalCourse,\n    packageColumns,\n    smallCourse\n  },\n  methods: {\n    getSoldDetail(type, subType, id) {\n      window.open(\n        `${window.location.origin}/shop/sold/${type}/info/${subType}/info/operation-record?id=${id}`\n      )\n    },\n    onTableMemberChange(type, e) {\n      this.$searchQuery.type = type\n      this.reserveService\n        .changePage({\n          id: this.id,\n          type,\n          page: e.current,\n          size: e.pageSize\n        })\n        .subscribe()\n    },\n    memberInfo(record) {\n      const arr = record.members || []\n      let familyInfo = ''\n      if (record.card_number_type === 2) {\n        familyInfo = `卡成员：${arr\n          .filter(item => item.is_purchaser !== 1)\n          .map(item => item.member_info)\n          .join(',')}`\n      }\n      return `购卡人：${arr\n        .filter(item => item.is_purchaser === 1)\n        .map(item => item.member_info)\n        .join('')}${familyInfo}`\n    },\n    /**\n     * 设置页码\n     * cardOrCourse 卡或课\n     * current 当前页\n     * pageSize 每页条数\n     */\n    initPage(cardOrCourse, current_page, size) {\n      if (cardOrCourse === 1) {\n        this.cardPage.size = size\n        this.cardPage.current_page = current_page\n      } else if (cardOrCourse === 2) {\n        this.coursePage.current_page = current_page\n        this.coursePage.size = size\n      }\n    },\n    // 拼接入参\n    assignObj(cardOrCourse) {\n      if (cardOrCourse === 1) {\n        return Object.assign(this.cardPage, this.cardquery)\n      } else if (cardOrCourse === 2) {\n        return Object.assign(this.coursePage, this.coursequery)\n      }\n    },\n    // 选择日期\n    onChooseDate(date, str) {\n      console.log('======', date, str)\n      this.initPage(1, 1, 10)\n      this.cardquery.start_time = str\n      this.reserveService\n        .getCardInfo(this.id, this.assignObj(1))\n        .subscribe(res => {})\n    },\n    // 选择卡类型\n    onChooseCardType(e) {\n      console.log('选择卡', e)\n      this.initPage(1, 1, 10)\n      this.reserveService\n        .getCardInfo(this.id, this.assignObj(1))\n        .subscribe(res => {})\n    },\n    // 卡分页\n    cardPageChange(e) {\n      this.initPage(1, e.current, e.pageSize)\n      this.reserveService\n        .getCardInfo(this.id, this.assignObj(1))\n        .subscribe(res => {})\n    },\n    // 卡查询\n    searchMemberCard(e) {\n      this.initPage(1, 1, 10)\n      this.cardquery.keyword = e\n      this.reserveService\n        .getCardInfo(this.id, this.assignObj(1))\n        .subscribe(res => {})\n    },\n    // 课项选择时间\n    onChooseDateCourse(date, str) {\n      this.initPage(2, 1, 10)\n      this.coursequery.buy_time = str\n      this.reserveService\n        .getCourseInfo(this.id, this.assignObj(2))\n        .subscribe(res => {})\n    },\n    // 课项选择类型\n    onChooseCourseType(e) {\n      this.initPage(2, 1, 10)\n      this.reserveService\n        .getCourseInfo(this.id, this.assignObj(2))\n        .subscribe(res => {})\n    },\n    // 课查询\n    searchCourseName(e) {\n      this.initPage(2, 1, 10)\n      this.coursequery.keyword = e\n      this.reserveService\n        .getCourseInfo(this.id, this.assignObj(2))\n        .subscribe(res => {})\n    },\n    // 课分页\n    coursePageChange(e) {\n      this.initPage(2, e.current, e.pageSize)\n      this.reserveService\n        .getCourseInfo(this.id, this.assignObj(2))\n        .subscribe(res => {})\n    }\n  },\n  mounted() {\n    this.id = this.$searchQuery.id\n  }\n}\n",null]}