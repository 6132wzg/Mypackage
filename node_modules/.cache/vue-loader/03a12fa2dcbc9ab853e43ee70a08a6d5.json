{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/staff/salary-account-setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/staff/salary-account-setting.vue","mtime":1591147717254},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport StaffInfo from './staff-info'\nimport { SalaryAccountSettingService } from './salary-account-setting.service'\nimport { ruleOptions } from './salary-account-setting.config'\nexport default {\n  name: 'SalaryAccountSetting',\n  serviceInject() {\n    return {\n      salaryAccountSettingService: SalaryAccountSettingService\n    }\n  },\n  rxState() {\n    return {\n      accountInfo: this.salaryAccountSettingService.accountInfo$\n    }\n  },\n  data() {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      show: false,\n      form,\n      decorators\n    }\n  },\n  props: {\n    staff: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  components: {\n    StaffInfo\n  },\n  methods: {\n    getBankInfo() {\n      this.salaryAccountSettingService\n        .getBankInfo(this.staff.id)\n        .subscribe(res => {\n          this.form.setFieldsValue({\n            account_name: res.bank.account_name,\n            card_number: res.bank.card_number,\n            bank_name: res.bank.bank_name\n          })\n        })\n    },\n    onSubmit() {\n      this.form.validate().then(values => {\n        this.salaryAccountSettingService\n          .putStaffBindBank({ id: this.staff.id, ...values })\n          .subscribe(res => {\n            this.show = false\n            this.$router.reload()\n          })\n      })\n    }\n  },\n  mounted() {\n    this.getBankInfo()\n  }\n}\n",null]}