{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/sms/template.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/setting/sms/template.vue","mtime":1597396799929},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ruleOptions } from \"./template.config\";\nimport { TemplateService } from \"./template.service\";\nimport { MessageService } from '@/services/message.service';\nexport default {\n  name: 'SettingSmsTemplate',\n  bem: {\n    bModal: 'setting-sms-template'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      templateService: TemplateService,\n      messageService: MessageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      sign: this.templateService.sign$\n    };\n  },\n  props: {\n    info: {\n      type: Object\n    }\n  },\n  data: function data() {\n    var form = this.$stForm.create();\n    var decorators = form.decorators(ruleOptions);\n    return {\n      form: form,\n      decorators: decorators,\n      show: false\n    };\n  },\n  created: function created() {\n    this.getSmsSign();\n  },\n  mounted: function mounted() {\n    if (this.info) {\n      this.form.setFieldsValue({\n        title: this.info.title,\n        content: this.info.content\n      });\n    }\n  },\n  methods: {\n    getSmsSign: function getSmsSign() {\n      return this.templateService.getSmsSign().subscribe();\n    },\n    save: function save() {\n      var _this = this;\n\n      this.form.validate().then(function (values) {\n        if (_this.info) {\n          values.tmpl_id = _this.info.tmpl_id;\n\n          _this.templateService.editTemplate(_objectSpread({}, values)).subscribe(function (res) {\n            _this.messageService.success({\n              content: '编辑成功'\n            });\n\n            _this.$emit('success');\n\n            _this.show = false;\n          });\n        } else {\n          _this.templateService.addTemplate(_objectSpread({}, values)).subscribe(function (res) {\n            _this.messageService.success({\n              content: '新增成功'\n            });\n\n            _this.$emit('success');\n\n            _this.show = false;\n          });\n        }\n      });\n    },\n    cancel: function cancel() {}\n  }\n};",null]}