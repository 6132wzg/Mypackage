{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/editor/editor-image.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-components/st/editor/editor-image.vue","mtime":1600926382182},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { OssService } from '@/services/oss.service'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  name: 'EditImage',\n  serviceInject() {\n    return {\n      oss: OssService,\n      messageService: MessageService\n    }\n  },\n  data() {\n    return {}\n  },\n  props: {\n    editor: Object\n  },\n  methods: {\n    upload(data) {\n      this.oss\n        .put({\n          business: 'image',\n          isPrivate: false,\n          file: data.file,\n          uploadProgress: e => {\n            this.progress = parseInt((e.loaded / e.total) * 100)\n          }\n        })\n        .subscribe(val => {\n          this.$emit('change', { image: val, editor: this.editor })\n        })\n    },\n    beforeUpload(file) {\n      const MAX_SIZE = 2\n      const isLimit = file.size / 1024 / 1024 < MAX_SIZE\n      if (!isLimit) {\n        this.messageService.error({\n          content: `上传图片最大不能超过${MAX_SIZE}M`\n        })\n      }\n      return isLimit\n    }\n  }\n}\n",{"version":3,"sources":["editor-image.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editor-image.vue","sourceRoot":"src/views/biz-components/st/editor","sourcesContent":["<template>\n  <div class=\"tox-toolbar__group editor__upload\">\n    <a-upload\n      :fileList=\"[]\"\n      :customRequest=\"upload\"\n      :beforeUpload=\"beforeUpload\"\n    >\n      <a-icon type=\"upload\" />\n    </a-upload>\n  </div>\n</template>\n\n<script>\nimport { OssService } from '@/services/oss.service'\nimport { MessageService } from '@/services/message.service'\nexport default {\n  name: 'EditImage',\n  serviceInject() {\n    return {\n      oss: OssService,\n      messageService: MessageService\n    }\n  },\n  data() {\n    return {}\n  },\n  props: {\n    editor: Object\n  },\n  methods: {\n    upload(data) {\n      this.oss\n        .put({\n          business: 'image',\n          isPrivate: false,\n          file: data.file,\n          uploadProgress: e => {\n            this.progress = parseInt((e.loaded / e.total) * 100)\n          }\n        })\n        .subscribe(val => {\n          this.$emit('change', { image: val, editor: this.editor })\n        })\n    },\n    beforeUpload(file) {\n      const MAX_SIZE = 2\n      const isLimit = file.size / 1024 / 1024 < MAX_SIZE\n      if (!isLimit) {\n        this.messageService.error({\n          content: `上传图片最大不能超过${MAX_SIZE}M`\n        })\n      }\n      return isLimit\n    }\n  }\n}\n</script>\n"]}]}