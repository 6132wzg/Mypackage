{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/shop/map.vue","mtime":1600926555923},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { RegionService } from \"../../../services/region.service\";\nimport { QqMapService } from '@/services/qq-map.service';\nimport { AppConfig } from '@/constants/config';\nimport { findIndex, cloneDeep } from 'lodash-es';\nexport default {\n  bem: {\n    map: 'st-modal-map'\n  },\n  name: 'StModalMap',\n  serviceInject: function serviceInject() {\n    return {\n      regionService: RegionService,\n      appConfig: AppConfig,\n      qqMapService: QqMapService\n    };\n  },\n  computed: {\n    isAdd: function isAdd() {\n      return this.lat === '' || this.lng === '';\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      default: function _default() {\n        return '门店定位';\n      }\n    },\n    address: {\n      type: String,\n      default: function _default() {\n        return '无';\n      }\n    },\n    province: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    city: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    district: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    lat: {\n      type: String,\n      default: function _default() {\n        return '';\n      }\n    },\n    lng: {\n      type: String,\n      default: function _default() {\n        return '';\n      }\n    }\n  },\n  data: function data() {\n    return {\n      show: false,\n      dropdownVisible: false,\n      errorText: '',\n      latlngIsOk: true,\n      addressIsOk: true,\n      fieldNames: {\n        label: 'name',\n        value: 'id',\n        children: 'children'\n      },\n      regions: [],\n      searchText: '',\n      selectCity: '上海市',\n      PC: [310000, 310100],\n      st_address: '',\n      st_province: {},\n      st_city: {},\n      st_district: {},\n      // 定位data\n      locationData: {},\n      // 注释以下三个对象，提升vue性能\n      // mapObject: null,\n      // markerObject: null,\n      // searchServiceObject: null,\n      locationObject: null,\n      // 检索列表\n      poisList: [],\n      selectData: {\n        province: {},\n        city: {},\n        district: {},\n        address: '',\n        lat: '',\n        lng: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  watch: {\n    st_address: function st_address(newVal, oldVal) {\n      this.selectData.address = newVal;\n      this.addressIsOk = true;\n      this.errorText = this.latlngIsOk ? '' : '请选择具体地址!';\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      // 获取省市区\n      this.getRegions();\n      this.st_address = this.address;\n      this.st_province = cloneDeep(this.province);\n      this.st_city = cloneDeep(this.city);\n      this.st_district = cloneDeep(this.district);\n\n      if (this.isAdd) {\n        this.qqMapService.getLocation(\"https://apis.map.qq.com/ws/location/v1/ip?output=jsonp&key=\".concat(this.appConfig.QQ_MAP_KEY, \"&callback=\")).subscribe(function (res) {\n          if (res.status === 0) {\n            var code = res.result.ad_info.adcode;\n            var provinceId = \"\".concat(code).substr(0, 2) + '0000';\n            var cityId = \"\".concat(code).substr(0, 4) + '00'; // 定位成功\n\n            _this.selectData.province = {\n              // id: ~~(res.result.ad_info.adcode / 10000) * 10000,\n              id: +provinceId,\n              name: res.result.ad_info.province\n            };\n            _this.selectData.city = {\n              // id: ~~(res.result.ad_info.adcode / 100) * 100,\n              id: +cityId,\n              name: res.result.ad_info.city\n            };\n            _this.PC = [+provinceId, +cityId, res.result.ad_info.adcode];\n            _this.selectCity = res.result.ad_info.city;\n            _this.locationData = cloneDeep(res.result);\n          } else {\n            // 定位失败,设置为上海市政府\n            _this.locationFailed();\n\n            _this.locationData = {\n              location: {\n                lat: '31.230350',\n                lng: '121.473720'\n              }\n            };\n          } // 实例化map\n\n\n          var _this$locationData$lo = _this.locationData.location,\n              lat = _this$locationData$lo.lat,\n              lng = _this$locationData$lo.lng;\n\n          _this.qqMapService.init({\n            lat: lat,\n            lng: lng\n          }).then(function () {\n            _this.initSearch({\n              location: _this.selectCity\n            });\n          });\n        });\n      } else {\n        this.selectData.province = cloneDeep(this.st_province);\n        this.selectData.city = cloneDeep(this.st_city);\n        this.PC = [this.st_province.id, this.st_city.id];\n        this.selectCity = this.st_city.name;\n        this.locationData = {\n          location: {\n            lat: this.lat,\n            lng: this.lng\n          }\n        }; // 实例化map\n\n        var _this$locationData$lo2 = this.locationData.location,\n            lat = _this$locationData$lo2.lat,\n            lng = _this$locationData$lo2.lng;\n        this.qqMapService.init({\n          lat: lat,\n          lng: lng\n        }).then(function () {\n          _this.initSearch({\n            location: _this.selectCity\n          });\n        });\n      }\n    },\n    getRegions: function getRegions() {\n      var _this2 = this;\n\n      this.regionService.getRegionPC().subscribe(function (res) {\n        _this2.regions = res;\n      });\n    },\n    // 定位失败\n    locationFailed: function locationFailed() {\n      this.selectData.province = {\n        id: 310000,\n        name: '上海市'\n      };\n      this.selectData.city = {\n        id: 310100,\n        name: '上海市'\n      };\n      this.selectCity = '上海市';\n    },\n    // 省市change\n    cascaderChange: function cascaderChange(data) {\n      var province = cloneDeep(this.regions[findIndex(this.regions, function (o) {\n        return o.id === data[0];\n      })]);\n      var city = cloneDeep(province.children[findIndex(province.children, function (o) {\n        return o.id === data[1];\n      })]);\n      this.selectData.province = {\n        id: data[0],\n        name: province.name\n      };\n      this.selectData.city = {\n        id: data[1],\n        name: city.name\n      };\n      this.selectCity = city.name;\n      this.searchText = '';\n      this.poisList = [];\n      this.selectData.address = this.st_address = '';\n      this.selectData.lat = '';\n      this.selectData.lng = '';\n    },\n    // 实例化检索服务\n    initSearch: function initSearch(_ref) {\n      var location = _ref.location;\n      var that = this;\n      this.searchServiceObject = new qq.maps.SearchService({\n        location: '上海市',\n        autoExtend: false,\n        // eslint-disable-next-line\n        error: function error(_error) {\n          that.poisList = [];\n        },\n        complete: function complete(results) {\n          if (results.type === 'POI_LIST') {\n            if (results.detail.pois.length) {\n              results.detail.pois.forEach(function (i, index) {\n                var latLng = new qq.maps.LatLng(i.latLng.lat, i.latLng.lng);\n                that.initLocation(index).searchCityByLatLng(latLng);\n              });\n            }\n\n            that.poisList = cloneDeep(results.detail.pois);\n          } else {\n            that.poisList = [];\n          }\n        }\n      });\n    },\n    // 实例化坐标定位服务\n    initLocation: function initLocation(index) {\n      var that = this;\n      return new qq.maps.CityService({\n        complete: function complete(results) {\n          that.$set(that.poisList[index], 'location', results);\n        }\n      });\n    },\n    onSearch: function onSearch(data) {\n      this.dropdownVisible = true;\n      this.searchServiceObject.setLocation(this.selectCity);\n      this.searchServiceObject.search(data);\n    },\n    onChange: function onChange(data) {\n      this.dropdownVisible = true;\n      this.searchServiceObject.setLocation(this.selectCity);\n      this.searchServiceObject.search(data.target.value);\n    },\n    selectLocation: function selectLocation(data) {\n      this.dropdownVisible = false;\n      this.searchText = data.name;\n      this.selectData.address = this.st_address = data.address;\n      var position = new qq.maps.LatLng(data.latLng.lat, data.latLng.lng);\n      this.qqMapService.resetMap(position);\n      this.selectData.lat = String(data.latLng.lat);\n      this.selectData.lng = String(data.latLng.lng);\n    },\n    searchInput: function searchInput() {\n      this.latlngIsOk = true;\n      this.errorText = this.addressIsOk ? '' : '请输入详细地址！';\n    },\n    handleOk: function handleOk() {\n      var _this3 = this;\n\n      this.latlngIsOk = this.selectData.lat !== '' && this.selectData.lng !== '';\n      this.addressIsOk = this.selectData.address !== '';\n\n      if (!this.latlngIsOk && !this.addressIsOk) {\n        this.errorText = '请选择具体地址并输入详细地址!';\n      } else {\n        if (!this.latlngIsOk) {\n          this.errorText = '请选择具体地址!';\n        } else if (!this.addressIsOk) {\n          this.errorText = '请输入详细地址!';\n        } else {\n          this.qqMapService.getLocation(\"https://apis.map.qq.com/ws/geocoder/v1/?location=\".concat(this.selectData.lat, \",\").concat(this.selectData.lng, \"&output=jsonp&key=\").concat(this.appConfig.QQ_MAP_KEY, \"&callback=\")).subscribe(function (res) {\n            var code = res.result.ad_info.adcode;\n            var provinceId = \"\".concat(code).substr(0, 2) + '0000';\n            var cityId = \"\".concat(code).substr(0, 4) + '00'; // 定位成功\n\n            _this3.selectData.province.id = +provinceId;\n            _this3.selectData.province.name = res.result.ad_info.province;\n            _this3.selectData.city.id = +cityId;\n            _this3.selectData.city.name = res.result.ad_info.city;\n            _this3.selectData.district.id = +res.result.ad_info.adcode;\n            _this3.selectData.district.name = res.result.ad_info.district;\n            _this3.selectData.district.id = +res.result.ad_info.adcode;\n            _this3.selectData.district.name = res.result.ad_info.district;\n\n            _this3.$emit('ok', _this3.selectData);\n\n            _this3.show = false;\n          });\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <st-modal\n    :title=\"title\"\n    v-model=\"show\"\n    :footer=\"null\"\n    wrapClassName=\"st-modal-map\"\n    width=\"484px\"\n  >\n    <div :class=\"map('search')\">\n      <a-cascader\n        :class=\"map('cascader')\"\n        :options=\"regions\"\n        :fieldNames=\"fieldNames\"\n        v-model=\"PC\"\n        @change=\"cascaderChange\"\n      >\n        <a href=\"javascript:void(0)\" :class=\"map('cascader__btn')\">\n          {{ selectCity }}\n          <st-icon type=\"down\" size=\"12px\" :class=\"map('icon')\"></st-icon>\n        </a>\n      </a-cascader>\n      <div :class=\"map('search-input')\">\n        <a-dropdown :trigger=\"['click']\" v-model=\"dropdownVisible\">\n          <a-input-search\n            @change=\"onChange\"\n            @input=\"searchInput\"\n            :class=\"{ error: !latlngIsOk }\"\n            placeholder=\"请输入街道、小区或商圈名称\"\n            v-model=\"searchText\"\n            @search=\"onSearch\"\n          />\n          <ul\n            slot=\"overlay\"\n            :class=\"map('search-menu')\"\n            v-scrollBar=\"{ stopPropagation: true }\"\n          >\n            <li :class=\"map('search-faild')\" v-if=\"!poisList.length\">无结果</li>\n            <template v-if=\"poisList.length\">\n              <li\n                @click=\"selectLocation(item)\"\n                :class=\"map('search-item')\"\n                v-for=\"(item, index) in poisList\"\n                :key=\"index\"\n              >\n                <p :class=\"map('search-title')\">{{ item.name }}</p>\n                <span :class=\"map('search-describe')\" v-if=\"item.location\">\n                  {{\n                    item.location.detail.detail\n                      .split(',')\n                      .reverse()\n                      .join('')\n                  }}\n                </span>\n              </li>\n            </template>\n          </ul>\n        </a-dropdown>\n      </div>\n    </div>\n    <div :class=\"map('map')\" id=\"mapcontainer\"></div>\n    <div :class=\"map('address')\">\n      <a-textarea\n        :class=\"{ error: !addressIsOk }\"\n        placeholder=\"详细地址，例：16号楼5层502\"\n        v-model=\"st_address\"\n        :rows=\"3\"\n      />\n    </div>\n    <div :class=\"map('button')\">\n      <span v-if=\"!latlngIsOk || !addressIsOk\" :class=\"map('error-info')\">\n        {{ errorText }}\n      </span>\n      <st-button type=\"primary\" @click=\"handleOk\">提交</st-button>\n    </div>\n  </st-modal>\n</template>\n<script>\nimport { RegionService } from '../../../services/region.service'\nimport { QqMapService } from '@/services/qq-map.service'\nimport { AppConfig } from '@/constants/config'\nimport { findIndex, cloneDeep } from 'lodash-es'\nexport default {\n  bem: {\n    map: 'st-modal-map'\n  },\n  name: 'StModalMap',\n  serviceInject() {\n    return {\n      regionService: RegionService,\n      appConfig: AppConfig,\n      qqMapService: QqMapService\n    }\n  },\n  computed: {\n    isAdd() {\n      return this.lat === '' || this.lng === ''\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      default() {\n        return '门店定位'\n      }\n    },\n    address: {\n      type: String,\n      default() {\n        return '无'\n      }\n    },\n    province: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    city: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    district: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    lat: {\n      type: String,\n      default() {\n        return ''\n      }\n    },\n    lng: {\n      type: String,\n      default() {\n        return ''\n      }\n    }\n  },\n  data() {\n    return {\n      show: false,\n      dropdownVisible: false,\n      errorText: '',\n      latlngIsOk: true,\n      addressIsOk: true,\n      fieldNames: {\n        label: 'name',\n        value: 'id',\n        children: 'children'\n      },\n      regions: [],\n      searchText: '',\n      selectCity: '上海市',\n      PC: [310000, 310100],\n      st_address: '',\n      st_province: {},\n      st_city: {},\n      st_district: {},\n      // 定位data\n      locationData: {},\n      // 注释以下三个对象，提升vue性能\n      // mapObject: null,\n      // markerObject: null,\n      // searchServiceObject: null,\n      locationObject: null,\n      // 检索列表\n      poisList: [],\n      selectData: {\n        province: {},\n        city: {},\n        district: {},\n        address: '',\n        lat: '',\n        lng: ''\n      }\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  watch: {\n    st_address(newVal, oldVal) {\n      this.selectData.address = newVal\n      this.addressIsOk = true\n      this.errorText = this.latlngIsOk ? '' : '请选择具体地址!'\n    }\n  },\n  methods: {\n    init() {\n      // 获取省市区\n      this.getRegions()\n      this.st_address = this.address\n      this.st_province = cloneDeep(this.province)\n      this.st_city = cloneDeep(this.city)\n      this.st_district = cloneDeep(this.district)\n      if (this.isAdd) {\n        this.qqMapService\n          .getLocation(\n            `https://apis.map.qq.com/ws/location/v1/ip?output=jsonp&key=${this.appConfig.QQ_MAP_KEY}&callback=`\n          )\n          .subscribe(res => {\n            if (res.status === 0) {\n              let code = res.result.ad_info.adcode\n              let provinceId = `${code}`.substr(0, 2) + '0000'\n              let cityId = `${code}`.substr(0, 4) + '00'\n              // 定位成功\n              this.selectData.province = {\n                // id: ~~(res.result.ad_info.adcode / 10000) * 10000,\n                id: +provinceId,\n                name: res.result.ad_info.province\n              }\n              this.selectData.city = {\n                // id: ~~(res.result.ad_info.adcode / 100) * 100,\n                id: +cityId,\n                name: res.result.ad_info.city\n              }\n              this.PC = [+provinceId, +cityId, res.result.ad_info.adcode]\n              this.selectCity = res.result.ad_info.city\n              this.locationData = cloneDeep(res.result)\n            } else {\n              // 定位失败,设置为上海市政府\n              this.locationFailed()\n              this.locationData = {\n                location: {\n                  lat: '31.230350',\n                  lng: '121.473720'\n                }\n              }\n            }\n            // 实例化map\n            const { lat, lng } = this.locationData.location\n            this.qqMapService.init({ lat, lng }).then(() => {\n              this.initSearch({ location: this.selectCity })\n            })\n          })\n      } else {\n        this.selectData.province = cloneDeep(this.st_province)\n        this.selectData.city = cloneDeep(this.st_city)\n        this.PC = [this.st_province.id, this.st_city.id]\n        this.selectCity = this.st_city.name\n        this.locationData = {\n          location: {\n            lat: this.lat,\n            lng: this.lng\n          }\n        }\n        // 实例化map\n        const { lat, lng } = this.locationData.location\n        this.qqMapService.init({ lat, lng }).then(() => {\n          this.initSearch({ location: this.selectCity })\n        })\n      }\n    },\n    getRegions() {\n      this.regionService.getRegionPC().subscribe(res => {\n        this.regions = res\n      })\n    },\n    // 定位失败\n    locationFailed() {\n      this.selectData.province = {\n        id: 310000,\n        name: '上海市'\n      }\n      this.selectData.city = {\n        id: 310100,\n        name: '上海市'\n      }\n      this.selectCity = '上海市'\n    },\n    // 省市change\n    cascaderChange(data) {\n      let province = cloneDeep(\n        this.regions[findIndex(this.regions, o => o.id === data[0])]\n      )\n      let city = cloneDeep(\n        province.children[findIndex(province.children, o => o.id === data[1])]\n      )\n      this.selectData.province = {\n        id: data[0],\n        name: province.name\n      }\n      this.selectData.city = {\n        id: data[1],\n        name: city.name\n      }\n      this.selectCity = city.name\n      this.searchText = ''\n      this.poisList = []\n      this.selectData.address = this.st_address = ''\n      this.selectData.lat = ''\n      this.selectData.lng = ''\n    },\n    // 实例化检索服务\n    initSearch({ location }) {\n      let that = this\n      this.searchServiceObject = new qq.maps.SearchService({\n        location: '上海市',\n        autoExtend: false,\n        // eslint-disable-next-line\n        error: function(error) {\n          that.poisList = []\n        },\n        complete: function(results) {\n          if (results.type === 'POI_LIST') {\n            if (results.detail.pois.length) {\n              results.detail.pois.forEach((i, index) => {\n                let latLng = new qq.maps.LatLng(i.latLng.lat, i.latLng.lng)\n                that.initLocation(index).searchCityByLatLng(latLng)\n              })\n            }\n            that.poisList = cloneDeep(results.detail.pois)\n          } else {\n            that.poisList = []\n          }\n        }\n      })\n    },\n    // 实例化坐标定位服务\n    initLocation(index) {\n      let that = this\n      return new qq.maps.CityService({\n        complete: function(results) {\n          that.$set(that.poisList[index], 'location', results)\n        }\n      })\n    },\n    onSearch(data) {\n      this.dropdownVisible = true\n      this.searchServiceObject.setLocation(this.selectCity)\n      this.searchServiceObject.search(data)\n    },\n    onChange(data) {\n      this.dropdownVisible = true\n      this.searchServiceObject.setLocation(this.selectCity)\n      this.searchServiceObject.search(data.target.value)\n    },\n    selectLocation(data) {\n      this.dropdownVisible = false\n      this.searchText = data.name\n      this.selectData.address = this.st_address = data.address\n      let position = new qq.maps.LatLng(data.latLng.lat, data.latLng.lng)\n      this.qqMapService.resetMap(position)\n      this.selectData.lat = String(data.latLng.lat)\n      this.selectData.lng = String(data.latLng.lng)\n    },\n    searchInput() {\n      this.latlngIsOk = true\n      this.errorText = this.addressIsOk ? '' : '请输入详细地址！'\n    },\n    handleOk() {\n      this.latlngIsOk = this.selectData.lat !== '' && this.selectData.lng !== ''\n      this.addressIsOk = this.selectData.address !== ''\n      if (!this.latlngIsOk && !this.addressIsOk) {\n        this.errorText = '请选择具体地址并输入详细地址!'\n      } else {\n        if (!this.latlngIsOk) {\n          this.errorText = '请选择具体地址!'\n        } else if (!this.addressIsOk) {\n          this.errorText = '请输入详细地址!'\n        } else {\n          this.qqMapService\n            .getLocation(\n              `https://apis.map.qq.com/ws/geocoder/v1/?location=${this.selectData.lat},${this.selectData.lng}&output=jsonp&key=${this.appConfig.QQ_MAP_KEY}&callback=`\n            )\n            .subscribe(res => {\n              let code = res.result.ad_info.adcode\n              let provinceId = `${code}`.substr(0, 2) + '0000'\n              let cityId = `${code}`.substr(0, 4) + '00'\n              // 定位成功\n              this.selectData.province.id = +provinceId\n              this.selectData.province.name = res.result.ad_info.province\n              this.selectData.city.id = +cityId\n              this.selectData.city.name = res.result.ad_info.city\n              this.selectData.district.id = +res.result.ad_info.adcode\n              this.selectData.district.name = res.result.ad_info.district\n              this.selectData.district.id = +res.result.ad_info.adcode\n              this.selectData.district.name = res.result.ad_info.district\n              this.$emit('ok', this.selectData)\n              this.show = false\n            })\n        }\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/biz-modals/shop"}]}