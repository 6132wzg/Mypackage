{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/period/edit.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/period/edit.service.ts","mtime":1591147717333},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { Effect, State, computed } from 'rx-state';\nimport { CardsApi, CardsInput } from '@/api/v1/cards';\nimport { ShopApi } from '@/api/v1/shop';\nimport { tap, pluck } from 'rxjs/operators';\nimport { UserService } from '@/services/user.service';\nimport { forkJoin } from 'rxjs';\n\nvar EditService = /*#__PURE__*/function () {\n  function EditService(cardsApi, shopApi, userService) {\n    _classCallCheck(this, EditService);\n\n    this.cardsApi = cardsApi;\n    this.shopApi = shopApi;\n    this.userService = userService;\n    this.cardInfo$ = new State({});\n    this.loading$ = new State({});\n    this.cardBgList$ = this.userService.getOptions$('member_card.card_bg_list');\n    this.admissionRange$ = this.userService.getOptions$('member_card.admission_range');\n    this.priceSetting$ = this.userService.getOptions$('member_card.price_setting');\n    this.supportSales$ = this.userService.getOptions$('member_card.support_sales');\n    this.unit$ = this.userService.getOptions$('member_card.unit');\n    this.sellType$ = this.userService.getOptions$('member_card.sell_type');\n    this.supportMemberNums$ = this.userService.getOptions$('member_card.support_member_num'); // 是否上架的卡\n\n    this.isShelfCard$ = computed(function (card) {\n      if (!card.shelf_shop_num) return false;\n      return card.shelf_shop_num > 0;\n    }, [this.cardInfo$]);\n  }\n\n  _createClass(EditService, [{\n    key: \"getCardInfo\",\n    value: function getCardInfo(id) {\n      var _this = this;\n\n      return this.cardsApi.getCardInfoBack(id, 'brand').pipe(tap(function (res) {\n        _this.cardInfo$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"getShopBasic\",\n    value: function getShopBasic(params) {\n      return this.shopApi.getShopBasic(params).pipe(pluck('shops'));\n    }\n  }, {\n    key: \"editCard\",\n    value: function editCard(data) {\n      return this.cardsApi.editCard(data, 'brand');\n    }\n  }, {\n    key: \"init\",\n    value: function init(id) {\n      return forkJoin([this.getCardInfo(id)]);\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter(to) {\n      if (to.meta.query.type === 'family-card') {\n        this.cardBgList$ = this.userService.getOptions$('member_card.family_card_bg_list');\n      }\n\n      return this.init(to.meta.query.id);\n    }\n  }]);\n\n  return EditService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof CardsInput !== \"undefined\" && CardsInput) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], EditService.prototype, \"editCard\", null);\n\nEditService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof CardsApi !== \"undefined\" && CardsApi) === \"function\" ? _b : Object, typeof (_c = typeof ShopApi !== \"undefined\" && ShopApi) === \"function\" ? _c : Object, typeof (_d = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _d : Object])], EditService);\nexport { EditService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/card/member/period/edit.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Controller, ServiceRoute } from 'vue-service-app'\nimport { Effect, State, computed } from 'rx-state'\nimport { CardsApi, CardsInput } from '@/api/v1/cards'\nimport { ShopApi, GetShopBasicInput } from '@/api/v1/shop'\nimport { tap, pluck } from 'rxjs/operators'\nimport { UserService } from '@/services/user.service'\nimport { forkJoin } from 'rxjs'\n@Injectable()\nexport class EditService implements Controller {\n  cardInfo$ = new State({})\n  loading$ = new State({})\n  cardBgList$ = this.userService.getOptions$('member_card.card_bg_list')\n  admissionRange$ = this.userService.getOptions$('member_card.admission_range')\n  priceSetting$ = this.userService.getOptions$('member_card.price_setting')\n  supportSales$ = this.userService.getOptions$('member_card.support_sales')\n  unit$ = this.userService.getOptions$('member_card.unit')\n  sellType$ = this.userService.getOptions$('member_card.sell_type')\n  supportMemberNums$ = this.userService.getOptions$(\n    'member_card.support_member_num'\n  )\n  // 是否上架的卡\n  isShelfCard$ = computed<boolean>(\n    (card: any) => {\n      if (!card.shelf_shop_num) return false\n      return card.shelf_shop_num > 0\n    },\n    [this.cardInfo$]\n  )\n  constructor(\n    private cardsApi: CardsApi,\n    private shopApi: ShopApi,\n    private userService: UserService\n  ) {}\n  getCardInfo(id: string) {\n    return this.cardsApi.getCardInfoBack(id, 'brand').pipe(\n      tap((res: any) => {\n        this.cardInfo$.commit(() => res.info)\n      })\n    )\n  }\n  getShopBasic(params: GetShopBasicInput) {\n    return this.shopApi.getShopBasic(params).pipe(pluck('shops'))\n  }\n  @Effect()\n  editCard(data: CardsInput) {\n    return this.cardsApi.editCard(data, 'brand')\n  }\n  init(id: string) {\n    return forkJoin([this.getCardInfo(id)])\n  }\n  beforeRouteEnter(to: ServiceRoute) {\n    if (to.meta.query.type === 'family-card') {\n      this.cardBgList$ = this.userService.getOptions$(\n        'member_card.family_card_bg_list'\n      )\n    }\n    return this.init(to.meta.query.id)\n  }\n}\n"],"sourceRoot":""}]}