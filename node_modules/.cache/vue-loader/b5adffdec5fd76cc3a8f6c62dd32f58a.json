{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/component#/add-course-range-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/component#/add-course-range-table.vue","mtime":1597396799966},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CourseSelectCourse from '@/views/biz-modals/course/select-course'\nimport { FormService } from './form.service'\nimport { AddRangePackageService } from '../add-range-package.service'\nimport { forEach, cloneDeep, remove, filter, reduce } from 'lodash'\nimport { coachColumns } from '../../course/personal/info#table.config'\nimport { isEmpty } from 'lodash-es'\nexport default {\n  name: 'AddCourseRangeTable',\n  bem: {\n    add: 'page-shop-add-range-package',\n    basic: 'page-shop-add-basic-package'\n  },\n  serviceInject() {\n    return {\n      addRangeService: AddRangePackageService\n    }\n  },\n  rxState() {\n    return {\n      coachList: this.addRangeService.coachList$\n    }\n  },\n  computed: {\n    // 团课小计\n    team_total() {\n      if (+this.packageData.team_times && +this.packageData.team_unit_price) {\n        return (\n          (this.packageData.team_times *\n            (this.packageData.team_unit_price * 10)) /\n          10\n        )\n      } else {\n        return 0\n      }\n    },\n    // 私教小计\n    personal_total() {\n      if (\n        +this.packageData.personal_times &&\n        +this.packageData.personal_unit_price\n      ) {\n        return (\n          (this.packageData.personal_times *\n            (this.packageData.personal_unit_price * 10)) /\n          10\n        )\n      } else {\n        return 0\n      }\n    },\n    all_total() {\n      let teamTotal = this.packageData.is_team ? this.team_total : 0\n      let personalTotal = this.packageData.is_personal ? this.personal_total : 0\n      return teamTotal + personalTotal\n    }\n  },\n  watch: {\n    packageData: {\n      handler: function(newValue, oldValue) {\n        if (!newValue.is_team && !newValue.is_personal) {\n          this.$emit('change', {})\n          return ''\n        }\n        if (newValue.is_team && !this.teamCourseList.length) {\n          this.$emit('change', {})\n          return false\n        }\n        if (newValue.is_personal && !this.personalCourseList.length) {\n          this.$emit('change', {})\n          return false\n        }\n        let personalTotal = 0\n        let teamTotal = 0\n        if (+newValue.personal_times && +newValue.personal_unit_price) {\n          personalTotal =\n            (newValue.personal_times * (newValue.personal_unit_price * 10)) / 10\n        } else {\n          personalTotal = 0\n        }\n        if (+newValue.team_times && +newValue.team_unit_price) {\n          teamTotal =\n            (newValue.team_times * (newValue.team_unit_price * 10)) / 10\n        } else {\n          teamTotal = 0\n        }\n        this.allTotal = personalTotal + teamTotal\n        this.$emit(\n          'change',\n          this.getRangeCourse({\n            team_range: this.teamCourseList,\n            ...newValue,\n            personal_range: this.personalCourseList\n          })\n        )\n      },\n      deep: true\n    },\n    teamCourseList: {\n      handler: function(newValue, oldValue) {\n        this.$emit(\n          'change',\n          this.getRangeCourse({\n            team_range: newValue,\n            ...this.packageData,\n            personal_range: this.personalCourseList\n          })\n        )\n      },\n      deep: true\n    },\n    personalCourseList: {\n      handler: function(newValue, oldValue) {\n        this.$emit(\n          'change',\n          this.getRangeCourse({\n            personal_range: newValue,\n            ...this.packageData,\n            team_range: this.teamCourseList\n          })\n        )\n      },\n      deep: true\n    }\n  },\n  props: {\n    useShopInfo: {\n      type: Object,\n      default: () => {}\n    },\n    initInfo: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    isLimit: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      personalCourseTotalList: [],\n      personalCoachListHistory: [],\n      personalCoachTotalList: [],\n      // 操作栏checkbox是否半选\n      teamIndeterminate: false,\n      // 操作栏checkbox是否半选\n      personalIndeterminate: false,\n      // 操作栏checkbox是全选\n      personalCheckAll: false,\n      // 配置课程表格是否显示\n      teamCourseListIsShow: false,\n      // 配置的课程总计\n      teamCourseTotalObject: {\n        team_times: 0,\n        total: 0\n      },\n      // 备份课程已做的操作\n      teamCourseTotalList: {},\n      // 批量操作的值\n      teamOperationObject: {\n        team_times: undefined,\n        team_unit_price: undefined\n      },\n      personalAllOperationCoachTotal: 0,\n      // 操作栏选择教练等级的dorpdown是否显示\n      coachAllOperationDropdownIsShow: false,\n      // 操作栏教练等级选择的值\n      personalAllOperationCoachList: [],\n      // 批量操作的值\n      personalOperationObject: {\n        personal_times: undefined,\n        personal_unit_price: undefined\n      },\n      // 配置课程表格是否显示\n      personalCourseListIsShow: false,\n      // 配置的课程总计\n      personalCourseTotalObject: {\n        personal_times: 0,\n        total: 0\n      },\n      // team course\n      teamCourseList: [],\n      // personal course\n      personalCourseList: [],\n      // 课程范围是否未输入过\n      courseIsFirstInput: true,\n      // 操作栏checkbox是全选\n      teamCheckAll: false,\n      packageData: {\n        is_team: false,\n        is_personal: false,\n        personal_times: undefined,\n        team_times: undefined,\n        team_unit_price: undefined,\n        personal_unit_price: undefined\n      },\n      allTotal: 0\n    }\n  },\n  modals: {\n    CourseSelectCourse\n  },\n  filters: {\n    // 单课价格统计\n    course_item_total(times, unit_price) {\n      if (+times && +unit_price) {\n        return (+times * (+unit_price * 10)) / 10\n      } else {\n        return 0\n      }\n    }\n  },\n  methods: {\n    getRangeCourse(rangeCourse) {\n      const form = cloneDeep(rangeCourse)\n      if (\n        typeof form.personal_range === 'object' &&\n        form.personal_range.length > 0\n      ) {\n        form.personal_range = form.personal_range.map(item => {\n          const coach_level = item.coachGradeList.map(item =>\n            typeof item !== 'object' ? item : item.id\n          )\n          return {\n            course_id: item.course_id,\n            coach_level\n          }\n        })\n      }\n      if (typeof form.team_range === 'object') {\n        form.team_range = form.team_range.map(item => {\n          return item.course_id\n        })\n      }\n      if (!rangeCourse.is_team) {\n        form.team_range = []\n      }\n      if (!rangeCourse.is_personal) {\n        form.personal_range = []\n      }\n      form.is_team = +rangeCourse.is_team\n      form.is_personal = +rangeCourse.is_personal\n      return form\n    },\n    coachAllChange(e) {\n      let selectCoach = filter(this.coachList, o => e.includes(o.id))\n      this.personalAllOperationCoachTotal = reduce(\n        selectCoach,\n        (sum, o) => sum + o.coach_number,\n        0\n      )\n    },\n    // 移除选择的课程\n    removeCourseItems(type) {\n      if (type === 'team') {\n        let arr = cloneDeep(this.teamCourseList)\n        remove(arr, o => o.courseChecked)\n        this.teamCourseList = arr\n      } else if (type === 'personal') {\n        let arr = cloneDeep(this.personalCourseList)\n        let removeList = remove(arr, o => o.courseChecked)\n        this.personalCourseList = arr\n        // 移除备份选择的教练list\n        let coachList = cloneDeep(this.personalCoachTotalList)\n        removeList.forEach(i => {\n          delete coachList[i.course_id]\n        })\n        this.personalCoachTotalList = coachList\n      }\n    },\n    // item coach checkboxGroup changeEvent\n    coachItemChange(e, id, index) {\n      if (!e.length) {\n        this.personalCourseList[\n          index\n        ].coachGradeList = this.personalCoachListHistory[index]\n        return\n      } else {\n        this.personalCoachListHistory[index] = cloneDeep(e)\n      }\n      console.log(this.personalCourseList)\n      this.personalCoachTotalList[id] = {}\n      this.personalCoachTotalList[id].list = cloneDeep(e)\n      let selectCoach = filter(this.coachList, o => e.includes(o.id))\n      let total = reduce(selectCoach, (sum, o) => sum + o.coach_number, 0)\n      this.personalCoachTotalList[id].total = total\n      // 设置教练总数\n      this.personalCourseList.forEach(i => {\n        if (i.course_id === id) {\n          i.coach = total\n        }\n      })\n    },\n    // 选择课程\n    courseItemCheckedChange(e, type, index) {\n      if (type === 'team') {\n        this.teamCourseList[index].courseChecked = e.target.checked\n      } else if (type === 'personal') {\n        this.personalCourseList[index].courseChecked = e.target.checked\n      }\n    },\n    // teamItems input change\n    teamInputChange(e, type, id) {\n      this.teamCourseTotalList[id] = this.teamCourseTotalList[id]\n        ? this.teamCourseTotalList[id]\n        : {}\n      this.teamCourseTotalList[id][type] = e\n    },\n    // 移除课程\n    removeCourseItem(type, id) {\n      if (type === 'team') {\n        let arr = cloneDeep(this.teamCourseList)\n        remove(arr, o => o.course_id === id)\n        this.teamCourseList = arr\n        // 移除备份\n        let list = cloneDeep(this.teamCourseTotalList)\n        delete list[id]\n        this.teamCourseTotalList = list\n      } else if (type === 'personal') {\n        let arr = cloneDeep(this.personalCourseList)\n        remove(arr, o => o.course_id === id)\n        this.personalCourseList = arr\n        // 移除备份\n        let coachList = cloneDeep(this.personalCourseTotalList)\n        delete coachList[id]\n        this.personalCourseTotalList = coachList\n      }\n    },\n    // 新增团课课程\n    addCourseTeam() {\n      this.$modalRouter.push({\n        name: 'course-select-course',\n        props: {\n          platform: 'brand',\n          type: 'team',\n          useShopInfo: this.useShopInfo,\n          courses: this.teamCourseList\n        },\n        on: {\n          ok: data => {\n            data.list.forEach(i => {\n              i.courseChecked = false\n              i.team_times = null\n              i.team_unit_price = null\n            })\n            forEach(this.teamCourseTotalList, (value, key) => {\n              forEach(data.list, innerValue => {\n                if (+innerValue.course_id === +key) {\n                  innerValue.team_times = value.team_times\n                  innerValue.team_unit_price = value.team_unit_price\n                }\n              })\n              // 删除teamCourseTotalList里不存在的course_id项\n              if (!data.list.some(o => +o.course_id === +key)) {\n                delete this.teamCourseTotalList[key]\n              }\n            })\n            this.teamCourseList = cloneDeep(data.list)\n          }\n        }\n      })\n    },\n    // 新增私教课\n    addCoursePersonal() {\n      let that = this\n      this.$modalRouter.push({\n        name: 'course-select-course',\n        props: {\n          platform: 'brand',\n          type: 'personal',\n          useShopInfo: this.useShopInfo,\n          courses: this.personalCourseList\n        },\n        on: {\n          ok(data) {\n            let coachGradeList = []\n            forEach(that.coachList, i => {\n              coachGradeList.push(i.id)\n            })\n            let total = reduce(\n              that.coachList,\n              (sum, o) => sum + o.coach_number,\n              0\n            )\n            data.list.forEach(i => {\n              i.courseChecked = false\n              i.coachGradeList = coachGradeList\n              i.coach = total\n            })\n            forEach(that.personalCoachTotalList, (value, key) => {\n              forEach(data.list, innerValue => {\n                if (+innerValue.course_id === +key) {\n                  innerValue.coachGradeList = cloneDeep(value.list)\n                  innerValue.coach = cloneDeep(value.total)\n                }\n              })\n              // 删除personalCoachTotalList里不存在的course_id项\n              if (!data.list.some(o => +o.course_id === +key)) {\n                delete that.personalCoachTotalList[key]\n              }\n            })\n            that.personalCoachListHistory = []\n            // 缓存选择的教练等级\n            data.list.forEach(i => {\n              that.personalCoachListHistory.push(i.coachGradeList)\n            })\n            that.personalCourseList = cloneDeep(data.list)\n          }\n        }\n      })\n    },\n    teamCheckboxChange(event) {\n      this.courseIsFirstInput = false\n      this.teamCourseListIsShow = +event.target.checked\n    },\n    personalCheckboxChange(e) {\n      this.courseIsFirstInput = false\n      this.personalCourseListIsShow = +e.target.checked\n    },\n    // team\n    teamCourseListShow() {\n      this.teamCourseListIsShow = !this.teamCourseListIsShow\n    },\n    // personal\n    personalCourseListShow() {\n      this.personalCourseListIsShow = !this.personalCourseListIsShow\n    },\n    // 全选\n    checkAllChange(type) {\n      if (type === 'team') {\n        this.teamCheckAll = !this.teamCheckAll\n        this.teamCourseList.forEach(i => {\n          i.courseChecked = this.teamCheckAll\n        })\n      } else if (type === 'personal') {\n        this.personalCheckAll = !this.personalCheckAll\n        this.personalCourseList.forEach(i => {\n          i.courseChecked = this.personalCheckAll\n        })\n      }\n    },\n    // 批量操作团课课程包节数\n    timesOperationOk(type) {\n      if (type === 'team') {\n        forEach(this.teamCourseList, o => {\n          if (o.courseChecked) {\n            o.team_times = +this.teamOperationObject.team_times\n            // 备份批量操作的数据\n            this.teamCourseTotalList[o.course_id] = this.teamCourseTotalList[\n              o.course_id\n            ]\n              ? this.teamCourseTotalList[o.course_id]\n              : {}\n            this.teamCourseTotalList[o.course_id].team_times = +this\n              .teamOperationObject.team_times\n          }\n        })\n      } else if (type === 'personal') {\n        forEach(this.personalCourseList, o => {\n          if (o.courseChecked) {\n            o.personal_times = +this.personalOperationObject.personal_times\n            // 备份批量操作的数据\n            this.personalCourseTotalList[o.course_id] = this\n              .personalCourseTotalList[o.course_id]\n              ? this.personalCourseTotalList[o.course_id]\n              : {}\n            this.personalCourseTotalList[o.course_id].personal_times = +this\n              .personalOperationObject.personal_times\n          }\n        })\n      }\n    },\n    // 批量操作团课课程包价格\n    unitPriceOperationOk(type) {\n      if (type === 'team') {\n        forEach(this.teamCourseList, o => {\n          if (o.courseChecked) {\n            o.team_unit_price = +this.teamOperationObject.team_unit_price\n            // 备份批量操作的数据\n            this.teamCourseTotalList[o.course_id] = this.teamCourseTotalList[\n              o.course_id\n            ]\n              ? this.teamCourseTotalList[o.course_id]\n              : {}\n            this.teamCourseTotalList[o.course_id].team_unit_price = +this\n              .teamOperationObject.team_unit_price\n          }\n        })\n      } else if (type === 'personal') {\n        forEach(this.personalCourseList, o => {\n          if (o.courseChecked) {\n            o.personal_unit_price = +this.personalOperationObject\n              .personal_unit_price\n            // 备份批量操作的数据\n            this.personalCourseTotalList[o.course_id] = this\n              .personalCourseTotalList[o.course_id]\n              ? this.personalCourseTotalList[o.course_id]\n              : {}\n            this.personalCourseTotalList[\n              o.course_id\n            ].personal_unit_price = +this.personalOperationObject\n              .personal_unit_price\n          }\n        })\n      }\n    },\n    coachAllOperationOk() {\n      // 批量设置\n      forEach(this.personalCourseList, value => {\n        if (value.courseChecked) {\n          value.coachGradeList = cloneDeep(this.personalAllOperationCoachList)\n          this.personalCourseTotalList[value.course_id] = this\n            .personalCourseTotalList[value.course_id]\n            ? this.personalCourseTotalList[value.course_id]\n            : {}\n          this.personalCourseTotalList[value.course_id].list = cloneDeep(\n            this.personalAllOperationCoachList\n          )\n        }\n      })\n      // 缓存选择的教练等级\n      this.personalCoachListHistory = []\n      forEach(this.personalCourseList, i => {\n        this.personalCoachListHistory.push(i.coachGradeList)\n      })\n      // 清空\n      this.personalAllOperationCoachList = []\n      // 收起\n      this.coachAllOperationDropdownIsShow = false\n    }\n  },\n  created() {\n    if (isEmpty(this.initInfo)) return ''\n    this.packageData.is_team = !!this.initInfo.is_team\n    this.packageData.is_personal = !!this.initInfo.is_personal\n    this.packageData.personal_unit_price = this.initInfo.personal_unit_price\n    this.packageData.team_unit_price = this.initInfo.team_unit_price\n    if (this.initInfo.is_limit) {\n      this.packageData.personal_times = this.initInfo.personal_times\n      this.packageData.team_times = this.initInfo.team_times\n    }\n    this.teamCourseList = this.initInfo.team_range\n    this.personalCourseList = this.initInfo.personal_range.map(item => {\n      this.$set(\n        item,\n        'coachGradeList',\n        item.coach_level.map(item => item.id)\n      )\n      return item\n    })\n    console.log('created', this.personalCourseList)\n  },\n  mounted() {\n    this.addRangeService.getCoachList().subscribe()\n  }\n}\n",null]}