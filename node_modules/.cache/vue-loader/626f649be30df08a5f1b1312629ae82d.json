{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/small-course/edit#/set-sell-price.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/product/course/manage/small-course/edit#/set-sell-price.vue","mtime":1600926556391},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { EditService } from '../edit.service'\nimport { MessageService } from '@/services/message.service'\nimport { UserService } from '@/services/user.service'\nimport { cloneDeep } from 'lodash-es'\nimport { ruleOptions } from '../form.config'\nimport { GradientService } from '@/views/fragments/course/personal#/gradient.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { CLASS_STATUS } from '@/constants/course/small-course'\nexport default {\n  name: 'SetSellPrice',\n  serviceInject() {\n    return {\n      editService: EditService,\n      messageService: MessageService,\n      userService: UserService,\n      gradientService: GradientService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.editService.loading$,\n      unitList: this.editService.unitList$,\n      sellType: this.editService.sellType$\n    }\n  },\n  components: {},\n  props: {\n    courseName: {\n      type: String,\n      default: ''\n    },\n    courseId: {\n      type: Number,\n      default: 0\n    },\n    info: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  data(vm) {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      isShowTransfer: false,\n      CLASS_STATUS\n    }\n  },\n  computed: {\n    isDisabled() {\n      return (\n        this.CLASS_STATUS.SIGNING_UNCLASSED === this.info.info.class_status ||\n        this.CLASS_STATUS.SIGNING_CLASSED === this.info.info.class_status ||\n        this.CLASS_STATUS.CLASSED === this.info.info.class_status\n      )\n    }\n  },\n  watch: {\n    courseName(val) {\n      this.form.setFieldsValue({\n        course_name: val\n      })\n    },\n    courseId(val) {\n      this.form.setFieldsValue({\n        course_id: val\n      })\n    }\n  },\n  mounted() {\n    const curTime = moment()\n    let start = cloneDeep(curTime)\n    let end = cloneDeep(curTime)\n    this.form.setFieldsValue({\n      apply_date: [start.add('30', 'minutes'), end.add('31', 'minutes')]\n    })\n    this.setFieldsValue()\n  },\n  methods: {\n    setFieldsValue() {\n      const info = this.info.price\n      this.form.setFieldsValue({\n        course_name: info.course_name,\n        is_allow_transfer: info.is_allow_transfer,\n        transfer_num: info.transfer_num,\n        sell_type: info.sell_type,\n        transfer_type: info.transfer_type,\n        sales_price: info.sales_price\n      })\n      if (info.apply_begin_time) {\n        this.form.setFieldsValue({\n          apply_date: [\n            moment(info.apply_begin_time),\n            moment(info.apply_end_time)\n          ]\n        })\n      }\n      this.isShowTransfer = info.is_allow_transfer\n    },\n    save(para) {\n      this.form.validateFields().then(values => {\n        values.course_id = this.courseId\n        values.apply_begin_time = values.apply_date[0].format(\n          'YYYY-MM-DD HH:mm'\n        )\n        values.apply_end_time = values.apply_date[1].format('YYYY-MM-DD HH:mm')\n        values.is_allow_transfer = values.is_allow_transfer ? 1 : 0\n        values.is_release = para\n        if (values.is_allow_transfer === 0) {\n          values.transfer_type = undefined\n          values.transfer_num = undefined\n        }\n        delete values.apply_date\n        this.editService.setPrice(values).subscribe(this.onSaveSuccess)\n      })\n    },\n    onSaveSuccess() {\n      this.messageService.success({\n        content: '提交成功'\n      })\n      this.$router.push({\n        name: 'shop-product-course-manage-small-course-list'\n      })\n    },\n    transferChange(val) {\n      this.isShowTransfer = val\n    },\n    disabledDate(current) {\n      return (\n        current && current.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')\n      )\n    }\n  }\n}\n",{"version":3,"sources":["set-sell-price.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"set-sell-price.vue","sourceRoot":"src/views/pages/shop/product/course/manage/small-course/edit#","sourcesContent":["<template>\n  <st-form :form=\"form\" class=\"page-set-sell-price\" labelWidth=\"130px\">\n    <a-row :gutter=\"8\">\n      <a-col :lg=\"11\">\n        <st-form-item>\n          <template slot=\"label\">{{ $c('small_course') }}名称</template>\n          <a-input\n            placeholder=\"课程名称\"\n            disabled\n            v-decorator=\"decorators.course_name\"\n          />\n        </st-form-item>\n        <st-form-item label=\"转让设置\" type=\"text\">\n          <st-checkbox\n            style=\"display:inline\"\n            @change=\"transferChange\"\n            v-decorator=\"decorators.is_allow_transfer\"\n          ></st-checkbox>\n          <span class=\"mg-r16\">支持转让</span>\n\n          <st-input-number\n            v-show=\"isShowTransfer\"\n            style=\"width:282px\"\n            placeholder=\"请输入\"\n            :min=\"0\"\n            :max=\"999999.9\"\n            :float=\"true\"\n            v-decorator=\"decorators.transfer_num\"\n          >\n            <a-select\n              v-decorator=\"decorators.transfer_type\"\n              slot=\"addonAfter\"\n              style=\"width: 60px\"\n            >\n              <a-select-option\n                v-for=\"(item, index) in unitList\"\n                :value=\"item.value\"\n                :key=\"index\"\n              >\n                {{ item.label }}\n              </a-select-option>\n            </a-select>\n          </st-input-number>\n        </st-form-item>\n        <st-form-item label=\"售卖方式\" type=\"text\">\n          <a-checkbox-group\n            v-decorator=\"decorators.sell_type\"\n            :disabled=\"isDisabled\"\n          >\n            <a-checkbox\n              v-for=\"(item, index) in sellType\"\n              :value=\"item.value\"\n              class=\"mg-r16\"\n              :key=\"index\"\n            >\n              {{ item.label }}\n            </a-checkbox>\n          </a-checkbox-group>\n        </st-form-item>\n        <st-form-item label=\"报名时间\" required>\n          <a-range-picker\n            :disabled=\"isDisabled\"\n            :showTime=\"{ format: 'HH:mm' }\"\n            format=\"YYYY-MM-DD HH:mm\"\n            style=\"width:100%\"\n            :disabledDate=\"disabledDate\"\n            v-decorator=\"decorators.apply_date\"\n          ></a-range-picker>\n        </st-form-item>\n        <st-form-item label=\"售卖价格\" required>\n          <st-input-number\n            v-decorator=\"decorators.sales_price\"\n            :min=\"0\"\n            :disabled=\"isDisabled\"\n            placeholder=\"请输入售卖价格\"\n            :max=\"999999.9\"\n            float\n          >\n            <template slot=\"addonAfter\">\n              元\n            </template>\n          </st-input-number>\n        </st-form-item>\n      </a-col>\n    </a-row>\n    <a-row :gutter=\"10\">\n      <a-col :lg=\"11\" :xs=\"10\">\n        <st-form-item labelFix>\n          <st-button\n            class=\"mg-r16\"\n            @click=\"save(0)\"\n            :loading=\"loading.setPrice\"\n          >\n            保存\n          </st-button>\n          <st-button\n            type=\"primary\"\n            @click=\"save(1)\"\n            :loading=\"loading.setPrice\"\n          >\n            保存并发布\n          </st-button>\n        </st-form-item>\n      </a-col>\n    </a-row>\n  </st-form>\n</template>\n<script>\nimport { EditService } from '../edit.service'\nimport { MessageService } from '@/services/message.service'\nimport { UserService } from '@/services/user.service'\nimport { cloneDeep } from 'lodash-es'\nimport { ruleOptions } from '../form.config'\nimport { GradientService } from '@/views/fragments/course/personal#/gradient.service'\nimport { PatternService } from '@/services/pattern.service'\nimport { CLASS_STATUS } from '@/constants/course/small-course'\nexport default {\n  name: 'SetSellPrice',\n  serviceInject() {\n    return {\n      editService: EditService,\n      messageService: MessageService,\n      userService: UserService,\n      gradientService: GradientService,\n      pattern: PatternService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.editService.loading$,\n      unitList: this.editService.unitList$,\n      sellType: this.editService.sellType$\n    }\n  },\n  components: {},\n  props: {\n    courseName: {\n      type: String,\n      default: ''\n    },\n    courseId: {\n      type: Number,\n      default: 0\n    },\n    info: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  data(vm) {\n    const form = this.$stForm.create()\n    const decorators = form.decorators(ruleOptions)\n    return {\n      form,\n      decorators,\n      isShowTransfer: false,\n      CLASS_STATUS\n    }\n  },\n  computed: {\n    isDisabled() {\n      return (\n        this.CLASS_STATUS.SIGNING_UNCLASSED === this.info.info.class_status ||\n        this.CLASS_STATUS.SIGNING_CLASSED === this.info.info.class_status ||\n        this.CLASS_STATUS.CLASSED === this.info.info.class_status\n      )\n    }\n  },\n  watch: {\n    courseName(val) {\n      this.form.setFieldsValue({\n        course_name: val\n      })\n    },\n    courseId(val) {\n      this.form.setFieldsValue({\n        course_id: val\n      })\n    }\n  },\n  mounted() {\n    const curTime = moment()\n    let start = cloneDeep(curTime)\n    let end = cloneDeep(curTime)\n    this.form.setFieldsValue({\n      apply_date: [start.add('30', 'minutes'), end.add('31', 'minutes')]\n    })\n    this.setFieldsValue()\n  },\n  methods: {\n    setFieldsValue() {\n      const info = this.info.price\n      this.form.setFieldsValue({\n        course_name: info.course_name,\n        is_allow_transfer: info.is_allow_transfer,\n        transfer_num: info.transfer_num,\n        sell_type: info.sell_type,\n        transfer_type: info.transfer_type,\n        sales_price: info.sales_price\n      })\n      if (info.apply_begin_time) {\n        this.form.setFieldsValue({\n          apply_date: [\n            moment(info.apply_begin_time),\n            moment(info.apply_end_time)\n          ]\n        })\n      }\n      this.isShowTransfer = info.is_allow_transfer\n    },\n    save(para) {\n      this.form.validateFields().then(values => {\n        values.course_id = this.courseId\n        values.apply_begin_time = values.apply_date[0].format(\n          'YYYY-MM-DD HH:mm'\n        )\n        values.apply_end_time = values.apply_date[1].format('YYYY-MM-DD HH:mm')\n        values.is_allow_transfer = values.is_allow_transfer ? 1 : 0\n        values.is_release = para\n        if (values.is_allow_transfer === 0) {\n          values.transfer_type = undefined\n          values.transfer_num = undefined\n        }\n        delete values.apply_date\n        this.editService.setPrice(values).subscribe(this.onSaveSuccess)\n      })\n    },\n    onSaveSuccess() {\n      this.messageService.success({\n        content: '提交成功'\n      })\n      this.$router.push({\n        name: 'shop-product-course-manage-small-course-list'\n      })\n    },\n    transferChange(val) {\n      this.isShowTransfer = val\n    },\n    disabledDate(current) {\n      return (\n        current && current.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')\n      )\n    }\n  }\n}\n</script>\n"]}]}