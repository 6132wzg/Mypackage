{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/guards/app-info.gurad..ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/guards/app-info.gurad..ts","mtime":1600926555612},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d, _e, _f;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { UserService } from '@/services/user.service';\nimport { AuthService } from '@/services/auth.service';\nimport { RegionService } from '@/services/region.service';\nimport { NProgressService } from '@/services/nprogress.service';\nimport { forkJoin } from 'rxjs';\nimport { Injectable } from 'vue-service-app';\nimport { anyAll, then } from '@/operators';\nimport { CdnService } from '@/services/cdn.service';\nimport { PluginService } from '@/services/plugin.service';\n/**\n * 获取全局应用信息\n */\n\nvar AppInfoGuard = /*#__PURE__*/function () {\n  function AppInfoGuard(userService, authService, regionService, nprogressService, cdnService, pluginService) {\n    _classCallCheck(this, AppInfoGuard);\n\n    this.userService = userService;\n    this.authService = authService;\n    this.regionService = regionService;\n    this.nprogressService = nprogressService;\n    this.cdnService = cdnService;\n    this.pluginService = pluginService;\n    this.firstBootstrap = true;\n  }\n  /**\n   *  单点故障接口\n   */\n\n\n  _createClass(AppInfoGuard, [{\n    key: \"fetchSinglePointReqs\",\n    value: function fetchSinglePointReqs() {\n      var _this = this;\n\n      return forkJoin( // staff info 包含了 品牌信息 门店信息 用户信息\n      this.userService.fetchStaffInfo(), // 获取全局权限列表数据\n      this.authService.fetchList(), // 获取全局菜单数据\n      this.userService.fetchMenuData(), // 获取全局枚举\n      this.userService.fetchEnums(), // 获取全局切换门店列表数据\n      this.userService.fetchShopList(), // 获取全局插件列表数据\n      this.pluginService.fetchList()).pipe(then(function () {\n        _this.nprogressService.SET_TEXT('核心数据加载完毕');\n\n        _this.cdnService.uploadError();\n      }));\n    }\n    /**\n     * 可故障接口\n     */\n\n  }, {\n    key: \"fetchOptionalReqs\",\n    value: function fetchOptionalReqs() {\n      var _this2 = this;\n\n      return anyAll( // 获取无效的tooltips列表\n      this.userService.fetchInvalidTooltips()).pipe(then(function () {\n        _this2.nprogressService.SET_TEXT('全部数据加载完毕');\n      }));\n    }\n  }, {\n    key: \"fetchAppReqs\",\n    value: function fetchAppReqs() {\n      var _this3 = this;\n\n      return forkJoin(this.fetchSinglePointReqs(), this.fetchOptionalReqs()).pipe(then(function () {\n        _this3.firstBootstrap = false;\n      }));\n    }\n  }, {\n    key: \"beforeRouteEnter\",\n    value: function beforeRouteEnter() {\n      if (this.firstBootstrap) {\n        return this.fetchAppReqs();\n      }\n    }\n  }]);\n\n  return AppInfoGuard;\n}();\n\nAppInfoGuard = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_a = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _a : Object, typeof (_b = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _b : Object, typeof (_c = typeof RegionService !== \"undefined\" && RegionService) === \"function\" ? _c : Object, typeof (_d = typeof NProgressService !== \"undefined\" && NProgressService) === \"function\" ? _d : Object, typeof (_e = typeof CdnService !== \"undefined\" && CdnService) === \"function\" ? _e : Object, typeof (_f = typeof PluginService !== \"undefined\" && PluginService) === \"function\" ? _f : Object])], AppInfoGuard);\nexport { AppInfoGuard };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/guards/app-info.gurad..ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAS,WAAT,QAA4B,yBAA5B;AACA,SAAS,aAAT,QAA8B,2BAA9B;AACA,SAAS,gBAAT,QAAiC,8BAAjC;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,UAAT,QAAuC,iBAAvC;AACA,SAAS,MAAT,EAAiB,IAAjB,QAA6B,aAA7B;AACA,SAAS,UAAT,QAA2B,wBAA3B;AACA,SAAS,aAAT,QAA8B,2BAA9B;AACA;;;;AAIA,IAAa,YAAb;AAEE,wBACU,WADV,EAEU,WAFV,EAGU,aAHV,EAIU,gBAJV,EAKU,UALV,EAMU,aANV,EAMsC;AAAA;;AAL5B,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,aAAA,GAAA,aAAA;AACA,SAAA,gBAAA,GAAA,gBAAA;AACA,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,aAAA,GAAA,aAAA;AAPV,SAAA,cAAA,GAAiB,IAAjB;AAQI;AACJ;;;;;AAVF;AAAA;AAAA,2CAa8B;AAAA;;AAC1B,aAAO,QAAQ,EACb;AACA,WAAK,WAAL,CAAiB,cAAjB,EAFa,EAGb;AACA,WAAK,WAAL,CAAiB,SAAjB,EAJa,EAKb;AACA,WAAK,WAAL,CAAiB,aAAjB,EANa,EAOb;AACA,WAAK,WAAL,CAAiB,UAAjB,EARa,EASb;AACA,WAAK,WAAL,CAAiB,aAAjB,EAVa,EAWb;AACA,WAAK,aAAL,CAAmB,SAAnB,EAZa,CAAR,CAaL,IAbK,CAcL,IAAI,CAAC,YAAK;AACR,QAAA,KAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA+B,UAA/B;;AACA,QAAA,KAAI,CAAC,UAAL,CAAgB,WAAhB;AACD,OAHG,CAdC,CAAP;AAmBD;AACD;;;;AAlCF;AAAA;AAAA,wCAqC2B;AAAA;;AACvB,aAAO,MAAM,EACX;AACA,WAAK,WAAL,CAAiB,oBAAjB,EAFW,CAAN,CAGL,IAHK,CAIL,IAAI,CAAC,YAAK;AACR,QAAA,MAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA+B,UAA/B;AACD,OAFG,CAJC,CAAP;AAQD;AA9CH;AAAA;AAAA,mCA+CsB;AAAA;;AAClB,aAAO,QAAQ,CAAC,KAAK,oBAAL,EAAD,EAA8B,KAAK,iBAAL,EAA9B,CAAR,CAAgE,IAAhE,CACL,IAAI,CAAC,YAAK;AACR,QAAA,MAAI,CAAC,cAAL,GAAsB,KAAtB;AACD,OAFG,CADC,CAAP;AAKD;AArDH;AAAA;AAAA,uCAsDkB;AACd,UAAI,KAAK,cAAT,EAAyB;AACvB,eAAO,KAAK,YAAL,EAAP;AACD;AACF;AA1DH;;AAAA;AAAA,GAAA;;AAAa,YAAY,GAAA,UAAA,CAAA,CADxB,UAAU,EACc,E,qDAGA,W,KAAW,W,IAAX,W,MAAW,U,GAAA,E,GAAA,M,EAAA,QAAA,EAAA,GAAA,OACX,WADW,KACA,WADA,IACX,WADW,MACA,UADA,GACA,EADA,GACA,M,EAAA,QAAA,EAAA,GAAA,OACT,aADS,KACI,WADJ,IACT,aADS,MACI,UADJ,GACI,EADJ,GACI,M,EAAA,QAAA,EAAA,GAAA,OACV,gBADU,KACM,WADN,IACV,gBADU,MACM,UADN,GACM,EADN,GACM,M,EAAA,QAAA,EAAA,GAAA,OACtB,UADsB,KACZ,WADY,IACtB,UADsB,MACZ,UADY,GACZ,EADY,GACZ,M,EAAA,QAAA,EAAA,GAAA,OACP,aADO,KACM,WADN,IACP,aADO,MACM,UADN,GACM,EADN,GACM,M,EARf,CAAA,EAAZ,YAAY,CAAZ;SAAA,Y","sourcesContent":["import { UserService } from '@/services/user.service'\nimport { AuthService } from '@/services/auth.service'\nimport { RegionService } from '@/services/region.service'\nimport { NProgressService } from '@/services/nprogress.service'\nimport { forkJoin } from 'rxjs'\nimport { Injectable, RouteGuard } from 'vue-service-app'\nimport { anyAll, then } from '@/operators'\nimport { CdnService } from '@/services/cdn.service'\nimport { PluginService } from '@/services/plugin.service'\n/**\n * 获取全局应用信息\n */\n@Injectable()\nexport class AppInfoGuard implements RouteGuard {\n  firstBootstrap = true\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private regionService: RegionService,\n    private nprogressService: NProgressService,\n    private cdnService: CdnService,\n    private pluginService: PluginService\n  ) {}\n  /**\n   *  单点故障接口\n   */\n  private fetchSinglePointReqs() {\n    return forkJoin(\n      // staff info 包含了 品牌信息 门店信息 用户信息\n      this.userService.fetchStaffInfo(),\n      // 获取全局权限列表数据\n      this.authService.fetchList(),\n      // 获取全局菜单数据\n      this.userService.fetchMenuData(),\n      // 获取全局枚举\n      this.userService.fetchEnums(),\n      // 获取全局切换门店列表数据\n      this.userService.fetchShopList(),\n      // 获取全局插件列表数据\n      this.pluginService.fetchList()\n    ).pipe(\n      then(() => {\n        this.nprogressService.SET_TEXT('核心数据加载完毕')\n        this.cdnService.uploadError()\n      })\n    )\n  }\n  /**\n   * 可故障接口\n   */\n  private fetchOptionalReqs() {\n    return anyAll(\n      // 获取无效的tooltips列表\n      this.userService.fetchInvalidTooltips()\n    ).pipe(\n      then(() => {\n        this.nprogressService.SET_TEXT('全部数据加载完毕')\n      })\n    )\n  }\n  private fetchAppReqs() {\n    return forkJoin(this.fetchSinglePointReqs(), this.fetchOptionalReqs()).pipe(\n      then(() => {\n        this.firstBootstrap = false\n      })\n    )\n  }\n  beforeRouteEnter() {\n    if (this.firstBootstrap) {\n      return this.fetchAppReqs()\n    }\n  }\n}\n"],"sourceRoot":""}]}