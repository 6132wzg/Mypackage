{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/app/venue/basic-setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/brand/app/venue/basic-setting.vue","mtime":1591147717130},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { MessageService } from '@/services/message.service'\nimport { BasicSettingService } from './basic-setting.service'\nimport { APP_TYPE } from '@/constants/venue'\nexport default {\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      settingService: BasicSettingService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.settingService.loading$,\n      reserveStarts: this.settingService.reserveStarts$,\n      reserveRanges: this.settingService.reserveRanges$,\n      cancelReserves: this.settingService.cancelReserves$,\n      signTimes: this.settingService.signTimes$,\n      autoSignLimits: this.settingService.autoSignLimits$\n    }\n  },\n  data() {\n    return {\n      show: false,\n      form: this.$form.createForm(this),\n      info: {}\n    }\n  },\n  created() {\n    this.settingService\n      .getInfo({ application_type: APP_TYPE.VENUES })\n      .subscribe(res => {\n        this.info = res.info\n      })\n  },\n  methods: {\n    onCheckboxChange(index) {\n      this.info[index] = +!this.info[index]\n    },\n    cancel() {\n      this.show = false\n    },\n    save() {\n      this.settingService\n        .update({ ...this.info, application_type: APP_TYPE.VENUES })\n        .subscribe(() => {\n          this.messageService.success({\n            content: '提交成功'\n          })\n          this.show = false\n          this.$emit('change')\n        })\n    }\n  }\n}\n",{"version":3,"sources":["basic-setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"basic-setting.vue","sourceRoot":"src/views/biz-modals/brand/app/venue","sourcesContent":["<template>\n  <st-modal\n    title=\"场地预约设置\"\n    class=\"modal-personal-order-setting\"\n    v-model=\"show\"\n    @ok=\"save\"\n    @cancel=\"cancel\"\n    :confirmLoading=\"loading.update\"\n  >\n    <div>\n      <st-form :form=\"form\" labelWidth=\"56px\">\n        <!-- 预约范围 -->\n        <st-form-item label=\"预约范围\">\n          <div>\n            <span>用户可预约</span>\n            <a-select\n              class=\"mg-l8\"\n              style=\"width: 100px\"\n              v-model=\"info.venues_reserve_start\"\n            >\n              <a-select-option\n                v-for=\"(item, index) in reserveStarts\"\n                :key=\"+index\"\n                :value=\"+item.value\"\n              >\n                {{ item.label }}\n              </a-select-option>\n            </a-select>\n            <span class=\"mg-l8\">到</span>\n            <a-select\n              class=\"mg-l8\"\n              style=\"width: 70px\"\n              v-model=\"info.venues_reserve_end\"\n            >\n              <a-select-option\n                v-for=\"(item, index) in reserveRanges\"\n                :key=\"+index\"\n                :value=\"+item.value\"\n              >\n                {{ item.label }}\n              </a-select-option>\n            </a-select>\n            <span class=\"mg-l8\">以内的场地，员工代预约不受此限制</span>\n          </div>\n        </st-form-item>\n        <!-- 取消预约 -->\n        <st-form-item label=\"取消预约\">\n          <div>\n            <span>允许用户在场地预约开始前</span>\n            <a-select\n              class=\"mg-l8\"\n              style=\"width: 100px\"\n              v-model=\"info.venues_cancel_limit\"\n            >\n              <a-select-option\n                v-for=\"(item, index) in cancelReserves\"\n                :key=\"+index\"\n                :value=\"+item.value\"\n              >\n                {{ item.label }}\n              </a-select-option>\n            </a-select>\n            <span class=\"mg-l8\">取消预约，员工代取消不受此限制</span>\n          </div>\n        </st-form-item>\n      </st-form>\n    </div>\n  </st-modal>\n</template>\n<script>\nimport { MessageService } from '@/services/message.service'\nimport { BasicSettingService } from './basic-setting.service'\nimport { APP_TYPE } from '@/constants/venue'\nexport default {\n  serviceInject() {\n    return {\n      messageService: MessageService,\n      settingService: BasicSettingService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.settingService.loading$,\n      reserveStarts: this.settingService.reserveStarts$,\n      reserveRanges: this.settingService.reserveRanges$,\n      cancelReserves: this.settingService.cancelReserves$,\n      signTimes: this.settingService.signTimes$,\n      autoSignLimits: this.settingService.autoSignLimits$\n    }\n  },\n  data() {\n    return {\n      show: false,\n      form: this.$form.createForm(this),\n      info: {}\n    }\n  },\n  created() {\n    this.settingService\n      .getInfo({ application_type: APP_TYPE.VENUES })\n      .subscribe(res => {\n        this.info = res.info\n      })\n  },\n  methods: {\n    onCheckboxChange(index) {\n      this.info[index] = +!this.info[index]\n    },\n    cancel() {\n      this.show = false\n    },\n    save() {\n      this.settingService\n        .update({ ...this.info, application_type: APP_TYPE.VENUES })\n        .subscribe(() => {\n          this.messageService.success({\n            content: '提交成功'\n          })\n          this.show = false\n          this.$emit('change')\n        })\n    }\n  }\n}\n</script>\n"]}]}