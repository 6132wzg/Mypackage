{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/plugin/seckill/components#/product-setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/app/plugin/seckill/components#/product-setting.vue","mtime":1599215338694},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { memberCardColumns, depositCardColumns, personalCourseLevelColumns, personalCourseColumns } from \"./product-setting.config\";\nimport { ProductSettingService } from \"./product-setting.service\";\nimport { isEqual, merge } from 'lodash-es';\nimport { typeOf } from '@/utils/type';\nimport { listToMap } from '@/utils/list-to-map';\nexport default {\n  name: 'BrandAppPluginDiscountAdd',\n  bem: {\n    b: 'brand-app-plugin-discount-add'\n  },\n  model: {\n    props: 'value',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: Object,\n      default: function _default() {}\n    },\n    form: {\n      type: Object,\n      default: function _default() {}\n    },\n    decorators: {\n      type: Object,\n      default: function _default() {}\n    },\n    isEdit: {\n      type: Boolean,\n      defalut: false\n    }\n  },\n  serviceInject: function serviceInject() {\n    return {\n      service: ProductSettingService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      loading: this.service.loading$,\n      memberList: this.service.memberList$,\n      depositList: this.service.depositList$,\n      personalList: this.service.personalList$,\n      coachLevelList: this.service.coachLevelList$,\n      brand: this.service.brand$\n    };\n  },\n  data: function data() {\n    return {\n      selectedRowKeys: []\n    };\n  },\n  watch: {\n    'info.product_type': {\n      handler: function handler(newVal, oldVal) {\n        if (isEqual(newVal, oldVal)) return;\n\n        if (newVal === 3) {\n          this.service.getPersonalList().subscribe();\n        }\n      }\n    }\n  },\n  computed: {\n    // 双向绑定值\n    info: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(newVal) {\n        console.log('product-setting-info-change', _objectSpread({}, newVal));\n        this.$emit('change', newVal);\n      }\n    },\n    tableList: {\n      get: function get() {\n        var _this = this;\n\n        var list = [];\n\n        if (this.info.product_type === 1) {\n          var itemArr = this.memberList.filter(function (item) {\n            return item.id === _this.info.product_id;\n          });\n          list = itemArr.length ? itemArr[0].product_spec : [];\n        }\n\n        if (this.info.product_type === 2) {\n          var _itemArr = this.depositList.filter(function (item) {\n            return item.id == _this.info.product_id;\n          });\n\n          list = _itemArr.length ? _itemArr[0].product_spec : [];\n        }\n\n        list = list.map(function (item) {\n          return _objectSpread({}, item, {\n            product_sku_id: item.id,\n            discount_price: item.discount_price || null\n          }, _this.discountInfoMap[item.id] || {});\n        });\n\n        if (this.info.product_type === 3) {\n          if (this.brand.priceModel !== 2) {\n            list = [{\n              product_sku_id: 0,\n              hour: this.info.limit_course_num\n            }];\n          }\n\n          list = this.coachLevelList.map(function (item) {\n            return _objectSpread({}, item, {\n              product_sku_id: item.id,\n              hour: _this.info.limit_course_num || '--',\n              discount_price: item.discount_price || null\n            }, _this.discountInfoMap[item.id] || {});\n          });\n        }\n\n        return list || [];\n      },\n      set: function set(value) {\n        this.info.discount_info = value.map(function (item) {\n          return {\n            product_sku_id: item.id,\n            discount_price: item.discount_price || null\n          };\n        });\n      }\n    },\n    discountInfoMap: function discountInfoMap() {\n      return listToMap(this.discount_info, {\n        keyField: 'product_sku_id'\n      });\n    },\n    columns: function columns() {\n      if (this.info.product_type === 3) {\n        return this.brand.priceModel === 2 ? personalCourseLevelColumns(this) : personalCourseColumns(this);\n      }\n\n      if (this.info.product_type === 2) {\n        return depositCardColumns(this);\n      }\n\n      if (this.info.product_type === 1) {\n        return memberCardColumns(this);\n      }\n\n      return [];\n    }\n  },\n  mounted: function mounted() {\n    this.service.getMemberList().subscribe();\n    this.service.getDepositList().subscribe();\n    this.service.getPersonalList().subscribe();\n  },\n  methods: {\n    onTypeChange: function onTypeChange(e) {\n      this.valueChange('info.product_type', e);\n      this.setFieldsValue('info.product_id', '');\n      this.setFieldsValue;\n      this.selectedRowKeys = [];\n    },\n    onTableChange: function onTableChange(value) {\n      this.selectedRowKeys = value;\n      console.log(value);\n    },\n    onTablePriceChange: function onTablePriceChange(index, val) {\n      console.log(index, val);\n      var list = this.tableList;\n      list.splice(index, 1, _objectSpread({}, this.tableList[index], {\n        discount_price: val\n      }));\n      this.tableList = list;\n    },\n    onMemberChange: function onMemberChange() {\n      this.setFieldsValue('info.product_id', this.memberList[0].id);\n    },\n    onDepositChange: function onDepositChange(val) {\n      this.setFieldsValue('info.product_id', this.depositList[0].id);\n    },\n    onPersonalChange: function onPersonalChange(val) {\n      this.setFieldsValue('info.product_id', this.personalList[0].id);\n      this.service.getCoachLevelList(val).subscribe();\n    },\n    // 将form表单变更的值更新到v-model上 （一些判断条件使用的是info，所以需要同步到info，并更新v-model）\n    valueChange: function valueChange(key, e, cb) {\n      console.log('product-setting-info-value-change', key, e); // this.info[key] = e\n\n      this.setValue(key, e);\n      this.$emit('change', this.info);\n      cb && cb(e);\n    },\n    setFieldsValue: function setFieldsValue(key, value) {\n      var _this2 = this;\n\n      this.setValue(key, value);\n      this.$nextTick(function () {\n        _this2.form.setFieldsValue(_defineProperty({}, key, value));\n      });\n    },\n    // 更新组件属性值 (如：key = 'info.product_type',value = 2   ===>   this.info.product_type = 2)\n    setValue: function setValue(key, value) {\n      if (typeOf(key) === 'string') {\n        var keyArr = key.split('.');\n        var len = keyArr.length - 1;\n        keyArr.reduce(function (cur, key, index) {\n          if (!cur[key] && index < len) {\n            throw \"\".concat(key, \"\\u4E0D\\u5B58\\u5728\");\n          }\n\n          if (index === len) {\n            // 如果 要更新的值， 新值都是对象则合并， 否则直接覆盖\n            if (typeOf(cur[key]) === 'object' && typeOf(value) === 'object') {\n              merge(cur[key], value);\n            } else {\n              cur[key] = value;\n            }\n          }\n\n          return cur[key];\n        }, this);\n      } else {\n        merge(this, key);\n      }\n    }\n  }\n};",{"version":3,"sources":["product-setting.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <st-form-item required label=\"请选择商品类型\">\n      <a-select\n        placeholder=\"请选择\"\n        style=\"width: 470px\"\n        v-decorator=\"decorators.info.product_type\"\n        @change=\"onTypeChange\"\n        :disabled=\"isEdit\"\n      >\n        <a-select-option :value=\"1\">会员卡</a-select-option>\n        <a-select-option :value=\"2\">储值卡</a-select-option>\n        <a-select-option :value=\"3\">私教课</a-select-option>\n      </a-select>\n    </st-form-item>\n    <!-- 会员卡 -->\n    <template v-if=\"info.product_type === 1\">\n      <st-form-item required label=\"请选择会员卡\">\n        <a-select\n          placeholder=\"请选择\"\n          style=\"width: 470px\"\n          showSearch\n          v-decorator=\"decorators.info.product_id\"\n          @change=\"valueChange('info.product_id', $event, onMemberChange)\"\n          :disabled=\"isEdit\"\n        >\n          <a-select-option\n            :value=\"item.id\"\n            v-for=\"(item, index) in memberList\"\n            :key=\"index\"\n          >\n            {{ item.product_name }}\n          </a-select-option>\n        </a-select>\n      </st-form-item>\n    </template>\n    <!-- 储值卡 -->\n    <template v-if=\"info.product_type === 2\">\n      <st-form-item required label=\"请选择储值卡\">\n        <a-select\n          placeholder=\"请选择\"\n          style=\"width: 470px\"\n          showSearch\n          v-decorator=\"decorators.info.product_id\"\n          @change=\"valueChange('info.product_id', $event, onDepositChange)\"\n          :disabled=\"isEdit\"\n        >\n          <a-select-option\n            :value=\"item.id\"\n            v-for=\"(item, index) in depositList\"\n            :key=\"index\"\n          >\n            {{ item.product_name }}\n          </a-select-option>\n        </a-select>\n      </st-form-item>\n    </template>\n    <!-- 私教课 -->\n    <template v-if=\"info.product_type === 3\">\n      <st-form-item required label=\"请选择私教课\">\n        <a-select\n          style=\"width: 470px\"\n          placeholder=\"请选择\"\n          showSearch\n          v-decorator=\"decorators.info.product_id\"\n          @change=\"valueChange('info.product_id', $event, onPersonalChange)\"\n          :disabled=\"isEdit\"\n        >\n          <a-select-option\n            :value=\"item.id\"\n            v-for=\"item in personalList\"\n            :key=\"item.id\"\n          >\n            {{ item.product_name }}\n          </a-select-option>\n        </a-select>\n      </st-form-item>\n      <st-form-item required label=\"限定课时\">\n        <st-input-number\n          v-model=\"info.limit_course_num\"\n          placeholder=\"\"\n          style=\"width: 150px\"\n          :min=\"1\"\n          :max=\"9999\"\n        >\n          <span slot=\"addonAfter\">节</span>\n        </st-input-number>\n      </st-form-item>\n    </template>\n    <st-form-item required label=\"优惠设置\">\n      <a-card size=\"small\" style=\"width: 470px\">\n        <st-table\n          emptyText=\"暂无数据\"\n          rowKey=\"id\"\n          :columns=\"columns\"\n          :dataSource=\"tableList\"\n          :page=\"false\"\n          :scroll=\"{ y: 230 }\"\n          :rowSelection=\"{\n            onChange: onTableChange,\n            selectedRowKeys: selectedRowKeys\n          }\"\n        >\n          <span slot=\"discount_price\" slot-scope=\"text, record, index\">\n            <st-input-number\n              style=\"width: 130px\"\n              :min=\"0\"\n              :max=\"999999.9\"\n              :disabled=\"!selectedRowKeys.includes(record.id)\"\n              @change=\"onTablePriceChange(index, $event)\"\n            >\n              <span slot=\"addonAfter\">元</span>\n            </st-input-number>\n          </span>\n        </st-table>\n      </a-card>\n    </st-form-item>\n  </div>\n</template>\n<script>\nimport {\n  memberCardColumns,\n  depositCardColumns,\n  personalCourseLevelColumns,\n  personalCourseColumns\n} from './product-setting.config'\nimport { ProductSettingService } from './product-setting.service'\nimport { isEqual, merge } from 'lodash-es'\nimport { typeOf } from '@/utils/type'\nimport { listToMap } from '@/utils/list-to-map'\n\nexport default {\n  name: 'BrandAppPluginDiscountAdd',\n  bem: {\n    b: 'brand-app-plugin-discount-add'\n  },\n  model: {\n    props: 'value',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: Object,\n      default: () => {}\n    },\n    form: {\n      type: Object,\n      default: () => {}\n    },\n    decorators: {\n      type: Object,\n      default: () => {}\n    },\n    isEdit: {\n      type: Boolean,\n      defalut: false\n    }\n  },\n  serviceInject() {\n    return {\n      service: ProductSettingService\n    }\n  },\n  rxState() {\n    return {\n      loading: this.service.loading$,\n      memberList: this.service.memberList$,\n      depositList: this.service.depositList$,\n      personalList: this.service.personalList$,\n      coachLevelList: this.service.coachLevelList$,\n      brand: this.service.brand$\n    }\n  },\n  data() {\n    return {\n      selectedRowKeys: []\n    }\n  },\n  watch: {\n    'info.product_type': {\n      handler(newVal, oldVal) {\n        if (isEqual(newVal, oldVal)) return\n        if (newVal === 3) {\n          this.service.getPersonalList().subscribe()\n        }\n      }\n    },\n  },\n  computed: {\n    // 双向绑定值\n    info: {\n      get() {\n        return this.value\n      },\n      set(newVal) {\n        console.log('product-setting-info-change', { ...newVal })\n        this.$emit('change', newVal)\n      }\n    },\n    tableList: {\n      get() {\n        let list = []\n        if (this.info.product_type === 1) {\n          const itemArr = this.memberList.filter(item => {\n            return item.id === this.info.product_id\n          })\n          list = itemArr.length ? itemArr[0].product_spec : []\n        }\n        if (this.info.product_type === 2) {\n          const itemArr = this.depositList.filter(item => {\n            return item.id == this.info.product_id\n          })\n          list = itemArr.length ? itemArr[0].product_spec : []\n        }\n        list = list.map(item => ({\n          ...item,\n          product_sku_id: item.id,\n          discount_price: item.discount_price || null,\n          ...(this.discountInfoMap[item.id] || {})\n        }))\n        if (this.info.product_type === 3) {\n          if (this.brand.priceModel !== 2) {\n            list = [{\n              product_sku_id: 0,\n              hour: this.info.limit_course_num,\n            }]\n          }\n          list = this.coachLevelList.map(item => ({\n            ...item,\n            product_sku_id: item.id,\n            hour: this.info.limit_course_num || '--',\n            discount_price: item.discount_price || null,\n            ...(this.discountInfoMap[item.id] || {})\n          }))\n        }\n        return list || []\n      },\n      set(value) {\n        this.info.discount_info = value.map(item => ({\n          product_sku_id: item.id,\n          discount_price: item.discount_price || null\n        }))\n      }\n    },\n    discountInfoMap() {\n      return listToMap(this.discount_info, { keyField: 'product_sku_id'})\n    },\n    columns() {\n      if (this.info.product_type === 3) {\n        return this.brand.priceModel === 2\n          ? personalCourseLevelColumns(this)\n          : personalCourseColumns(this)\n      }\n      if (this.info.product_type === 2) {\n        return depositCardColumns(this)\n      }\n      if (this.info.product_type === 1) {\n        return memberCardColumns(this)\n      }\n      return []\n    }\n  },\n  mounted() {\n    this.service.getMemberList().subscribe()\n    this.service.getDepositList().subscribe()\n    this.service.getPersonalList().subscribe()\n  },\n  methods: {\n    onTypeChange(e) {\n      this.valueChange('info.product_type', e)\n      this.setFieldsValue('info.product_id', '')\n      this.setFieldsValue\n      this.selectedRowKeys = []\n    },\n    onTableChange(value) {\n      this.selectedRowKeys = value\n      console.log(value)\n    },\n    onTablePriceChange(index, val) {\n      console.log(index,val )\n      let list = this.tableList\n      list.splice(index, 1, {\n        ...this.tableList[index],\n        discount_price: val\n      })\n      this.tableList = list\n    },\n    onMemberChange() {\n      this.setFieldsValue('info.product_id', this.memberList[0].id)\n    },\n    onDepositChange(val) {\n      this.setFieldsValue('info.product_id', this.depositList[0].id)\n    },\n    onPersonalChange(val) {\n      this.setFieldsValue('info.product_id', this.personalList[0].id)\n      this.service.getCoachLevelList(val).subscribe()\n    },\n    // 将form表单变更的值更新到v-model上 （一些判断条件使用的是info，所以需要同步到info，并更新v-model）\n    valueChange(key, e, cb) {\n      console.log('product-setting-info-value-change', key, e)\n      // this.info[key] = e\n      this.setValue(key, e)\n      this.$emit('change', this.info)\n      cb && cb(e)\n    },\n    setFieldsValue(key, value) {\n      this.setValue(key, value)\n      this.$nextTick(() => {\n        this.form.setFieldsValue({ [key]: value })\n      })\n    },\n    // 更新组件属性值 (如：key = 'info.product_type',value = 2   ===>   this.info.product_type = 2)\n    setValue(key, value) {\n      if (typeOf(key) === 'string') {\n        const keyArr = key.split('.')\n        const len = keyArr.length - 1\n        keyArr.reduce((cur, key, index) => {\n          if (!cur[key] && index < len) {\n            throw `${key}不存在`\n          }\n          if (index === len) {\n            // 如果 要更新的值， 新值都是对象则合并， 否则直接覆盖\n            if (typeOf(cur[key]) === 'object' && typeOf(value) === 'object') {\n              merge(cur[key], value)\n            } else {\n              cur[key] = value\n            }\n          }\n          return cur[key]\n        }, this)\n      } else {\n        merge(this, key)\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/pages/brand/app/plugin/components#"}]}