{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/reserve-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/biz-modals/schedule/small-course/reserve-info.vue","mtime":1597396799939},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SmallCourseScheduleCommonService as CommonService } from '@/views/pages/shop/product/course/schedule/small-course/service#/common.service'\nimport { SmallCourseScheduleReserveService as ReserveService } from '@/views/pages/shop/product/course/schedule/small-course/service#/reserve.service'\nimport { SmallCourseScheduleService as ScheduleService } from '@/views/pages/shop/product/course/schedule/small-course/service#/schedule.service'\nimport ScheduleSmallCourseReservedCourse from '@/views/biz-modals/schedule/small-course/reserved-course'\nimport ScheduleSmallCourseRemedialCourse from '@/views/biz-modals/schedule/small-course/remedial-course'\nimport ScheduleSmallCourseRemedialInfo from '@/views/biz-modals/schedule/small-course/remedial-info'\nimport { RemedialCourseInfoService } from './remedial-info.service'\nimport { COURSE_TYPE, RESERVE_TYPE } from '@/constants/course/small-course'\nimport { columns } from './reserve-info.config'\nexport default {\n  name: 'ReserveInfo',\n  modals: {\n    ScheduleSmallCourseReservedCourse,\n    ScheduleSmallCourseRemedialCourse,\n    ScheduleSmallCourseRemedialInfo\n  },\n  serviceInject() {\n    return {\n      commonService: CommonService,\n      reserveService: ReserveService,\n      scheduleService: ScheduleService,\n      remedialInfoService: RemedialCourseInfoService\n    }\n  },\n  rxState() {\n    const commonService = this.commonService\n    return {\n      loading: this.reserveService.loading$,\n      memberOptions: commonService.memberOptions$,\n      consumeOptions: commonService.consumeOptions$,\n      reserveList: this.reserveService.reserveList$,\n      reserveInfo: this.reserveService.reserveInfo$,\n      reserveStatusOptions: this.remedialInfoService.reserveStatusOptions$,\n      auth: this.reserveService.auth$,\n      infoAuth: this.reserveService.infoAuth$\n    }\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      COURSE_TYPE,\n      RESERVE_TYPE,\n      memberId: '',\n      consumeType: '',\n      consumeId: '',\n      showConsumeType: '',\n      showMemberName: '',\n      dataSource: [],\n      keyword: '',\n      show: false,\n      info: {},\n      checked: false\n    }\n  },\n  computed: {\n    columns,\n    courseId() {\n      return this.reserveInfo.course_id\n    },\n    scheduleId() {\n      return this.reserveInfo.id\n    }\n  },\n  created() {\n    this.getReserveInfo()\n  },\n  methods: {\n    dealCourtName(courseName, currentCourseName) {\n      return currentCourseName\n        ? courseName + '.' + currentCourseName\n        : courseName\n    },\n    keywordFilter(item) {\n      let str\n      if (item.is_minors === 1) {\n        str = `${item.member_name}(未成年) ${item.parent_mobile}(${item.parent_user_role})`.replace(\n          new RegExp(this.keyword),\n          `<span class=\"color-primary\">${this.keyword}</span>`\n        )\n      } else {\n        str = `${item.member_name} ${item.mobile}`.replace(\n          new RegExp(this.keyword),\n          `<span class=\"color-primary\">${this.keyword}</span>`\n        )\n      }\n      return str\n    },\n    onSearch(value) {\n      this.keyword = value\n      this.commonService\n        .getMemberList({\n          member: value\n        })\n        .subscribe()\n    },\n    onChange(value) {\n      this.memberId = value\n      this.showConsumeType = ''\n      this.commonService\n        .getConsumeList({\n          course_id: this.courseId,\n          member_id: value\n        })\n        .subscribe()\n    },\n    onChangeConsumeType(val) {\n      const obj = JSON.parse(val)\n      this.consumeType = obj.consume_type\n      this.consumeId = obj.id\n    },\n    // 补签到\n    checkSign(id) {\n      this.reserveService.checkSign(id).subscribe(this.getReserveInfo)\n    },\n    // 新增预约\n    addReserve() {\n      const params = {\n        schedule_id: this.id,\n        member_id: this.memberId,\n        consume_type: this.consumeType,\n        consume_id: this.consumeId\n      }\n      this.reserveService.addAtion(params).subscribe(res => {\n        this.onAddReserveSuccess()\n      })\n    },\n    cancelReserve(id) {\n      this.reserveService.cancel(id).subscribe(this.onCancelReserveSuccess)\n    },\n    // 签到\n    check(id) {\n      this.reserveService.check(id).subscribe(this.onCheckSuccess)\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData\n      }\n      target.editable = true\n      this.data = newData\n    },\n    save(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        delete target.editable\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n      }\n    },\n    // 取消排期\n    cancelSchedule() {\n      this.scheduleService\n        .cancelCustom(this.id)\n        .subscribe(this.onDelScheduleScuccess)\n    },\n    // 修改课程\n    updateSchedule() {\n      this.show = false\n      this.$modalRouter.push({\n        name: 'schedule-small-course-reserved-course',\n        props: {\n          item: this.reserveInfo,\n          checked: this.checked\n        },\n        on: {\n          ok: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    // 补课回显\n    remedialCourse(reserve_id) {\n      this.$modalRouter.push({\n        name: 'schedule-small-course-remedial-course',\n        props: {\n          reserve_id: reserve_id\n        },\n        on: {\n          ok: () => {\n            this.$router.reload()\n          }\n        }\n      })\n      this.show = false\n    },\n    // 查看补课\n    getMessage(id) {\n      this.$modalRouter.push({\n        name: 'schedule-small-course-remedial-info',\n        props: {\n          id: id\n        }\n      })\n      this.show = false\n    },\n    // 取消预约\n    cancelAtion(id) {\n      this.reserveService.cancelAtion(id).subscribe(this.onDelScheduleScuccess)\n    },\n    // 请假\n    leave(id) {\n      this.reserveService.leave(id).subscribe(this.getReserveInfo)\n    },\n    getReserveInfo() {\n      this.reserveService.getInfo(this.id).subscribe(res => {\n        if (this.reserveList.length) {\n          this.checked = true\n        }\n      })\n    },\n    onAddReserveSuccess() {\n      this.memberId = undefined\n      this.consumeType = undefined\n      this.showConsumeType = ''\n      this.showMemberName = ''\n      this.getReserveInfo()\n    },\n    onCancelReserveSuccess() {\n      this.getReserveInfo()\n    },\n    onCheckSuccess() {\n      this.getReserveInfo()\n    },\n    onDelScheduleScuccess() {\n      console.log('取消课程!')\n      this.$router.reload()\n      this.show = false\n    }\n  }\n}\n",null]}