{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/cabinet-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/reception/components#/cabinet-list.vue","mtime":1591147717437},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { CabinetListService as CabinetService } from './cabinet-list.service'\nimport ShopCabinetEditLongTerm from '@/views/biz-modals/shop/cabinet/edit-long-term'\nimport ShopCabinetEditTemporary from '@/views/biz-modals/shop/cabinet/edit-temporary'\nimport ShopCabinetOpen from '@/views/biz-modals/shop/cabinet/open'\nimport ShopCabinetEditStatus from '@/views/biz-modals/shop/cabinet/edit-status'\nimport { CABINET, CABINET_BUSINESS_TYPE } from '@/constants/reception/cabinet'\nexport default {\n  bem: {\n    b: 'shop-reception-cabinet',\n    bItemUsing: 'shop-reception-cabinet-item--using',\n    bItemBroken: 'shop-reception-cabinet-item--broken'\n  },\n  serviceInject() {\n    return {\n      cabinetService: CabinetService\n    }\n  },\n  rxState() {\n    const cabinetService = this.cabinetService\n    return {\n      list: cabinetService.list$,\n      auth: cabinetService.auth$\n    }\n  },\n  modals: {\n    ShopCabinetEditLongTerm,\n    ShopCabinetEditTemporary,\n    ShopCabinetEditStatus,\n    ShopCabinetOpen\n  },\n  props: {\n    isOperationInBatch: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'temporary'\n    },\n    areaName: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    isOperationInBatch() {\n      this.checkedList = []\n      this.indeterminate = false\n      this.checkAll = false\n    }\n  },\n  computed: {\n    plainOptions() {\n      const { list } = this\n      const ret = []\n      list.forEach(item => {\n        if (!this.disabledCabinetCheck(item)) {\n          ret.push(item.id)\n        }\n      })\n      return ret\n    },\n    isCabinetType() {\n      return this.$searchQuery.type === 'long-term'\n    }\n  },\n  data() {\n    return {\n      CABINET,\n      CABINET_BUSINESS_TYPE,\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false\n    }\n  },\n  methods: {\n    disabledCabinetCheck(item) {\n      return item.is_smart && !item.is_online\n    },\n    cabinetItemAction(item) {\n      if (\n        item.is_smart && // 是否是智能柜\n        this.cabinetUsingItem(item).cabinet_business_type ===\n          this.CABINET_BUSINESS_TYPE.USING && // 是否是使用状态\n        this.auth.edit && // 是否有编辑权限\n        !this.isOperationInBatch // 是否是批量编辑状态\n      ) {\n        return 'smart-cabinet'\n      }\n      if (\n        this.cabinetUsingItem(item).cabinet_business_type !==\n          this.CABINET_BUSINESS_TYPE.USING && // 是否是使用状态\n        this.auth.edit && // 是否有编辑权限\n        !this.isOperationInBatch // 是否是批量编辑状态\n      ) {\n        return 'cabinet-edit'\n      }\n    },\n    cabinetUsingItem(item) {\n      if (this.isCabinetType && item.sale_status === 1) {\n        item.cabinet_business_type = 2\n      }\n      return item\n    },\n    openCabinetModal(item) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-open',\n        props: {\n          id: item.id,\n          userName: item.user_name,\n          userMobile: item.mobile\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    editCabinetModal(item) {\n      this.$modalRouter.push({\n        name: 'shop-cabinet-edit-status',\n        props: {\n          id: item.id,\n          useStatus: this.cabinetUsingItem(item).cabinet_business_type\n        },\n        on: {\n          success: () => {\n            this.$router.reload()\n          }\n        }\n      })\n    },\n    onChange(checkedList) {\n      const { plainOptions } = this\n      this.checkedList = checkedList\n      this.indeterminate =\n        !!checkedList.length && checkedList.length < plainOptions.length\n      this.checkAll = checkedList.length === plainOptions.length\n      this.$emit('selectChange', checkedList)\n    },\n    onCheckAllChange(e) {\n      Object.assign(this, {\n        checkedList: e.target.checked ? this.plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      })\n      this.$emit('selectChange', this.checkedList)\n    },\n    change() {\n      this.$emit('change')\n    }\n  }\n}\n",null]}