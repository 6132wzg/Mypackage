{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/cashier/refund.service.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/cashier/refund.service.ts","mtime":1600926556528},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _a, _b, _c, _d;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from 'vue-service-app';\nimport { State, Effect } from 'rx-state/src';\nimport { tap } from 'rxjs/operators';\nimport { CashierApi, CashierDataParams } from '@/api/v1/stat/shop/cashier';\nimport { AuthService } from '@/services/auth.service';\nimport { UserService } from '@/services/user.service';\nimport { anyAll } from '@/operators';\n\nvar RefundService = /*#__PURE__*/function () {\n  function RefundService(cashierApi, authService, userService) {\n    _classCallCheck(this, RefundService);\n\n    this.cashierApi = cashierApi;\n    this.authService = authService;\n    this.userService = userService;\n    this.loading$ = new State({});\n    this.dataToday$ = new State({});\n    this.list$ = new State([]);\n    this.page$ = new State({});\n    this.total$ = new State({});\n    this.productType$ = this.userService.getOptions$('report.revenue_product_type');\n    this.auth$ = this.authService.authMap$({\n      export: 'shop:stat:cashier|refund_export'\n    });\n  } // 列表\n\n\n  _createClass(RefundService, [{\n    key: \"getList\",\n    value: function getList(query) {\n      var _this = this;\n\n      return this.cashierApi.getRefundData(query).pipe(tap(function (res) {\n        _this.list$.commit(function () {\n          return res.list.map(function (item, index) {\n            item.idx || (item.idx = index);\n            return item;\n          });\n        });\n\n        _this.page$.commit(function () {\n          return res.page;\n        });\n      }));\n    }\n  }, {\n    key: \"getDataTotal\",\n    value: function getDataTotal(query) {\n      var _this2 = this;\n\n      return this.cashierApi.getRefundDataTotal(query).pipe(tap(function (res) {\n        _this2.total$.commit(function () {\n          return res.info;\n        });\n      }));\n    } // 获取今日实时数据\n\n  }, {\n    key: \"getDataToday\",\n    value: function getDataToday(query) {\n      var _this3 = this;\n\n      return this.cashierApi.getRefundDataToady(query).pipe(tap(function (res) {\n        _this3.dataToday$.commit(function () {\n          return res.info;\n        });\n      }));\n    }\n  }, {\n    key: \"beforeEach\",\n    value: function beforeEach(to, from) {\n      return anyAll(this.getList(to.meta.query), this.getDataTotal(to.meta.query));\n    }\n  }]);\n\n  return RefundService;\n}();\n\n__decorate([Effect(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [typeof (_a = typeof CashierDataParams !== \"undefined\" && CashierDataParams) === \"function\" ? _a : Object]), __metadata(\"design:returntype\", void 0)], RefundService.prototype, \"getList\", null);\n\nRefundService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [typeof (_b = typeof CashierApi !== \"undefined\" && CashierApi) === \"function\" ? _b : Object, typeof (_c = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _c : Object, typeof (_d = typeof UserService !== \"undefined\" && UserService) === \"function\" ? _d : Object])], RefundService);\nexport { RefundService };",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/views/pages/shop/stat/cashier/refund.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ServiceRoute } from 'vue-service-app'\nimport { State, Effect } from 'rx-state/src'\nimport { tap } from 'rxjs/operators'\nimport { CashierApi, CashierDataParams } from '@/api/v1/stat/shop/cashier'\nimport { AuthService } from '@/services/auth.service'\nimport { UserService } from '@/services/user.service'\nimport { anyAll } from '@/operators'\n\n@Injectable()\nexport class RefundService {\n  loading$ = new State({})\n  dataToday$ = new State({})\n  list$ = new State([])\n  page$ = new State({})\n  total$ = new State({})\n  productType$ = this.userService.getOptions$('report.revenue_product_type')\n  auth$ = this.authService.authMap$({\n    export: 'shop:stat:cashier|refund_export'\n  })\n\n  constructor(\n    private cashierApi: CashierApi,\n    private authService: AuthService,\n    private userService: UserService\n  ) {}\n  // 列表\n  @Effect()\n  getList(query: CashierDataParams) {\n    return this.cashierApi.getRefundData(query).pipe(\n      tap(res => {\n        this.list$.commit(() =>\n          res.list.map((item, index) => {\n            item.idx || (item.idx = index)\n            return item\n          })\n        )\n        this.page$.commit(() => res.page)\n      })\n    )\n  }\n  getDataTotal(query: CashierDataParams) {\n    return this.cashierApi.getRefundDataTotal(query).pipe(\n      tap(res => {\n        this.total$.commit(() => res.info)\n      })\n    )\n  }\n  // 获取今日实时数据\n  getDataToday(query: CashierDataParams) {\n    return this.cashierApi.getRefundDataToady(query).pipe(\n      tap(res => {\n        this.dataToday$.commit(() => res.info)\n      })\n    )\n  }\n\n  beforeEach(to: ServiceRoute, from: ServiceRoute) {\n    return anyAll(this.getList(to.meta.query), this.getDataTotal(to.meta.query))\n  }\n}\n"],"sourceRoot":""}]}