{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/components/editable-number#/editable-number.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/components/editable-number#/editable-number.vue","mtime":1600926556028},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ruleOptions } from './editable-number.config'\nexport default {\n  name: 'EditableNumber',\n  props: {\n    value: {\n      type: [String, Number],\n      required: true,\n      default: ''\n    },\n    unit: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '请输入价格'\n    },\n    float: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    width: {\n      type: Number,\n      default: 240\n    },\n    max: {\n      type: Number,\n      default: 999999.9\n    }\n  },\n  data() {\n    // 增加随机key，避免同表单重复引用，导致错误提示重复\n    const r = Math.random()\n      .toString(36)\n      .substring(7)\n    return {\n      key: `isConfirmed${r}`,\n      text: null,\n      isEdit: false\n    }\n  },\n  watch: {\n    value(val) {\n      this.text = val\n    }\n  },\n  created() {\n    this.text = this.value\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    }\n  },\n  methods: {\n    onEdit() {\n      this.isEdit = true\n      this.form.setFieldsValue({\n        [this.key]: 0\n      })\n    },\n    onConfirm() {\n      const text = this.text || '0'\n      this.form.setFieldsValue({\n        [this.key]: 1\n      })\n      this.$emit('input', text)\n      this.$emit('ok', text)\n      this.isEdit = false\n    },\n    onBlur() {\n      clearTimeout(this.timer)\n      this.timer = setTimeout(() => {\n        this.form.validateFields([this.key], {\n          force: true\n        })\n      }, 100)\n    }\n  }\n}\n",{"version":3,"sources":["editable-number.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editable-number.vue","sourceRoot":"src/views/components/editable-number#","sourcesContent":["<template>\n  <div style=\"display: inline-block\">\n    <div v-show=\"isEdit\" style=\"display: inline-block\">\n      <st-input-number\n        v-model=\"text\"\n        :style=\"{ width: `${width}px` }\"\n        :placeholder=\"placeholder\"\n        :float=\"float\"\n        :max=\"max\"\n        @blur=\"onBlur\"\n      >\n        <div v-if=\"unit\" slot=\"addonAfter\" class=\"st-form-item-unit\">\n          {{ unit }}\n        </div>\n      </st-input-number>\n      <st-button class=\"mg-l8\" @click=\"onConfirm\">确定</st-button>\n    </div>\n    <div v-show=\"!isEdit\" style=\"display: inline-block\">\n      {{ value }}{{ unit }}\n      <st-button v-if=\"!disabled\" class=\"mg-l8\" @click=\"onEdit\">编辑</st-button>\n    </div>\n    <div style=\"display: inline-block; margin-left: -24px\">\n      <a-form-item>\n        <st-input v-show=\"false\" v-decorator=\"decorators[`${key}`]\" />\n      </a-form-item>\n    </div>\n  </div>\n</template>\n<script>\nimport { ruleOptions } from './editable-number.config'\nexport default {\n  name: 'EditableNumber',\n  props: {\n    value: {\n      type: [String, Number],\n      required: true,\n      default: ''\n    },\n    unit: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '请输入价格'\n    },\n    float: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    form: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    width: {\n      type: Number,\n      default: 240\n    },\n    max: {\n      type: Number,\n      default: 999999.9\n    }\n  },\n  data() {\n    // 增加随机key，避免同表单重复引用，导致错误提示重复\n    const r = Math.random()\n      .toString(36)\n      .substring(7)\n    return {\n      key: `isConfirmed${r}`,\n      text: null,\n      isEdit: false\n    }\n  },\n  watch: {\n    value(val) {\n      this.text = val\n    }\n  },\n  created() {\n    this.text = this.value\n  },\n  computed: {\n    ruleOptions,\n    decorators() {\n      return this.form.addDecorators(this.ruleOptions)\n    }\n  },\n  methods: {\n    onEdit() {\n      this.isEdit = true\n      this.form.setFieldsValue({\n        [this.key]: 0\n      })\n    },\n    onConfirm() {\n      const text = this.text || '0'\n      this.form.setFieldsValue({\n        [this.key]: 1\n      })\n      this.$emit('input', text)\n      this.$emit('ok', text)\n      this.isEdit = false\n    },\n    onBlur() {\n      clearTimeout(this.timer)\n      this.timer = setTimeout(() => {\n        this.form.validateFields([this.key], {\n          force: true\n        })\n      }, 100)\n    }\n  }\n}\n</script>\n"]}]}