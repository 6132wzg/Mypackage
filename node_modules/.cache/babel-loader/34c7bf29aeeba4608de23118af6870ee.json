{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js!/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/component#/add-course-range-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/views/pages/brand/product/package/component#/add-course-range-table.vue","mtime":1597396799966},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/thread-loader/dist/cjs.js","mtime":1591062572352},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/vue-loader/lib/index.js","mtime":1591062572376}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _typeof from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"/Users/wangzhigang/Desktop/styd/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CourseSelectCourse from '@/views/biz-modals/course/select-course';\nimport { FormService } from \"./form.service\";\nimport { AddRangePackageService } from \"../add-range-package.service\";\nimport { forEach, cloneDeep, remove, filter, reduce } from 'lodash';\nimport { coachColumns } from \"../../course/personal/info#table.config\";\nimport { isEmpty } from 'lodash-es';\nexport default {\n  name: 'AddCourseRangeTable',\n  bem: {\n    add: 'page-shop-add-range-package',\n    basic: 'page-shop-add-basic-package'\n  },\n  serviceInject: function serviceInject() {\n    return {\n      addRangeService: AddRangePackageService\n    };\n  },\n  rxState: function rxState() {\n    return {\n      coachList: this.addRangeService.coachList$\n    };\n  },\n  computed: {\n    // 团课小计\n    team_total: function team_total() {\n      if (+this.packageData.team_times && +this.packageData.team_unit_price) {\n        return this.packageData.team_times * (this.packageData.team_unit_price * 10) / 10;\n      } else {\n        return 0;\n      }\n    },\n    // 私教小计\n    personal_total: function personal_total() {\n      if (+this.packageData.personal_times && +this.packageData.personal_unit_price) {\n        return this.packageData.personal_times * (this.packageData.personal_unit_price * 10) / 10;\n      } else {\n        return 0;\n      }\n    },\n    all_total: function all_total() {\n      var teamTotal = this.packageData.is_team ? this.team_total : 0;\n      var personalTotal = this.packageData.is_personal ? this.personal_total : 0;\n      return teamTotal + personalTotal;\n    }\n  },\n  watch: {\n    packageData: {\n      handler: function handler(newValue, oldValue) {\n        if (!newValue.is_team && !newValue.is_personal) {\n          this.$emit('change', {});\n          return '';\n        }\n\n        if (newValue.is_team && !this.teamCourseList.length) {\n          this.$emit('change', {});\n          return false;\n        }\n\n        if (newValue.is_personal && !this.personalCourseList.length) {\n          this.$emit('change', {});\n          return false;\n        }\n\n        var personalTotal = 0;\n        var teamTotal = 0;\n\n        if (+newValue.personal_times && +newValue.personal_unit_price) {\n          personalTotal = newValue.personal_times * (newValue.personal_unit_price * 10) / 10;\n        } else {\n          personalTotal = 0;\n        }\n\n        if (+newValue.team_times && +newValue.team_unit_price) {\n          teamTotal = newValue.team_times * (newValue.team_unit_price * 10) / 10;\n        } else {\n          teamTotal = 0;\n        }\n\n        this.allTotal = personalTotal + teamTotal;\n        this.$emit('change', this.getRangeCourse(_objectSpread({\n          team_range: this.teamCourseList\n        }, newValue, {\n          personal_range: this.personalCourseList\n        })));\n      },\n      deep: true\n    },\n    teamCourseList: {\n      handler: function handler(newValue, oldValue) {\n        this.$emit('change', this.getRangeCourse(_objectSpread({\n          team_range: newValue\n        }, this.packageData, {\n          personal_range: this.personalCourseList\n        })));\n      },\n      deep: true\n    },\n    personalCourseList: {\n      handler: function handler(newValue, oldValue) {\n        this.$emit('change', this.getRangeCourse(_objectSpread({\n          personal_range: newValue\n        }, this.packageData, {\n          team_range: this.teamCourseList\n        })));\n      },\n      deep: true\n    }\n  },\n  props: {\n    useShopInfo: {\n      type: Object,\n      default: function _default() {}\n    },\n    initInfo: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    isLimit: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      personalCourseTotalList: [],\n      personalCoachListHistory: [],\n      personalCoachTotalList: [],\n      // 操作栏checkbox是否半选\n      teamIndeterminate: false,\n      // 操作栏checkbox是否半选\n      personalIndeterminate: false,\n      // 操作栏checkbox是全选\n      personalCheckAll: false,\n      // 配置课程表格是否显示\n      teamCourseListIsShow: false,\n      // 配置的课程总计\n      teamCourseTotalObject: {\n        team_times: 0,\n        total: 0\n      },\n      // 备份课程已做的操作\n      teamCourseTotalList: {},\n      // 批量操作的值\n      teamOperationObject: {\n        team_times: undefined,\n        team_unit_price: undefined\n      },\n      personalAllOperationCoachTotal: 0,\n      // 操作栏选择教练等级的dorpdown是否显示\n      coachAllOperationDropdownIsShow: false,\n      // 操作栏教练等级选择的值\n      personalAllOperationCoachList: [],\n      // 批量操作的值\n      personalOperationObject: {\n        personal_times: undefined,\n        personal_unit_price: undefined\n      },\n      // 配置课程表格是否显示\n      personalCourseListIsShow: false,\n      // 配置的课程总计\n      personalCourseTotalObject: {\n        personal_times: 0,\n        total: 0\n      },\n      // team course\n      teamCourseList: [],\n      // personal course\n      personalCourseList: [],\n      // 课程范围是否未输入过\n      courseIsFirstInput: true,\n      // 操作栏checkbox是全选\n      teamCheckAll: false,\n      packageData: {\n        is_team: false,\n        is_personal: false,\n        personal_times: undefined,\n        team_times: undefined,\n        team_unit_price: undefined,\n        personal_unit_price: undefined\n      },\n      allTotal: 0\n    };\n  },\n  modals: {\n    CourseSelectCourse: CourseSelectCourse\n  },\n  filters: {\n    // 单课价格统计\n    course_item_total: function course_item_total(times, unit_price) {\n      if (+times && +unit_price) {\n        return +times * (+unit_price * 10) / 10;\n      } else {\n        return 0;\n      }\n    }\n  },\n  methods: {\n    getRangeCourse: function getRangeCourse(rangeCourse) {\n      var form = cloneDeep(rangeCourse);\n\n      if (_typeof(form.personal_range) === 'object' && form.personal_range.length > 0) {\n        form.personal_range = form.personal_range.map(function (item) {\n          var coach_level = item.coachGradeList.map(function (item) {\n            return _typeof(item) !== 'object' ? item : item.id;\n          });\n          return {\n            course_id: item.course_id,\n            coach_level: coach_level\n          };\n        });\n      }\n\n      if (_typeof(form.team_range) === 'object') {\n        form.team_range = form.team_range.map(function (item) {\n          return item.course_id;\n        });\n      }\n\n      if (!rangeCourse.is_team) {\n        form.team_range = [];\n      }\n\n      if (!rangeCourse.is_personal) {\n        form.personal_range = [];\n      }\n\n      form.is_team = +rangeCourse.is_team;\n      form.is_personal = +rangeCourse.is_personal;\n      return form;\n    },\n    coachAllChange: function coachAllChange(e) {\n      var selectCoach = filter(this.coachList, function (o) {\n        return e.includes(o.id);\n      });\n      this.personalAllOperationCoachTotal = reduce(selectCoach, function (sum, o) {\n        return sum + o.coach_number;\n      }, 0);\n    },\n    // 移除选择的课程\n    removeCourseItems: function removeCourseItems(type) {\n      if (type === 'team') {\n        var arr = cloneDeep(this.teamCourseList);\n        remove(arr, function (o) {\n          return o.courseChecked;\n        });\n        this.teamCourseList = arr;\n      } else if (type === 'personal') {\n        var _arr = cloneDeep(this.personalCourseList);\n\n        var removeList = remove(_arr, function (o) {\n          return o.courseChecked;\n        });\n        this.personalCourseList = _arr; // 移除备份选择的教练list\n\n        var coachList = cloneDeep(this.personalCoachTotalList);\n        removeList.forEach(function (i) {\n          delete coachList[i.course_id];\n        });\n        this.personalCoachTotalList = coachList;\n      }\n    },\n    // item coach checkboxGroup changeEvent\n    coachItemChange: function coachItemChange(e, id, index) {\n      if (!e.length) {\n        this.personalCourseList[index].coachGradeList = this.personalCoachListHistory[index];\n        return;\n      } else {\n        this.personalCoachListHistory[index] = cloneDeep(e);\n      }\n\n      console.log(this.personalCourseList);\n      this.personalCoachTotalList[id] = {};\n      this.personalCoachTotalList[id].list = cloneDeep(e);\n      var selectCoach = filter(this.coachList, function (o) {\n        return e.includes(o.id);\n      });\n      var total = reduce(selectCoach, function (sum, o) {\n        return sum + o.coach_number;\n      }, 0);\n      this.personalCoachTotalList[id].total = total; // 设置教练总数\n\n      this.personalCourseList.forEach(function (i) {\n        if (i.course_id === id) {\n          i.coach = total;\n        }\n      });\n    },\n    // 选择课程\n    courseItemCheckedChange: function courseItemCheckedChange(e, type, index) {\n      if (type === 'team') {\n        this.teamCourseList[index].courseChecked = e.target.checked;\n      } else if (type === 'personal') {\n        this.personalCourseList[index].courseChecked = e.target.checked;\n      }\n    },\n    // teamItems input change\n    teamInputChange: function teamInputChange(e, type, id) {\n      this.teamCourseTotalList[id] = this.teamCourseTotalList[id] ? this.teamCourseTotalList[id] : {};\n      this.teamCourseTotalList[id][type] = e;\n    },\n    // 移除课程\n    removeCourseItem: function removeCourseItem(type, id) {\n      if (type === 'team') {\n        var arr = cloneDeep(this.teamCourseList);\n        remove(arr, function (o) {\n          return o.course_id === id;\n        });\n        this.teamCourseList = arr; // 移除备份\n\n        var list = cloneDeep(this.teamCourseTotalList);\n        delete list[id];\n        this.teamCourseTotalList = list;\n      } else if (type === 'personal') {\n        var _arr2 = cloneDeep(this.personalCourseList);\n\n        remove(_arr2, function (o) {\n          return o.course_id === id;\n        });\n        this.personalCourseList = _arr2; // 移除备份\n\n        var coachList = cloneDeep(this.personalCourseTotalList);\n        delete coachList[id];\n        this.personalCourseTotalList = coachList;\n      }\n    },\n    // 新增团课课程\n    addCourseTeam: function addCourseTeam() {\n      var _this = this;\n\n      this.$modalRouter.push({\n        name: 'course-select-course',\n        props: {\n          platform: 'brand',\n          type: 'team',\n          useShopInfo: this.useShopInfo,\n          courses: this.teamCourseList\n        },\n        on: {\n          ok: function ok(data) {\n            data.list.forEach(function (i) {\n              i.courseChecked = false;\n              i.team_times = null;\n              i.team_unit_price = null;\n            });\n            forEach(_this.teamCourseTotalList, function (value, key) {\n              forEach(data.list, function (innerValue) {\n                if (+innerValue.course_id === +key) {\n                  innerValue.team_times = value.team_times;\n                  innerValue.team_unit_price = value.team_unit_price;\n                }\n              }); // 删除teamCourseTotalList里不存在的course_id项\n\n              if (!data.list.some(function (o) {\n                return +o.course_id === +key;\n              })) {\n                delete _this.teamCourseTotalList[key];\n              }\n            });\n            _this.teamCourseList = cloneDeep(data.list);\n          }\n        }\n      });\n    },\n    // 新增私教课\n    addCoursePersonal: function addCoursePersonal() {\n      var that = this;\n      this.$modalRouter.push({\n        name: 'course-select-course',\n        props: {\n          platform: 'brand',\n          type: 'personal',\n          useShopInfo: this.useShopInfo,\n          courses: this.personalCourseList\n        },\n        on: {\n          ok: function ok(data) {\n            var coachGradeList = [];\n            forEach(that.coachList, function (i) {\n              coachGradeList.push(i.id);\n            });\n            var total = reduce(that.coachList, function (sum, o) {\n              return sum + o.coach_number;\n            }, 0);\n            data.list.forEach(function (i) {\n              i.courseChecked = false;\n              i.coachGradeList = coachGradeList;\n              i.coach = total;\n            });\n            forEach(that.personalCoachTotalList, function (value, key) {\n              forEach(data.list, function (innerValue) {\n                if (+innerValue.course_id === +key) {\n                  innerValue.coachGradeList = cloneDeep(value.list);\n                  innerValue.coach = cloneDeep(value.total);\n                }\n              }); // 删除personalCoachTotalList里不存在的course_id项\n\n              if (!data.list.some(function (o) {\n                return +o.course_id === +key;\n              })) {\n                delete that.personalCoachTotalList[key];\n              }\n            });\n            that.personalCoachListHistory = []; // 缓存选择的教练等级\n\n            data.list.forEach(function (i) {\n              that.personalCoachListHistory.push(i.coachGradeList);\n            });\n            that.personalCourseList = cloneDeep(data.list);\n          }\n        }\n      });\n    },\n    teamCheckboxChange: function teamCheckboxChange(event) {\n      this.courseIsFirstInput = false;\n      this.teamCourseListIsShow = +event.target.checked;\n    },\n    personalCheckboxChange: function personalCheckboxChange(e) {\n      this.courseIsFirstInput = false;\n      this.personalCourseListIsShow = +e.target.checked;\n    },\n    // team\n    teamCourseListShow: function teamCourseListShow() {\n      this.teamCourseListIsShow = !this.teamCourseListIsShow;\n    },\n    // personal\n    personalCourseListShow: function personalCourseListShow() {\n      this.personalCourseListIsShow = !this.personalCourseListIsShow;\n    },\n    // 全选\n    checkAllChange: function checkAllChange(type) {\n      var _this2 = this;\n\n      if (type === 'team') {\n        this.teamCheckAll = !this.teamCheckAll;\n        this.teamCourseList.forEach(function (i) {\n          i.courseChecked = _this2.teamCheckAll;\n        });\n      } else if (type === 'personal') {\n        this.personalCheckAll = !this.personalCheckAll;\n        this.personalCourseList.forEach(function (i) {\n          i.courseChecked = _this2.personalCheckAll;\n        });\n      }\n    },\n    // 批量操作团课课程包节数\n    timesOperationOk: function timesOperationOk(type) {\n      var _this3 = this;\n\n      if (type === 'team') {\n        forEach(this.teamCourseList, function (o) {\n          if (o.courseChecked) {\n            o.team_times = +_this3.teamOperationObject.team_times; // 备份批量操作的数据\n\n            _this3.teamCourseTotalList[o.course_id] = _this3.teamCourseTotalList[o.course_id] ? _this3.teamCourseTotalList[o.course_id] : {};\n            _this3.teamCourseTotalList[o.course_id].team_times = +_this3.teamOperationObject.team_times;\n          }\n        });\n      } else if (type === 'personal') {\n        forEach(this.personalCourseList, function (o) {\n          if (o.courseChecked) {\n            o.personal_times = +_this3.personalOperationObject.personal_times; // 备份批量操作的数据\n\n            _this3.personalCourseTotalList[o.course_id] = _this3.personalCourseTotalList[o.course_id] ? _this3.personalCourseTotalList[o.course_id] : {};\n            _this3.personalCourseTotalList[o.course_id].personal_times = +_this3.personalOperationObject.personal_times;\n          }\n        });\n      }\n    },\n    // 批量操作团课课程包价格\n    unitPriceOperationOk: function unitPriceOperationOk(type) {\n      var _this4 = this;\n\n      if (type === 'team') {\n        forEach(this.teamCourseList, function (o) {\n          if (o.courseChecked) {\n            o.team_unit_price = +_this4.teamOperationObject.team_unit_price; // 备份批量操作的数据\n\n            _this4.teamCourseTotalList[o.course_id] = _this4.teamCourseTotalList[o.course_id] ? _this4.teamCourseTotalList[o.course_id] : {};\n            _this4.teamCourseTotalList[o.course_id].team_unit_price = +_this4.teamOperationObject.team_unit_price;\n          }\n        });\n      } else if (type === 'personal') {\n        forEach(this.personalCourseList, function (o) {\n          if (o.courseChecked) {\n            o.personal_unit_price = +_this4.personalOperationObject.personal_unit_price; // 备份批量操作的数据\n\n            _this4.personalCourseTotalList[o.course_id] = _this4.personalCourseTotalList[o.course_id] ? _this4.personalCourseTotalList[o.course_id] : {};\n            _this4.personalCourseTotalList[o.course_id].personal_unit_price = +_this4.personalOperationObject.personal_unit_price;\n          }\n        });\n      }\n    },\n    coachAllOperationOk: function coachAllOperationOk() {\n      var _this5 = this;\n\n      // 批量设置\n      forEach(this.personalCourseList, function (value) {\n        if (value.courseChecked) {\n          value.coachGradeList = cloneDeep(_this5.personalAllOperationCoachList);\n          _this5.personalCourseTotalList[value.course_id] = _this5.personalCourseTotalList[value.course_id] ? _this5.personalCourseTotalList[value.course_id] : {};\n          _this5.personalCourseTotalList[value.course_id].list = cloneDeep(_this5.personalAllOperationCoachList);\n        }\n      }); // 缓存选择的教练等级\n\n      this.personalCoachListHistory = [];\n      forEach(this.personalCourseList, function (i) {\n        _this5.personalCoachListHistory.push(i.coachGradeList);\n      }); // 清空\n\n      this.personalAllOperationCoachList = []; // 收起\n\n      this.coachAllOperationDropdownIsShow = false;\n    }\n  },\n  created: function created() {\n    var _this6 = this;\n\n    if (isEmpty(this.initInfo)) return '';\n    this.packageData.is_team = !!this.initInfo.is_team;\n    this.packageData.is_personal = !!this.initInfo.is_personal;\n    this.packageData.personal_unit_price = this.initInfo.personal_unit_price;\n    this.packageData.team_unit_price = this.initInfo.team_unit_price;\n\n    if (this.initInfo.is_limit) {\n      this.packageData.personal_times = this.initInfo.personal_times;\n      this.packageData.team_times = this.initInfo.team_times;\n    }\n\n    this.teamCourseList = this.initInfo.team_range;\n    this.personalCourseList = this.initInfo.personal_range.map(function (item) {\n      _this6.$set(item, 'coachGradeList', item.coach_level.map(function (item) {\n        return item.id;\n      }));\n\n      return item;\n    });\n    console.log('created', this.personalCourseList);\n  },\n  mounted: function mounted() {\n    this.addRangeService.getCoachList().subscribe();\n  }\n};",null]}