{"remainingRequest":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js!/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js??ref--13-2!/Users/wangzhigang/Desktop/styd/web/src/operators/any-all.ts","dependencies":[{"path":"/Users/wangzhigang/Desktop/styd/web/src/operators/any-all.ts","mtime":1591147717083},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/cache-loader/dist/cjs.js","mtime":1591062571898},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/babel-loader/lib/index.js","mtime":1591062567418},{"path":"/Users/wangzhigang/Desktop/styd/web/node_modules/ts-loader/index.js","mtime":1591062571609}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport { Observable } from 'rxjs';\nexport var anyAll = function anyAll() {\n  for (var _len = arguments.length, tasks = new Array(_len), _key = 0; _key < _len; _key++) {\n    tasks[_key] = arguments[_key];\n  }\n\n  var target$ = new Observable(function (observer) {\n    var count = 0;\n    var taskCount = tasks.length;\n    tasks.forEach(function (task) {\n      task.subscribe(function () {\n        count++;\n\n        if (count >= taskCount) {\n          observer.next();\n          observer.complete();\n        }\n      }, function (e) {\n        count++;\n\n        if (count >= taskCount) {\n          observer.next();\n          observer.complete();\n        }\n      });\n    });\n  });\n  return target$;\n};",{"version":3,"sources":["/Users/wangzhigang/Desktop/styd/web/src/operators/any-all.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA+B,MAA/B;AAEA,OAAO,IAAM,MAAM,GAAG,SAAT,MAAS,GAAgC;AAAA,oCAA5B,KAA4B;AAA5B,IAAA,KAA4B;AAAA;;AACpD,MAAM,OAAO,GAAG,IAAI,UAAJ,CAAe,UAAA,QAAQ,EAAG;AACxC,QAAI,KAAK,GAAG,CAAZ;AACA,QAAM,SAAS,GAAG,KAAK,CAAC,MAAxB;AACA,IAAA,KAAK,CAAC,OAAN,CAAc,UAAA,IAAI,EAAG;AACnB,MAAA,IAAI,CAAC,SAAL,CACE,YAAK;AACH,QAAA,KAAK;;AACL,YAAI,KAAK,IAAI,SAAb,EAAwB;AACtB,UAAA,QAAQ,CAAC,IAAT;AACA,UAAA,QAAQ,CAAC,QAAT;AACD;AACF,OAPH,EAQE,UAAA,CAAC,EAAG;AACF,QAAA,KAAK;;AACL,YAAI,KAAK,IAAI,SAAb,EAAwB;AACtB,UAAA,QAAQ,CAAC,IAAT;AACA,UAAA,QAAQ,CAAC,QAAT;AACD;AACF,OAdH;AAgBD,KAjBD;AAkBD,GArBe,CAAhB;AAsBA,SAAO,OAAP;AACD,CAxBM","sourcesContent":["import { Observable, of } from 'rxjs'\n\nexport const anyAll = (...tasks: Observable<any>[]) => {\n  const target$ = new Observable(observer => {\n    let count = 0\n    const taskCount = tasks.length\n    tasks.forEach(task => {\n      task.subscribe(\n        () => {\n          count++\n          if (count >= taskCount) {\n            observer.next()\n            observer.complete()\n          }\n        },\n        e => {\n          count++\n          if (count >= taskCount) {\n            observer.next()\n            observer.complete()\n          }\n        }\n      )\n    })\n  })\n  return target$\n}\n"],"sourceRoot":""}]}